(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1418153,      25995]
NotebookOptionsPosition[    562187,      11014]
NotebookOutlinePosition[   1395082,      25543]
CellTagsIndexPosition[   1394908,      25536]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{Cell["8.02 Mathematica Lesson 4", "ModuleTitle", "NoFrames",
  ExpressionUUID->"ff3eb855-5303-4620-ab94-8bc1350701c2"], "\n", 
 TemplateBox[{InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox["\"Open/Close CoSet\"", "TitleButton", StripOnInput -> False], 
     ButtonFunction :> Module[{}, SelectionMove[
         ButtonNotebook[], All, ButtonCell]; 
       CodeSeal`Data`Private`logButton["ToggleTitle", 
         ParentCell[
          EvaluationBox[]]]; CodeSeal`Data`Private`addToClickedButtons[
         ButtonNotebook[], 
         CurrentValue[
          ParentCell[
           EvaluationBox[]], CellID]]; SelectionMove[
         ButtonNotebook[], All, CellGroup]; 
       FrontEndTokenExecute["OpenCloseGroup"]; Null], Appearance -> Automatic,
      FrameMargins -> None, Background -> RGBColor[0.9, 0.96, 1.], Evaluator -> 
     Automatic, Method -> "Preemptive"], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False]},
  "RowDefault"]}], "ModuleTitle",
 CellTags->"CodeSealNavigation",
 CellID->1926444827,ExpressionUUID->"ecd40fa7-c212-4519-9e93-cc38366917b9"],

Cell[TextData[{
 "Click ",
 StyleBox["Enable Dynamics ",
  FontWeight->"Bold"],
 " in the right upper corner of the notebook before starting to work!\n\n\
Click ",
 StyleBox["Evaluatio",
  FontWeight->"Bold"],
 "n in the tool bar and then click ",
 StyleBox["Evaluate Notebook",
  FontWeight->"Bold"],
 " to evaluate all the variables and the functions in the code that are in \
the notebook. This will take about 30 seconds. \n\nAfter reading this \
Mathematica notebook, you will be able to: 1)  calculate an integral to \
obtain the magnetic field using Biot-Savart,  2) calculate derivatives and \
find maximum and minimum of a function.\n\n",
 StyleBox["Tutorial : ",
  FontWeight->"Bold"],
 "The tutorial is divided in three parts. Reading the tutorial and \
interacting with the pieces of code in it will prepare you to do the problem \
of the assignment.\n\n",
 StyleBox["Save my work: ",
  FontWeight->"Bold"],
 "After typing one or several lines of code in your solution you can click \
\[OpenCurlyDoubleQuote]Save my work and Give \
Feedback\[CloseCurlyDoubleQuote]. \[OpenCurlyDoubleQuote]Save my work\
\[CloseCurlyDoubleQuote] does ",
 StyleBox["NOT save",
  FontWeight->"Bold"],
 " the changes done in the notebook. It locks your answer into the notebook \
by creating gray cells that can not be edited anymore. If you are not pleased \
with your answer you will be able to type a new solution as many times as you \
want.  \n\n",
 StyleBox["Access Solution:",
  FontWeight->"Bold"],
 " Note that after clicking \[OpenCurlyDoubleQuote]Save my work and Give \
Feedback\[CloseCurlyDoubleQuote] for the first time you will be able to view \
the solution.  This is done for pedagogical purposes. There are many ways of \
writing a code so the posted solution might be different from yours. \n\n",
 StyleBox["Save: ",
  FontWeight->"Bold"],
 "Before closing the notebook make sure that you have saved your changes by \
clicking Save from the File menu. If you do not save the changes the grader \
will not see your work and you will not receive a grade.  (Saving a file \
frequently is always  a good practice!)\n\n",
 StyleBox["Upload to Stellar:",
  FontWeight->"Bold"],
 " Do not forget to upload your notebook to Stellar!!"
}], "Emphasis",
 CellChangeTimes->{{3.726413989999571*^9, 3.726413990637578*^9}, {
   3.726415394331979*^9, 3.7264154301110697`*^9}, {3.7264290360967827`*^9, 
   3.726429082373785*^9}, {3.7265725235045633`*^9, 3.726572609191824*^9}, {
   3.726572649353882*^9, 3.726572705042289*^9}, {3.726581709142777*^9, 
   3.72658176007557*^9}, {3.7265819676610203`*^9, 3.7265819780273027`*^9}, {
   3.7265820594563437`*^9, 3.726582080137911*^9}, {3.726934538945204*^9, 
   3.726934590535301*^9}, {3.7272647003723097`*^9, 3.727264728157852*^9}, {
   3.727264760032329*^9, 3.727264802584443*^9}, {3.727264892706853*^9, 
   3.727265089726617*^9}, 3.727265235251528*^9, {3.7272699929058723`*^9, 
   3.727269996594047*^9}, {3.727270044724176*^9, 3.727270290406131*^9}, {
   3.727290086958496*^9, 3.727290149010996*^9}, {3.727377607357593*^9, 
   3.727377662460979*^9}, 3.729936915520652*^9},
 CellID->697555643,ExpressionUUID->"8a299190-00e5-4882-8ef9-281c18fefc06"],

Cell[CellGroupData[{

Cell["graphics initialization (modifying options)", "Initialization",
 InitializationGroup->True,
 CellID->147261570,ExpressionUUID->"f8622e84-eaf1-4fc2-a0bd-e41062442145"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"we", " ", "probably", " ", 
    RowBox[{"won", "'"}], "t", " ", "need", " ", "these"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"r", "=", "1.7"}], ";", "\n", 
    RowBox[{"radius", " ", "=", " ", ".04"}], 
    RowBox[{"(*", ".4", "*)"}], ";", "\[IndentingNewLine]", 
    RowBox[{"inradius", " ", "=", " ", ".05"}], ";", "\[IndentingNewLine]", 
    RowBox[{"radiusTWO", " ", "=", " ", ".1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"outerchg", " ", "=", "2"}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "PointChargeAtOriginField", ",", "x", ",", "y", ",", "z", ",", "charg"}],
      "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"changing", " ", "default", " ", "options", " ", "for", " ", 
     RowBox[{"ContourPlot3D", ".", " ", "We"}], " ", "could", " ", "even", 
     " ", "modify", " ", "the", " ", 
     RowBox[{"d", ".", "v", ".", "'"}], "s", " ", "i"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Unprotect", "[", "ContourPlot3D", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "ContourPlot3D", "]"}], "=", "\n", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"modified", " ", "options"}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"PlotPoints", "\[Rule]", 
        RowBox[{"(*", "17", "*)"}], "26"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Mesh", "\[Rule]", "All"}], ","}], "*)"}], 
       RowBox[{"MaxRecursion", "\[Rule]", "0"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "None"}], ",", "\n", "\t", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"ViewPoint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1.3`", ",", 
          RowBox[{"-", "2.4`"}], ",", 
          RowBox[{"-", "31.`"}]}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{"need", " ", "to", " ", "use", " ", "ViewMatrix"}], "*)"}], 
       ",", 
       RowBox[{"Contours", "\[Rule]", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "7"}], ",", "7"}], "]"}]}], ",", "\n", "\t", "\n", 
       "\t", 
       RowBox[{"(*", 
        RowBox[{"original", " ", "options"}], "*)"}], "\n", "\t", 
       RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AutomaticImageSize", "\[Rule]", "False"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesEdge", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Background", "\[Rule]", "None"}], ",", 
       RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"BoundaryStyle", "\[Rule]", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$13551 = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$13551, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$13551, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[0],
         Editable->False,
         Selectable->False]}], ",", 
       RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
       RowBox[{"BoxStyle", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"ClipPlanes", "\[Rule]", "None"}], ",", 
       RowBox[{"ClipPlanesStyle", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
       RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ContourStyle", "\[Rule]", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$13551 = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$13551, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$13551, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False]}], ",", 
       RowBox[{"ControllerLinking", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ControllerMethod", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ControllerPath", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Evaluated", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"EvaluationMonitor", "\[Rule]", "None"}], ",", 
       RowBox[{"FaceGrids", "\[Rule]", "None"}], ",", 
       RowBox[{"FaceGridsStyle", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
       RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"MeshFunctions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#1", "&"}], ",", 
          RowBox[{"#2", "&"}], ",", 
          RowBox[{"#3", "&"}]}], "}"}]}], ",", 
       RowBox[{"MeshShading", "\[Rule]", "None"}], ",", 
       RowBox[{"MeshStyle", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"NormalsFunction", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Full", ",", "Full", ",", "Full", ",", "Automatic"}], 
         "}"}]}], ",", 
       RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}], ",", 
       RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"RegionFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"True", "&"}], ")"}]}], ",", 
       RowBox[{"RotationAction", "\[Rule]", "\"\<Fit\>\""}], ",", 
       RowBox[{"SphericalRegion", "\[Rule]", "False"}], ",", 
       RowBox[{"TargetUnits", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"TextureCoordinateFunction", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"TextureCoordinateScaling", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"TouchscreenAutoZoom", "\[Rule]", "False"}], ",", 
       RowBox[{"ViewAngle", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ViewCenter", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ViewMatrix", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ViewProjection", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ViewRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ViewVector", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ViewVertical", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], "\n", 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Protect", "[", "ContourPlot3D", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Unprotect", "[", "ContourPlot", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "ContourPlot", "]"}], "=", "\n", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"modified", " ", "options"}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"ContourLabels", "\[Rule]", "True"}], ",", 
       RowBox[{"Contours", "\[Rule]", "16"}], ",", "\n", "\t", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{"original", " ", "options"}], "*)"}], "\n", "\t", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Options", "[", "ContourPlot", "]"}]}]}], "\n", "}"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Protect", "[", "ContourPlot", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Unprotect", "[", "SliceVectorPlot3D", "]"}], ";", "\n", 
     RowBox[{
      RowBox[{"Options", "[", "SliceVectorPlot3D", "]"}], "=", "\n", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{"original", " ", "options"}], "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{"Sequence", "@@", 
         RowBox[{"Options", "[", "SliceVectorPlot3D", "]"}]}], ",", "\n", 
        "\t", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{"modified", " ", "options"}], "*)"}], "\n", "\t", 
        RowBox[{"VectorStyle", "\[Rule]", 
         RowBox[{"Arrowheads", "[", ".01", "]"}]}], ",", " ", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{".1", ",", ".1", ",", 
           RowBox[{"-", "10"}]}], "}"}]}], ",", 
        RowBox[{"VectorScale", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Medium", ",", " ", "0.6", ",", " ", 
           RowBox[{"(*", 
            RowBox[{"Sqrt", "@"}], "*)"}], 
           RowBox[{
            RowBox[{"Sqrt", "[", "#5", "]"}], "&"}]}], 
          RowBox[{"(*", "Automatic", "*)"}], "}"}]}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Boxed", "\[Rule]", "False"}], ","}], "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Opacity", "[", "0.1", "]"}]}], ",", 
        RowBox[{"VectorPoints", "\[Rule]", "17"}], 
        RowBox[{"(*", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "888"}], "}"}]}], "]"}], "*)"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "\n", "}"}]}], ";", 
     "\n", 
     RowBox[{"Protect", "[", "SliceVectorPlot3D", "]"}], ";"}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SliceVectorPlot3D", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".1", ",", ".1", ",", "10"}], "}"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SliceVectorPlot3D", ",", 
      RowBox[{"VectorScale", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Medium", ",", " ", "0.6", ",", " ", 
         RowBox[{"(*", 
          RowBox[{"Sqrt", "@"}], "*)"}], 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#1", "^", "2"}], "+", 
              RowBox[{"#2", "^", "2"}], "+", 
              RowBox[{"#3", "^", "2"}]}], ")"}], "^", ".3"}]}], "&"}]}], 
        RowBox[{"(*", "Automatic", "*)"}], "}"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SliceVectorPlot3D", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SliceVectorPlot3D", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Opacity", "[", "0.1", "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SliceVectorPlot3D", ",", 
      RowBox[{"VectorPoints", "\[Rule]", "16"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SliceVectorPlot3D", ",", 
      RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SliceVectorPlot3D", ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SliceVectorPlot3D", ",", 
      RowBox[{"VectorStyle", "\[Rule]", 
       RowBox[{"Arrowheads", "[", ".01", "]"}]}]}], "]"}], ";"}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"VectorPlot", ",", 
      RowBox[{"VectorStyle", "\[Rule]", 
       RowBox[{"Arrowheads", "[", ".02", "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"VectorPlot", ",", 
      RowBox[{"VectorScale", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Medium", ",", " ", "0.6", ",", " ", 
         RowBox[{"(*", 
          RowBox[{"Sqrt", "@"}], "*)"}], 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#1", "^", "2"}], "+", 
              RowBox[{"#2", "^", "2"}]}], ")"}], "^", ".3"}]}], "&"}]}], 
        RowBox[{"(*", "Automatic", "*)"}], "}"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"VectorPlot", ",", 
      RowBox[{"VectorPoints", "\[Rule]", "16"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Unprotect", "[", "VectorPlot3D", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "VectorPlot3D", "]"}], "=", "\n", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"modified", " ", "options"}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"VectorStyle", "\[Rule]", 
        RowBox[{"Arrowheads", "[", ".01", "]"}]}], ",", " ", 
       RowBox[{"ViewPoint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"11", ",", 
          RowBox[{"-", "20"}], ",", "4"}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{"need", " ", "to", " ", "use", " ", 
         RowBox[{"ViewMatrix", "!"}]}], "*)"}], ",", 
       RowBox[{"VectorScale", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic", ",", 
          RowBox[{"Function", "[", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#1", "^", "2"}], "+", 
                 RowBox[{"#2", "^", "2"}], "+", 
                 RowBox[{"#3", "^", "2"}]}], ")"}]}], ">", "2"}], ",", "None",
              ",", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#1", "^", "2"}], "+", 
                RowBox[{"#2", "^", "2"}], "+", 
                RowBox[{"#3", "^", "2"}]}], ")"}]}]}], "]"}], "]"}]}], 
         "}"}]}], 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{"Small", ",", " ", ".6", ",", " ", 
          RowBox[{"(*", 
           RowBox[{"Sqrt", "@"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"1", "/"}], "*)"}], 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#1", "^", "2"}], "+", 
               RowBox[{"#2", "^", "2"}], "+", 
               RowBox[{"#3", "^", "2"}]}], ")"}], "^", ".3"}]}], "&"}]}], 
         RowBox[{"(*", "Automatic", "*)"}], "}"}], "*)"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Boxed", "\[Rule]", "False"}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.3", "]"}]}], ","}], "*)"}], 
       RowBox[{"VectorPoints", "\[Rule]", "10"}], 
       RowBox[{"(*", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "888"}], "}"}]}], "]"}], "*)"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{"original", " ", "options"}], "*)"}], "\n", "\t", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Options", "[", "VectorPlot3D", "]"}]}]}], "\n", "}"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Protect", "[", "VectorPlot3D", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"VectorPlot3D", ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";"}]}]}]], "AuthorInput",
 CellID->129874047,ExpressionUUID->"f7536581-c6d6-452a-aa83-f739090bbdaa"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["Magnetic field produced by a ring", "ModuleChapter", 
  "NoFrames",ExpressionUUID->"14b6937b-b294-4c0b-a78a-f3361ea3b468"], "\n", 
 TemplateBox[{InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox[
     "\"Open/Close Chapter\"", "ChapterButton", StripOnInput -> False], 
     ButtonFunction :> Module[{}, SelectionMove[
         ButtonNotebook[], All, ButtonCell]; 
       CodeSeal`Data`Private`logButton["ToggleChapter", 
         ParentCell[
          EvaluationBox[]]]; CodeSeal`Data`Private`addToClickedButtons[
         ButtonNotebook[], 
         CurrentValue[
          ParentCell[
           EvaluationBox[]], CellID]]; SelectionMove[
         ButtonNotebook[], All, CellGroup]; 
       FrontEndTokenExecute["OpenCloseGroup"]; Null], Appearance -> Automatic,
      FrameMargins -> None, Background -> RGBColor[0.9, 0.96, 1.], Evaluator -> 
     Automatic, Method -> "Preemptive"], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False]},
  "RowDefault"]}], "ModuleChapter",
 CellTags->"CodeSealNavigation",
 CellID->1124045646,ExpressionUUID->"33205ef4-af03-4b6d-b8ee-119e4850bfcb"],

Cell[CellGroupData[{

Cell[BoxData[{Cell["Derivatives in the Wolfram Language", "Read", "NoFrames",
  ExpressionUUID->"3579b20b-d1f5-452a-8ad3-6c2331b100b5"], "\n", 
 TemplateBox[{InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox["\"Open/Close Section\"", "ReadButton", StripOnInput -> False], 
     ButtonFunction :> Module[{}, SelectionMove[
         ButtonNotebook[], All, ButtonCell]; 
       CodeSeal`Data`Private`logButton["ToggleRead", 
         ParentCell[
          EvaluationBox[]]]; CodeSeal`Data`Private`addToClickedButtons[
         ButtonNotebook[], 
         CurrentValue[
          ParentCell[
           EvaluationBox[]], CellID]]; SelectionMove[
         ButtonNotebook[], All, CellGroup]; 
       FrontEndTokenExecute["OpenCloseGroup"]; Null], Appearance -> Automatic,
      FrameMargins -> None, Background -> RGBColor[0.9, 0.96, 1.], Evaluator -> 
     Automatic, Method -> "Preemptive"], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False]},
  "RowDefault"]}], "Read",
 CellTags->"CodeSealNavigation",
 CellID->421529663,ExpressionUUID->"e075b1bc-3ccb-477f-9391-6422f8dcbb3d"],

Cell["", "Hidden",
 CellID->100494588,ExpressionUUID->"44b5f9ed-d3d5-4cf9-bea8-682dc0d5ab92"],

Cell[TextData[{
 "To compute most derivatives in the Wolfram Language (including partial \
derivatives)  the built-in function to use is ",
 StyleBox["D[ ]",
  FontWeight->"Bold"],
 ". \n\nThe first argument you must give to ",
 StyleBox["D[ ] ",
  FontWeight->"Bold"],
 "is the function you want to differentiate, and the second argument is the \
variable(s) ",
 StyleBox["with respect to which you want to take the derivative",
  FontWeight->"Bold"],
 ". For example, for a function \[OpenCurlyDoubleQuote]f\
\[CloseCurlyDoubleQuote] we define ourselves:"
}], "ReadText",
 CellID->949722577,ExpressionUUID->"0d432002-5101-421d-9981-15a27519beda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "3"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "2"}], ")"}], "^", "2", " "}]}]}]], "AuthorInput",
 CellChangeTimes->{{3.7274521972803793`*^9, 3.727452218370324*^9}, {
   3.727452267842071*^9, 3.727452270352646*^9}, {3.727452421277258*^9, 
   3.727452424329474*^9}, {3.727454973133615*^9, 3.7274549774984922`*^9}, {
   3.7274552009866123`*^9, 3.727455204449286*^9}, {3.7274572761604853`*^9, 
   3.7274572991904078`*^9}, {3.7274573497227077`*^9, 3.727457355172574*^9}, 
   3.72746507869694*^9, 3.7275254525122128`*^9, {3.727703021973666*^9, 
   3.727703036311511*^9}, {3.727723412392147*^9, 3.7277234158943567`*^9}, {
   3.727723466315452*^9, 3.72772346799772*^9}, {3.728067301371894*^9, 
   3.728067321691126*^9}, {3.728231480692675*^9, 3.728231518015973*^9}, 
   3.728333716312471*^9, 3.728384910967008*^9, {3.728385334462214*^9, 
   3.728385398378045*^9}, {3.728385434797187*^9, 3.7283854380466022`*^9}, 
   3.7283854704628677`*^9, 3.728511350108493*^9, {3.7286116566579723`*^9, 
   3.728611673838323*^9}, {3.728613134683402*^9, 3.728613141033737*^9}, 
   3.7286133240268173`*^9, {3.7294551311370564`*^9, 3.7294552226618967`*^9}, {
   3.72945529932416*^9, 3.7294554056066437`*^9}, {3.7295437332838783`*^9, 
   3.729543746591342*^9}, {3.729692022754972*^9, 3.7296920901191673`*^9}, {
   3.72969244715107*^9, 3.729692450055263*^9}, {3.7298699525829897`*^9, 
   3.729869956597974*^9}, {3.729870137536113*^9, 3.729870156186625*^9}, 
   3.729870268758553*^9},
 CellID->1731239631,ExpressionUUID->"33a60f0c-4b85-453b-86a6-a853d42f7da6"],

Cell["\<\
To take the derivative of f with respect to x, we would evaluate:\
\>", "ReadText",
 CellID->1888887135,ExpressionUUID->"196a1748-409b-4582-a9ef-ce796c96115c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], " "}]], "AuthorInput",
 CellChangeTimes->{{3.7274521972803793`*^9, 3.727452218370324*^9}, {
   3.727452267842071*^9, 3.727452270352646*^9}, {3.727452421277258*^9, 
   3.727452424329474*^9}, {3.727454973133615*^9, 3.7274549774984922`*^9}, {
   3.7274552009866123`*^9, 3.727455204449286*^9}, {3.7274572761604853`*^9, 
   3.7274572991904078`*^9}, {3.7274573497227077`*^9, 3.727457355172574*^9}, 
   3.72746507869694*^9, 3.7275254525122128`*^9, {3.727703021973666*^9, 
   3.727703036311511*^9}, {3.727723412392147*^9, 3.7277234158943567`*^9}, {
   3.727723466315452*^9, 3.72772346799772*^9}, {3.728067301371894*^9, 
   3.728067321691126*^9}, {3.728231480692675*^9, 3.728231518015973*^9}, 
   3.728333716312471*^9, 3.728384910967008*^9, {3.728385334462214*^9, 
   3.728385398378045*^9}, {3.728385434797187*^9, 3.7283854380466022`*^9}, 
   3.7283854704628677`*^9, 3.728511350108493*^9, {3.7286116566579723`*^9, 
   3.728611673838323*^9}, {3.728613134683402*^9, 3.728613141033737*^9}, 
   3.7286133240268173`*^9, {3.7294551311370564`*^9, 3.7294552226618967`*^9}, {
   3.72945529932416*^9, 3.7294554056066437`*^9}, {3.7295437332838783`*^9, 
   3.729543746591342*^9}, {3.729692022754972*^9, 3.7296920901191673`*^9}, {
   3.72969244715107*^9, 3.729692450055263*^9}, {3.7298699525829897`*^9, 
   3.729869956597974*^9}, {3.729870137536113*^9, 3.729870156186625*^9}, 
   3.729870268758553*^9},
 CellID->1617619676,ExpressionUUID->"6ef5fa71-0514-459b-8b3c-02eecbfff753"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "6"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.7302881085292463`*^9},
 CellID->688036175,ExpressionUUID->"320dfe66-e04d-4d8f-a8a4-7593d0df5c5d"]
}, Open  ]],

Cell[TextData[{
 "To evaluate this derivative at the point x = 5, we first find the \
derivative in terms of x, then simple replace x with 5 in that expression. To \
replace the variable x by the value 5 we use the symbol \
\[OpenCurlyDoubleQuote]./ \[OpenCurlyDoubleQuote] (short for ReplaceAll ) and \
type  ",
 StyleBox[" /.x\[Rule] 5",
  FontSize->16,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "\n"
}], "ReadText",
 CellID->275324344,ExpressionUUID->"06e74140-acef-443d-95d5-907260b59bd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "5", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"exaluate", " ", "the", " ", "derivative", " ", "at", " ", "x"}],
      " ", "=", " ", 
     RowBox[{
      RowBox[{"5", " ", "using"}], 
      StyleBox[" ",
       FontWeight->"Plain",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["/.",
       FontWeight->"Plain",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"x", " ", "\[Rule]", " ", "5"}],
       FontWeight->"Plain",
       FontColor->RGBColor[1, 0, 0]]}]}], 
    StyleBox[" ",
     FontSize->16,
     FontWeight->"Bold",
     FontColor->GrayLevel[0]], "*)"}]}]}]], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728465002905655*^9, 3.7284650341209183`*^9}, 3.7284655073738203`*^9, {
   3.72846618546725*^9, 3.728466188738926*^9}, {3.728502393114779*^9, 
   3.72850241587824*^9}, 3.728511444148967*^9, {3.7294554650722313`*^9, 
   3.729455520732237*^9}, {3.729455559108102*^9, 3.7294555774223833`*^9}, {
   3.729692104181488*^9, 3.729692117148552*^9}, {3.729692466841099*^9, 
   3.729692469919455*^9}, 3.729728165700378*^9, {3.72987266256336*^9, 
   3.729872725946031*^9}},
 CellID->383466350,ExpressionUUID->"6f42432f-6154-4b8c-876d-7051373d4062"],

Cell[BoxData[
 RowBox[{"-", "18"}]], "Output",
 CellChangeTimes->{3.730288108571575*^9},
 CellID->2082445346,ExpressionUUID->"27ad6ab8-4feb-418e-bfd0-05bf07b2714e"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Maximum of a function:",
  FontWeight->"Bold"],
 " To find a (local) maximum of the function we can use FindMaximum[ ]."
}], "ReadText",
 CellID->1696473970,ExpressionUUID->"1275539d-5d08-4bf4-816d-9cc0f51daa8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.3"}], "}"}]}], "]"}]], "AuthorInput",
 CellChangeTimes->{
  3.726612317015873*^9, {3.728413222981608*^9, 3.728413227934533*^9}, 
   3.7284135303212757`*^9, {3.728465585208098*^9, 3.728465593137869*^9}, {
   3.72846562503374*^9, 3.728465657331225*^9}, {3.7284662130678*^9, 
   3.7284662239818077`*^9}, {3.72945560923888*^9, 3.7294556141140614`*^9}, {
   3.729455773254068*^9, 3.7294558293481283`*^9}, {3.729692302006579*^9, 
   3.729692324987465*^9}, {3.729692364904141*^9, 3.729692385487103*^9}, {
   3.729692478468369*^9, 3.729692481588448*^9}, {3.7296926222943707`*^9, 
   3.729692638012288*^9}, {3.729692787261662*^9, 3.7296927886740627`*^9}, {
   3.729834001358542*^9, 3.7298340461576643`*^9}, 3.72989609941075*^9},
 CellID->709454592,ExpressionUUID->"95a91df7-b8a7-49e2-a0fe-811fd603e7f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7302881085998707`*^9},
 CellID->1840631032,ExpressionUUID->"6634cf12-efba-4c72-a979-4f8b473b62cc"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Input:\n",
  FontWeight->"Bold"],
 "The arguments of FindMaximum[ ] are two. The first one is the function we \
wish to find a maximum of, the second is a list with two elements: the  \
function\[CloseCurlyQuote]s independent variable and  an initial value of x \
at which FindMaximum will start to look for the local maximum.  \nIn this \
example the second argument is the list ",
 StyleBox[" {x, 0.3}",
  FontWeight->"Bold"],
 ", where ",
 StyleBox["0.3 ",
  FontWeight->"Bold"],
 "is the starting point. \n",
 StyleBox["Output:",
  FontWeight->"Bold"],
 "\nThe output of FindMaximum[ ] is a list of two elements:\nThe first \
element is the maximum value of f[x] (zero in this case)\nThe second element, \
\[OpenCurlyDoubleQuote]x -> 2\[CloseCurlyDoubleQuote] is the value of x at \
which f[x]  achieves a local maximum.\n",
 StyleBox["\nNote 1:",
  FontWeight->"Bold"],
 " To find a local ",
 StyleBox["minimum",
  FontWeight->"Bold"],
 " of a function use ",
 StyleBox["FindMinimum[ ",
  FontWeight->"Bold"],
 "function,  {x,xo}]  where xo is the starting point.\n\n",
 StyleBox["Note 2:",
  FontWeight->"Bold"],
 " Be aware that both functions, FindMaximum[] and findMinimum[],  do not \
always give the answer at the first trial.  It depends on the given value of \
the starting point xo, If we use an xo close to the maximum or minimum both \
functions will give you the proper answer."
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.7294558344277687`*^9, 3.729455840526772*^9}, {
   3.729692533648025*^9, 3.7296925354695063`*^9}, {3.729692573754036*^9, 
   3.729692581168742*^9}, {3.72969264609273*^9, 3.7296927951707497`*^9}, {
   3.729693005957357*^9, 3.7296931295088882`*^9}, 3.729728702776462*^9, {
   3.7298337088714952`*^9, 3.729833997032092*^9}, {3.7298340659448338`*^9, 
   3.729834081695365*^9}, {3.729834143702487*^9, 3.729834240306716*^9}, {
   3.72987066432055*^9, 3.729870874592155*^9}, 3.7298728230685263`*^9, 
   3.7298729645171423`*^9, 3.7298742064539824`*^9, {3.7298742654114*^9, 
   3.729874426507597*^9}, {3.72987447928518*^9, 3.729874483506728*^9}, {
   3.729929965700165*^9, 3.729930044156763*^9}, {3.729930114710491*^9, 
   3.729930379394018*^9}, {3.729934116649336*^9, 3.729934126831368*^9}, {
   3.729934190756854*^9, 3.7299343796522617`*^9}},
 CellID->1593464481,ExpressionUUID->"89555cee-473a-4ecd-b890-bcb3ef37062d"],

Cell["\<\
To extract the value of 2 from the output of FindMaximum[ ] we type the \
following line:\
\>", "ReadText",
 CellID->497632571,ExpressionUUID->"b4cfcad5-a9f8-4ad4-98d4-98e091a486f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"x", "/.", 
   RowBox[{"Last", "[", 
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0.3"}], "}"}]}], "]"}], "]"}]}]}]], "AuthorInput",
 CellChangeTimes->{
  3.726612317015873*^9, {3.728413222981608*^9, 3.728413227934533*^9}, 
   3.7284135303212757`*^9, {3.728465585208098*^9, 3.728465593137869*^9}, {
   3.72846562503374*^9, 3.728465657331225*^9}, {3.7284662130678*^9, 
   3.7284662239818077`*^9}, {3.72945560923888*^9, 3.7294556141140614`*^9}, {
   3.729455773254068*^9, 3.7294558293481283`*^9}, {3.729692302006579*^9, 
   3.729692324987465*^9}, {3.729692364904141*^9, 3.729692385487103*^9}, {
   3.729692478468369*^9, 3.729692481588448*^9}, {3.7296926222943707`*^9, 
   3.729692638012288*^9}, {3.729692787261662*^9, 3.7296927886740627`*^9}, {
   3.72969328055215*^9, 3.72969330598841*^9}, {3.7296935137418337`*^9, 
   3.729693526210848*^9}, 3.7298961485736027`*^9},
 CellID->1353196019,ExpressionUUID->"234abc2a-02ad-4d5d-a4d0-d0d98f9c8c9e"],

Cell[BoxData["2.`"], "Output",
 CellChangeTimes->{3.73028810862757*^9},
 CellID->1183951713,ExpressionUUID->"96b1ab53-0bbf-4532-85b1-aa19758461ed"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note: ",
  FontWeight->"Bold"],
 "\n\n1. ",
 StyleBox["Last[ ] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "is a function that returns the last element of a list:\n\n Example: ",
 StyleBox["Last[ ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "{1, 2, 4, 0, -3} ",
 StyleBox["]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " returns -3. Therefore, ",
 StyleBox["Last[",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " FindMaximum[ f[x], {x,0.3} ] ",
 StyleBox["]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " returns {x -> 2.} \n\n2. the symbol  \[OpenCurlyDoubleQuote]",
 StyleBox["/.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\[CloseCurlyDoubleQuote]",
  FontColor->GrayLevel[0]],
 StyleBox["  ",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["(",
  FontColor->GrayLevel[0]],
 StyleBox["short for ReplaceAll",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[") is used to replace the variable x by the the value of 2",
  FontColor->GrayLevel[0]]
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.7294558344277687`*^9, 3.729455840526772*^9}, {
   3.729692533648025*^9, 3.7296925354695063`*^9}, {3.729692573754036*^9, 
   3.729692581168742*^9}, {3.72969264609273*^9, 3.7296927951707497`*^9}, {
   3.729693005957357*^9, 3.7296931295088882`*^9}, {3.729693363312212*^9, 
   3.729693402193448*^9}, {3.7296934358764763`*^9, 3.729693505082706*^9}, {
   3.729693570736603*^9, 3.729693660424102*^9}, {3.729693695655589*^9, 
   3.7296937458795033`*^9}, {3.7297287316948423`*^9, 3.729728749580599*^9}, {
   3.729728793181818*^9, 3.729728798522584*^9}, {3.72989617101609*^9, 
   3.729896202407202*^9}, {3.729896232895598*^9, 3.729896279916279*^9}},
 CellID->1119934346,ExpressionUUID->"c111f653-708f-4bf1-b196-142e8012cc0f"],

Cell[TextData[{
 StyleBox["Plot",
  FontWeight->"Bold"],
 " f[x] vs x using the Plot[ ] function:"
}], "ReadText",
 CellID->1409299379,ExpressionUUID->"c5699b08-5d51-4f7d-980f-26dd5bb50da0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728466290265464*^9, 3.728466329751224*^9}, {3.728503496168256*^9, 
   3.728503497810693*^9}, {3.729455855396525*^9, 3.729455873946787*^9}, {
   3.7294559040739117`*^9, 3.729455911423382*^9}, {3.729693405316174*^9, 
   3.7296934209669847`*^9}, 3.729693776550727*^9, 3.729728769467724*^9},
 CellID->318033562,ExpressionUUID->"484d4b8f-baec-4f05-bff9-6d847bcb1327"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
7A==
       "]]},
     Annotation[#, "Charting`Private`Tag$5158#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-74.99999632653068, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.730288108838235*^9},
 CellID->592228420,ExpressionUUID->"08dc0386-5650-42b3-8f4b-6c4d623b7249"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note: ",
  FontWeight->"Bold"],
 "The second argument has the same form as",
 StyleBox[" ",
  FontWeight->"Bold"],
 "the plot range arguments of VectorPlot, StreamPlot, etc.: {x, -3, 3} \
instructs  Plot[ ]  to plot f[x] on the range -3 < x < 3."
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728431232163409*^9, 3.728431354127474*^9}, {3.728431830260662*^9, 
   3.7284319446886168`*^9}, 3.7284910144957857`*^9, {3.7285033732714357`*^9, 
   3.728503382061878*^9}, {3.7294559187832603`*^9, 3.72945592635364*^9}, {
   3.729458851272533*^9, 3.729458852581399*^9}, {3.7296937879290047`*^9, 
   3.729693936682568*^9}, {3.729728872879388*^9, 3.729728908798671*^9}, {
   3.729729356095332*^9, 3.72972939744348*^9}},
 CellID->1912022176,ExpressionUUID->"76684e6b-3e71-4322-aaa0-6915fad7425b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["Vector product in  the Wolfram Language", "Read", 
  "NoFrames",ExpressionUUID->"6e536cfe-3133-4d0c-9fa5-ca82b1921442"], "\n", 
 TemplateBox[{InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox["\"Open/Close Section\"", "ReadButton", StripOnInput -> False], 
     ButtonFunction :> Module[{}, SelectionMove[
         ButtonNotebook[], All, ButtonCell]; 
       CodeSeal`Data`Private`logButton["ToggleRead", 
         ParentCell[
          EvaluationBox[]]]; CodeSeal`Data`Private`addToClickedButtons[
         ButtonNotebook[], 
         CurrentValue[
          ParentCell[
           EvaluationBox[]], CellID]]; SelectionMove[
         ButtonNotebook[], All, CellGroup]; 
       FrontEndTokenExecute["OpenCloseGroup"]; Null], Appearance -> Automatic,
      FrameMargins -> None, Background -> RGBColor[0.9, 0.96, 1.], Evaluator -> 
     Automatic, Method -> "Preemptive"], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False]},
  "RowDefault"]}], "Read",
 CellTags->"CodeSealNavigation",
 CellID->1090393974,ExpressionUUID->"ec36987d-1de2-4dd7-9ebe-753ffecc7e0c"],

Cell["", "Hidden",
 CellID->1773561167,ExpressionUUID->"5e2aae31-532f-4a56-97e5-1916b87645d3"],

Cell[TextData[{
 "To calculate the vector product, or cross product, between two vectors we \
use the function Cross[ ].:\n\nCross[ ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "4b35c67c-9dc9-4302-bca6-7926d8c9d59c"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    OverscriptBox["B", "\[RightVector]"]}], TraditionalForm]],ExpressionUUID->
  "cad8b3b9-566a-447c-86f0-23f79d61b82a"],
 " ] =  ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "4eb8af97-eab9-4e37-ac34-ec4924c809c6"],
 "  x ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    OverscriptBox["B", "\[RightVector]"]}], TraditionalForm]],ExpressionUUID->
  "6d9fb1ad-529b-4515-9de9-7fc4b70542d8"],
 "\n\nExample: do the cross product between ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["i", "^"], TraditionalForm]],ExpressionUUID->
  "ef3df493-937c-4ac7-9f10-3e0ae07e994c"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["j", "^"], TraditionalForm]],ExpressionUUID->
  "1197ee7f-a1f0-47a4-9bd5-77e8aee75a20"],
 " to obtain ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["k", "^"], TraditionalForm]],ExpressionUUID->
  "99056775-a1b8-4b34-ac96-231ddacb38bf"]
}], "ReadText",
 CellID->1497520090,ExpressionUUID->"ba78d55f-347b-4947-a740-7b44af3e0e1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]], "AuthorInput",
 CellChangeTimes->{{3.7274521972803793`*^9, 3.727452218370324*^9}, {
   3.727452267842071*^9, 3.727452270352646*^9}, {3.727452421277258*^9, 
   3.727452424329474*^9}, {3.727454973133615*^9, 3.7274549774984922`*^9}, {
   3.7274552009866123`*^9, 3.727455204449286*^9}, {3.7274572761604853`*^9, 
   3.7274572991904078`*^9}, {3.7274573497227077`*^9, 3.727457355172574*^9}, 
   3.72746507869694*^9, 3.7275254525122128`*^9, {3.727703021973666*^9, 
   3.727703036311511*^9}, {3.727723412392147*^9, 3.7277234158943567`*^9}, {
   3.727723466315452*^9, 3.72772346799772*^9}, {3.728067301371894*^9, 
   3.728067321691126*^9}, {3.728231480692675*^9, 3.728231518015973*^9}, 
   3.728333716312471*^9, 3.728384910967008*^9, {3.728385334462214*^9, 
   3.728385398378045*^9}, {3.728385434797187*^9, 3.7283854380466022`*^9}, 
   3.7283854704628677`*^9, 3.728511350108493*^9, {3.7286116566579723`*^9, 
   3.728611673838323*^9}, {3.728613134683402*^9, 3.728613141033737*^9}, 
   3.7286133240268173`*^9, {3.7294551311370564`*^9, 3.7294552226618967`*^9}, {
   3.72945529932416*^9, 3.7294554056066437`*^9}, {3.7295437332838783`*^9, 
   3.729543746591342*^9}, {3.729692022754972*^9, 3.7296920901191673`*^9}, {
   3.72969244715107*^9, 3.729692450055263*^9}, {3.729694265479062*^9, 
   3.72969430266842*^9}},
 CellID->608113012,ExpressionUUID->"f5105bd2-e5ed-4386-9d5c-cf458e3875e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.730288108854438*^9},
 CellID->1287197434,ExpressionUUID->"c1dc6b65-0c1a-43b4-b323-118f3aa7d6ca"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note: ",
  FontWeight->"Bold"],
 "The input vectors ",
 StyleBox["must have three components.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\n",
  FontWeight->"Bold"],
 "If we use ",
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["i", "^"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "8fc0d546-4ddd-4af7-ab08-7c560d68e917"],
 StyleBox[" = { 1, 0 } ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["  ",
  FontWeight->"Bold"],
 "and  ",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["j", "^"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "ee78f0f9-e0bc-413d-80fa-e937085a0181"],
 StyleBox[" = {0, 1}",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "the function Cross[ ] returns an",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["error message.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]]
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.7294558344277687`*^9, 3.729455840526772*^9}, {
   3.729692533648025*^9, 3.7296925354695063`*^9}, {3.729692573754036*^9, 
   3.729692581168742*^9}, {3.72969264609273*^9, 3.7296927951707497`*^9}, {
   3.729693005957357*^9, 3.7296931295088882`*^9}, {3.729694385991095*^9, 
   3.729694564543552*^9}, {3.7296946656047173`*^9, 3.729694777657405*^9}, {
   3.729694848763652*^9, 3.7296948490060387`*^9}, 3.729858154021366*^9},
 CellID->1450156104,ExpressionUUID->"497ea37f-27e0-498d-be03-d6dc89be6bef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["\<\
Calculate the Magnetic Field of a ring along the ring\[CloseCurlyQuote]s axis.\
\>", "Read", "NoFrames",ExpressionUUID->
  "7f6ee60e-83d1-4a34-a121-7370bd58f925"], "\n", 
 TemplateBox[{InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox["\"Open/Close Section\"", "ReadButton", StripOnInput -> False], 
     ButtonFunction :> Module[{}, SelectionMove[
         ButtonNotebook[], All, ButtonCell]; 
       CodeSeal`Data`Private`logButton["ToggleRead", 
         ParentCell[
          EvaluationBox[]]]; CodeSeal`Data`Private`addToClickedButtons[
         ButtonNotebook[], 
         CurrentValue[
          ParentCell[
           EvaluationBox[]], CellID]]; SelectionMove[
         ButtonNotebook[], All, CellGroup]; 
       FrontEndTokenExecute["OpenCloseGroup"]; Null], Appearance -> Automatic,
      FrameMargins -> None, Background -> RGBColor[0.9, 0.96, 1.], Evaluator -> 
     Automatic, Method -> "Preemptive"], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False]},
  "RowDefault"]}], "Read",
 CellTags->"CodeSealNavigation",
 CellID->1169513409,ExpressionUUID->"022470cf-60af-4f35-acda-fb109feae4f1"],

Cell["", "Hidden",
 CellID->94044072,ExpressionUUID->"8b16a42e-6789-4b9b-949c-eafbc226f167"],

Cell[TextData[{
 "In this section we will calculate the magnetic field at a generic point P \
in the axis of a ring of radius ",
 StyleBox["a",
  FontWeight->"Bold"],
 ". Set the z-axis to be the axis of symmetry of the ring . \n                \
                       \n                                                     \
                  ",
 Cell[BoxData[
  GraphicsBox[
   {Thickness[0.0018214936247723133`], 
    {FaceForm[{RGBColor[0.004, 0.004, 0.004], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
        0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
       0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {0, 1, 0}}}, {{{216.44921875, 268.085}, {216.44921875, 270.335}, {
       211.25, 270.335}, {211.25, 275.56546875}, {209., 275.56546875}, {209., 
       270.335}, {203.80078125, 270.335}, {203.80078125, 268.085}, {209., 
       268.085}, {209., 262.835}, {211.25, 262.835}, {211.25, 268.085}, {
       216.44921875, 268.085}}, CompressedData["
1:eJxTTMoPSmViYGDQBWIQDQILPHMc+g991bgjU+iAwleA8B2Cs1H4DAYQvs7j
Aoh6Vwj/zUMoPxDC3/MFwk9IgvBjfkH4DA2o/ANvUPkOzBD+nBwoXxzCP5MM
VS8D4eekQu1ThPLTofapQc3LhOo3gurPhdpvDuH/yYOaZ4/KX+CPxo+D+icb
an4V1H2JUPMXQu0PhvIPQO33hZr/AJWvIJiDwmewgPB5ItH4Raj8mFqoe1Qg
/Jx2CP8BHxr/ZzYKn+EFlF+LytcpQuX/SYPyf0D4PWh8nQQ0+Rio/z5A/Qd1
f8IzVL7DeVT+A2j45ORDzdsA4fNUQ/lzIPw1HRB+Qxc0/fVDzcuGyk+DhgdS
+gUATof+hw==
       "]}]}, 
    {Thickness[0.0012750455373406193`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 212.3999}, {237., 277.2999}}},
      CurveClosed->{0}]}, 
    {Thickness[0.007285974499089253], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{237., 276.}, {234.5, 274.5}, {234.4, 274.6}, {
      236., 278.7}, {236.3, 280.1}, {236.6, 281.6}, {236.9, 283.}, {237.2, 
      281.6}, {237.5, 280.1}, {237.8, 278.7}, {239.4, 274.6}, {239.4, 
      274.5}}}]}, 
    {RGBColor[0.129, 0., 1.], Thickness[0.007285974499089253], Opacity[1.], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{237., 
      88.9004}, {319.843, 88.9004}, {387., 78.3794}, {387., 65.4004}, {387., 
      52.421400000000006`}, {319.843, 41.900400000000005`}, {237., 
      41.900400000000005`}, {154.15699999999998`, 41.900400000000005`}, {87., 
      52.421400000000006`}, {87., 65.4004}, {87., 78.3794}, {
      154.15699999999998`, 88.9004}, {237., 88.9004}}},
      CurveClosed->{1}]}, 
    {Dashing[{0.00546448087431694, 0.00546448087431694}], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 41.799800000000005`}, {237., 
      58.799800000000005`}}},
      CurveClosed->{0}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 5.}, {237., 36.}}},
      CurveClosed->{0}]}, 
    {FaceForm[{RGBColor[0.004, 0.004, 0.004], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
       0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxd0rFLw1AQBvCHg1ZBKgWVDoWUDlWkq4Muhy4dEqkFQcEhBJpuLYgIxcXR
seDi+Cb1LxAnScWhbnUTHMwk1KUdXApFbP2+wUsghB93371LSD5oVmszxpjS
5J4+p5fN12V2uFKuBPuifALLRqhsUqHMTdw+r6A/R5/R6+jvdWB/i/k32Bxq
R8/a8l6TxbjUtjsePICdsYv+b3oedTuis7D/w/wa8wsh6i5s0rA9gKNVbVtM
eJPe5vwq/YV9pMX5Lfqa9TL3fdB2+tpmqY78TcINT9l2uc+Y52X3/hx/Jvyq
bSL6xdNuattlusd6JuEPV/uJ79dl/g72H7XlVjvm93GOOP+SvqdP6QL2vwiY
P4Zll/Ur+P//+wsMkcrz
       "], {{205.40078125, 66.31739999999999}, {
       205.40078125, 68.56739999999999}, {192.79921875, 68.56739999999999}, {
       192.79921875, 66.31739999999999}, {205.40078125, 
       66.31739999999999}}, {{205.40078125, 61.3174}, {205.40078125, 
       63.5674}, {192.79921875, 63.5674}, {192.79921875, 61.3174}, {
       205.40078125, 61.3174}}}]}, 
    {FaceForm[{RGBColor[0.004, 0.004, 0.004], Opacity[1.]}], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
       3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{
       221.828125, 65.345525}, {221.828125, 68.6549}, {220.575, 72.345525}, {
       217.459375, 72.345525}, {214.10625, 72.345525}, {212.971875, 
       68.53614999999999}, {212.971875, 65.28614999999999}, {212.971875, 
       61.139275}, {214.853125, 58.367399999999996`}, {217.41875, 
       58.367399999999996`}, {219.96875, 58.367399999999996`}, {221.828125, 
       61.139275}, {221.828125, 65.345525}}, {{218.73125, 63.09865}, {
       218.73125, 60.139275}, {218.4, 58.945524999999996`}, {217.41875, 
       58.945524999999996`}, {216.440625, 58.945524999999996`}, {216.06875, 
       60.139275}, {216.06875, 63.09865}, {216.06875, 67.57365}, {216.06875, 
       70.595525}, {216.41875, 71.7674}, {217.38125, 71.7674}, {218.340625, 
       71.7674}, {218.73125, 70.495525}, {218.73125, 67.57365}, {218.73125, 
       63.09865}}}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{230.2002, 60.799800000000005`}, {
      241.8002, 60.799800000000005`}}},
      CurveClosed->{0}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{230.2002, 216.7002}, {240.0002, 
      216.7002}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{235.8999, 61.0996}, {336.0999, 
      51.7006}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{332.5, 52.}, {328.8, 59.6}, {329.1, 59.7}, {
      340.4, 54.}, {344.4, 52.7}, {348.4, 51.4}, {352.4, 50.2}, {348.2, 
      49.7}, {344.1, 49.2}, {339.9, 48.7}, {327.8, 45.2}, {327.6, 45.3}}}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{428.7998, 44.}, {495.9998, 38.6}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{494.2002, 38.7002}, {492.3002, 42.5002}, {
      492.4002, 42.5992}, {498.0992, 39.800200000000004`}, {500.0992, 
      39.2002}, {502.0992, 38.5992}, {504.0992, 38.0002}, {502.0002, 
      37.7002}, {499.9002, 37.400200000000005`}, {497.9002, 37.0992}, {
      491.9002, 35.2002}, {491.8002, 35.300200000000004`}}}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{430., 44.0996}, {482., 53.2006}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{480.2002, 52.9004}, {477.4002, 
      56.099399999999996`}, {477.5002, 56.200399999999995`}, {483.7002, 
      54.9004}, {485.8002, 54.7994}, {487.9002, 54.700399999999995`}, {
      490.0002, 54.599399999999996`}, {488.0992, 53.7994}, {486.0992, 
      53.0004}, {484.2002, 52.200399999999995`}, {478.8002, 48.9004}, {
      478.7002, 48.9004}}}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{430., 95.7998}, {430., 44.0998}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{430., 94.09960000000001}, {433.6, 
      91.90060000000001}, {433.7, 91.99960000000002}, {431.4, 
      97.90060000000001}, {430.9, 99.90060000000001}, {430.5, 
      101.99960000000002`}, {430., 103.99960000000002`}, {429.5, 
      101.99960000000002`}, {429.1, 99.90060000000001}, {428.6, 
      97.90060000000001}, {426.3, 91.99960000000002}, {426.4, 
      91.90060000000001}}}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIVIGYC4o0B2bPMb9Q7zJoJBJKuDk+a551dNQcH/7aL
g/j2iwxyq+odGEDgjAtY/tVaKH8Dgn/2DBCYocn7OcL5aSDwxMGhVtYi/QjM
vBMODiD3fAfaZwwCmxF8sHyDg4PXKxYTwQ+YfJh6sPl3oO7dC9FffhPKf4jg
g+1vc4Tzwe71c0blP3MG+3feQyg/CuL/eW9Q+XLvEXywez/C/Avxf9ZXqP3y
EPntv6Duve7soFrKNIsD6BGIe50dIlaYnpVmQfBB8i84UeV/80L5rC5wPtj+
HAQf7L8HLmD9KzgaIPYZu4L5HowIPsj99z7Vw/lg9z+DuvcjxL2g9AE2zw3B
h6UPAASQA3E=
      "]]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ9IGYC4ojojftz/lQ7MIBBlAOMP2smEEhGOahq1PX8
/IHgd/c9+RT/vdohDQRkoxz2HRRXm/wFql8Xon7ndqh8WzRYXvg6VD9vDFje
8n61w9kzQKAS4/Dxi1ck2+dqB2MQ0EfwwfI+MWD77q/H5MPUg927HWq/VgzE
PfsR5oPdewiqXhbBB7uPB8EHq2eA2O+2H+relxD3X94NVX87GmzfmslQvhmC
D1YfGQtxfyQOvnUsRH0y1D7zWEj4ZEDllRB8sH8+x6Dy06NQ1ZtA4yMZER8o
9kki+LD4BcfnYkw+cnxbToW5JwrVv1oIPsw9MD7YPz8h7rk/C8qXgIbPDqj6
HIj7g/dB5b0h+nUOQM23QfDB6o0QfJh7YPEB1i8F9d9mNP9uxkzPMD4APIRJ
DA==
      "]]}, 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{493.7002, 70.09960000000001}, {499.7002,
       77.09960000000001}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{506.2002, 70.09960000000001}, {500.2002,
       77.09960000000001}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{435.9004, 119.20020000000001`}, {
      441.9004, 126.20020000000001`}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{448.4004, 119.20020000000001`}, {
      442.4004, 126.20020000000001`}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{502.2002, 42.0996}, {508.2002, 
      49.0996}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{514.7002, 42.0996}, {508.7002, 
      49.0996}}},
      CurveClosed->{0}]}, 
    StyleBox[
     InsetBox["\[CapitalPhi]", 
      Scaled[{0.9111452641165757, 0.2250327797202798}], 
      Center, {14., 15.1875}, {{1., 0.}, {0., 1.}}],
     FontSize->16,
     FontWeight->"Bold",
     FontSlant->"Italic"], 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{236., 61.4004}, {236., 
      203.77339999999998`}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{236., 200.86040000000003`}, {228.8, 
      197.40140000000002`}, {228.6, 197.58340000000004`}, {233.3, 
      206.86840000000004`}, {234.2, 210.14540000000002`}, {235.1, 
      213.42340000000002`}, {236., 216.70040000000003`}, {236.9, 
      213.42340000000002`}, {237.8, 210.14540000000002`}, {238.7, 
      206.86840000000004`}, {243.4, 197.58340000000004`}, {243.3, 
      197.40140000000002`}}}]}, 
    {Thickness[0.0012750455373406193`], 
     Dashing[{0.00546448087431694, 0.00546448087431694}], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{302., 54.299800000000005`}, {434., 
      44.0998}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, CompressedData["
1:eJxdk09IVFEUxicTXUjTtAt3ie2apEWIRPGJkYQUoTDM8r1bbd6Zms2QQaRM
RCTiSqZd1CYmXYm4c2zRQqQiZBb9QWSCmow2g1SgWNQ955088BZv8bvnz/3O
d+475oqj1w+mUqkD/jvnvzb/taqrI/0XCd19m70dhxyyi49b1fOEjnJlaHon
RFQrzR6NjKcGg+b6FcJTLngQxvkgbO3NbdfPhMil/clZgsvkB5ZOhGBsZQkD
S2u3XjQC+G7tuV5Cng9eBfCUzmaMuX1PlzGnpzv1/jfG0n/deGi6sLX3XusP
E/w05cpHY6n/moj/CuCnnxps0/q/qu9ntM+cvtE0Ztz9EIFx7oexzPfZWPx8
rfpaEXz0SfdyALZr1c/3n+W+HmO57zTBU9/mS9V3gVAQgwNs7E5EtbzmNwPw
dRPX1K/fARijku7H+y/19wiX2bBcGMcfan0xjP14lth33Vj2+y7xPp4bi54F
Aq9j7aRDPz+QmsZDB27X/pZiv+46yHtrGIu+L8bixzfVd8dY+o0bix1Frf9E
OM6Cbxhzejk0HmdDxxwmecDvhAovdFjjO8Y8TqmzsM+8rpEjhXi/Ywm+aiz6
vH7Z7x/VO+PAz3uxkeAVY/G/qvNPutj/R4Tt+iWXiZTvE+b5YFT139b5Tinf
tH0k/+d/D/e8iA==
      "]]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYm/zTscE/myHPys/XvJ9keQQxqe7aa5ntoNA
hOWWE4uSHRKeXlC6LZzt4Nyd87x6arLDprnvlx9jynZ4/huoYVKyg9Ltn3VZ
07Ic9s2X0r/bieCD9RcmO4CMf7oXwV9xDGjjiSwHELcsB8FfBbQ+KRrBB8ru
k3dNdgBpv7Amy6EcaMH6O0kOIGnHXIj8fDaoe28i+CWTJVjCvkLM/xaX5LAH
JAB0P1h+T5ID0HV7ShSyIe69leTAAjLAHMpngbj/lX+2A1vjVOdug2SIealQ
/R7JDiDr3hci+ODwaUbwgar51rZmO4C8t08N6p8VCD4w9LzNjyH4YPffgYRn
kBOCf9k3SeBGOoIPdk83NDyPI+IH5L+WlQh+PdB7wpUIPsj5fOEQ98mXQe0X
QMQ3evwDAFK99SQ=
      "]]}, 
    {Thickness[0.0012750455373406193`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{212.0005, 160.07569999999998`}, {
      221.3005, 160.07569999999998`}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{220.0005, 160.07569999999998`}, {218.5005, 
      162.57569999999998`}, {218.60049999999998`, 162.67569999999998`}, {
      222.70049999999998`, 161.07569999999998`}, {224.10049999999998`, 
      160.77569999999997`}, {225.60049999999998`, 160.4757}, {227.0005, 
      160.17569999999998`}, {225.60049999999998`, 159.8757}, {
      224.10049999999998`, 159.57569999999998`}, {222.70049999999998`, 
      159.27569999999997`}, {218.60049999999998`, 157.67569999999998`}, {
      218.5005, 157.67569999999998`}}}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4tyj/zZVXyp0eHPAUtlrcYADe/wMH9HTCH7F
nEXKO08UOpgs2mL+Y1KAw4Ifhs/WHS90mGBYrqvYH+Dg7yCcePgwgr91WeVx
zYMIvjTvA90J+wod2qIu73k8IcDhHhNnl/yuQgdR2ZNP7WdAzdta6LDk/j6+
OfMDHHq8XrGYbEDY31TsNuXbKgT/b/uX29enIviR4tsvMnQUOmidFji+qwTB
Z8hvZDmqjODXfNoQkH3LH2J+d6HDetUnzfPm+jskv4tysptb6HDksnaqJJM/
xPzlQPeDHLbMDxIeawodzq06fzUsB8FnBHlEH8FXABn0ztdBDWjs2WWFDsHT
FPtKD/pCzJ+D4IPDqw/BB4dPW6HDdzagQbJ+DidDDq5Y0gz0j9Wk0/UX/CDh
X1PocKMRGBDX/CDhV17oIAbySIsvxH91CD7YvPpCh0cRQIkFvpD4aCp0sHtx
c82vNVD5VgR/f62sRXo7gg82rwvmf6h8LzD+QA6b4wuxfzI0vLp8HUDBOmsG
wn5weMxD8MHpazOCD47vI4UORSCHfEDwZ5cDPdrpB+e/1d+tzv/aD+Le/VD7
Xfzh6WOpHzAgL0P5wPD2CPgjUSweAHHPQmj6M0fw5b/khNX6ocnnQ9MXUP9Z
a7+LE1ug6Xc9gr8aGO1vdiH4YP3A9H1D6JPj+Tho+j1a6HA4ZVVCCBdU/gw0
fXMEOKDnLwAcNpHL
      "]]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4ivaqZKPogod5r5ffsz7d6BDpPj2iwwVhQ7H
vM07HQuCHe4xcXbJxxY66G4CqggNdmCPn+EzNaTQoWSyBEtYQLDD/lpZi3S5
Qgel2z/rsuwQfLB+vmCHkyEHV6gYIfhNxW5TyswLHcL4gCYyI/i/6rL2lDwM
gvNB0u+3BDl82hCQPUuz0AFkHd+TQAdBM5u9lzih8uYBEPc6IPgvbq75dccX
av6LAIcer1csW2Kg8osDHVafvxqWkwx174NAB4Pd6vzc+VC+SRDY/erVhQ4g
7x7rDoKY1wrVvzvIYeuyyuOaPQg+OHymIvhWk07Xc0wrdAA5V7cC6p/lCL7a
k+Z5vtsQfJD7Gw5Cw3M9gu8DDK6EXwg+2D2O0PDcjogfkP++LEfwc4/+27S7
H8GvmLNIeWcd1H1iwRD7oxHxjR7/ANX85n4=
      "]]}, 
    {Thickness[0.0012750455373406193`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{273.2002, 80.70020000000001}, {282.5002,
       80.70020000000001}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{281.2002, 80.70020000000001}, {279.7002, 
      83.20020000000001}, {279.8002, 83.3002}, {283.9002, 
      81.70020000000001}, {285.3002, 81.40020000000001}, {286.8002, 
      81.09920000000001}, {288.2002, 80.8002}, {286.8002, 80.5002}, {285.3002,
       80.20020000000001}, {283.9002, 79.90020000000001}, {279.8002, 
      78.3002}, {279.7002, 78.3002}}}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI7IGYCYmWv6mZ9jWKH+DJ/ObFVyQ6O59OuPlctdvA+
wW47e2qyQ0JIkPoCCwT/vZhHwB/tYoeniQuvmShD1SsXO+g4y7x+dCPJIax2
3bYkpWKH5eGnjI6cTHLYxFO4pluq2KHut1XBuZokh6f2S+7vEy12mNugdqgt
PcnB/MehlFXcCL7PMi43VU4Ev5RpFoc0O9T+TAQfbH4ugt9x6d4D7lKofqB5
SjkVVUvLEHyw/mY0+UlJDnxzjBdtYYHqnwt1398iOP92BkN+4zcEf26c5mmB
D0UOFzZHft05AcEH+68BwQeHZwbUfb+LHHj3GczUikhyYDnab1gO9B+MD7ZP
BMEH2ydX7MD8vEfjbTzUfWrFDhv18hYzFiQ5SBRfF/qkD1XflOQwub016rIp
NLxmJjnseSwie9IWGj8nofpdih0mr2wK9PwMlXeH6udJhoRHGFp85yD44PjN
Q0sf4Qg+2D3RxQ6h81evvXE62eHYrh29bElQ+X/JDp0bHr6cmlUMCS+pFAdw
eitG8MHuK0XwweFRXuzAB3KfBIIPNk8EwQenNx6ofqB5Wb6f+4K5EPwSlen/
JwDth/H3sAqJ2H9IdsjS/jb9bkWxw62uv6nfn0Dl6xH8FaZnrf3aEfxfb18f
sOyBpt8PaHyGFDgf7D6g+8Hx2wTla6U46CrKf8kpRuMnIfjg8A+H+l8mBRL+
fsUOZlIHohXYoXzXYof3Fq7uRe+h7reH+u8clG+FiA/0/AwARD2rRw==
      "]]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4osTY/45vy5ycPyYfCbWNcUhrHbdtiSOYofQ
+avX3vif4nA7gyG/8W2RQ8elew+6P6U4sBztN/z+pMhBx1nm9aP3KQ57HovI
nlxX5MD8vEfj7TMEH6z/XIrDsV07etsOIfj1N20rbxwvcpjboHao7SSC/97C
1b1oB4L/k//ldv1FKQ7vxTwC/uwsctjDKiSy3zLFgW+O8SKTWRD59cnJEPde
QPCf2i+5b3cPYj7bnmSHzg0PX4q+hcpLpjisMD1rfe4z1L3mKQ66ivJfcv5D
+YkQ93dyFzt4n2C3nd2bAjFPrBiif2mKwyaewjXdMgg+OHxUEXzzH4dSstSK
Hep+WxWca4b6xxzBV/aqbl7vhuCD3P8osBgcnknzEXyJqVc4XxxB8MHueQEN
T3dE/ID8F2qB4Gdpf5suq4DglzLN4pDmh7hP/zLUfqT4Ro9/AC7mByk=
      "]]}, 
    {Thickness[0.0012750455373406193`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{298.2754, 171.0205}, {307.4754, 
      171.0205}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{306.2754, 171.0205}, {304.7754, 173.5205}, {
      304.8764, 173.6205}, {308.9754, 172.0205}, {310.3764, 171.7205}, {
      311.8764, 171.4205}, {313.2754, 171.1205}, {311.8764, 170.8205}, {
      310.3764, 170.5205}, {308.9754, 170.2205}, {304.8764, 168.6205}, {
      304.7754, 168.6205}}}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4m+lD+YIypU5lAOppSuTHSbwV5mtFkPwGX1b
eP1FyhykAm9J1yxMdtBcKXzBRbjM4cSM3dMmzE92uPHhi1ckP4JvFx69cT8P
gr9k70FxNa4yB+e1mfcKFyQ7pG9+VbyVtcyhu+/JJ/klUPMYyxwu58ezn1ue
7CD6+/S7k79L4fZzq2jU9XxD8Nssrh3NfYjgPzoOtOhyqcPU1I7k2EkIfuN2
h6ZHmQj+fBudK7P8oOZfK3XI4fy5IN0+2eHNPKDEi1KHj0BvtElAzf9c6qAK
tHYnIzQ8vpc6bAE6W/RzEpwPNv8xgg/27+Ukh/VTgA75BHXPiSSI+c8RfHB4
3ULwweFzqdRhH5AKvp/kEMS6eJLV+VJI+PBAw/8E1L+80PA7VOrABlTGuDMJ
4r+TCD7YvNOlDpZAb5gcSILEx9lSBwGgM+0OQ+UvIvgeev8V/15C8MHmXYX6
/yBU/kapQ5JRqIHW/iSI/feg4bUryaE6ESjxBGE/ODxeIvjg9PUfwQfHt0CZ
w1035gruKwj+c9nlLzx+Ifh/gNF0WAiafrjLIPZrItLHKqCyGz5Q/keoe5OT
Ie55C42PYgQf7L96NPl+aPoCxhfY/lnQ9PsLwTdpAEY0WxmcD9bPWwZJP+3Q
9CsIdV8sVF4Cmr5jkh3Q8xcATgCa7w==
      "]]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4tg7bswVy0odzn8Pfrw0NMXh0fEZu6cdLnV4
vHT2EQWBVIf0za+Kt64odRC7ee77ZaZUhwn8VWbaC0oddnnyMGkzpDp46P1X
/JtZ6jDxbY296fcUOB+s/36KQxDr4km7ahF8bhWNOp7mUgftdqCJNxH8WnvT
uF0nEHyQdPmmFIfqRKNQg9JSBy+gdexeKQ6znskuzwiFyH8vToa4txvBL+zq
e1I0E2K+35lkB9Hfp995roDKa6Y4mDRsd2BaD3WvR4rDzmzOnwt2QflFEPfv
PVbqAFQd/HhuCsS8i1D9W1Mc7MKjN+6/juCDw+cBgn/YaW3mvIelDkDntotN
gfrnM4K/fkpqx2PGMjgf5H4x3jJweK5ej+AvAwaXwVUEH+yeH9DwZCqDxw/I
f52fEfH1rfTBnMDbCD6jbwuv/yloeD6G2o8U3+jxDwALkvlJ
      "]]}, 
    {Thickness[0.0012750455373406193`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{341.9756, 171.5205}, {351.1756, 
      171.5205}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0036429872495446266`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{349.9756, 171.5205}, {348.4756, 174.0205}, {
      348.5766, 174.1205}, {352.6756, 172.5205}, {354.0766, 172.2205}, {
      355.5766, 171.9205}, {356.9756, 171.6205}, {355.5766, 171.3205}, {
      354.0766, 171.0205}, {352.6756, 170.7205}, {348.5766, 169.1205}, {
      348.4756, 169.1205}}}]}, 
    {Thickness[0.0036429872495446266`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{317.7754, 161.82030000000003`}, {
      336.7754, 161.82030000000003`}}},
      CurveClosed->{0}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{357.2998, 49.799800000000005`}, {
      243.40480000000002`, 208.63580000000002`}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{244.8066, 206.64549999999997`}, {244.3066, 
      199.04749999999996`}, {244.2056, 199.04749999999996`}, {241.0036, 
      208.81649999999996`}, {239.70260000000002`, 211.71049999999997`}, {
      238.3016, 214.60549999999998`}, {236.99960000000002`, 
      217.49949999999998`}, {238.9016, 215.87249999999997`}, {
      240.80360000000002`, 214.24349999999998`}, {242.7046, 
      212.61549999999997`}, {248.8096, 209.54049999999998`}, {248.9096, 
      209.35949999999997`}}}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
       1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
        0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
       0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAWIQvadkssSSm1kOElOvcGasy3FA4c+C8Fm+QPga0yH8
IzzZYP6LyVC+CIS/ogeV31GDxi+A8F2EofwECD+FC8L3cISqXwOxz+NNFkR+
HpS/A8J3mQzhc2yE8JdkQvgrVqHyM6ZB+EdCsrHyYepZNCB8jrVQ86UhfI2t
qPwXp9D4l6D6FaD811C+CtT8n1D1/hD+iZnZEH42zD0QfkoVKp9lAip/yU1U
/hGRHEh4rISaZw3ln4Kqj4Tyn0DNz4LwV7DnoPAzDFH5L5qg4W+Qg5IeXHZn
Y08fQD4AsrLxIg==
       "], {{220.2505, 227.309575}, {220.55128125, 
       228.42285625}, {220.69971875, 228.64941875}, {221.57471875, 
       228.64941875}, {222.8989375, 228.64941875}, {223.67628125, 
       227.79004375}, {223.67628125, 226.4502}, {223.67628125, 225.3642625}, {
       223.3989375, 223.89941875}, {222.8520625, 223.01660625}, {222.17628125,
        221.903325}, {221.32471875, 221.4502}, {219.7739375, 221.4502}, {
       219.44971875, 221.4502}, {219.1489375, 221.4502}, {218.7270625, 
       221.52441875}, {220.2505, 227.309575}}}]}, 
    {Thickness[0.009107468123861567], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{236., 
      220.7002}, {238.209, 220.7002}, {240., 218.9092}, {240., 216.7002}, {
      240., 214.4912}, {238.209, 212.7002}, {236., 212.7002}, {233.791, 
      212.7002}, {232., 214.4912}, {232., 216.7002}, {232., 218.9092}, {
      233.791, 220.7002}, {236., 220.7002}}}]}, 
    {RGBColor[0.906, 0.2, 0.], Thickness[0.009107468123861567], Opacity[1.], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}}}, {{{343.3066, 48.5674}, {348.3066, 
      49.2344}, {353.3066, 49.9014}, {358.3066, 50.5674}}},
      CurveClosed->{0}]}, 
    {Thickness[0.009107468123861567], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
       0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
        3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 
       0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
       0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQbbxoi3nFzlKHj1+8ItseODtonhY4/ssYkx8RvXH/
mzZnh8MpqxJCnEodpqZ2JMdWODsEqS/oLPArdVDRqOvZmevsULim+7ZGaKlD
w3aHpkeeCL7FtaO5JkwI/pZXxVtFrzs5xPxz/pUbVOpwYsbuaROynRyW3N/H
dwdoXg7nzwXpzFB5qVKH60KfHM//M3ewq4xY8VWwFEybMpo5yH/JCbPlLnUQ
lT351P6OqQOXm2qp09cSsLs2bETwQepq/5mA7X9RWYrBh6kH2R+TUOpgAgyX
H8dMwfbyR5WC3fGW3QzO/zb97uT2iwh+a9TlPY9dzMF0cjTUPVfMIeYmQu1z
snSYYFiu+3ByqUPZgzmCS9OdwO5rmo0IL5B5/YtLHdgWT7JiLHV2gMUPLPzR
4wsA0zPNRQ==
       "], CompressedData["
1:eJxTTMoPSmViYGAwAGIQvWiL+Y+mmWUOv0+/O3nYxcVBfUHnhoV1ZQ5TUzuS
Y4VcHIQ+OZ5fllHmkGQUaqD109nBTbWU6ZZ1mcN8G50rs+4g+GD5ameHyogV
pr6uCP4/519vXwcg+LInn9ovCS9z2HdQXC04HMEH2yeG4DuvzbxX+M3JIWVV
Qsil0DKHHM6fC9LnOjkYlusqzvcqcxCoMlttl+wIlp/kBDWv3sHh/j6+OZst
oPqvODhsS6q/+Ve3zKFhu0PTo/cODqcFju/6oYDg5zeyHD3Pg+BzSM+Ly/xW
6iAVeEu6ZjKEr/m41OE6KCB+2YP1VxwqdShc0307g8POAUQ1rCh1mABy2GMr
OP/b9LuT2xUt4HxRkMfumILNW7kHat42E4erz7O0v11H8EHx4fQZwQe5j5+7
DGLeTlNI+CqVOezsZfsg5mMBlveXK3M4a+13caKFuYMwUFuabJmDJsihd8zg
/CWggMlG8D0C/kgUR5s6zAAa66peBrcPZKyHRRmqe/wQfJC260lQ84+YOhy0
VPaqrobKm1k42ACdMaewzOHRy6mbeFZaOERd3vNYJLXMQf5LTlhtmjk4fT2M
hLp3jRkkfIMRfHB4BSD4MPvB/n+L4IP9L2EO54PtizQHp9c0YHoBx4e9Jdx+
iHttHNDTOwCrTV2m
       "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7aZaynTLusxhFof0vLhEewcYv7pZ32eZmp3DjLuT
21k1yxzSrz7P0m6zcvjn/Ovta4kyB7vKiBWmey0c8htZjp7ngaqPM3cwLNdV
jP9f6nDW2u/ixDVmYPXZnxD80wLHd1k8R/AXbTH/wfSg1MEExMgyh/PB5mda
wPlg9021dAA5o+xlqQMXyKGHrB0OWip7Wf8odfg2HejQmbYOX3LCavVYyxxi
QBab20P0A9378YtXZFuCA5jvpI3gqy/o3KBoiuDD/B8evXH/GxEEHxY+AGuN
hpo=
       "], CompressedData["
1:eJxTTMoPSmViYGAwB2IQbViuqzhfq9yhYbtD06P3Dg7/nH+9XS2L4Dfr+yzr
kix3+H363cnD2xwcTgsc37VDvNxh30FxteCVDg7Wfhcn3hFA8PMbWY768yD4
i7aY/zjEXu4gFXhLuma9g8O2pPqbf/+XOQhUma22Owkxz+JHmQPr4klWjI8d
HNQXdG5Y+K4Mbv/V51naZU8R/DXdtzMaDiD4vWwfxDxWlDmER2/c/8YHwZ8A
8liyHZxvVxmxwvSpDdj8h2vLHApBBgnYONzfxzen+GyZw06Qwg+WYPMZHpQ5
tEZd3vN4gwU4PLKflznEgBiPzeF8sPn8CH41KKC0zBy+5ITV6t0rc1gH8miv
Kdj8zacRfFB4yWxB8MHhs7TM4c0BS2Wv82YOwp8czy9bUOYgDzLIyRIS/lPK
HBhAARtuCQ6/vV1lDteFgAq3mYD9d2Iagg8yr2lmmcMSkMXSpuD44J9X5pAO
Ckg3iH1MSxD8g0BrrZcj+GDzVkP9bwCR372xzOHRy6mbeHhNIfbvhobXGRMH
kLKQowj7QeHx+hyCDwqm+C8IPii+K4TKHWZxSM+LMzSD8zVBDA8LON8j4I9E
8XxLiH84yyH237SCp4+zoIA8A4lPxbtlDm0gh/DYgd0jchUaH68QfLD/+uzh
fHD6tISmL2B8TUntSI5tgaTf828QfNmTT+1TGMvhfLB+3nIHi2tHc00YoOlX
BOq+jbaQ8FAoh8TfIlsH9PwFADbFom0=
       "]}]}, 
    {Thickness[0.0012750455373406193`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{363.7256, 37.4941}, {373.0266, 
      37.4941}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{371.7256, 37.4941}, {370.2256, 39.9941}, {
      370.3266, 40.0951}, {374.4256, 38.4941}, {375.8266, 
      38.194100000000006`}, {377.3266, 37.8941}, {378.7256, 37.5951}, {
      377.3266, 37.295100000000005`}, {375.8266, 36.9941}, {374.4256, 
      36.694100000000006`}, {370.3266, 35.0951}, {370.2256, 35.0951}}}]}, 
    {RGBColor[0.725, 0.098, 0.], Opacity[1.], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}}}, {{{75., 46.737300000000005`}, {80.746, 
      37.892300000000006`}, {92.771, 33.73930000000001}, {104.854, 33.3723}}},
      
      CurveClosed->{0}]}, 
    {FaceForm[{RGBColor[0.725, 0.098, 0.], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{103.0552, 33.4766}, {100.7852, 37.0316}, {
      100.9072, 37.1156}, {106.8312, 34.9116}, {108.8882, 34.5056}, {110.9442,
       34.1006}, {113.0002, 33.6946}, {110.9632, 33.1996}, {108.9272, 
      32.7056}, {106.8902, 32.2086}, {101.0682, 29.7476}, {100.9432, 
      29.806599999999996`}}}]}, 
    {Thickness[0.0018214936247723133`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYCYjuu64sLwoMcFC7lx7Ov83MQWef+sMoxAIPf
bnHtaG6In0M1WCDA4YjT2sx7rn4OO+RaXweuDnAIYV08ycraz8EYBI4FOGyY
ktqRLI7gZ2x+Vbz1vC+c//j4jN3Tlvg6PKwCGrg7wOF76YM5gpa+DgwgsDbA
YfYz2eUvLvg4HP6qEdO/zR/CP+PmcPYMEBT5O5yTDLwlfc7VAeh6Wy5bf4dd
2Zw/F+x2hZjf6+dw88MXr8hlCL59ePTG/T5QfmQgBh+mHmz/5wAHT73/in83
uELsuxngEHfHjbniIoKvtVL4gouZG5xf1NX35FO+mwMwNHbI3Q+AuGe7GyR8
fgRA7MtzdwCFnsjBQIelew+Kq5n6OsyaCQT3A+HhBTbvf6CDacN2hyYnPwdY
/MDCHz2+AAzOxi4=
      "]]}, 
    {RGBColor[0.906, 0.17600000000000002`, 0.], Thickness[
     0.0036429872495446266`], Opacity[1.], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{234.3999, 215.45260000000002`}, {
      267.9059, 250.97360000000003`}}},
      CurveClosed->{0}]}, 
    {FaceForm[{RGBColor[0.906, 0.17600000000000002`, 0.], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{265.4429, 248.36280000000002`}, {257.1929, 
      250.11880000000002`}, {257.2439, 250.40980000000002`}, {268.7009, 
      255.75480000000002`}, {272.1649, 258.1148}, {275.6289, 260.4748}, {
      279.0939, 262.83480000000003`}, {276.9399, 259.2388}, {274.7859, 
      255.64280000000002`}, {272.63190000000003`, 252.04680000000002`}, {
      267.9649, 240.29680000000002`}, {267.7069, 240.20180000000002`}}}]}, 
    {Thickness[0.0036429872495446266`], 
     FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
       0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
       3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
       1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
       1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAGIQ/TH5TCx3RZFDe2vU5T9uBQ5l/nJiWrFFDrt39LJt
cChwSFp4zUTfvcghJEh9QadtgcPUK5wZSVJFDnOMF235bongg+RP6hY4nGC3
nX1VGcH3/dwXXKKP4OdUVC3VMStycFhyf5+fJoIPss9AEcHf8PDlVCPZAofN
kV93RpkUOZidtfYTFCpwaFA71KauWeQw5Rtb/Iyr+WB5KcUihwaP/bVz5+Q7
6OUtZrQRL3JIPHxZ++nGfAdWIRH7Np4ihw+tJ0MO7sh3kDoQrdD4vxDO32cw
UyviNYIffsroyMcrhQ7hb/R3L18I4W88WOiQPat8jlINRD/jwkKHeWdXnb9q
m+/w26rgHEd7oYOT3YubOjfz4Hx+7q3LfjYg+JurP20IsMgDm2c4G2LeIuE8
B5Xp/yfUbUPwQfFx+iKCD3LfjJdQ84zzIOHLUORwXNNqkncbRP7Gn0KHLvnk
d7eS88Dx9f53oUNpoTRvQgSCz2oiaGbjheBLPooQN9fIc3jeo/H2LGsR3L47
W1tqLogVobpHB8Gfv3rtjXjHIoj5pnkOAi+3r2eOgso35zl0/U39rhJQ5OAj
2uP1amKew8qmQM+5ztD4yswDp68siyKwe6OCIOGx0RDBB4eXPoIPsx/k/8oo
BB/k/9PxCD7YvnSo/4yLwPGxZgnCfrB7RfMd0NM7AC/EV/8=
       "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQPfUKZ0aSVJGD8s4/7V8y8h1g/AaP/bVzHfMdnvdo
vO1lL3LYGzRNse9snoPv577gku+FDhbpLpn5U/Ic9hnM1Ip4XQhRn5Hn0KB2
qO353UKHLvnkd1FBEPVfLiD4UgeiFQ4eRfA/Jp+J7d5X6BD+Rn+3ehaCDzL/
fSeCD3Jfyfo8B5Xp/yf8O17ocJHhHhPn1zwHgZfb1x++VujAz7112U/9fAdn
mdePtj0udLhzvbH4WHI+RP+3Qgcf0R6vV1Mg/NOcRXB+mb+c2CphBB/m/2fr
VJ8wNyH4sPABAO/rkYs=
       "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQLfBy+3rnpUUOy7jcVEutChxg/OLrQp8c9SH8w9sQ
/JVNgZ6yR4scxD0C/kToofJvyCD4TLM4pOMkChw+Jp+J9T5c5FC7bltSPV+B
Q9ff1O8qB4ocvKqb9X2YCxzmr157435XkQM/99ZllbV5DmX+cmKrmosc9gZN
U+zzyHPw/dwXvKWqyGFz9acNARZ5Ds4yrx+ZpRY5/IrJPfrPCMGf8o0tfoZM
ngOrkIh92xsEX2X6/wl1dsVwftLCaybrC4odsmeVz1GKRfATD1/WTr2K4LOa
CJrtkcgHm+cWV+xwkeEeE6dTPsQ/xsUOH1pPhjhGIfgg8yWi8x1yKqqW5iQW
g/3zszQfbP+/9mKHZ+tUnzBPQPBLC6V5H3xE8Ntboy7/US5waFA71KaeUgyP
D728xYx/pIsx4gfGBwAXxMN3
       "], {{304.37964999999997`, 257.07235}, {
       304.79965, 258.642975}, {305.049025, 258.756725}, {305.9459, 
       258.756725}, {307.56902499999995`, 258.756725}, {308.382775, 
       257.802975}, {308.382775, 255.9261}, {308.382775, 
       254.35547499999998`}, {307.9059, 253.121725}, {307.0659, 252.334225}, {
       306.029025, 251.35422499999999`}, {304.71214999999995`, 
       251.35422499999999`}, {302.78277499999996`, 251.214225}, {
       304.37964999999997`, 257.07235}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7fu5L/jLiyKHeWdXnb/qne9w6d4DbmG2Yodn61Sf
MHvlO7AKidizCRc76E1Y8GOjS76Dpat7UaVMscOd643Fbmb5DgIvt68/rFbs
4GT34qaOWr5Dg9qhNnWdYofjmlaTvLkR/AaP/bWyr/LgfLD6vXkOmyO/7ryl
Wuwg+ShCfHtvnsMJdtvZVyUgfPO8PLB9P7kg9hv65DlMvcKZkfSrCGK+JcS8
5Y9Q+eoXEXyQ+VInixw+tJ4McXRC8Pm5ty77GYbgg90Xlwf2D/OpIocVS/wc
hNPzHKQORCs4nilyCH+jv1u9Is8BPbwALs2O3A==
       "]}]}, 
    {Thickness[0.0012750455373406193`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{300.52639999999997`, 264.3936}, {
      309.8264, 264.3936}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0012750455373406193`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{308.52639999999997`, 264.3936}, {
      307.02639999999997`, 266.8936}, {307.1264, 266.9936}, {311.2254, 
      265.3936}, {312.6264, 265.0936}, {314.1264, 264.79359999999997`}, {
      315.52639999999997`, 264.4936}, {314.1264, 264.1936}, {312.6264, 
      263.8936}, {311.2254, 263.5936}, {307.1264, 261.9936}, {
      307.02639999999997`, 261.9936}}}]}, 
    {FaceForm[{RGBColor[0.906, 0.2, 0.], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{356.5859, 50.938500000000005`}, {
      351.28889999999996`, 57.50150000000001}, {351.51189999999997`, 
      57.69650000000001}, {363.7749, 54.62350000000001}, {367.95189999999997`,
       54.2715}, {372.1289, 53.919500000000006`}, {376.3069, 53.5675}, {
      372.3669, 52.133500000000005`}, {368.4289, 50.7015}, {364.4899, 
      49.26650000000001}, {353.4599, 43.08650000000001}, {353.1989, 
      43.176500000000004`}}}]}},
   AspectRatio->Automatic,
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{470.5859375, 247.},
   PlotRange->{{0., 549.}, {0., 286.}},
   PlotRangePadding->Automatic]],ExpressionUUID->
  "38a16bf7-7edf-4bca-b262-529d9688b348"],
 "\nConsider the element of current ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     StyleBox[
      StyleBox[
       RowBox[{
        StyleBox["I",
         FontFamily->"Lucida Handwriting",
         FontWeight->"Regular"], "d"}]],
      FontSlant->"Italic"], 
     OverscriptBox["s", "\[RightVector]"]}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "7234a315-3551-497c-a2bd-3ad78f186d5a"],
 " shown in the figure. The magnetic field produced by ",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["I",
       FontFamily->"Lucida Handwriting",
       FontWeight->"Regular"], 
      StyleBox["d",
       FontSlant->"Italic"]}]], 
    OverscriptBox["s", "\[RightVector]"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"26407778-2079-4b0c-ac9f-8d333f73f169"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "at a point P in the axis of the ring is given by the Biot-Savart\
\[CloseCurlyQuote]s law:\n\n                                 ",
 Cell[BoxData[
  GraphicsBox[
   {Thickness[0.008403361344537815], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {CompressedData["
1:eJxdVE1oE0EYTaPGGILGmp/uZjfVU6oeRCxmtt3NflokogdJRfTQg9SfgwiJ
qJcIVZCg4qGCVbEUBVMPXnLxUrSgpCIqLQoeUr1FPUhjTtKCJ92ZN8xiB5bh
zX773vvet7vbRkvDZ4KBQOCId/FdrMWtlI80a+UsUWO5b2S8oVG8XmhVLllU
KzuR5imNVvhxwqIEP+/XaJqff2YK91bbxZm6j+c4zxNGe/ga0ugKJ7zP6IL3
WO2kRgdblXj9NqM7XPCq1LvGaJzjx7K+Iutf+1j47PhY8GR11N2UfCWdRjjR
NIPvZZ1+FWcy1ZeMFkVDafhbYdTP/W0xidMUjlng/WoSZ4/vtcAza4D/EyMu
70ym6SxfY4x425nLOny7DDxFDfUBRiJf6sF5K4d9X0phofciqTCnqx5O0uRD
b3Vy8Pc7Ad0Qg5+pBHLtlfmU5f39PhZ+Sj4e9mjbzxhlxJwSqn+hvyP5f/96
Cs9FB5DnxzjmvcsCftWNvu/J55dimJ8t5310E+byN4fc21HVn3hPHkUUFr4P
hVflE0JdkEH3+lrkcYDRdh7AuyAtzHvLmzf4u5DLDx8L/eOWwoKnbRFHxRNr
kMetAey7Q3IfxNw3bgD+Mgh/S1Gcj9ro73sM8/9gk4h3oRv1poN53Y1Dv+DI
7yGpsMg1llJYvM8LKfRjO8jzXA9x2UjWgd+whv43O6ib0qDXsXG/T8d7Nmsj
h/MG5jSXh84DA+c/8/I7MMC3zsX9poE97UJ3vQk85GIOGZN4fLXTPhb/iTEf
C/0JF/PrMsH/1EVOb6Wf5y7yu2jA9xsX8wwb6Gte+rmRVlj43eljkeeETt+4
zntX/a/EnBo+Fvn8cWn1/+0fRZwLuQ==
      "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbrO/WGViaTD9cUFtlzaNg4wPogSybJxmDUTCF5K
OJw9AwRzbByWAJVdD5ZwMAaBwzYO/Ye+asTsF4eqs3EwAYkzi0PU/7FxmACS
lxeD88Hmq4jA+SJgi4QcuEAOmGbjIN/6OnDHPX4HECV30trhBshd07kddsgB
Rf5YQewt5oTwLRB8sPpaSzgfTBtbQvz1nRNi7i8LCP2Py8EDaOu6yxYOmjFA
H3DwQOg1FhBxd16If2ZaOFSDHLiLD86XA+sXQJXnEob4g8PSIQjksEZRiH+e
WULM/SHuwAACR6zg4QvW32rtgB7+ADTSqh0=
      "]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxdU0FIG0EUXTxIFemlFiqIpWRjNmqSKYUym2Qz/9KmF6UGEZToQasttJAU
7MX2UAophVIUwV5V0lK8eBApAZGiXrWHUhqvCp7Ugwe9WZyZN8yiA2Hy5r//
3/9vdu6NlQoTDY7jZOVP7edecWbrUYzKQXO9uiioXpX/SjE67q91VI4EreT3
p1tvJix29Epa/ESGV+pJeq3y9wR9PJKB+RS9bZWZq4IOZDgfZ5ST4fIXQVLt
zCszqijekKAHai0wKqhytwUpWvCb0V1F+JMj3d8hg97nECt6P4V4d0etADob
Jv4swPkrhn4aA+i3m36Ws5g3lsKcY1nU+55AHjPxH0naPpOB/xnUGU5h7l8Z
Ult+M4W6Uxn6poy8xSiuDzLQSTCaVOtf2mJVZvpdiHW/d9I2X/tZ8219Bcsj
vtXXPjX4NCtVitJ/pVZc5/DtYRL9f+KY62sC/EEO3b898P8+h++n3ajfxvEd
PO0G74bhD3SZe+fo98KzWPMpYrH263kE/XNuzt2r+IUL/4ThL7jwvZejrxMX
fo1yzOFGkT9l5nkcRV+zpp83Ucz3k+Me1qLYW3zjUyf2OR95Ox7qFHLwtykO
nVoOfcUMdoTFmt8VYmX3TJ8AryWOe3hp3k/dg857gfpLHnyeF7i/tGffm77v
avj+dN0PIdbvYzzE19/rJcANijs=
      "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQffYMEMzRdCiw5bq+uMDG4WGVyDp3RS04XzOm/9DX
BgR/CYixG8F/E7hDrjVZB85PA4F5ug4gbRpzbByApj2sytFzMAaBzzYOJiDa
Wt8BpNrWy9YBqCqmf5G+A0h5zHYEH0xb2cH534DUobl2DtUgA5P0HUDauV7b
Qex/rAexV8neAeyfFD2I+kh7h8Mg/bN0HexAFpZC5Vt04HyIe3RQ5e9oO3iA
AiLf3mHWTCDI1Ib4JwUqjxReACwEjb4=
      "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQfX1xgS1XuLoDmG62cJBvfR24Q0/D4WGVyDr3UguH
/kNfNWKuazikgUCehYNmDFAkQBPOZwCBDi04/03gDrnW2doOZ88AwRwov1vH
YdZMIPhp4QDSrlGjC1EfZukAtOVh1RddB6Cq14FXEHywvcVWcD7Y3jdWEHNW
6jp4gBzobe2wBOjs68K6EHv6rR1AykXqdCDyl60h7ujRdvimATLAGuJeBy04
fwLInv+acD7Yng0IPlh/CIKPHl4Ax7CQFA==
      "]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.3575,
      35.6975}, {14.3575, 36.12875}, {9.4375, 36.12875}, {9.4375, 35.6975}, {
     14.3575, 35.6975}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{16.8575, 35.913125}, {15.1775, 36.753125}, {
     15.4175, 36.12875}, {11.9375, 36.12875}, {11.9375, 35.6975}, {15.4175, 
     35.6975}, {15.1775, 35.073125}, {16.8575, 35.913125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.02625, 26.33625}, {26.3375, 
     26.33625}, {26.3375, 25.68}, {20.02625, 25.68}, {20.02625, 26.33625}}, {{
     20.02625, 28.68}, {26.3375, 28.68}, {26.3375, 28.018124999999998`}, {
     20.02625, 28.018124999999998`}, {20.02625, 28.68}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdVW1ojWEYPswi8lVbyIyVj63tB0YU533v53ljiGVj+zETmfloYj7Toa1o
5iMOSmtiEvJRUz6SP/uzmfkxP/izJsoRSmeLPxT5ep7nus555a2399zvc39c
93Vf93vyNu0qr82IRCJDzL3f3EPN3XetPjpypshA2ePcpkDkbOfX/OqEyPNe
c80OJG7tWpW2m5LG8b3IdRPWV6ik3IQl+0Vcngwl1j3eJ1JQbSLf8v0bkYut
5uoWScSy7pa84/O2IP4znxcYl6mA55SIN9JkyFHI0yhizehc4jkowFcS2lMt
wKrQ/mbg6HolEXs1iJiqiR/NSrbY6zjP25QcsgdnBc9HSrpsH23s84WSqC18
T2S3/ZFUYrxiWU95/keh7iviHaOB6zP7vqxRvyiAnRekbVfvtAavb4j/uHY4
Y89EllmijtF+CLydzfS/ynonNPwMXw5nXAPnYfq3sv4+9B+7rsHzDvZzXyNu
O/l9EtoOT29oZ1v++jX6qINuMgc05rcL/gt/avC3D3PuGREAh5lfsbkejA8w
33Oo15EVIL5FEDclSOvDwsxP8dbN+awIbcfDgkBseNkl5C+ewfyNPM8O8J74
Hg8LwNc6zueTxnkJ+erSeM6hHi+T/xz226Ax9/Hg/0tNaFv6TlaEttPBMvI/
UaC7xRp4p7PfIuqlkPOZqtH3PPafrYHb454OZ76VyPfR6M/hX4+9XflbIf+e
1DyoV6N3W2assV3/reL8XvxS4Okm+xtkvgus36/Qz1Hqo5P7uFeAo532VvDd
1qLQRxX4nXREob9V2PO6bfSPch6lrD+H+eYrzKWA/E9QeE5j/Z/UbQ73L/Gf
3R3aTkd3+B2axX7i9FvE790x7s0S6qWBcyrlfh0gzkri2UmdbaB+trPeZubb
Imk+nD6qqQPFeazlnHPJ/2r2PeBjH8qJL+5jfyqo+6U+vq+VxDnax1wrqKN3
HvZoTWpOHvKVkYcbHvRZyu/KKQ96WUrdL/egr4WpvfG4TzwfjALHOPbTE0W9
7z54fcjzl6Ht8rSHtuPF9JWKd7wd9NP5nX+Nn67veNjog/8VwNu720e/Zzz0
ZeIdn7d4foT5uj3UOedjnh89vL/io//hPup3sJ7yMYck65333Txfj+KcP/jA
z+9A02TO+Z//z7+GFBrF
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQB2IQPWsmEDx3cSiw5bruXGHnAOO7P6wS4VOyc+g/9FWj
5I6LwxkguHPG1qFaZJ275jEXh/9AsL7C1iENCO6td3EwMjY2blaxddCM6T90
dYKLw7XFBba7Hto4HP6qEcOf6eLwOnCHXOgGGweg9FcPR4j+93U2DkDjHk6S
cnHgvA7UkGbj8Aao7u0XZzgf5J6F5xD8HXKtrwPXOzu0AA30q7dx8AC68980
Z4cqoEGFGyHyB+ucwe45/NjGoRDor8VFzg5AZ/RvAroPxgd6K8a+BMEHuePU
CVswXQXUD/J/nqwd2L0aQPOjQXSRncMSUECthZgvfNzOAai7oPUshK/MZQ8O
L5OvEPUR1vZg8x7JQMJzX469A8gbVs4uDjZgjVB+Bhq/F8E/Cwz3LatdHIDC
XOVA/SD/rTwMia9mK3uwe+bfhoTnfg57ePyB+P+PI+ITFr8AwgHijw==
      
      "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/TQheHr0D60BY7Bxh/JhBYvrJzsOW6vnjC
bBeHvkNfNWSE7R3OngGCPheHa4sLbLP07cHyCk0uDg+qRNY997Z3AHILtha6
OKQBgVqUvYMxEHTHIvizgOYmmiD469wfVvXwQfQvl7V3KAQayP3GGWz+qiV2
EP0nncH239G2cxABavDa4exQAFS3ebMtnA/U7m5og+C3vA7ckcdq6/AQKPF/
n7ODDdBhDrdtHKqBCjLPODsAjedavtcGrP7STWcHkLdsFtg4yLe+Djzwyhns
nvaJNmD3Gv5H8EH6Z6q5wPkg//Z6Q91/1sbBA2ghXx40PFxtwf5cNsEFbF/4
Plt4+P4HgvkWiPCGhT8AwuWzBg==
      "]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
      2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{35.948750000000004`, 17.8175}, {
      35.948750000000004`, 16.985}, {34.878125, 16.985}, {34.878125, 
      14.9375}, {33.9125, 14.9375}, {33.9125, 16.985}, {30.5525, 16.985}, {
      30.5525, 17.735}, {34.235, 23.046875}, {34.878125, 23.046875}, {
      34.878125, 17.8175}, {35.948750000000004`, 17.8175}}, {{33.9125, 
      17.8175}, {33.9125, 21.798125}, {31.12625, 17.8175}, {33.9125, 
      17.8175}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdVVlIFlEUtg3p78GWHykqI2yFZuaO82M+VFzu3LGyiH5fgojKKGnPCNOK
FgyDDDLKir8iWnywCJE2IxLMLIPsQW2h8sU2CxVayBaKmjnfyaEGhsuZc+5Z
vvOdM+NXbMpdNSApKamf/+7x3/7+u3lm5Gl6jpZzOrZHq9tsnGe1fNjsP7cc
mXsjrbTrs9snT11S3vDltStLu+I30lY5MjBvanVlge/n/M8MuSNaPTuvzpW+
1ZQlezNkt282qMqV+cETgb7jMMvHbPjbyfaTbRmEiy9zZWXg8ICQjv9c8VwZ
uC8YJuSJRCIxynZhV2DR/cIxnE+diXwHuzIpeKQpg3DbvyvE+WbIO36Y8reK
/DpXDNg/VjJwP7OM9U1KBteiuwzKv/SmQvwNhhwXBKpWXL8hA7dTKkOZ7h0O
ZcJjr5KB+8hu+E8pVsDhMvxlrWP/bwzknc/yWBM4rWb7xSbO1Zz/EVMG/Tu/
RqFvtSbOtQr43Gf9RtYnW6hnq5K9fpkNngW7EoW6SyzgcVJRX2d3WIR34qJC
P4YI9Kma8xkuYFercG+8IH8tdXzfEIT/j9uMf0yQn0X3WJ7B/WzhfOKCTvVS
Ic4Wvv9VAZdTAnGTXfS1WcDPMObnQBt5Hg35SvbzQ5n6nPWfPt1FH686+J7i
4vs5Bzh/Zz4cdCiv9k7Go4j5/0Lh/nIHZ41CfgMd5H0slAnnM1zvRAfzUcP+
FiGfvEYFnp1wqH/pz7mfjxzg18P3+8WAzy/mV3oM8xB1Gc8Y6jBc8KA4hvpz
XPDheAz5rGT7azF8L2F8GmPof2Uok/6d96/c5PXhSX5+63/x7tSoJ5vxatPA
s5X3xV2NPJdmAN9atv9k0xydrmJ/xTbhW3VcY74+CvJfV6YRd7+Afr/G/MwV
xMt1FRp9EQJ4nuX4w1l/ie//ssC/6+y/x8L+qed8nliYx2aNOXpggafPQpnw
7A5lmgsfD+rvKwt5jfCAS4T5O9kDzv78zPIVHzI98EWC73nSAz75gvpcphnv
Yp6fOV5f/bRf5rGcENQfcwHLFzBfDQs9ilNwTcBP7t/+cT7rQ5lwWOoBr2yO
n+3Brt7C/prkgecjgUd7soe6t5mw72G8U03g+1Sjvm6D8Hz7UGNfPON9eEsD
x5ssn9Pg/yED/iv4f+XvU6p/n0YfigzgVxjKhN+yUA7CVizg++UG8nPZfz3r
p2vk/97AvBksTzWx3yaw/R4TfBv9lx/Qx1OZr9MsnFHdt19pDlO43hbo5w/V
4EMq9mlTKuOVg33bnsb+y4B/ZBLzuRH7Nj5Ng5e94HNXpsbemmfjvtToV4Ut
///f/wGQwonp
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.625, 26.9375}, {
     44.6875, 26.9375}, {44.6875, 27.53125}, {29.625, 27.53125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdUztIA0EQvRglJmJjrjWfQoiFh5BOOTOwxNs9g5CIXRARYudpKjEWptFW
xcp0EhsVUihCStFWC9OksTClmDaiYOHuznAHDixzb2/2zbzZ2fTGdqkSNgwj
JFdWriG5us0dO7YrwI7JrxDAvtlyep4AQ1k7B+3E4Wex4/i4qgLfHD/+K1M+
fhzhPp6WcJDiGDcMoLZti4POMwZwKV2XcegXJXOc8AoHmaWdSFL8Gsf9GYCn
gUzg0fk8gGTPlA84qDJrHmCeEw4qbeYaoHEuLSeA92pmK8IwblmAcuYcg5IS
tEr61gO8oBLvBXhT2RFD/pIAReecMuQpEF+DoY68wPqahOcF1n9F8ZbAOloM
Xp6lpQTqvWN4LkL57+n/O/ex1vHBsc+vDOvYcn2seSquH6/38wHWeS0X9d7S
+aSL524YZJVFXfQXDO/7m/Sckf6+QF+nfD3qj8fwvjrUz0WG/oH0RAhPCP9+
dF9CxF+l+fnhkFTEhQDreuwA6zmYpfn8pfmYAqwnTHyTgP2PCqzLJByn+R6n
+DTpGSU+i+4rTPFLwXv4/z7+AAB2Qo4=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {CompressedData["
1:eJxdVDtoVEEUXSM2i0ogAYkucbdRAypqQFBZ5+6bSOKb8ZNFsAkpxAS1SaIh
wq7RJsZKAxbKaiH4AwVTCOKiGGQFtYiFVbSwiG3SCH5AEJy557IXHVjenjdz
7j3nzMwrnBgpD7VkMpkj4RefPNYfov3ZhXujK3uo3nl5qT/nKcLiDaL22d7F
SqunavwzTPTmx5aBmaynclx4QPFMI/zpVrxYCYRtRMNxrPZUjAU3E8Vy7aHe
/dHwpkCo0yb9coLXyfoOWZ9T3BcLFxR3DcTOHrrzwt/pwdtOtDG8rieefgZZ
jT0EH4Oi77jom/Y0FgtOE3zc8RTlZM8TLfeHglWp30PC89QdxwYCb5f4/2WI
5ayVenVDnO+yA68m8/OKmfdSMft64uhWLYwHBvruOuQzZ6DnpkP/BQOf12X+
t2LOqY2amHPaQci95pr+uf8j96//dw5+v0qekw7Pc4L3OezzJlm/wuGcfDfQ
9TlF/+cG+T9Nm/6Yf1Ux9z2lmPX2peC9MPC1NUUefwz6tqbIJS/725KCd1gx
+7yimPt+lP3sSJFHvkRxurNX8HgJ52Nc8PsS9AX9fB7WJOibkfxLCXwWJd8z
Mj/h0P9SAr2PFbPOt4qZ/8WBV0mQ5zcHnSMJ+q7y9GE+jJMJcgj3g/uVZb7L
45ztTcAb86LLYt2E3IejFve8KvUGZf6i3MfTFv6nBE9ayVHO/zXFvF+3FXP/
hxbne0rqz1o8L4ieZxY+z3qsm7PIf8jjfUP0HFPMeg8q5jx3y/16bZvfK67z
SjHX+WTp/+/bX2QHDYg=
      "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQffirRkw/l4/Dm8Adcq0fHR1g/OuLC2y5BJ0cjEGA
0cchDQS0nBxE1rk/rHrn7TBrJhDYOjkEAbW9vu3tcPYMEAQ4QdQd8YbQUVD5
5Qg+2PwMNL6at0Pra6AD1KHqH3pBxA84OthyAV0y18shpv/QV40oR4h7qqH8
Hw5wPlj9LAQf7L5SB4j+Zi8HkPKYSAeI+ZO9HJYAvXfd1QGib4kXxF9GDhB6
hxfEPxoODh4Pq0TWnUfwwfqYveF8sLmu3g4ga2wTHCD0FKh/zjtA6MfeDgwg
YIcIX7D+eQg+LPwBNmGugQ==
      "]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxlVE1IlFEUnSyihlahSIuUymBaRIVtZqFz3xvKCr73cCCYxSzKGBf9MBYF
NoKtJqIWEVgxIREVbaTZ1MJ+CNQgxBSDKIIizRZBUYswqMB6757L9zIffLw5
37x7z7nn3e9u6CrlissTicQy9+TdU+ee4abK586blm73tCVfn9G0Z7ZcXztl
yaFbPVVFhYuj86n8Uvwj5X69UdTswof3WRqbdy9WaeTZJvk2a9riA+ot+WNN
WU1f3Fb5bhDfKXgiYJ++MBQw75cMXau6tVeDr9+Ql9mRFr4jBjwpTd1+dcn/
DQF7+W0LKsa8f1VU63Anu+X8e4U6jxnqc3B2WiHvSUMelkcV9FUkvqbouA+4
brAPKPDMyP854UtaavWrWcGH9Zb8seRvooRf2y34XhH40xZ13g+Y/R0ImHkO
EPS3iN87CPp+GuyriSafuzUlfo5kwFuVeqsZxOcDZp6dAXP8GoO+GBI8E8GP
6QzqeRHhft5lUMfTCH3yUfI/Dpj77U7ArOtyBH8mMvDrfBTz814KmOMGI/CO
ix8PlmL2r0yIeybxWcJ9fohQx0bxZyGCrjr5v8XE+jjf/oDZ93LA3L9XDer8
JXrvSj+uJfg9Jv2UIsp5okmD+8r+hw8FzHp6Cf6My31ekPpGJP+g5L8n8Y+k
n64Y5Jkj5Dls4G+DQr3t0q+7Fd5vkn49qlBPo/T7WYV87v65L25If6808Pdh
wKznZcDMs0K+50bh36rRJ2nxz2jkL0i/lTTiz5l4HrH+JwHz+amA2fe3or9f
Q+cngzr6NLX7hN9kfpyWefFH+E/IfFkn32dR5l+rfF95jfe7bDyPWI+xi+dX
MWCO65V5d1CLj3ZxPf/M278NdF66
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{63.63875, 43.631875}, {61.95875, 44.471875}, {
     62.19875, 43.8475}, {58.71875, 43.8475}, {58.71875, 43.41625}, {62.19875,
      43.41625}, {61.95875, 42.791875}, {63.63875, 43.631875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, {{{71.546875, 38.005625}, {71.993125, 37.56125}, {69.349375, 
     34.911875}, {71.993125, 32.25875}, {71.546875, 31.8125}, {68.891875, 
     34.47875}, {66.244375, 31.8125}, {65.798125, 32.25875}, {68.43625, 
     34.911875}, {65.798125, 37.56125}, {66.244375, 38.005625}, {68.891875, 
     35.339375}, {71.546875, 38.005625}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdUj1LA0EQvRhQCIpNmoDGaKERQRTBRndvcifEQoTsgI1RIaClH5gqCVgJ
dhaCf8CUklLSCQk2ErGS2FhoYQolVSLYuZu3JujAcjfv9s17M3PjmQO1G3Qc
J6DPlD59+pSSr7lwganSjqfPtwX95vmwfpsUFKpfHYoNJvMIHQta1Z9Li0yO
iZqgPROjTF+aXpmXVI6efqS+Fe5XJX2mNPKiUHffBe9ekTCFI0RGJnejgBeI
xjS9fK2g+9bLdfV2fC3RzRdMNBLweauoavxnPeDvlt/yoD/I0M/60JMM/NGn
P/33r3RzIxNt+GTaTW7Z/u98mjZGfEadSx/35pikEdy090cYfmJWb4ipqOn1
Jw/+g4x7eQ/19Lw6eMyDftv6ryS6eYe/08sfajpahH41v9PPBWGuAbufZSJl
FjJg+2+64A0zmXGmT1zgEetvxgU+wdjjswQ+y5j/md2ntPwlCf11ht+mQB8Z
piNjpCjo///1Axa1BXY=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdUz1olEEQ/S4RhfhTnCcIQkALObUSCyF4cXZAFBEh9w02XqOgxiqJpEoQ
G0OKFAeCaCIiR7RR8To5tLsrRNSgHJJCEFIIAaMgEkHTuLvvJSsuLN++nZk3
M2++3XtxpHqpN8uygt/id4/f9fZqubaQy7u3fp1TifiMycPRSt/iDZXFeX/Y
bXKg5i0lJ/52flRNxsLhqcP9sMnSROnZyV0qc7N+zZhMerh0VnH/wGRlqNU/
NULcTPzR/+V/uJNw1Yd9fU3+SZWOL6++YBLSlq+pHAmra6jzqiLPR5Nf3q19
PuFAM3Q64ch3SOVyWB8MebYqeH2+0GZlxSGuQ76ug98L9vOK/TcTjvo8TvhU
SPTI0Ncb4kbii/g+839y6OeeSZBvYtmhjjkD72+HuFlDXK/ie5f+fRrGmmV3
qN924tvUq6iY2y3qUaK+9YRj3EzCsb9p4iLnd5N4B+3XqecW6jnO/n869H2F
8+lSn9xkMHwbtFcYf8FJaKO03zDnIvXeQ/sPgT471/UUzo35GgJ9CgaeYdrX
cvifENT3J4d9QKDH9xw6tY5Dx+cJr/tHniecRw/7+eKg62aD3zbdwDF+X8KR
96BCt02s9zDnkZn421b/UUX9vt54P0i9V3PwK//3bwnHPpYTjnGfiUXxDt8T
H+P7/ue9/wWc6bRB
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{83.70125, 43.631875}, {82.02125, 44.471875}, {
     82.26125, 43.8475}, {78.78125, 43.8475}, {78.78125, 43.41625}, {82.26125,
      43.41625}, {82.02125, 42.791875}, {83.70125, 43.631875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdVQ1MlVUYBmPLoDQTY7WEmTOuxqhp1KSdy3vIcQl/GtL5tIkTygLDFWg6
whoTxc3VwmmtXVp228Wo7JLQdr1CFD+VGZeaM7tmRl5aDYXSnIK57HbO+2Rn
t2/79u0578953+d9zvlmPf7s8ievS0hISNTvc/qdpN/G0eLQ0J+K5pY29V26
TBStS23LGFd0KF1bhojXN0UsNvZVPYq2pLZ5briTqP+SqzQlqOgFjf94M4/X
39uvaJ6Jm5lHyRF/dc7bisyevj43DYbD4dLdikpC6Y1V+W7SywmVDYpStN/V
M4JaqkXyihrEq0OCakRy5Im1ivbp9Yk9guPXrlA0rOvwbBWk04w+VmTxAv38
LOPxmlxFG3Qe/0vwH1ygaFefLtwnyPR/IVvRjDZPtLlN0Fix9shSdMJfLYp6
4/HTJyy+Vft3nhX0lH42Z6OfriuCDI0r5yP/+sluWq7XH7wf/f02w839xXQ9
Dxsi74DdTxab/IOLLDb+iwvR/+E0N/M7c7Gi1WZcNyH+3FLUMy/JTabNlY9g
XtHL4j9s8qWPWfyG1+vd+ZPg+f64FP19dUzwPEaKMK/TX4J/fyH6+bgH/ls9
2D/UaXGF5uG7YLy9tl1Qod73bw/qrwiA73Gdz63T+t4XpGkR+Xq/HXr9lXcE
62XhEsy/sUVQhg44tcxio7fRR+OxZxXmV/QB/M+XK+bxeJdgvryVij7TfmsG
oJ/tzwDXDwvS5mjHRvjnJIL/47XIdzbDzfUFXwRfC5cAOw3Q+6wdbt6/ZDvm
u3ov4r07wX/i75hP5m70N2VTHs/zYNCep2v2a9j0P+01ex5N/QGfxUbPA+8q
npPvCnBVQNGHnmjdxavAKR3gtyxR0rirtKkgiPmevF5CP504v+XTJM831q2Y
t5HbJem265L6UW8wS3K+u48gf7gA+TYcBT8X1knms/Z71FPWKPl8iajivNO9
kvmIjv5b70fIf+OEovt03m2HJa/3THKYv+5vJfOxcYrDvE4dlvzdcpvD9YVG
YI/Mttjw0psdb69/APj8MOq72Q1cFkF9gUUOdD6Aev7yOFxP1acWm3mcabfY
6HhzK/rPLXCg372S9RzMd6hZ62Pd65L1ND/Pwf2xC/EHch2O63wZ9d2TY7Gp
Y/29Fpt+m7KQr7hJ8tc71+H7rP5VzMt/l8P6D2h+jSxcc9Df6bcsNnnSWuPx
wf2S76tf5yBfRTv0UJ6JeFdIknE/5XL4/I58Yvc3fjX98bj3c4tNX11HJP8f
YjrezL07jHoHMsHfF19L3Ad6f3OftByFPspng//px1DvxQyLzXl5KM1iw1ft
VAf/iUHk3zPZYb0O9QKXxKC/bR3o95YJ6LWhGfx/cw72H56XfB8mjSnmp7US
OPUX3H8HBPxjJ+35+///8h+XTiBB
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     98.750625, 34.47875}, {92.46375, 34.47875}, {92.46375, 35.140625}, {
     98.750625, 35.140625}, {98.750625, 34.47875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdU01IlUEU/cpFoNbi8YRWgq1euZAQCsv3vHND+lkIKgQzipFQ2iK0RxHp
QhDcCVI7XSjiD1Fiy95CEHQhWK1cuHD1FkWgiyJK2jUz5+REA8M3Z+695957
7jdNgyM9D2qyLDvlt/h92u+ZrZ+F/rKVTx/9uqsS8Tcry6PF2v0Jlf0lf9iw
crHfW/JG/O3S6BcrT8JhzeC+3kl1LL9+s0FlbtavFifjHla7FPc3nBx1Vxqn
Roh73Ql/9L/3Hx5KuMeHHT4m/7jKti9vpuwkpC2UVVrDeu5Q5yNFnhdOfnm3
rb6EA033nYQjX7PKw7CeOeSpU/D6fKHN4pFB3BD59gz8BtjPDvvvTTjq05Xw
rZDotkNfH4g7E1/EhvkPDPrpcBLkG/tqUEfJgfe3QVzRIa5G8W2nf62GsWbZ
dep3lriNeuUUc7tCPfLUtzXhGNeScOyvmTjH+RWIz9HeRD3PUM/z7P+HQd91
nM8e9Tm2UgrfRdqrFvH3jYQ28rsWc85R703avwv0eW+pp8D+ziLfokCfFQue
YdoX6N8pqG+e9msCPV5Z6FTpgI4u4b/+kect57Fq0c9nA13fWPjV6wmO8RcS
jryXFLq9Zr2XOY9lK/620nhVUf8C31eJes+SX/m/v0w49jGdcIybJBbFO3xK
3M73/c97/wMhC66x
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{106.26375, 43.631875}, {104.58375, 
     44.471875}, {104.82375, 43.8475}, {101.34375, 43.8475}, {101.34375, 
     43.41625}, {104.82375, 43.41625}, {104.58375, 42.791875}, {106.26375, 
     43.631875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}}}, CompressedData["
1:eJxlVQ1MzGEYvyRLaTvJ6ppdbFESrV2Z4e7//Jcjhunmq3tPPitL+rDZCJuP
rnylU4brxkwNo/WhZrFSCG19mIXaDMOwxGwiopnnfZ/TK27777/fvc/7PL/n
93z8J23ItCR7ajQaD3zS8BmBj703oS6v1Qq+XaVZxn4TpODP8toKefi/PhHA
B/8/9F7i9ra2NkePFdYU3v56KQ6gYsHLnADE8fj6FT0c60MlFv4HFLDhvcWf
rLDN6NPVV6dAnd7e2/DTCs1fw21r8xUIwAszvBl0o/mPFQpwfmlBDF7l4IlR
EXyyIyXm/gIUiTElzdwlDCbixVnLFegPtxW+XcnA5XQ6dfsV+IBpHF9H/iOq
FJFvSjKD8Rg34o3EU9FxgRaGMLf3x3xC0O+EjUzk3xILgK/wg0kMrmMe1WYQ
8ctWMbiD+RSuAeEn1kz+LfmkpzGMQSXqMnib/FXpGFhQCM8XFO+XlnBnHwCq
VxHmR/bpHqq4/2wUE/V4G6iK+3WeDHZh+tlREjuQ15j44diWqQq+8b4MslH/
nw5VvFODGcQYDIbeclXwLp5K+X5uIXuNkUEEF/qJCpx+xXKJOd8bNol5Pddv
YqL+1x6rol/KthDfmZ2q4Dkpyx3voSrqYd5B5xntxFebS/ncukvnH4+QfXET
ncc4SP+mBor3BjGv8yLEXLfGIkZx64lfxwmqTwJibud/SmIep6dEYu4v+izp
NYj+eP9+OMfAhMIvu6WK/rxaSv7rm1VAWoZxF0nPvlaqj98VqUcJ77ua4fqM
PkP9kDOB7I0n/8e8DpXTJeb5u+ZInIp5meZLzPV7spn0KnAQv1A78Y+0E/9w
lyr6qWsn5Tevmur9Lk3mz/VjqyXm7XNsocQ83DEj3T9Ro4o6W2PIf9B5ym/y
NIpf6+6vI1OI78ndEvN90JAsMc//cgLVw4n9x/Owm6j/aqMo3uJIFcqyjD4P
Yt3zGkz87sW5+3kQRD1ciUzYNT6i+cnMJP7OchD7IncP2XceBWH39ADxTd8O
Im70YZp/rySab1uBe57MEvM53xshMd8/+WNo3rceov3z/TntJ8c+4nvjAu2n
JtS/A+OVZ9D57gyqryFOEbzur2WwEIkvDaX9pU8gf6e96H6Qyob29R99/mCu
vy5MYs7HL4TmpXvAJPQoDGTAvwFaD0X051gt8Q/0VoT99pHuedMpwn/9Fyt8
Qx77Y2k/W3B/83pXzVYA6ZY24/fh7/089p3EnMbN5xLzepm6rWIfOyeTv6JO
+f3593v0G1Vm5cw=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ1IGYC4v5DXzViDGMcWl8H7pB77uwA44OofjYXBwYQ
iIhx0IwByjxwdgBRGhUxDvIgDVucHZYU2HJdnxgDoRudHbiuLy6w3QaVt4Ca
dynGASTM9djJwRgEnsU4nD0DBA1OEPFfUPvknCD2MMdCzNnhCOeDzfdF8MH6
Nzk4HAbp+xDjYAvSoOrg8A3IPXQyxuEN0Dut3vYQ9Yug7vO2g7i/AOqfKbZw
/1aLrHN/qGaL6v84W4i6gBiI+GIoPyvGoRBkIYMdRLw+xiENBMrsIPZPhtr3
2g5iLtD+h1VARqM9JFzWQM2TdoCYAwwvoKoqkTIHh1kzgWA3NPyuIPhg/eaO
cD7Y/IWOEHO2Q+OP2Qli3zooP9rJAcStWgE1fwGUvwBq3nWo+mlQ+xicIeK9
MQ7A0HsdqOUMCccGKD/IGWJ/AVR9hbODB0hDAtS8+VB5b6h9RxDpCZa+AGIw
GpU=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdUztoVEEUfUZssiAqcREC8be6b9+8raJis3KsooK8u2slrBaKn0ZdbWIs
FMEoohILQZMVgsbFTzDRQlARVlcrLUNMLBTip4pFBKMoBJ079yYDGZg373Bn
zj3n3pnV+46VDiwMgmCBnbCzyc6V3ZPFpy8SbGi3YzDG1cZ0WC6TrEkeYwOV
QnNIqNllbCCLLfZbKRHe2HBPU4RcuacxfZJw3tK01Qz6eu2oEr5b2H0pxsSp
lqGOYcJwh/1bnBdc9/xu/7t5eMTjkqWZ/KD8hTxec95PhBMsZ0UeLLv9C2GP
lRH+jCXvN8I46657/Jnzdnns+GYMDvKYIGxnYWcM2E5o80X8Exhw+uKI8vVH
ouet+jmq/uses6zKc4+3Me8TwmHOc1rxY8/n8EPNX4/EzyBhF+f5EYHpCg8I
v6ztxkYj633CKu7bXiPn7+n+LsNtDYK7Wr8LimtarxsGx3m9rfW4ZcRPv8d3
uM9Vj52/64p7jfTvmuKLGr+i9Tyi9TxHeMT+2/Q+dGp/bkZyf/YTfrOP0ZzE
d+r50RBDfG4TIcW++7Kiz2h8eVbqs3a2nusl3qr1fr9O6rOU8Iz7NpWReIpw
yAnLiL5mjW/OiJ+ZBPwmgpdrxM9lj2f3u/78y0k/lqmfr5HclzShyj7Omjns
zo977PrzR+9Ti+pNx3DPagkhzcbjWPSn9H3tiKXOi5R/dyx6/iZz2PFPeez8
fEykrkXle6XxrTHmv/f//dWzyg==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{67.95125, 21.288125}, {66.27125, 22.128125}, {
     66.51125, 21.50375}, {63.03125, 21.50375}, {63.03125, 21.0725}, {
     66.51125, 21.0725}, {66.27125, 20.448125}, {67.95125, 21.288125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdVX1IlVcYt48VZVCJwxi+79Vi3fd9C2qJue66cjDmHbZW52hds2vSyhU4
Zm0VovSh7W7DFre1LbjRIjW3ogwby6QYaJKw9K5iC92qwU3YR7ZZkvXHmnfn
/J6bh9uFl5ffe56P3/N7nufczLcrRfmEpKSkcfLZLp/x8gkO8vbfpgh2Yqt3
al+Wm0WrU8+6Jgm8fT/MZXYgdHnHH3wMq/e665zd5+3my/1zWNeIFUju5uyx
FQjd3T+b1UizU5c4E+1mcLA+k03ta9qafY4zmSqJ3cxgkd7e3kAjZ2+oQKdc
+L7lEEeeEZ8JHv5aTu+gwbZJWhu3cyZPrdtD6fDftJkzxdtsTmcqzdoSjbPk
b4An4rICzqR7IPQj2UeWceZVxDIN2A3nEt+KEgN1BZdypuhYzYn45DhzDKO+
ApO9I387c6mef+pN2BXnUfzWThN2r+VTfeefUH0xycelEqe4cN60SmMVP1Kk
sbJfXkz1p8dM6Gus49BloI/iD5USn9OtJvIWl1G/Pt6nsYpXtUpjxXuuaYLX
ndJ4vUMG+vFnCfVrbxfp3yTz58rXg0YD9rX+eP56jY+Ew+G1NRqrcRooN6DL
qJ/4H11Nej8upnmpKzCY7II3T+aTZUU9HgPzsiRA/U9bZID37fUaq3kb3JSI
fRVU/zxO9g+2cSbDVReFDOgVruKIuytiYH4+3E34P9tE3m/3kf3PJ6i/Nz+J
6+lygV/bAdLr9+uE1xwi/nmBDOQv/IL4X/w0A/7hMOkzYX4m4rgbKZ/hmQ3e
F7r1Pj07f4aV3cxmPraPin9Lq8Zqnnva4/3xEK74nmOub/gIJ1+O67vajXd+
N/V3SyXFM67S/ga/dINnLMLxveGSGzpM/Inq+XW8hXjzfqH4r1RYiPd+lPTp
eWJBz6q/4nzKbdh5H9K+rfzORp7ov/Fz00H8aZMF/Ka95+B7R4qg/W90EPcD
U0AHb78DfWtsAX7RYTrvy9JY+XXmJp7v8RHuvOUgz4y3CNe2OODXUiSQ9/ge
4vPUL5g06z2zQuO7sh/fpGks3Xj/3zbq96wRpO9VG/PcJgTm4+sWG7otWilo
nz6z4d9aIDA39+ps8FvwusaKx7tMY1VvaCnFyz9gY6/CSwT7SOYZbbBpHxfT
fX2hzaY82fH6rmms9Cu9n4jvjNo0x9kU79iLDvw25JB/w0KH7tlXBfa3abkz
ll/18UppIn5hs8a4/3Y6mOOY9Fd1P6pzwLcnh/Sbtd+h+0DmV/fJwcMO4mzI
onl486gDvo8WaKzqXObWWOlV5RLsoBqwIMX/fJaA7tV+woXTBXSc/pKDelPk
vCndky+S/tdiHOeVOTbuw4lPaT+/GraAU0doXjvyLdjH7un9e/7/8n/Sfwfe

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     83.000625, 12.135000000000002`}, {76.71375, 12.135000000000002`}, {
     76.71375, 12.796875000000002`}, {83.000625, 12.796875000000002`}, {
     83.000625, 12.135000000000002`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdU01IlUEU/dJFUNDKJDCk5NV775vvLcKEB/HwiKCZlTxlBgRzkZQR+FMb
MVFR/EFaGK3UhDBzEcF7Lixebl5Y0CZoZUq7wp0tEspoETV37q2JBuab73Bn
7j3n3JmTV/tar5UGQXDATthZYufsxrdEx7jG2Wo7nkZwODC4R2tLClvL/ZlD
bzVW7LK1HAd9+/c1XtvwbEmIZIc9cdxgajdbqFxRWJi3o9bgs4WTdyN8vFOW
a2wzyDfavyMpxl0+v9vf9x8e8LjVptkdlvyZFF5R3XGD20TkWApEu3ra4AoR
/xpx3RmDbeJd9PgT1R302OX7qXCdxqRBExEbVSA5CVsvpJ9AgcpnByTfw5D5
9IqeXtHf5bHzp9Pj85S33eAG1RkRrH0+h7NSvxiynhaDNqqzF4LSZS4b7FvZ
GzWK10sGJyytQqfi8xdl/6CitgZBs/g3LbhJ/JpTuEVrg/ixpFhPvcePqc+1
Hjt95wTPK+5fWvCMxM+Inz3iZ8JglfRXyn2okP4sij8HDb6Tjs0kx/c0n99M
IEfnPmgcJt0Lceb3TuJH4+zPGy1+nuZ4UbPf70+xP880XlDfvsQ4ntfodsRi
zC8n8XSM/XikQW8ieFmFMiJw0+M/+11/fiW5H88169kJ+b6sazwgHWPqL3bn
tz12/fkh96kgfMsjrr+mUU51o4j55+V9XZD380Tyt0esf8lj59eixy7ffc2+
ZiMMkaAJidfJ+/7nvf8GUeqvvA==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{90.51375, 21.288125}, {88.83375, 22.128125}, {
     89.07375, 21.50375}, {85.59375, 21.50375}, {85.59375, 21.0725}, {
     89.07375, 21.0725}, {88.83375, 20.448125}, {90.51375, 21.288125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}}}, CompressedData["
1:eJxlVWlIVFEUnrKCiomWKbNl8s365tFKi0RqN0uU0sopvaQmKaYmlhMlREVF
ZSRRlraNC4SJQYvZAg2llZkmYfUjyCiCFtLCVszSiuqec15zWwYeb7577znn
+7577n1KWq57ZYDBYOglnmzx9BZPfkecb9fjBGaqjnq2MVRhGeLn7tTxRRsb
0HrcU/BV4jstLS37exLY2jAxk2JjMGwSeJxI1B34N97w1OrHGB9hZcmFN7pi
fiYwMVrdXm9hPnN+R91AzoDH1RQLrps4kmPcp28KjmernDV0qcmFtxXkszZU
YshnWiSxkGQIXc4Z0PN0K+yzGG7L4Gwq/JZa2Js4n/mAh/IvrbGg3ow8zlwi
Ufwoqx9XesIGhBRJDHWihR7QNWYdR/1Wp42JYXX3Go56bmXYsH5lJkeeYU02
zDs9njO3ELpgtZ3GQzjq/pjkwHw1Ls6iRYJBLQ6s9yOY8MJxTszrHEvrz8U7
Mf7JCI4+lZx1YrxvGEddjUbVj0H/ZI/E4RBodCHf6NGciVfy+2IX6sjUOO7r
6QANfSyeSXqb12m43hBLfrSe0hjQr06XGPhezpEYeKau50y84h5WaZi3chPx
fVSmsU3ij7JNr3dEQ96Ru2n+cr6GfAcfJD19M2n+bSmtj3HT/LRjnEG5gCiq
91Jg4KVFaujztQrOpontLo4gfncrOXsufIyao2E/DD0hMfB5fVJiyDelmvz6
IPJDn7yp4RgXEa8hz/MXKH9nmoZ9NewS9d+9rRruj/GK9KPE6/UGNfztT/8z
1A8d9bSfYVX/Y3jX9VP9GPTnhEsMeXuyJAZeiZ0q+rX3mK4/3YX8xx8i/hW1
Luyn1gLSN3g47Xf7RqkfeCRlSQzts2+ZxFBuXyzFLzZr2KeJ8yh/2kMX6rPP
ovN2v4j6a88M4rssQmI4F11tqh9D3VOHVdwP70w6n6b5KvbfxdlUb3IvFX28
F6mv9zmRX9MS8v/9XCfWLV3FMe57hQP15m6l85nZ24F9vXMvrV+0w475HhcT
3wt2O/o3pYT2K7CZzndyuX6e0iWGc274avVj4GHebkVdq720/oOR7rv9B0hv
XrkF464X6H5MsOD85i2c7pkHCvpxK5f4lx2l+8ucqtdPovttZBz339e//fmN
wf+gEImhrnGSfn/MVdCHQifxD3YryGNIMPkxaQWtzzMRH8cOyl/bRz+PVxTM
6xb3N+xTaqOCvG6K78Of9/OQLxJDv1x9JzH4FP4qge7jUspX9EJ+f/79Hv0C
umPNrA==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.78125, 2.25}, {
     61.375, 2.25}, {61.375, 23.}, {60.78125, 23.}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{96.6875, 2.25}, {
     97.28125, 2.25}, {97.28125, 23.}, {96.6875, 23.}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}}}, CompressedData["
1:eJxlVG1IFFEUXdOKRMuPRSvCj01TSUnZtzPzo42npBWKpFm8l5pRWlqZWpCk
pvQhFFH+sB9uShJFYYTQh7hCqJlR1ppUoPXDULBNUgzStVCL3rtXdqgGhuG8
ue+ec8+cN+EHSjILPA0Gg4e4s8W9RNw5dT2urXZGD4lLaVGpgNEN3Yy2bhut
yP+p0jKr91Dwa0Zl3UWLRsUWQ+8Qg/Vb+zWoLx1jtHYiw955WaNitTRxhsF6
2k0N6tTl3I1vl1q960P+xjXxnG4frTC2nsP6+c2c2kNqJ8qSNWoW19EUDrzd
wRo1CmGmVA56xp2qG/c7HI7JhzqezLCHJOeqtFIsdFg5feaKzunyUoHHaeI0
UxBktyiwr4lw0O17RaHiYQ1Iwv72fAV8SUlFffviFTobnVNXkcVBl+eChUob
jJzDc2enjmFfuY5jRMM2fwsNFUYZM7BfZwehcuzARNSXV0LQr1h8f2MlgT6/
fVGf9ZMZ6g47mRtL/4be6VjqqnnOQGfmuBn65XUymLNqwQz8ae0M9t31I1DX
8wi/N9mgY+lfpFXH1202G08n0OdYG/IV5xLw96nID8ThCIG68CcMdJwvx/mi
FvNkrCbg+/teHUsdJS91LOcNcqDe+5XYr28A+YZPEdBlFfPKvl9OEvRR5FH6
+7mQQJ+0EXw/tJtALp3jqL8viUDuPkxhngtVnCfsO+5vMyP/iR/I7xOH79f9
YuCbPYZADsM8uRtL/qv+OpZ+mUS+Jd9pSlB3NOZ9oZhAXYOZg67qRgK8Lo2D
7qy3Opb7zqyyuLHkNVgxP1UK7k8vskDdpQTkK7pmgfwOxiHue4z4VQyej7R+
rC+IxPxOD1ugz5ZQxIEu5PsYxOEcza3AvCs+HPrcW6dA/uo9sD/fpMD3aJll
kIMHmgJ5K5/Qsayzjf2P5Xd/kYnna+rbYl4Y9tsxz4BvrlABPS3L0L/YC1jv
HbB4HpuRL3Utnvel3QqsHxfzSL5wpwL7miIWz4+PCjzmKPQ7QtGx7Dt4UMfS
58JmxPUm/B+dHUC8aw36tX5GhTlC/TiVx3B6tQZ+3vFCvTkbNZjj6yxzY1nf
PqJjqTvhDc67d14FXawL/8d7GlX67//5D7DIaRQ=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{46.59375000000001, 
     26.9375}, {116.96875, 26.9375}, {116.96875, 27.53125}, {
     46.59375000000001, 27.53125}}}]},
   AspectRatio->Automatic,
   ImageSize->{211.63515624999968`, 86.},
   PlotRange->{{0., 119.}, {0., 47.}}]],
  TextAlignment->Center,
  TextJustification->0.,ExpressionUUID->
  "ee2d4c1c-535b-494a-b5ea-ac36aceae6d0"],
 "      (eq. 1)\n\nwhere  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "f"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"1a311c39-0fa9-4319-9be6-d3d6a2a2af18"],
 " is the field point, position of point P,  and  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "s"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"130f7e89-f69e-4ef4-916a-b39c442690c3"],
 " is the source point, the position of the element of current  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     StyleBox[
      RowBox[{
       StyleBox["I",
        FontFamily->"Lucida Handwriting",
        FontWeight->"Regular"], "d"}]],
     FontSlant->"Italic"], 
    OverscriptBox["s", "\[RightVector]"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"4c0d147e-18d0-4abc-bfd0-07f469f1647f"],
 " in the ring.  In the piece of code below we define the function dB that \
calculates the infinitesimal magnetic field  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", 
    OverscriptBox["B", "\[RightVector]"], "  "}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"f47861d2-1ed1-4ded-afd5-5bf4c26e597f"],
 " given in (eq. 1)."
}], "ReadText",
 CellID->311809790,ExpressionUUID->"8609306e-0ada-46b1-8a39-629ef8cd2295"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"muo", " ", "=", " ", 
    RowBox[{"4", "*", "Pi", " ", "*", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "7"}], ")"}]}]}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"permeabilty", " ", "in", " ", "free", " ", "space", " ", 
    RowBox[{
     RowBox[{"T", ".", "m"}], "/", "A"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dB", "[", 
   RowBox[{"sourcePoint_", ",", " ", "fieldPoint_", ",", "ids_"}], "]"}], " ",
   ":=", " ", "\n", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"muo", "/", "4"}], "*", "Pi"}], ")"}], "*", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"ids", ",", 
      RowBox[{"(", 
       RowBox[{"fieldPoint", "-", "sourcePoint"}], 
       StyleBox[" ",
        FontSlant->"Italic"], ")"}]}], "]"}], "/", 
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"fieldPoint", ",", " ", "sourcePoint"}], "]"}], "^", 
     "3"}]}]}]}]}], "AuthorInput",
 CellChangeTimes->{{3.7274521972803793`*^9, 3.727452218370324*^9}, {
   3.727452267842071*^9, 3.727452270352646*^9}, {3.727452421277258*^9, 
   3.727452424329474*^9}, {3.727454973133615*^9, 3.7274549774984922`*^9}, {
   3.7274552009866123`*^9, 3.727455204449286*^9}, {3.7274572761604853`*^9, 
   3.7274572991904078`*^9}, {3.7274573497227077`*^9, 3.727457355172574*^9}, 
   3.72746507869694*^9, 3.7275254525122128`*^9, {3.727703021973666*^9, 
   3.727703036311511*^9}, {3.727723412392147*^9, 3.7277234158943567`*^9}, {
   3.727723466315452*^9, 3.72772346799772*^9}, {3.728067301371894*^9, 
   3.728067321691126*^9}, {3.728231480692675*^9, 3.728231518015973*^9}, 
   3.728333716312471*^9, 3.728384910967008*^9, {3.728385334462214*^9, 
   3.728385398378045*^9}, {3.728385434797187*^9, 3.7283854380466022`*^9}, 
   3.7283854704628677`*^9, 3.728511350108493*^9, {3.7286116566579723`*^9, 
   3.728611673838323*^9}, {3.728613134683402*^9, 3.728613141033737*^9}, 
   3.7286133240268173`*^9, {3.7294551311370564`*^9, 3.7294552226618967`*^9}, {
   3.72945529932416*^9, 3.7294554056066437`*^9}, {3.7295437332838783`*^9, 
   3.729543746591342*^9}, {3.7296110844122458`*^9, 3.72961108845763*^9}, {
   3.729617694440937*^9, 3.729617820284834*^9}, {3.729624087163499*^9, 
   3.729624102033409*^9}, {3.7296242020696507`*^9, 3.729624277448324*^9}, {
   3.7296258592284117`*^9, 3.7296259004038467`*^9}, {3.729625938433296*^9, 
   3.729625941106792*^9}, {3.729626001612546*^9, 3.729626004743474*^9}, 
   3.729626355035574*^9, {3.7296778447134533`*^9, 3.729677852171482*^9}, {
   3.729681210880554*^9, 3.729681231293673*^9}, {3.729694926598131*^9, 
   3.729694937511981*^9}, {3.729729567263824*^9, 3.7297295682050333`*^9}, {
   3.729874867706994*^9, 3.729874876388528*^9}},
 CellID->984646623,ExpressionUUID->"708f3962-5c2d-47b5-8326-805e65c2a60d"],

Cell[TextData[{
 StyleBox["The arguments of the dB[ ] function are defined below:\n\n",
  FontWeight->"Bold"],
 "If \[Phi] is the angular variable in cylindrical coordinates ( 0 < \[Phi] \
<2\[Pi] ).\n",
 StyleBox["\n",
  FontWeight->"Bold"],
 StyleBox["1. \[OpenCurlyDoubleQuote]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.67, 0]],
 StyleBox["sourcePoint",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 StyleBox["\[CloseCurlyDoubleQuote] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.67, 0]],
 "or",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "s"], TraditionalForm]],
  FontWeight->"Bold",
  FontVariations->{"Underline"->False},ExpressionUUID->
  "5087549c-b1c7-4efc-a4b1-0acb861e8ae4"],
 StyleBox["  ",
  FontWeight->"Bold"],
 " is  along the r-hat direction. \n\nBecause ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{" ", "r"}], "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"d61f8615-db14-4710-a769-09d3cd49a5f3"],
 " = ",
 StyleBox["cos(\[Phi])",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["i", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"49e7b2b6-d701-4b91-81a5-ab2a172c31df"],
 StyleBox["+ a sin(\[Phi])",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["j", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"84bc35b0-5575-4942-a76f-e48213b52005"],
 StyleBox["\[DoubleLongRightArrow] \n               ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "s"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"65892b11-7769-4e74-8770-15bbf201a1ea"],
 StyleBox[" = a cos(\[Phi])",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["i", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"c3fa99f4-883b-4925-801f-bee880d40978"],
 StyleBox["+ a sin(\[Phi])",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["j", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"92970831-bf37-4176-b190-6689b62d0a6e"],
 StyleBox["  \[DoubleLongRightArrow]   \n               ",
  FontWeight->"Bold"],
 StyleBox["sourcePoint = ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["{ aCos[phi], aSin[phi], 0}\n",
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["2.  \[OpenCurlyDoubleQuote]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.67, 0]],
 StyleBox["fieldPoint",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 StyleBox["\[CloseCurlyDoubleQuote] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.67, 0]],
 " or ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "f"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"89ee679d-e148-4896-9d3a-67c6eb9f6572"],
 " ",
 StyleBox[" ",
  FontWeight->"Bold"],
 "is  in the z-axis: \n\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["r", "\[RightVector]"], "f"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"df0af02e-e922-4ba4-9fb2-14e33d94b7d4"],
 StyleBox[" = z ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["k", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"c3492d90-e559-4a30-b74a-2d96dec9fa2a"],
 StyleBox["      \[DoubleLongRightArrow]   ",
  FontWeight->"Bold"],
 StyleBox["fieldPoint",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" = {0, 0, z}\n\n\n",
  FontWeight->"Bold"],
 StyleBox["3. \[OpenCurlyDoubleQuote]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.67, 0]],
 StyleBox["Ids\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.67, 0]],
 StyleBox["  ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.67, 0]],
 StyleBox["or",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Id",
     FontSlant->"Italic"], 
    OverscriptBox["s", "\[RightVector]"]}], TraditionalForm]],
  FontWeight->"Bold",
  FontColor->GrayLevel[0],ExpressionUUID->
  "b891e634-7e60-47d7-a3c7-065a06fe9fb8"],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "is in the phi-hat direction (tangent to the ring). \n\nBecause ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{" ", 
     StyleBox["\[Phi]",
      FontWeight->"Bold",
      FontSlant->"Italic"]}], "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"65309566-18bc-4325-8fe6-ed9cde14732e"],
 " = ",
 StyleBox["-sin(\[Phi])",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["i", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"629a8731-9727-49db-a37d-86aa372fdb10"],
 StyleBox["+ cos(\[Phi])",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["j", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"1c7abb14-f888-4566-89e0-3620a89ac47c"],
 " and ",
 StyleBox["ds = a d\[Phi]  \[DoubleLongRightArrow] \n\n               ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["I",
     FontFamily->"Lucida Handwriting",
     FontWeight->"Regular",
     FontSlant->"Italic"], " ", "d", 
    OverscriptBox["s", "\[RightVector]"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"f4b06c1d-5c99-4f75-ae59-3780ba7cb023"],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["= ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["I",
  FontFamily->"Lucida Handwriting",
  FontSlant->"Italic"],
 StyleBox["  ",
  FontSlant->"Italic"],
 StyleBox["* (a d\[Phi]",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      OverscriptBox[
       RowBox[{"  ", "\[Phi]"}], "^"], ")"}],
     FontWeight->"Bold"], " ", "=", 
    RowBox[{
     StyleBox["I",
      FontFamily->"Lucida Handwriting",
      FontWeight->"Regular",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontWeight->"Bold",
      FontSlant->"Italic"], 
     StyleBox["a",
      FontWeight->"Bold",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontWeight->"Bold",
      FontSlant->"Italic"], 
     StyleBox["d\[Phi]",
      FontWeight->"Bold",
      FontSlant->"Italic"], " "}]}], TraditionalForm]],ExpressionUUID->
  "b9535203-2b2f-4b84-aafd-651a8bd16954"],
 StyleBox["(- sin(\[Phi]) ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["i", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"b7246ec7-b00f-43c6-bd4c-8b732dc41323"],
 StyleBox["+ cos(\[Phi]) ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["j", "^"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"2b6db728-b21d-41d6-8a0d-db621efae533"],
 StyleBox[" ) \[DoubleLongRightArrow]\n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "\n               ",
 StyleBox["I",
  FontFamily->"Lucida Handwriting",
  FontWeight->"Regular",
  FontSlant->"Italic"],
 StyleBox["ds = ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 StyleBox["current",
  FontWeight->"Bold"],
 " ",
 StyleBox["* { -aSin[phi],  aCos[phi], 0}",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["d\[Phi]\n\nNote: we will not include d\[Phi] in the argument of \
dB[ ] because  d\[Phi] is already considered in Integrate[ ] ",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]]
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.728613154817687*^9, 3.7286133439321136`*^9}, {
   3.728613400699663*^9, 3.728613758729455*^9}, {3.7286137920328693`*^9, 
   3.728613810954376*^9}, {3.728613843255378*^9, 3.728613863370715*^9}, {
   3.7286138943860826`*^9, 3.728614093779767*^9}, {3.7286142497904587`*^9, 
   3.728614250523172*^9}, {3.728614410188237*^9, 3.72861450760599*^9}, 
   3.7294555951583357`*^9, 3.729694097270928*^9, {3.729694934093362*^9, 
   3.729695245853314*^9}, 3.729729577944125*^9, {3.729730279366701*^9, 
   3.729730311741517*^9}, 3.729730358062648*^9, {3.7297304816840687`*^9, 
   3.729730485074836*^9}, {3.729790078247746*^9, 3.729790533397743*^9}, {
   3.729790611752842*^9, 3.729790661633937*^9}, {3.72979085945884*^9, 
   3.729791274188328*^9}, {3.729791322257201*^9, 3.7297916202087307`*^9}, {
   3.729791651353239*^9, 3.729791664088481*^9}, {3.729793190349511*^9, 
   3.7297932645814753`*^9}, {3.7298112583028917`*^9, 
   3.7298112916464233`*^9}, {3.729811325101941*^9, 3.72981134157401*^9}, {
   3.729834337521875*^9, 3.7298344214761267`*^9}, {3.7298750155003843`*^9, 
   3.7298750460947523`*^9}, {3.729875120241104*^9, 3.729875180522752*^9}, {
   3.729875216345819*^9, 3.729875294030857*^9}, {3.729875384651884*^9, 
   3.729875565490961*^9}, {3.7299308953415327`*^9, 3.729930919077836*^9}, {
   3.729930961988208*^9, 3.7299310198417587`*^9}, {3.729934684681652*^9, 
   3.7299347280281563`*^9}},
 CellID->206770511,ExpressionUUID->"08ddfba9-1bb7-4751-99d1-fc6d38f1042b"],

Cell[TextData[{
 "To calculate the magnetic field at any point  in the z-axis we need to \
integrate (eq. 1) over the ring:\n                               ",
 Cell[BoxData[
  GraphicsBox[
   {Thickness[0.008], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxdUz1IW1EUfoYSYuqgzbP4m7wXF+uk6HDz83LPInGpaMBSQTuIdbFgFKfU
IRSsgVITCgV1EnRx0EFQAhUEO7ZdHFrXbIWITgqFUrz3ftf7sAfeu3zn9zvn
3OvOLOReByzLSotPnpfj1ejqt2bKe+FfO9ucDrK1gh1tIaWvc5oqn930TnUZ
bEmhqMHKfB2jRRl/wel9XRiOHHpri0yHnL4Kc3nJpYww5z9yklHjVpxWpd8k
pzkpr+KUk4ZWTq2SwEmcYtLhPEN1VSeOeh98rPKQj398l+Kh7pa2z3q0tSnk
jwt90IP+peazlybx98JZB33PpHWdbuTrT0O/HkMf/1LIU3BoRKgPTlMkj2zN
wZyWU5RVCpeeKcW9v4s+fyYNVseKjxWvtqSJV/OsJkx+CfPTCVNfQi+QwJyu
YtjDF4a+9qPgX2Lg9aYb/i8YeP3uxPwHGO3Kxfd0IH870/XawC907/8Ue7cY
6idtg2XZ8rsGg1W9rgD4MwZ98dFD7AQxP679/wbpVqQ5e85Qdyik7wWjQSmR
RsQvM8xpoxF+FYa4iTD6O2bwG3uMvE0J8C81wf5J44sI9prLgH/OxryqGaoo
hcYWN1j59/lYHaMc92vShn5ev5+rCPgVuZ5PBPf7Mwffoyfmvak5rLUYrPYy
7GM1h6CP/3+vd1Ckjzs=
      "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQPWsmEFSKOhTYcl1fXGDjcOirRkx/kxicH7RDrvW1
ozic7/GwSmTddgT/xmIgi10azj97BghqZB1i+oEmzbFx0AQxJOQdjEHgs42D
CYiOVnAAqbb1soXYd0jBAaQ8ZjuCD6at7OD8byBqrp1Dtcg694dNCg4g7Vyv
7RzeBAIdyKzgkAYCSvYOYP9wykPUR9o7tL0GKiiVdbADWVgKlfeUhvPTQfq2
SaHK/5SE+DPfHuJeYUmIf1Kg8kjhBQBh7obz
      "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQvc79YZXIOwGH64sLbLmaLRzsuICsuUIOQNF17qUW
DnKtrwN3vBN2SAOBPAuHoB1AkYcicD4DCASIw/lgc8olHc6eAYI5UH64tMOs
mUDw08IBpD3QQhaiPszSQTOm/9BXDTmI+BUEH0TGFFvB+WD6jZWDiTEQTJZ1
8AA50NsaQqfLOLwJBJrQb+0AVm4jDRG/bA2xN1LS4ZsGSMYa4t4DYnC+PMh/
dgg+2H8LReF8sP6XInA+engBAEyTib8=
      "]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.92, 
     35.6975}, {6.92, 36.12875}, {2., 36.12875}, {2., 35.6975}, {6.92, 
     35.6975}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{9.42, 35.913125}, {7.74, 36.753125}, {
     7.9799999999999995`, 36.12875}, {4.5, 36.12875}, {4.5, 35.6975}, {
     7.9799999999999995`, 35.6975}, {7.74, 35.073125}, {9.42, 35.913125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.58875, 26.33625}, {18.9, 
     26.33625}, {18.9, 25.68}, {12.58875, 25.68}, {12.58875, 26.33625}}, {{
     12.58875, 28.68}, {18.9, 28.68}, {18.9, 28.018124999999998`}, {12.58875, 
     28.018124999999998`}, {12.58875, 28.68}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdVW9oT1EY3vhAKx9osrK2KWIh1mj33HvPue/8YsjURoiJ5v+/Nv9KyD5I
TZYfIo2xZoRoJT6ML2rCauOLDyQKIX+jmA+K3HOex71y6nZ6z3nP+z7P877n
3DH1DbVrBufk5OTG3874GxR/XVUvd+c/8+RTTXfRgYxI8YGPNd21vjzoj8fU
DOylQWLnPe5s1Et8Od+o8x5PrMSc8cUu5w2uFOteFPlSWpftGXgh4uLP9eVU
azzuivQMTKjLLvQlXu2quiw43+BLbZz+4wnBfNoHnkMie2K3l72M3yRizd3f
iW8X8RYFiW0swJmp7eI0BpJjxz4BrvZA1trRzP3+AHmOiPyI4fX8CuSOxXlW
ZLYFWh6KtnGvCXCvC8HrHvezIXA8Jd6roWQt0S8i5Xb0aeSflIH9yCS2y3dF
Q7fnxN+hwbNX5IiNc4b2DeJtp38H853TwPFXry4tWy3gvfS/w/w7yP+JxryZ
fAY0+G2gvgUmsR2e0tR25zIG9dwkqMt6g7o1CPyaDfTbwXp3GPCM6+d0v26A
6yjz3eT5kwJefSbpD7tc884k/ePijIsS2/XjbwO/NsZ/yvhN3L9loHsD+bQa
6LVMZJpdX8X9Kuo1injL2I991L+QfFs0+nY49V6c2q4vgtS2sLpLqH+BoC+H
auAdS77v2S8Tqe/DUOw0YRr532J/GeZvDxFvHuPF/efwLxfo0hLi3La/9WC/
NjNfbDv+rSIWZuehEOsXGX8j451g/hkh+OxnvfJD+G0X4PgQwF5HvW8H8FvK
/j8egF817/tK+mvWY3KA/GWM95PvRSn1v833pIT5m330dyHv34L/7NGp7frv
tUK+8eTTpYAj4PvRpqDTTOJvUeij+azvXgW/RcSzRYHXCvJbpZBvNePVqUQP
d36OAv9K8vUUeBQJzpUp8P4UYX068WUj4A8U4syKoJNWmIdF6BNf4b69MjhX
ocCjxyBeucJ9umDQB5MV3wveq0KFfp9jgDuX8Uca3icP+5815mse+NzX0OOg
Bxw3NHDWpzbwpraLX5yed/yHpvGd/7eKJL/j87UCus416PdcD3wP852Izzue
l7g/gvHuGuQZ44HHW97rKR74D4mQv9pDvsoIddjjId+xCPNFDzq9iaBfL/+X
o3nf//l//gE5jAvn
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQB2IQPWsmEOg7OhTYcl13rrBzgPHdH1aJ8CnZOfQf+qpR
ouLocAYI7pyxdagWWeeuyefo8B8I1lfYOqQBwb3vDg5GxsbGzSq2Dpox/Yeu
3nBwuLa4wHbXQxsHoPYY/o0ODq8Dd8iFbrBxAEp/9eh0AOt/X2fjADTu4aQk
BwfO60ANaTYOb4Dq3tog+CD3LBRD8AuB7lz8zt6hBWigX70N2H1/9to7VAEN
KtwIkW/utQe75/BjG4eHIIlSewegM/o3Ad0H44PcZV+C4IPcceoExP1fe+zB
/s+TtXPYIdf6OnCPvUM0yKIiOwcPkIbXEPOFj9s5AF1T0CoK8b8yl73DBKAy
E1sHsPoIa4i5j1IcwObty7F3AHnDqtvBwQasEcrfgMa/iuCfBYb7ls8ODkBh
rnKgfpB7VnJD4qvZyt5hCZAxXxkSH/s57OHxB+L/P46IT1j8AgDCIt2X
      
      "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/TSweHr0D60BY7Bxh/JhBYvrJzsOO6vnjC
YweHvkNfNWSE7R3OngGCaw4O1xYX2Gbp24PlFU45ODyoEln33NveAcgt2LrT
wSENCNSi7B2MgaB7KYI/C2huYg2Cv879YVVPGET/cll7hwJbruvcJhDzVy2x
g+gXhNh/R9vOQQSowYvBAaxu82ZbOB+o3d3QBsFveR24I4/V1uERUOI/m4OD
DdBhDrdtHKqBCjJFHByAxnMt32sDVn9J0cEB5C2bBTYO8q2vAw8YQdzTPtEG
7F5DdwQfpH9mHoIP8m/vZKj7z9o4eDysEuHbBg0PV1uwP5fdgNgXvs8WHr7/
gWC+BSK8YeEPABKqr7Y=
      "]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
      2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{28.51125, 17.8175}, {28.51125, 
      16.985}, {27.440625, 16.985}, {27.440625, 14.9375}, {26.475, 14.9375}, {
      26.475, 16.985}, {23.115, 16.985}, {23.115, 17.735}, {26.7975, 
      23.046875}, {27.440625, 23.046875}, {27.440625, 17.8175}, {28.51125, 
      17.8175}}, {{26.475, 17.8175}, {26.475, 21.798125}, {23.68875, 
      17.8175}, {26.475, 17.8175}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdVXtoTmEY/zDRJGHkvtbIVs457/edo9Sc93vOwucWTWouM7e2P1wntCHb
mlZsssWMLVEml3+mjCy2Wqgpl/qQUStGFJsaIX8w3vP+nu00p05vz3nuv+f3
Pidly+5VecNCodAQ9Zaqd6h6C9zEjtSTRIu7DiY1Pg/j/ET05LF6Wmxa1Tyj
vDsjkNNzqu79mENU3p3VPCPPpnfKvH0KkR+n4XeEDiU1xjYPJ1JWaTlHItTR
oDRvo5TvP4kR+pmmAtxiuTaM+JVR2M8O0x4/zoooXfIDVgrYTY2S/7lgrCDb
f75J8t2yCiz4P5Sop9WEX4OkkP+QiXrLJM5fBuw2SMRpMmCfIckP71awPllS
Y0wBUWyg/uES+XcaOL+43L+BOl4Fsp8m7WYg635rXcQp4filrsap6wbHy3dx
fjBQdw7L003gvont15mIt9lF/adM8scV2+pibrdN4Jjnoq6HrN/J+hEW6jjs
Is5CC3jXuHRfuVWVWcCj3YVfl4U8H1x8HyUo2W+gh+sZJ+DX52IOKQLxRkn4
GwK4j2f8HYE6prE8n+cZkagnS1CPgqd8tUQfe9m/hOd5TsDugiQ//cHHAnmb
JHBKYP7ejQ7wVdunB7L2C/2n75A8N5vq69RzXaK/izb4V8Z8OGGj/40SeBTa
6D/G/pts4N7rIk+CjbpbAlnPP874z7Ixj17GN5vrmSSRp94GjguY7y9s9LeN
8RriAJ9KiTipDvBo7sfTwdktMZciB3XMjCLOGQf1rI3yvXSA+2nG54GD+bwO
ZO0nMgfLYzIH4xnzBmR9rywP/SxCP+1TPeD5jPfFaA9450aoWuXv/Euw/xbW
9Z3v5f1TFNY4X33D++er0PFbnxHyHhPQxwn3Zwn4sb2TMB8h9J5KVftN5x/H
+u/s/8fSZ2Yfx/8C/jeN5PpfWuBDkgeePrKAV0ogaz44gaznofDQ831voa71
HnBJZH7v9sA7dX+kUvQWe5gTCeBzlPHJF3rOFccZ3yKh/SZXewP9+/nHnGK5
DvfNrGX5Gt+fs57OU3BLIE59/7y4npuBrHG4zPNaxPlPeLBrszQu83Z54Pkk
4NG50kPfB0zYz2X/idhfmcncX4+h8fw4wQPPXxuIl+ABxzssfybwv9oAPzr5
f6X2qe7/Kf9vCg3g1xrIGr8rgeynrall/yrs94pKjt/G+hJC/Z/wf8jez3K6
qe3iO9i+1ATftjJfX0Kflct8nWPhzKGB/arvYTah3zj0y9cQ+DBR4H7kMj+X
CvSbz/ErgH/iLubzA4F8+wi8/Mn7sJhwb5eF4X+UMK+aMP3/v/8HrJqE+Q==

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.1875, 
     26.9375}, {37.25, 26.9375}, {37.25, 27.53125}, {22.1875, 27.53125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdUz9IQkEYf2ZgGJGRa08aAiOiQFyqZx8dZnj3AoU2kwiqTXPMlpZaI5py
C1sqkCgCZ1sNcpKgxa3IJcLCrbv7Pt5BHxz3fvd+9/v+3uR2MbvjtyzLJ1dM
rgG52tV9J7gnwAnKLx/AYbiW6uQFWMrqy1C3jz8zjbSHS4rYTHv8n2jutNEz
eFrBEEfeIIA6dmwO2s8wwJXc2jEO3YxUHifMOEgvdTtC/HWO57MATz3pIE/3
kwBSPZorclBhlguAfo44KLfRG4DKhbQ5AWudcrgWYMhLCFBbeIFBViWUpPy2
DE4oxwcG7yo7Yai/IkDJpc4Y6iyRXoVhHnGB8VUJzwiM/5r4tsA4agyem9JC
AvN9YHjvl6P/R/r/YrDO45VjnVsM49h0Pax1NlyPr8/jBmu/tov53tP9URfv
3TKIKesL3C8Z9vud8jmn/N8E1Zn8tag+BYb9alA9Vxnud1TPAOEB4fVH1+WL
+lmi+fngEFHCwmAdj2OwnoN5ms8uzccUYDzfpDcBWP8+x7jChP003yPEH6N8
hkjPpn75ib9o3sP/9/EHEmFF8Q==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {CompressedData["
1:eJxdVD1oFEEUXgxBDLEQUxiUeGehEYmIKTTCue92TmLhziQHokUQDPHA30Q8
DJyEgKDBxgML4SI2/jVCOs0hGuRsDJjCKhY2Z6uFilEIRpx53+MeOrDsfjPz
vfe9b95sdnS8eGZdFEXOP+HNo32IDncsP5xoK1C958bn4U5HAebuEnXNDTYr
kaNr4aNE9Gald6S6aqkYNh5RXG34j37FzYon9BGVwvhtKRcC7iIK4bp8vEcT
fiZLiNMm+bYJXu+wv1v2dyo+GgJvUrx7xGfe4qA7I/ysA28v0XY/Xd/v6KeX
1Rgg1GEd9J0QfVcdXQ4BbxLqqDoKcjomib4M+4DnJX6BwBt01B/GVgJvhwPv
V0xBTu8fi/l6TOzvR/GjJusvFTPvqWKu676l2Zofj2Pou2Phz0IMPTMW+Zdj
1Hld1lcVs0+bqYXZp30E32/ZVv2cv2b/rX/eot5P4udFOe8rgvdYnPNO2f8t
RZ/8iKFrMUX++Rj+P0hb9TF/SjHnPamY9R5MwXsRS1+k8GMtRt4ohS8ZOd/v
x8CzirnOGcWc972c54YUfmTyFJZ7Dggu59EfY4Lf5qHP6+d+2Jgg79cUdeYT
1Nkn/p6T9ZJF/ukEemcVs87nipm/ZMGrJPCzaaFzPEHeFUtL7/wYS+CDvx+c
ryjr3Q59digB77RD3JzBvpLchyGDe+77meOdkvVLch/PGtRfFjxl8J6U/r+t
mM/rnmLO/8Sgv8sSf87gfUH0PDOoc9Rh34KB/8cd5huip6CY9Q4oRt/JfX1t
Wv8rjvNKMcf5YOj//9tfXyUUcA==
      "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQffirRkz/Lz+HN4E75Fo/OjrA+NcXF9hyCTo5GIPA
Rz+HNBDQcnIQWef+sOqen8OsmUBg6+QQBNT2+rSfw9kzQBDgBFG3Bao+Cio/
HcEHmx+Bxhfzc2h9DXSAOlT9RV+I+AFHB1suoEt6fR1i+g991YhyhLgnG8r/
4QDng9XPQvDB7it1gOgv9nUAKY+JdICY3+zrsAToveuuDhB9U3wh/jJygNAr
fCH+0XBw8HhYJbJuP4IP1vcZwQeba+rnALLGNsEBQrdA/XPeAUJf9nNgAAE7
RPiC9c9D8GHhDwAhr7M2
      "]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxlVE1oU0EQjrGI5uIP6UWwQVGIgog/F5H4ZjfQWgTZDSJFe6hKxYLQ6kVt
oB5KBPUQkIBEPIgtgpTmIIqhetBWENFKBbEWrEEUEVoUwR9QFHfnG7LWLrw3
fO+9mfnmm3mz+lB3rnNhLBZb4K42d8Xd1V4c/ZZutTTYk0lMntGwWyy5+0BP
WVGl5W1vcu18/D3tPKcUeff2VZbGnCku1pSrNhVmlkq8dZqS3iFuqTBjq01Z
Db8vBtYKng54lwtfGQ847wPcN3S57E6rRr47hvxnLdsl37Ch9VyIpq3+3JD3
jQF7+pk/qo6P+PNJkX+cGJLva4pSnmjFIO+EAv+bBnZUgd+I+FcU+fT2kaHj
XqCSQp0f5X1O8v02sCkFnRZZ5P1FFPNnmUW+l4T8SQt7K2D2KwXM9XQQ4iRE
780Efl8NdFpC4FETPR9ENOvoFR5KveUI/oMBs70YMPv3GcQdEnxU9JiIyKcp
dkh/piPa6YntN8TteC/x9wXMdnfAXLcWfZ5EsJmQ35c1sClgnr9mA50fE3n5
q3vnY9apl+B/QPyzBN5dhsafurNG9Dlp0Me4vD8f+HGcawFzntsBs65jBrx+
RpiDZzKPKwh6T8k8pQnP3xj0K/sfPhww8zlF8Hst/bwg/X8l8a9I/Ofif1fm
yfHh/+Idgeew6NuoUO8lmddmhb6dk3k9plBPv/T3rEI813+ev6sy33nRdyRg
5vMiYNa3Qf7nfsm/UeN5SfTboxH/uvSnW8P/nqnvI/5uMmD+vhYwz9cH4d+n
EWfWQJe8Bs/PMp+nZV/8kPwnZL80WPDrlP23XP6vNg2/lba+j9gvZefurw0B
M/9tsu8OasTZYefW88++/QssC1uR
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{69.51375, 43.631875}, {67.83375, 44.471875}, {
     68.07375, 43.8475}, {64.59375, 43.8475}, {64.59375, 43.41625}, {68.07375,
      43.41625}, {67.83375, 42.791875}, {69.51375, 43.631875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, {{{77.421875, 38.005625}, {77.868125, 37.56125}, {75.224375, 
     34.911875}, {77.868125, 32.25875}, {77.421875, 31.8125}, {74.766875, 
     34.47875}, {72.119375, 31.8125}, {71.673125, 32.25875}, {74.31125, 
     34.911875}, {71.673125, 37.56125}, {72.119375, 38.005625}, {74.766875, 
     35.339375}, {77.421875, 38.005625}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdUj1IQlEUfhU0OLu0mEGUEQTR0FD3vc/3AhtalNOUGAS19fPIJQ1cktoi
+hlak2hyFKFNqclqEqOtFofCSZu713NS6sDlvXPe+c73fee+sY3dxOaQZVkD
+kzqM6hPMfaeCbYJlU4keZpS+M2zQf02oRBo3OypZ4J5BPYVlvXnYpFgmagp
bJm4JHxreGXWRjmU/4z70l+18RXXlVXiuTsO41yCMoNHAEOTmZF5h8CohpfH
iXk/+rme3omsRHv5nIlmlHXOE6pGf9rlekrwbZf5j4Q/7TFfibj+4uGP/+Gl
Xm5oQk0Pxm6sLn4ePEwZIffEc6487rsj2IZwTfovRE9Y+PKEgoY36i7rzxL3
ZV2ep/fVrYdd5t8W/ZVoL+/i1/v5U01HG+zXFz/n4L0eyD4XgYS5kJz4bzmM
OyaYdSZzDtfPZP60w/Vr4nt8tbl+K/s/kfssCX7BZv5H0dtS7OON4BshBYX/
/9cPL90J8w==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdkz9IlVEYxr+6g3DLytuVaFDQRSsI0iHItPe8kJpioHDOokMFig6h6VLX
0CGaGgycagjENsVNuDRq0KBODg4N5SAI3UXEIBDsnPM8ecIDH9/3O++/8z7v
dxqejQ8M57IsO+cf8c95/8ytHTUPdVrZ2vTLqUT+auXzRHt+Z1ZlZ9F/vLdy
Y8hbikb87uLEFysvwseywf5PK7ul4kpXrcrHD37lnEx73H2s2L/mpNJfrn87
Tm5yp/mjf+sZbks84MN+GYe4aZV1f7y5TiehbPOkSmtYvQ7nHFPU6XPy27ut
DSYOafp7Esd8t1RGwnrkUOeCIq+vF9psrxjEtTHftoFfC/v5xv6bEkd9GhN3
h0J1Dn1tkK+nfJFrWf+7QT9XnQT5SvsG5yg45P1jEFfjEJdTvK/QP69hrFl2
mfpVk6upV0Extzz1KFLfqsQxLpc49ndiwQXO75h8ifYjzr+KelYs+j806PuH
xXy2qc+GlY7wXqB9lfFPjYQ2ip8s5lyg3vO0Hwj0eWepp8D+hvUWBPq8ssgz
SvsU/R8KzjdJ+z2BHiMWOpUfQMfbif/5xzxLnEeJ/ewZ6Dpj4XdRTznGNyaO
eW8qdHvN897hPF5a8bvl+ruK80/xfnVQ7+fMr/zfhxPHPp4kjnGOLIp72E2+
z/v9333/C1L7qKs=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{89.57625, 43.631875}, {87.89625, 44.471875}, {
     88.13625, 43.8475}, {84.65625, 43.8475}, {84.65625, 43.41625}, {88.13625,
      43.41625}, {87.89625, 42.791875}, {89.57625, 43.631875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdVQ9MlGUYB2VtAa5SXNSmQK1xUDsX5Wax9+N5bQu1tga078UFK8Gi0oVQ
mTtKawtam+tsttHFEO0uTd0BXg4OIe4EUdvd6Ywc5bBxuAylP9QEW1HX8z6P
9u667dt3v3uf5/c+v9/zvO/l1dSXP78wJSUlFZ/X8FmAT/N0WfD7BgW+LSJ9
LFVC3JXVmfOKgocfws+PAAVV7qHXnzJYrz+zSsGco8p9tRBgeNZRleFU0Ijp
X3SVQFNWZ+nBexXkIvGqFSWQPubdsvIuBdcxvuYbC2LRaLQqXcFaJHI+bQGW
kPLinzbomsJ/CapDXbEpPzsioAF5a8dtaPN4PH2fCcrfeNaGb70YuFtAcHnz
9Pohg3WZl/qS8bMBG+pewE87x8cO29CCupcHBGj9v++3IQPrrA4L+Al/bvbZ
cAb3yRxNxg9cNVjHvzUvQNNuxXytZ3umBWjXbOUh5nfebUE5hhd3sr7ufIv0
JbAeSxvj5HVv0GDNHxswWMc/EWb97xdY5O+yYRsqMK8/h/N/HeF6fl5qAdrl
rTxlQ1dp3OVLN1jzTfwt/sO7hmYdT/4mqL8XR1jfzh8E9WMK/dT9+vQC++8N
s57tX3P8OyHevylqcDXq/vh08nrxsIA16Ms/Ia6/IMR+zyGfnqfaAQFYtliN
+72JusqCgublkRPc/zU9AnLwPX7SYD1v09FkXDrK+hcNcvzMdzZM4py2xgT5
5ZmwoQ/7nneR5+fdy4zlNQG4HA9Mc/z1xez/+Rnm8z9oUX09s+zXfDVjG+dV
z/ulVov2r5jn/uZ2c74nVZH/JxLcn3ycd63vXEsJ9bPXac7TzfWbWOu/Y5E5
j7p+f7bBOiySq+AT9POlhYw33aeoPx/cwjijUBFv5FZJ5/RxJ5/XC7cx37Ii
RX3tz5b0TqxU5MvRPAlohyutWMFS/NJYxHz3S0V9nFvHfI1rmX/JZkl528oU
zVdli6TzJdYr8m/EI8mPeK2i83jPUebPrFfkf/yUpHkLu9ivtPOSeF9tYb35
k5L8bfpQUV+DU7w+1mawnrfj+5PXd3Qxnpnk+m7vYfzcGNfnH1A85xGuZz7E
/m8KGazru3LEYK1/6wHW/+gg6927R9I89xy70Y9WSfNU1Mt61+3i/O4A+39s
J9e3wm+wrmPz5wZrvW4f85W5Jb09+xTN546PuF/ePQoKUbcf/dX3jaOd9U10
GKx57jyQjHsPS7qvLrczX90RnocNHZzvCErQ4eN7FZ3nqUGzv45rGE7Gx0cM
1rr6v+L/jwTm675/GeV6Ix3s38kzku8D3F+fJ985no8Nbez/klGu91qrwXoO
HnMbrP3a9h7PZ02M+Xe/zX4vGGJc8Yai+/6XAOtdXM/6oI39P1vH/f/DJek+
TNuo6PyefplxVvUNf1ZzfKLcnL///1/+C1EPKJ0=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     104.625625, 34.47875}, {98.33875, 34.47875}, {98.33875, 35.140625}, {
     104.625625, 35.140625}, {104.625625, 34.47875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdk09IVFEUxl8ZSFMKDVNuakg3mi0iCoRQO/dAFC4CXQTNEaEgsdVYS124
sNa6tVUygYtCiP5NhIsMajG1SWgWLcSFIDoRIgm16t77fXqjC4/3fvf8u+c7
77bfLg/dacqy7IB/xD8H/TOz/KtreLMkXz77dUMl8pjJk/G+XH1KpV7xHxdN
zgx7S8GJ362Mj5jcCx/PHPYfmKxNFBavHld5NOfXgsmkx7Xriv13Jo3BavFh
mVxL+aN//T9eTTzkw7bWmX9S5YM/3symSSjbdV/lQlg/Dee8q6izbbLr3ZYt
cUgzOJA45jurMhrWD0OdI4q8vl5os6/hELfKfCsOft/Yzyf2X0sc9fmY+Foo
9N7QV428lPJFfsv63x36eWMS5JvYcDjHa0Pe3w5xrwxxTYr3S/rnNIw1y15Q
vxbyc+qVV8xtkXoUqO/TxDFuIXHsr0LOc36Pya20z1HPZuo5y/53HPqe5nxW
qE/ZpD+852m/yfhbTkIbBTXMOU+9e2jfFuhzbk9Pgb2T9eYF+pwy5BmjvY3+
VwTnO0H7JYEeOYNO1cvQ8Wtpn/f8oRPnUWQ/6w66dhj8juo+x/iOxDFvt0K3
0zzvec7jpInfrRZ7FOdv4/3qp97HmF/5vx9OHPs4lDjG/SmBRXEPG+Re3u9/
7vtf8121CQ==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{112.13875, 43.631875}, {110.45875, 
     44.471875}, {110.69875, 43.8475}, {107.21875, 43.8475}, {107.21875, 
     43.41625}, {110.69875, 43.41625}, {110.45875, 42.791875}, {112.13875, 
     43.631875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}}}, CompressedData["
1:eJxlVX1MjWEUv2ltSZGEworJJF9rt8xw73veJUIz3WGj52XayCwS80+aGa4y
6l4yXG2MGmZJKCqlIl+TsKg2YpiwsqGFlOY851TP4m7v3v3uc55zfud3Pt4J
Ccm29e4mk8kNn034DMLH3hpXsj9KwJDG3K2WH1bYgD9bvID9+H/QKgAv/P9A
gsKPa2trnesEGI7bHReiAAoWvk31RxyDr57wgTgoRGHy36mBwHuxiQK2Wbwa
20s0KAmyt1ZsF1DTESrWpmvgjxdm7BbQhOa/V2gg+W1yCniXiicWjfik5Cks
/fnfUBhTMs27K2A8Xpy9XIMfocLRUicgx+VyBe7RoA3TONzE/sMKNcp3Q7OA
kRg37IPCU9Bxpi/0Y2nvh/kEo99xLzn/B5EA+ArNaBBQinlciQaKn/dEwB3M
x2EA+YmsYP+2dNbTclrAZdSl+zb7KzwswIZCuL/heD0ZjOvbAVC9gsl2tk9y
0+l+8y6uR8tone6X7BSwE9NPmamwE3l5xwzEIlknvjF7BaSg/l1Ond6JRwRE
mM3m1nydeGef4Xy/P2B7U7GAMCl0gw6SfkGtwpJv2XOFZT3XveL6X3+hU7/k
vWe+s+p14jnhU2+8ZzrVI/orn295zHx9uzmf6rt8/sXdIPvsKj6P8DRI/6oK
jvcBsazzYsRSt0ovg+OWM786b4PqE4dY2vkNU1jG+eynsPQXPsogvbrRn+zf
tgADrCj8smqd+vPqWPZfXqMD0jKPCDZIx/ZHXB+fiUa/Hidl3001BugzeKRB
/ZA6ju0tQ//Hsg6Xpyss88+Zq3Ai5mVdoLDUr2Ej65XpyfxC7Mx/2h9B/ENz
dOqnxm/cD/OvcL0/vhP9+Uv94p8qLNsnq1phGS6rmO8fvaZTnVfns/+As5zf
pFxB8Yt6++vgKUF8j6UpLPdBxXqFZf4X47geLuw/mYfdyv1XdJ7jxU7TIW+r
xevJpd55HcP87t3s7eduoHrkPBNkV/mc5yf5I/N35QPti30dbF9/CMjuZRfz
TdoBFDd8kEFz67GG51t4cD94Ryss53x3mMJy/6R787xvdjNo//x6zfvJ2cl8
y87xfqpC/eswXv4WPk9r4XkwR2nE636jgEVIfGkI76+gh7zPTnjw/YBSta/7
9OnDUv/A0wpLPj7HeV81dVpJD4dDgPwG+Lpp1J/DM3h/jvbUyH5HGvPJDtTI
f3mSgJ/IY08k72dbIte7cI4GSDe3JmHgfh6+VmFJ49ZKhWW9rMt4H7smsb8j
SxTff79HfwFLTe4Q
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ1IGYC4v5DXzViVsY6tL4O3CH33NkBxgdR/WwuDgwg
cCHWQTMGKPPA2QFEaXyIdZAHadji7LCkwJbrOmcchG50duC6vrjAVi8OIm8B
Nc8rzgEkzPXYycEYBOLiHM6eAYIGJ4h4URzEPjkniD3VcRBzdjjC+WDzfRF8
sP5NDg6HQfoy4hxsQRpUHRy+AbmHHOMc3gC90+ptD1EvBdXvbQdx/wuof6bY
wv1bLbLO/aGaLar/42wh6k7EQsQXQ/mPYh0KQRYy2EHEv8c6pIFAmR3Efm6o
fa/tIOYC7X9YBWQ02kPCRSUOok/aAWIOMLyAqqpEyhwcZs0EAmNo+F1B8MH6
zR3hfLD5Cx0h5ujHQeKP2QnqDyg/2skBxK1SgJq/AMqXgJp3HaqeD2ofgzNE
nDXOARh6rwO1nCHh+CMWwg9yhtj/Ahr/Fc4OHiANN2Ih+uZD5Q/HQuw7gkhP
sPQFAKHyGBk=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdU01IVUEUviltKmyhWQSZ2rP33p17N1no5sVXLaxcxJlAkrRFkLWxXkGB
hUpJP1Zk0CY1qHi5Cl4tbWVYbVprCq2KdgYZ9INQ1Jw5RycamDv348yc833f
mWk4fsaeqIyiaJWbcLPCzZHp77muDsLOZjeeJvB4hnCX10Mp5krFwppHhAm3
zJWy4G/xLeG1C49UxMh3uROLhGsLNFk3YTA26ka1xWcHr95K8OFiTbkta/Gs
zf1VpYJb7Ep+v3/ff7g9YOvSLJCV/IUUr7huh8U5JrIpBdNuPmrRzcS/JVK3
22KeeU8F/JHr9gXs8/026OHRaXGAiQ0asJycqxfzT2Tgy7drvoex8Nmrek6r
/paAvT87At7PeVOLU1xnQHE+5PO4SetPxaJnm8VhrvM1BqcrNFr8cLKndxlZ
GyzqHa3JY0bO1+v+PsNtjaKt6t91xVvUr/sGZ3ndrH48NqJnY8BPuM/VAXt9
6xWPGunfOsXDGl+tfvaqn78Iz1l/nd6HLyT9eaD+vCf8ZB2zeYm/0fszm0OZ
z5UJa1n3WFb4lTS+ISv+jJP6uV3i90j8ftck/gwTXnDfFjMSHyKc9MQywu+K
xlsz4scFAr+J6GUjapjA7oCX9/v+/MlLP26qnk+x3Jc7hHHWcdmsYH9+PmDf
nyW9T7eVb20i9W8Qarlukgj/IX1fB/X99Gv+zkT0nw/Y+1UM2OfrIfGVElxi
QUc0vkff9z/v/S+YxKi3
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{73.82625, 21.288125}, {72.14625, 22.128125}, {
     72.38625, 21.50375}, {68.90625, 21.50375}, {68.90625, 21.0725}, {
     72.38625, 21.0725}, {72.14625, 20.448125}, {73.82625, 21.288125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdVXtIVFkYn7ZiY+yPdVF63jtjC83cG5QkChkOh5ZMcGvxHigl3dDeL7K0
xybsoKzrUruMElQu0q4pG1uNum07WdFropePppcPSGvdICqnTaJcy0X3nN83
dZguXC6/Oef7vt/v933nTELBFmv1WJvNNka8xeL9SLzl/VnND0o58wVfu3OX
uVjf7rgGxzectbeJJzyTGbm+4PYVCsv15RmcddUVph0d/oxdFmExHo7f1zbO
YCVxDYt+S+IszS52NCQw+Uk2OAtnNetXhpzIkzuVM4csPOBggoJtnZ3ja/Pp
rL4wzb7sjYU8+W0a2yoSrQxbbI14HqdoiF/10GK5knB4OmvWy/tz7iicJJ5H
N6LxiqDFfqoWT7yG/e1nLSbS9+1epzFJ42XAIp21GniWn7QQlxSOxn9k6O+x
3P+6SgevHSJe6hm6raNu9hnKf2aCg1li+/zzFvRd9Digb1TwGXSLnTm0Xndd
YZm/vU1huT/zFumfme6AL9pdi2UIw//RKf5FB/H5818dvmd3WdBZ1aKwzFd2
QGH5TVytI663I6I3RQfPJ8JP2d89dh3+190iPW+fathfGorUv60w+hT8YP24
hu9IiPj/WkN+D4p8so8/VGmos0DUk7oXlmqYl3n3qP8JX2vwtadTYTlv/T3R
eNEj0p98kPYPPLVQ56tODfuqByzMZ0WcjrrfDlrsb4E/3qpD14lh2v+gn/rb
YePk5xoH+AXG07wOxTiBl9pp3q95najPJ9L8siYn4qtjOebg+y8T0B+XmHfp
/+G8GejnKY86T+/W32GpP1ZT51Hy97sVlm1qTeTkZx7hjckcOlI3EI5J5fB9
9k4X6qZ76Lxu8FE+bQEH7xcnXOjb6EKOuLudLiaPxbhMDl6tU9z4fVYW6e8u
cSPfthzKv8RmgPeufNJXsN7A3KWtJ//iTxnwo68o4ofTRP6JXvKvYotJ52IP
R1xsvYm6Rfs5qxR6a7pN8Cyp5eDd95LWu44pLOtcCkSvey8QvnTfBL9PrhIu
9Zuo42+jfv3iJT7/hTiT9h9frLCcjyOTFNal/ucGdKbeJL1lLQbmJtAS6Yff
QB/mXiO97ioD8U1B8v9ZmQF+c84pLHlsalZY6vWdpHzpPxp0b/3O2Xeizkit
QeexgdMcBQyq44/oCyks5ygvHI17Rwy6R/2U71C8SfdsI8XXJpqYs54mzgpl
nUzzfX3c33nRePxahXHed5jo66iIl7pflZng29pI/k3ea9J9IOp7RPrK/Sby
5B+j+f+ixgTfV0cUljo//1lh6deuAzSfe8sp/75K8ntCNmFewcHr9DQTej/1
kr4x58j/0E7q/1/zDdyD44oJO4fdwHGbOfp6KMeN/aMF6vx9+H/5PxSeLA8=

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     88.875625, 12.135000000000002`}, {82.58875, 12.135000000000002`}, {
     82.58875, 12.796875000000002`}, {88.875625, 12.796875000000002`}, {
     88.875625, 12.135000000000002`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxdU01IVUEUvtrOoNVLqoVkvLzv3ZkbkUVtHn1B8KpNvBe8U2Atgv4WqbXS
gqRFRbQwqEVaUGEuIjChhUaQpVZEtGjhD7hKohYGFWShJDZnztGJBubO/Tgz
53zfd2bqj7aUj62IoqjKTbhZ7Wbn8Gyuab6CrY1uPLLwuI1wndf9KSZ6Wgs1
uwm9bpnoicHf1mbCqAt3VifIN7kTNwmXZ0qDdb0G3V1uDBC+OnjpmsXHc5m+
4jvC46L7W5UKngr5/f4v/+FvAZddmplZzV9IMcJ15wlnmciaFEy7cZFwmIn/
tFK36iAmmfdQwNNctz1gn2/B4DiPBcJeJtZhwHJyrl7CP5EBly85Pj7f3UT4
fFY9zap/KmDvz3jAezjvB8JJrnNB8fuQz+O3Wn8oET1vCAe4zo8EnK7wmvDL
yR7eZmR9RVjvaA0eMXJ+VPe3G25rFI2of1cUv1S/bhmc4fU5iR/3jeh5FvAD
7vNAwF7fE8VdRvrXr/iqxh9qf06rn/cI/ay/Tu/DDe3PHfWng/CbdYzlJX5K
z4/l0MfnyoSVrLs7Fn5Fja+OxZ+dS342SHy7+j2+UfxJCU+5b9+zEo8JJzyx
rPBr0PiOrPixjsBvInqxARkmMF1Zxkv7fX8W89KPTarnUyL3ZQvhNuu4aJax
Pz8ZsO/PnN6nzcq31kp9S6jlutYK/1jf1z59P/Wa/5AV/WsD9n5lAvb5akh8
LVmcZ0F/KhLfpe/7n/f+FyITtBY=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{96.38875, 21.288125}, {94.70875, 22.128125}, {
     94.94875, 21.50375}, {91.46875, 21.50375}, {91.46875, 21.0725}, {
     94.94875, 21.0725}, {94.70875, 20.448125}, {96.38875, 21.288125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}}}, CompressedData["
1:eJxlVX1MjVEYv2nZfFwTmTK7ee/ne19ftZg/qB2Z1TB0aTunmtEoQ6uYMdps
kjFUaigfQxp/ZCW1uUvlM/kIMyPfYhQrE4l8zJznea57Fnd79/Y77zm/5/d7
nuc8aamZnhWBJpMpQD6r5DNAPnmdCd7tizgLqYx7tWmGxtLkz7Pah2vtbHDr
iaydaxW+3dLSUpjNWXa0/LLEzmA5ROJwSdQ3uj/e2GbzYzwfa2MpBZd7523g
TK5WdlyyMq8lr7MhlzPQ0bjEivsmFXI89+WnhuurjnF2pVdPKbipoZ7sWoWB
L6RZYWnJNOMBZyAvq09jX+Vy+wvOouC32Mq6EryWve+If/EZK/pN+8CZWxIl
jrH5cXlW9OBpRQpDnHjpB3yN7ST/NpedyWV9Rzv5aU6zY/zylxx1Rl+zI+/U
25x5pNG5GQ5ar+Lo+1OyE/nOHOcsXhIMa3FivN8lhOeHu5DXtY/2Vye68Pzz
fMrnwSoXnvfu4uiryaz7MfiPyFI4Bg6a3ag3vpgz+Ur5WOxGH+llHOt6OtDA
PBZXk9/r6wzcb2qifLRWGAzkVz5TGPTWvVEYdC7r4ky+Eh6dNJC3vIf0Pjls
sM3yD63PF++AgbpnmwR+r8szUO/woQLXg9Lp+4eRAvfP89D3KaGCQbjAOIr3
VmLQZcw2MM8Xxgg2RZa7OJb03Rkr2GuZx7iZBvbDiHCFQc97q8LAF+kUmK9u
yQ990qULPBebaKDOs+OJvyfVwL4aOVlg3u5uMbA+5ijhz8fB0tLSsOmiX34G
OQTq7LxE9Yy2/I/h3TBQ92PwvyZGYeD9vlJh0JXUo2O+9oT6/C93o/4JZtJf
Vu/GfmoNIH/DR1G9Oz5zv3/QkdymMLRP/j2FIVx+E/XTQouBfZpUz5E/9ZEb
/Tlq6L7dL6L+2lXJUa+IVRjuRW+77scQt2K/jvUorab7GTJHx/6rPUfxIgJ0
zOPdBt9+rwv1XbtF9//jLBfGPfSK47lfZU70m/mN7mf6ACf29bYgqteCXAfy
PR0i8FyNw4H5ixxB9Rp9ne53yihB92m5wnDPTT9sfgw6LFtt6CsjmPZ3m2ne
FQ4SuL7+iBXPXQyg+omJVvye85XTnHmoYT6aO0j/4RKaX5bHvvucTPMt9Iaa
13/z8xdD/sOqFIa45lO++TFLwzwUHOXIM86joY7gEsrf5KW0f/1u0uPMJf76
HJovQec15PXI+Q11Wtakoa6ra/vP5+BMhaFfGtMUhjzFLPXN40PEV5Ss9P77
/+gPGjLP9g==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{66.65625, 2.25}, {
     67.25, 2.25}, {67.25, 23.}, {66.65625, 23.}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{102.5625, 2.25}, {
     103.15625, 2.25}, {103.15625, 23.}, {102.5625, 23.}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}}}, CompressedData["
1:eJxlVFtIVFEUnbI+Ens6ZB/iq5diojFn7r0fTZzKR4/BcnowHccH+RpNHU1K
fKRUClqklOG7TLLHlEiF0tjHZBqEMRISaH0Y+NEkKf3YRKhE9+w9eKguHC7r
3L33WnudfW7oGZspy0ej0axQV7K6VqrL0jjsiY1hNFt9JLtMVRjeqjDalzBd
nvlLpsUG38mAA4zyuDq9QtUUzZujDPbvpSsQX2RhtHY2yeG8plB1t2hfPoN9
Y7cCcXK1wD1FBt+m5r9x9SNGD06Xa/suY/xiP6OOoNrZ4jiF6tTnrJMB71CA
QrWqsLAR1DPjlpfxmMvlmnsu8FySIyguRaYV6sbgAKMjnnDLq1Uy8LjbGTWp
BMl2CfI6exnoXntdourLsOkl1ndkSuBL/AjqS42R6M9wS2O5i4EunyU95TZo
xxm8jzkFhrxSgSPUggMb9TRYNUo7ivWcg4Tytv0HUV+ajaBfPfj9zjoCdX7X
oj7DZx3E5aQKzP2bPCww11VtYKDTNKODemkS+lO5pAN+YzSDvIcbCMQNR+J5
kx0Cc/+2GwRub2trO51IoE5+FPIVpBDw93UM9p+eRyAulKA/V0qxv53eedJW
EfD9wx6BuQ4bFZj3uzkW9fZWYL3RBOSbukBAl0Htl9f9WkLQx6Po7xcrgTpG
M36fPElgLt3pqH90P4G5+5iN52uVsZ+QPO/56JD/nA35/aLwe+B5Br45IgjM
YUiFwJy/oV5g7ldYM/KVUYK67+K8LxUQiGt9gvelqoMAr+cp9n9iXGCed3G9
fhlzXo0B56eyD/MTc/UQV29HvtxbepjfifvefvsRv+vGfoxjGJ91G89nfkoP
dfa2IPb3IN+nBgb3aGENzrtUw6DO40AJ5q+pzDsP0RKch72QwRw8UySYt9IM
gXlcm+V/zM/9rQnv1/cc77yYsd6hEuRbsEqgx16F/u2qwXjfq9772IV8R27i
vK4ekmC/sAX5Qt0S5HV2eu+Hnww8ui70e5skMK87kSEw99nahbipHf9Hl94j
Pn4D9W79IUMfwXWM8ms4v0UBPx9Uol5LpAJ9fCsUmMe/MAvMde+Ox37Zogy6
zDLqOdUh03//z38ANtRrQA==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{52.46875000000001, 
     26.9375}, {122.84375, 26.9375}, {122.84375, 27.53125}, {
     52.46875000000001, 27.53125}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxVU11Ik1EY/kxqsotuNoOE/ijct+98daOCMWZvfacWBP1YQcVGuX4uulgz
iMq86BfsIjf6kw0kaEYFMWRdNLwonYKKX6AEmVipFaQmReAEKaFz3nd56oPD
x8P7nuc87/Ocsy58pvZksaZpRWKBWEvEmtODMWfagmQikZj/xUDiji0cLrnT
gYkjJtT7ncO+Yg5rbnzbl3V5YTgV9W+r5CDLDWcNiOXyun2MgzcYy507wZBn
pImDgPknUwz7kg848qyvMqFU4LKM4pf9hzv/x4l+heW5k4PEf3Cvif/tbzlI
OTU+EyrElxrlMNHgTnvKTciuFpWPHP/1DoWdQviqMbaIka+FwSnxNY9wqBEN
g7sZdOf1oEOct1MQNi9leM6OfuL7aRuoJ/6K5km10/xfMgpLf64+U1jOUfSY
o05XB+G6h4pP4q7WwvljBvZ9TnKIC973vw1oi/qdvQkO0m73Boa+Vgssc8r5
GO6fb+Goo3EXk7FqJffJv637CWfvFPwKMfRhIU5++MMM53l3S2Epe+1NhSVv
23XCrSHKM3yZcOgA1d0Xyc9STn4ui9D8x1fQfdh8lPIJDJA/0wGa5+4hA+tP
N9H+qh4v9p13cagVBrHlXrp3jkK9S6e8Fyzy87SO9eq8hed1l+joz4UpC4Ss
4I9rHtr/iforKj2ob27cwpxjKz00xxsLfdKgHHOP3Fb4bz/mE6U8HNMW6vw6
axDPdwte27Y9s4ctYrl9/IrCMs/Ge3SfIjMWRKXeR5THxkkLeV9kKN8moVf6
XNZDfjtHid+2Gc7xfEhhqaN3QGHJ96GTsNnH0OfZ9oK+l/S+/33vfwAsJLvo

     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/bBKZF39ZFeHR0DaXVHf4U3gDrmz8xH8mP5DXx1W
uToYA4GwgD6Yvr3J1eH64gLbVW/1HLiAjNLdrg5AoxgWnNZz+KYB1LHf1aEa
qH3hQgTfA2RRPoKvCaRM7fXAdCxQfxoIiOo5AK3TmLIJYp7DJ12wPY9WujrI
t74OrDivCzanDei+de5Axj5dB5j7Yfwdcq2vPdsRfJD+UzUI/bZABzOUIMwH
Cu/wy0bYD3LP1zRU94H4MPfD+DD/AamHTtkI/4PC724xInwOf9WIKa9BhB9I
PVM7InzRwx8AYyCkyw==
      "], CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQIGM10dri8usO1K1HEI2iHXOtvJ1aH1deCOe/PV
HTweVonY2bo6iKxzf7jLV93h8FeNmH4rV4c3gUCFMgg+F8gAHgS//9BXDZlf
amBznlm7OoDsUXitBlY31c7VIQaowOO+Glidi6Orgy1Q4sJlNbC5pS6uDkDr
qkTOqTnIAw3Q8EDwZ82cOTPTB8EvBGrsDoTwQ66rOSwpsOXqD4fwr7yE8Pen
uzpUAz2wUFYdTBdWQPnp6g6aQIcs7YSqP67uAAsPmP9B5k9udQWbc11T3QFo
67r6PFdwuKw7pgYOr8/BrmB1yWVqYP+HO7g6GANBsRXE/RN0IeFXJaPmkAYE
86QRfJC59/kRfJB6BzZXsLnaWmrgeDn0z8Xh7JkzZ3pcoeH13QVs/7sESHi1
fnYBu0u9GcEHhZPlGgQfZJ73VTWwunSgflD4Z0irg83V+e/iAJR+PbEOEh6p
ZhD/MLdrgdWL27uC1b1h1QbHU4GzK9j8ylAEH+TOVaUIvh2QntCvDY9fkL8q
lmiDw+W1DST8E7dog+1daQFJDyuOaIP9dc0IYt+ZM9pg+/O1EXwQHaKKyp8j
4erwDZjsmo5B1LuzQuLn3U4EH2SP4T9tB/T0DgBk3Egk
      "]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxVVH9IFEEUvhLUTETjKos8tR+7dzdmYX+ohTVKNytkpIJgckYJhUXUCYlm
JZlogqRCRJ5Q/WEaFVwGBmci0sVBwlmWipRhGZqmhhh6mCI2895xkwvL7jf7
zXvve9/biS24nH02QKfTreP3SX6v57feoY1eqGD0mnjJi6MzWU5DVDqD53ia
iR7g1/ANRh/bUkJKKsy0yW6397QyKujbcwiNrprOmnQxejhkqLmvi1AOnYZv
jJ7jV7USB+uZSzJ++miZvlyvrcnXslPiXo/HkxGvwbpFw+/FiRqsh8YgfkU1
ytllA4sEcI4F+W63xKKOkWqJTdZ6V/ERQnl6R3SqBnru/zBD3PYkjXqN1vo0
m5mm8HobAjR4Zj5Sod6wZUadhqrpl8dU4Hu8iD9GSiz4bYES83QLhV4F6gxd
ZJB3YlKhRZxYy/sheHEjCvR34wrGK+pX4NmxymCf/r1CuUW6xvWaH2/mLwWB
Eov90yEaHWq2pTwbVCDv/nDUOzimQN7uGNTToFfp2wWjdV8C7r+Sr0L8m0ex
/xXdKvjmyJL6xfr5ROxXyQbcf9ugQZ6ahwrwgoM09PuUAvynXL/of3mCQjnN
OD+B81K2A7//+iKx8OdOn8RCf/I7BnV9N2L9s28Y6ktFflcnA939edjPZicD
nxzXJRbxDj6RWPh766uv3i4GOmaTVYj7yc38+gWe+sP88yB8uriM8V67zZiH
+yPiVgYTP+ZhbQ+SJBbPuhME53QFcVgBgTyxS8iPsiH/Eu9XNhdeW07At/E5
zO+qwv+rZkZikffumMRCT+Qwzk9EKf5/W/rwf2yzEtC5tdOnx0RAR1oLg7i5
A2aox16H++fyzcAPKsV+T02YYN10GudxPtMEvus0jB9uN8JcvEhGv2KSjKDr
Xryvv70q+N++xzcPeSqcH1fDka+jCsxNa5/Fj0Wdmwyy/8LnXSqeJz//mqFP
zwnW35hB1uDcQonhOKkkkD/OxCDv5yYC9e3djXoGHATismis94PLdz5sw//T
40G/OiIkFvN3PExi4VdOMOYv7SE4l6sWfzyYm1kLxDnTjvUd+m2B9SUvfv//
/P0HjV5jTw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {CompressedData["
1:eJxdVG1IU2EUHhYkIhlm9K3Ou+3efZD0AYZNfSnsfU0IJmJUkqmoP5LSkAIr
MSOcBU4jdTP/1EwFYVBSqYyUSYWytCKVwMgJlujEj6gsS7rvOcOLDsbLc885
z3nO85571TmX0vKCVCpVhvznZ6PD4dCbU0hn5O0Zy7yRRMnHu9gUODsTjaS5
KCHk1wxbxWlyYuocI77SCNebICPRZ9o8P+YZ4TxdA4ZVzOSE6noF58u/1xsN
UFc5EeCr0ANf+ytGihNCRnO36Al/fK4Z40tWCXgdVxn5KWXajiZLRGaTMpMU
/Nbr9e5RM9B5apdE+uRwQQgjo86iBMOMCLxHlinUuV+IkJf1HbH5sUjksLNo
joLeffcUzP2oLVMw9CsQ4XnVItb/tYjERX2l7iUKul8mIv/cCiXXIlz0plGE
vOuhjPgtnZGT21FPrhr1TW8QYc7yEka4TW3PdODTSWdgviodzuVBv7+l66Cu
8T36Y9+B+fXjGG8d04KeiCkGvg83KJjzxZxQMNdxbFYD9Re/YH+rXQP8MYMM
5lxI1YAvI26G864IwHvDiXjMI8CcOyswv7ZBAH7veeSbuiCArk1mhn0zBCKn
+wa2KpjzJc/TVczve2GIQl53vgD6Bp9S5LEK5KD8a6+juFdtAtz3UHkgfxj5
40so+rYZ52spQP77xzW4P9kU965cwfxscisY9Mj+cL4DedivLkoLvo8XUiK/
OqrodC34c6UE+VKtWpg7uIxC3/wOxPYqins0rMV7rMH412kt6Axrxf2aiMT7
DvNS2Je8Yh30i+5FPYce6IBP6kY92/oVDH2XFQz7oBdBf04Phfck9KwIezrS
T4H3sE2E+875iP09fSLM89yPfpb+w/iHcAb3nG2WwH/jIsb/nJagT88n5PfX
ILb1o/9xPsRZXejX+H49YPoE6+PvKhjO2XXxagPwDHko7MXvvfi9+TxJYX9v
NRnBF38wg/6Fu01Q9ygO9frOmMAP1WUFc/7YyrW40o74oQXzg1sQq5NMMP+d
jkDcZII5pnoZqeF7Em5a877w7+f67+l/fZpdTA==
      "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQ3fo6cIffag+HWTNnzqx8puUA46cBgZu9tsPZM2fO
vFni4fAmcIcca6u2Q0z/oa8aMzwcNIGMrdsh8jXdEPmjr7Qdri8usH1U5QEW
92HRcagWWecemYbgg/QLuCH4IH252hD70o5qg83NFYO4Z6a7Nlg8j9HDIWiH
XKv2KYj73n1zd7Djur7YwB3BB5m7Yp8mqnymJljf4r/uDt80YvqdlDXB9vFy
e4DV3XujAabLJCD23dymAbZvn4aHw5ICW67rszUcQN59Yo3gP6wSWcfvjeCD
zFsb6eEAVBbzfrWGwzr3h1V70j0cgEHLoHBGA2z/41IPsHsCgPaBwudSowfY
nHYJTQegKYs7YOEXAHF/2FQPcLgldmqCzRGY6+EgD5SIuKgJNn/LIg+wOas0
tMDmFqzwcAAqfxjVgIg/kL4F+xF8WPwCAOpX3dE=
      "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQzXV9ccHWO+4O3zRi+h85qzm8Cdwht/aou8OSAluu
7xJqDiB52y3uDpox/YeuPlR1SAOBFe4Ora8Dd9TNU3U4/BWocY67A1D664ko
VYdCW6COaRD5OAkEH2gVg8N1FTgfZKxXl4rDDrnW157z3cHmLvNScfB4WCUy
bYO7wzr3h1UhEioOIOUeJ90dzp45c6bngrKDMRB0v4XYt2KNMthdsbIecD7I
Pe1uCP6smTNn7sz0cAAau+74CWWwuV/aPMD+ZGVUcTgEVK+/xAPsfydLFbA9
ZzZ5gM0NbULwQf6xu4PgV4uscz/IqQrx11oPB6B1GndMIOGjtsgDEi6xqmD7
VKZDzW9TBbvLoMkDrC9hOSR8vJMh7nt+QBXs/7IgD0j4n1MF2zNTFaJ+wS9V
B/T4AgDS3cVV
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}}}, CompressedData["
1:eJxlVD1oFEEUXmMhxjYpFDyNVdRCYgK3v8MTd262vRSKcIgI0Uo9sRCioCDn
X3NWgraJ2p1YiFeIiBYpjKIIHmKhJwqSWNj4U1g482a/txAHjr03N/O+n/ft
TRw9NTu3PgiCEfuZKp+3b9mVFfR5fqxnmgmhbnWf/ZxcTmhbZ7XZnyroe7Nf
6+xLaaf7YXNBN+zPrQcpTbs1UlAxtA0mMlpsZ6ODT4YGC/ZLJ6Nztu3woSE1
anc+ZP7cdUOuzGYUBW4dMn7/rPL3txv6NWmB7iiatbCr3xp+/63y93oN33dF
0ctlu9pV7Wi3pqv6uS27f7TcP+bWUy393bH5q1rwGe+AFn6sf7cW/nwv0KKP
+33MRf9pC7OwlIs/zON+Lv6x3sVc/EUN/1Fz33ex3GedR2Lpz7x/RILP+xcj
4cd4WyPh7x61pVD0uUfzZCj6GWdXKP4w3t+6+Md9XtXFX9b7qC7+o8Z8UGN+
uI/5oj/mD3zkA/yQH/BHvqAP+YN+5BP+IL/wD/mGv2vzz/3X/V+zr19jP/ff
hhydzoWYHGx7aMjZ0q3F/vwLQw5+7Enk9fTK/B8v+V0znu+WyOufM57n65Dc
cROXftwMPe+Npf4ToZ/H+/J92B963LsN78OeUOaBmvkmVc3z2FDdZ14DLf35
3D0t+OzPeS38mPdBLfy5314t+tincS36Oec2j/CH+a/k4h+ft/mFv6jhP2rW
9TiR+1zvSKU/n7+UCj7n8Esq/C47wCQT/rx/JRN97MebTPSznk1K/HFx7M8o
8W/cCTysxF9+389U/0eoMR/UmB/uY77oj/kDH/kAP+QH/JEv6EP+oB/5hD/I
L/xDvuHv2vz/A1X1opA=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdVVtIVEEY3i0jMiEqCwsyuqIQkWfWVUPXOYtnZpEi1Ad9EAPpgg95gcJb
2EOJBIIZhG4PUqxZQvhipFEvKkmkRRdDJXwwTIoMIcjsJToz3+8Z1oHD8J3/
9v3f/HPOgcqa4vMbfT6f330a3GeD+9TlJU7HXgn+ZtJd93L5Gu4Y/Z1WPpLt
YQU7GrLwfkzw3lrXUBNE3LDgTK2HmXypaDi1dVDw6ZjrkJ8J/wHB3bc/ihYC
2PvJ3hXg803JA7JX8ET1ojCAej0C7/0BfkGtbsHLVaIXDHXbBB9TfATjxSph
o0DcioW9WiBu0uLNbpr5SsEjKuF9iyvYVCq4y2I49ZrFlXvtKcH3qxfnLPDI
F9ynlrDQTzr1f8wCr62UP8UCj0UHdXwW+pp0kP93BvI+N1jze2Cw1u+2g3r/
MqDjdYevuGlHtxG/egd977GgQxXhDAv6lpF/KfkXOtCl3kI+24FfF+mT63Al
Q/JT0idI/u8t8AiQfclg3WcC87DmXcygR9iBTjfpfCoc9P2I8XRFuJHsLxni
2qneR0a8DL4bdVe/wXpenlH91wx5xqn/IYZzfUt8+2gepqjfKMN5zjrw62TI
M2f4aj0XKP4qw/n9pPgqqvfXQZ4Ig36baJ6yGOZgu8E67vA6zOh+XCL/EM37
DMMcOOSfE8B8Rui+DBiseQYzPaz95wzW5zIe9LDOu5wVH783x8O6z50nPazn
Z9bggOJ7JS/e/jnkYc3fz+P5XDZYz9Unjn5LCB+yEVdF/hU2eLZQ/m4b59NJ
9UcIx6i/GRv7EOX7ZWOfEDinzWHo/EVgDnaFkXeV7utBsu+QXI1PLC2MuOMG
6/MqMDikCJdKzOVRyndRIs7Np+s0S8z7vjD6b5eotzuM+xiV+H4khTE/fWRP
ID5PJPT4Q3qMkn3RRr4JiT6nbJzjOwldRgzWPB8brOOiNuqPk72V9BuUmK9a
qtcj6T6Tf4vEfBTYuL8lBut7l22wrndEYj9tQ48U4n+W8iVJ6FZtQze/xPk2
UvwqfX9bbPgtC/C/YUOv7/Q/arPB86vBev9g8Nr/SutVZ7DmJQy+pfy/8Xj7
HYP1eZ8xWMnUusVgfG/yPaz1LDNY93UiFG+P5PH1/9v/DocpGw==
     "]]},
   AspectRatio->Automatic,
   ImageSize->{231.6484375, 87.},
   PlotRange->{{0., 125.}, {0., 47.}}]],ExpressionUUID->
  "b6f65f65-0c91-4555-ba26-3aab01e9899b"],
 "       (eq. 2)\nWe will use the  Integrate[ ] function to integrate the \
function dB[ ] with respect to phi (0, 2Pi) as shown below: "
}], "ReadText",
 CellID->727041850,ExpressionUUID->"07e67f25-bc98-450c-9078-6d2a5856ce84"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"current", "=", " ", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "3"}], ")"}]}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"current", " ", "in", " ", "amperes", " ", "A"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", "=", "0.3"}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"ring", " ", "radius", " ", "in", " ", "m"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"bField", " ", "=", " ", 
  RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dB", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "phi", "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "z"}], "}"}], ",", 
      RowBox[{"current", " ", "*", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "a"}], " ", 
          RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
         RowBox[{"a", " ", 
          RowBox[{"Cos", "[", "phi", "]"}]}], ",", "0"}], "}"}]}]}], "]"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"Element", "[", 
      RowBox[{"z", ",", "Reals"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728465002905655*^9, 3.7284650341209183`*^9}, 3.7284655073738203`*^9, {
   3.72846618546725*^9, 3.728466188738926*^9}, {3.728502393114779*^9, 
   3.72850241587824*^9}, 3.728511444148967*^9, {3.7294554650722313`*^9, 
   3.729455520732237*^9}, {3.729455559108102*^9, 3.7294555774223833`*^9}, {
   3.7296263591425858`*^9, 3.729626380565785*^9}, {3.7296264143112087`*^9, 
   3.729626437838457*^9}, {3.729626500249022*^9, 3.7296266083772097`*^9}, {
   3.729677453831415*^9, 3.7296777114484158`*^9}, {3.729677776950893*^9, 
   3.729677794889385*^9}, {3.729681191002749*^9, 3.729681194623707*^9}, {
   3.7296814641087847`*^9, 3.729681464632536*^9}, {3.729681496064589*^9, 
   3.729681496588151*^9}, 3.7296916637314987`*^9, {3.729691699643197*^9, 
   3.729691787156858*^9}, 3.729694923834242*^9, {3.729695255479906*^9, 
   3.72969530276124*^9}, {3.729730745470484*^9, 3.729730764397192*^9}, {
   3.72979347756826*^9, 3.729793481724615*^9}, {3.72979352751145*^9, 
   3.7297935309212008`*^9}, {3.729811672172024*^9, 3.729811674427041*^9}},
 CellID->866730242,ExpressionUUID->"26b76c01-ca93-490d-a346-03840e5cdc02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", 
   FractionBox["5.581129802453967`*^-7", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"9.`", "\[VeryThinSpace]", "+", 
       RowBox[{"100.`", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7302881092323313`*^9},
 CellID->1077906709,ExpressionUUID->"b9ce2a06-624c-4b18-98b1-fd4f56417f0f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note: \n1. ",
  FontWeight->"Bold"],
 StyleBox["We did not include ",
  FontColor->GrayLevel[0]],
 StyleBox["d\[Phi] ",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["in the third argument of dB[ ] because  ",
  FontColor->GrayLevel[0]],
 StyleBox["d\[Phi] ",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is already considered in Integrate[ ]\n\n",
  FontColor->GrayLevel[0]],
 StyleBox["2. ",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 "This is the magnetic field at any point along the z-axis. \n\n",
 StyleBox["3",
  FontWeight->"Bold"],
 ". As discussed in class,  the magnetic field has only a z-component due to \
the axial symmetry of the problem."
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.728613154817687*^9, 3.7286133439321136`*^9}, {
   3.728613400699663*^9, 3.728613758729455*^9}, {3.7286137920328693`*^9, 
   3.728613810954376*^9}, {3.728613843255378*^9, 3.728613863370715*^9}, {
   3.7286138943860826`*^9, 3.728614093779767*^9}, {3.7286142497904587`*^9, 
   3.728614250523172*^9}, {3.728614410188237*^9, 3.72861450760599*^9}, 
   3.7294555951583357`*^9, {3.7296918170499077`*^9, 3.729691896841354*^9}, {
   3.729834433316515*^9, 3.729834537316489*^9}, {3.729898918933669*^9, 
   3.7298989322098093`*^9}, {3.729931132920393*^9, 3.729931241789757*^9}, {
   3.729934741408196*^9, 3.729934743296155*^9}},
 CellID->411889428,ExpressionUUID->"bfdcd312-c045-49e3-aa96-50765c85a408"],

Cell[TextData[{
 "The z-component of the magnetic field can be obtained doing the \
\[OpenCurlyDoubleQuote]dot\[CloseCurlyDoubleQuote] product between the \
magnetic field and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["k", "^"], TraditionalForm]],ExpressionUUID->
  "050cdeef-05f5-412b-aef9-c9b6cfe9f797"],
 " :  ",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["B", "z"], " ", "=", " ", 
    OverscriptBox["B", "\[RightVector]"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"56211ba7-1be5-4154-a097-1d5867062478"],
 StyleBox[".",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["k", "^"], "  "}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"70fe4cc2-eab8-4c7d-9df3-12f9e9d695b2"],
 ". \n\n",
 StyleBox["Note",
  FontVariations->{"Underline"->True}],
 ":  To obtain the z-component of the electric field we can also use:\n\
Last[bField],  bField[[3]]   or  bField[[-1]]\n\nThe line of code below \
calculates the z-component of the magnetic field along the z-axis:"
}], "ReadText",
 CellID->210421520,ExpressionUUID->"442825b9-7f79-4875-8967-89cd69503b70"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bFieldz", " ", "=", "  ", 
    RowBox[{"bField", " ", ".", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ";"}], "    ", 
  RowBox[{"(*", "  ", 
   FormBox[
    RowBox[{
     SubscriptBox["B", "z"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       OverscriptBox["B", "\[RightVector]"], 
       StyleBox[".",
        FontWeight->"Bold"], 
       OverscriptBox["k", "^"]}], "  ", 
      RowBox[{"(", 
       RowBox[{"dot", " ", "product"}], ")"}], " "}]}],
    TraditionalForm], "*)"}]}]], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728466290265464*^9, 3.728466329751224*^9}, {3.728503496168256*^9, 
   3.728503497810693*^9}, {3.729455855396525*^9, 3.729455873946787*^9}, {
   3.7294559040739117`*^9, 3.729455911423382*^9}, {3.729545841800006*^9, 
   3.72954584308055*^9}, {3.729545881904354*^9, 3.7295459049369717`*^9}, {
   3.729545937283504*^9, 3.729546003942758*^9}, {3.729546048864629*^9, 
   3.7295460493932753`*^9}, {3.729695349571019*^9, 3.7296953986621933`*^9}, {
   3.729761326727859*^9, 3.7297613435878057`*^9}, {3.729761620926407*^9, 
   3.729761646965126*^9}},
 CellID->1635162056,ExpressionUUID->"77f81681-1857-444e-8d51-5c5623532347"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"bFieldz", ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728466290265464*^9, 3.728466329751224*^9}, {3.728503496168256*^9, 
   3.728503497810693*^9}, {3.729455855396525*^9, 3.729455873946787*^9}, {
   3.7294559040739117`*^9, 3.729455911423382*^9}, {3.729545841800006*^9, 
   3.72954584308055*^9}, {3.729545881904354*^9, 3.7295459049369717`*^9}, {
   3.729545937283504*^9, 3.729546020462139*^9}, {3.729546052083379*^9, 
   3.729546065861442*^9}, {3.7296953928080387`*^9, 3.729695419743565*^9}, {
   3.729811692649351*^9, 3.729811707526836*^9}, {3.72981189850733*^9, 
   3.729811909738428*^9}},
 CellID->1083424221,ExpressionUUID->"b581fe01-5af1-4587-a8e9-34d5b80bcdb6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
zeDKVQoVpZYJTHx43Qz+bx8G/f8+zP8AcJq7Yg==
       "]]},
     Annotation[#, "Charting`Private`Tag$5729#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 6.747411751460035*^-11},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {6.747411751460035*^-11, 2.0670818468112085`*^-8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7302881093795013`*^9},
 CellID->2108661844,ExpressionUUID->"c222a135-e156-46ed-ae17-7d11f721669c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 " that we have used in the Plot[ ] function the option",
 StyleBox["  \[OpenCurlyDoubleQuote]PlotRange\[Rule]Full\
\[CloseCurlyDoubleQuote]. ",
  FontWeight->"Bold"],
 "This option uses the full range of z to plot the function. This is because, \
when the radius of the ring is smaller than one, Plot[] chooses not to plot \
the \[OpenCurlyDoubleQuote]bFieldz\[CloseCurlyDoubleQuote] function for the \
values of z close to zero. Using PlotRange->Full we are able to see the \
complete plot.  (Try Plot[bFieldz, {z, -2, 2}] without the PlotRange option \
and you will see a truncated plot!!!!!)"
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.728613154817687*^9, 3.7286133439321136`*^9}, {
   3.728613400699663*^9, 3.728613758729455*^9}, {3.7286137920328693`*^9, 
   3.728613810954376*^9}, {3.728613843255378*^9, 3.728613863370715*^9}, {
   3.7286138943860826`*^9, 3.728614093779767*^9}, {3.7286142497904587`*^9, 
   3.728614250523172*^9}, {3.728614410188237*^9, 3.72861450760599*^9}, 
   3.7294555951583357`*^9, {3.7296918170499077`*^9, 3.729691896841354*^9}, {
   3.729811829166995*^9, 3.729812137725849*^9}, {3.729812456462985*^9, 
   3.729812569923917*^9}, {3.729813534797145*^9, 3.729813558137896*^9}, {
   3.729858474512301*^9, 3.7298584945680027`*^9}, {3.7298590647159233`*^9, 
   3.729859065305731*^9}, {3.729859130122538*^9, 3.729859180461463*^9}, {
   3.7298756606485558`*^9, 3.729875661386511*^9}, {3.729875710391086*^9, 
   3.729875718944042*^9}, {3.729899082865007*^9, 3.729899106185319*^9}, {
   3.7298991558694763`*^9, 3.729899156481062*^9}},
 CellID->1776836798,ExpressionUUID->"7d314d01-a4bd-4bb0-a7c7-a08f43b5f8e2"],

Cell["\<\
The plot shows a symmetric z-component of the B-field with respect to z=0, \
with a maximum at z = 0. We can check this using FindMaximum[ ]\
\>", "ReadText",
 CellID->1796403678,ExpressionUUID->"9dd133c0-a838-41c9-abf8-8681bea726a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"FindMaximum", "[", 
   RowBox[{"bFieldz", ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", ".3"}], "}"}]}], "]"}]}]], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728466290265464*^9, 3.728466329751224*^9}, {3.728503496168256*^9, 
   3.728503497810693*^9}, {3.729455855396525*^9, 3.729455873946787*^9}, {
   3.7294559040739117`*^9, 3.729455911423382*^9}, {3.729456489810505*^9, 
   3.729456591390326*^9}, {3.7294572776000767`*^9, 3.7294573202955427`*^9}, {
   3.729457370900804*^9, 3.729457397959752*^9}, {3.7294581669045362`*^9, 
   3.7294582256451*^9}, {3.729554929921885*^9, 3.729554936083613*^9}, 
   3.729555324554101*^9, {3.729557024104142*^9, 3.729557146929554*^9}, {
   3.72955739634711*^9, 3.729557406459663*^9}, {3.729557576897826*^9, 
   3.729557578060405*^9}, {3.7295576861935997`*^9, 3.7295577576006403`*^9}, {
   3.729557860548238*^9, 3.729557922472046*^9}, 3.729558031271496*^9, {
   3.7295580698275967`*^9, 3.72955809272062*^9}, {3.7295581531117067`*^9, 
   3.729558219824678*^9}, 3.7295582816880627`*^9, 3.7295583200562353`*^9, {
   3.729558352276363*^9, 3.729558416888636*^9}, {3.729558448625147*^9, 
   3.729558533102365*^9}, {3.729558564819624*^9, 3.729558690765477*^9}, {
   3.729558722257391*^9, 3.72955872522358*^9}, {3.72955881340658*^9, 
   3.729558839579083*^9}, {3.7295590763395653`*^9, 3.729559118437521*^9}, 
   3.729559179673148*^9, {3.72955922795779*^9, 3.729559238504857*^9}, {
   3.7296954953491898`*^9, 3.729695550928406*^9}, 3.7297308397293663`*^9, {
   3.729814812336609*^9, 3.729814857001759*^9}, {3.7298149145855713`*^9, 
   3.729814935199992*^9}, 3.7298581821263437`*^9},
 CellID->1504566924,ExpressionUUID->"e576d523-b05f-44e7-9b40-326331053e81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.0670851120199877`*^-8", ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "2.3877827523771325`*^-11"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.730288109502496*^9},
 CellID->1187558236,ExpressionUUID->"7a6ca7b7-42a9-48cc-8fd1-9d44a6c7fa00"]
}, Open  ]],

Cell[TextData[{
 "The second element of the output list of FindMaximum[] is",
 StyleBox[" ",
  FontWeight->"Bold"],
 "{",
 Cell[BoxData[
  RowBox[{"z", "\[Rule]", "2.3877827523771325`*^-11"}]],
  CellChangeTimes->{3.729695584922333*^9},ExpressionUUID->
  "d2a243b6-fe98-4e36-a410-c0e92b155b67"],
 "} , which is approximately zero as expected"
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.728613154817687*^9, 3.7286133439321136`*^9}, {
   3.728613400699663*^9, 3.728613758729455*^9}, {3.7286137920328693`*^9, 
   3.728613810954376*^9}, {3.728613843255378*^9, 3.728613863370715*^9}, {
   3.7286138943860826`*^9, 3.728614093779767*^9}, {3.7286142497904587`*^9, 
   3.728614250523172*^9}, {3.728614410188237*^9, 3.72861450760599*^9}, 
   3.7294555951583357`*^9, {3.7296918170499077`*^9, 3.729691896841354*^9}, {
   3.729695571890891*^9, 3.729695660162862*^9}, {3.729814896728037*^9, 
   3.729814896728162*^9}, {3.729815051752287*^9, 3.72981505175242*^9}, {
   3.729899204983169*^9, 3.72989921461588*^9}},
 CellID->795095766,ExpressionUUID->"d6dfdea6-8884-42db-8ce2-cd907117812b"],

Cell[TextData[{
 "Calculate the derivative of the z-component of the electric field.",
 StyleBox[" ",
  FontWeight->"Bold"]
}], "ReadText",
 CellID->684022973,ExpressionUUID->"87e64665-c516-436e-8d31-64f7544d2535"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"derivativeBz", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"bFieldz", ",", "z"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"derivativeBz", " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728466290265464*^9, 3.728466329751224*^9}, {3.728503496168256*^9, 
   3.728503497810693*^9}, {3.729455855396525*^9, 3.729455873946787*^9}, {
   3.7294559040739117`*^9, 3.729455911423382*^9}, {3.729456489810505*^9, 
   3.729456591390326*^9}, {3.7294572776000767`*^9, 3.7294573202955427`*^9}, {
   3.729457370900804*^9, 3.729457397959752*^9}, {3.7294581669045362`*^9, 
   3.7294582256451*^9}, {3.729554929921885*^9, 3.729554936083613*^9}, 
   3.729555324554101*^9, {3.729557024104142*^9, 3.729557146929554*^9}, {
   3.72955739634711*^9, 3.729557406459663*^9}, {3.729557576897826*^9, 
   3.729557578060405*^9}, {3.7295576861935997`*^9, 3.7295577576006403`*^9}, {
   3.729557860548238*^9, 3.729557922472046*^9}, 3.729558031271496*^9, {
   3.7295580698275967`*^9, 3.72955809272062*^9}, {3.7295581531117067`*^9, 
   3.729558219824678*^9}, 3.7295582816880627`*^9, 3.7295583200562353`*^9, {
   3.729558352276363*^9, 3.729558416888636*^9}, {3.729558448625147*^9, 
   3.729558533102365*^9}, {3.729558564819624*^9, 3.729558690765477*^9}, {
   3.729558722257391*^9, 3.72955872522358*^9}, {3.72955881340658*^9, 
   3.729558839579083*^9}, {3.7295590763395653`*^9, 3.729559118437521*^9}, 
   3.729559179673148*^9, {3.72955922795779*^9, 3.729559238504857*^9}, {
   3.7296954953491898`*^9, 3.729695550928406*^9}, {3.72969582444497*^9, 
   3.729695911957012*^9}, {3.729813572903574*^9, 3.729813613790093*^9}, {
   3.7298605556275578`*^9, 3.729860556128408*^9}},
 CellID->656644659,ExpressionUUID->"c7bf4065-7789-4b40-ae71-91bd79766e7f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6lU7dMTmLQH1WsVc7H//6MT//aNj/wfevZhT
       "]]},
     Annotation[#, "Charting`Private`Tag$5794#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-5.916342698805449*^-8, 5.9161683403325014`*^-8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.730288109635922*^9},
 CellID->1214317795,ExpressionUUID->"32c9f56b-8d96-4b23-9d04-9325d976dbc1"]
}, Open  ]],

Cell["\<\
The plot of the derivative of the z-component of the B-field shows a maximum \
and a minimum.\
\>", "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.728613154817687*^9, 3.7286133439321136`*^9}, {
   3.728613400699663*^9, 3.728613758729455*^9}, {3.7286137920328693`*^9, 
   3.728613810954376*^9}, {3.728613843255378*^9, 3.728613863370715*^9}, {
   3.7286138943860826`*^9, 3.728614093779767*^9}, {3.7286142497904587`*^9, 
   3.728614250523172*^9}, {3.728614410188237*^9, 3.72861450760599*^9}, 
   3.7294555951583357`*^9, {3.7296918170499077`*^9, 3.729691896841354*^9}, {
   3.729695571890891*^9, 3.729695660162862*^9}, {3.729696304948781*^9, 
   3.729696351323412*^9}, {3.7298992823128643`*^9, 3.729899289426227*^9}},
 CellID->87796949,ExpressionUUID->"adace46a-6a6f-4729-8632-299539bc4dd4"],

Cell["Find the location of the maximum:", "ReadText",
 CellID->894144820,ExpressionUUID->"82a7ac0a-f094-4dfb-bef9-d6e3a0295655"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zmax", "=", " ", 
  RowBox[{"z", "/.", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"FindMaximum", "[", 
     RowBox[{"derivativeBz", ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0"}], "}"}]}], "]"}], "]"}]}]}]], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728466290265464*^9, 3.728466329751224*^9}, {3.728503496168256*^9, 
   3.728503497810693*^9}, {3.729455855396525*^9, 3.729455873946787*^9}, {
   3.7294559040739117`*^9, 3.729455911423382*^9}, {3.729456489810505*^9, 
   3.729456591390326*^9}, {3.7294572776000767`*^9, 3.7294573202955427`*^9}, {
   3.729457370900804*^9, 3.729457397959752*^9}, {3.7294581669045362`*^9, 
   3.7294582256451*^9}, {3.729554929921885*^9, 3.729554936083613*^9}, 
   3.729555324554101*^9, {3.729557024104142*^9, 3.729557146929554*^9}, {
   3.72955739634711*^9, 3.729557406459663*^9}, {3.729557576897826*^9, 
   3.729557578060405*^9}, {3.7295576861935997`*^9, 3.7295577576006403`*^9}, {
   3.729557860548238*^9, 3.729557922472046*^9}, 3.729558031271496*^9, {
   3.7295580698275967`*^9, 3.72955809272062*^9}, {3.7295581531117067`*^9, 
   3.729558219824678*^9}, 3.7295582816880627`*^9, 3.7295583200562353`*^9, {
   3.729558352276363*^9, 3.729558416888636*^9}, {3.729558448625147*^9, 
   3.729558533102365*^9}, {3.729558564819624*^9, 3.729558690765477*^9}, {
   3.729558722257391*^9, 3.72955872522358*^9}, {3.72955881340658*^9, 
   3.729558839579083*^9}, {3.7295590763395653`*^9, 3.729559118437521*^9}, 
   3.729559179673148*^9, {3.72955922795779*^9, 3.729559238504857*^9}, {
   3.7296954953491898`*^9, 3.729695550928406*^9}, {3.72969582444497*^9, 
   3.729695911957012*^9}, {3.729696384875355*^9, 3.7296965291817827`*^9}, {
   3.729696577138012*^9, 3.729696577920929*^9}, {3.72969666703584*^9, 
   3.729696706609447*^9}, {3.729696779163691*^9, 3.729696806751511*^9}, {
   3.7297727224707108`*^9, 3.729772728721044*^9}},
 CellID->1782896097,ExpressionUUID->"330e3175-9cfc-4187-a037-94ab6944c1c3"],

Cell[BoxData[
 RowBox[{"-", "0.15000000009272907`"}]], "Output",
 CellChangeTimes->{3.730288109652843*^9},
 CellID->289480022,ExpressionUUID->"69a66053-f7c2-4369-994a-0cfbf6dbf750"]
}, Open  ]],

Cell[TextData[{
 "In the line of code above there are three operations involved:\n\n",
 StyleBox["1.",
  FontWeight->"Bold"],
 " Find the local  ",
 StyleBox["maximum",
  FontVariations->{"Underline"->True}],
 " starting at z = 0 using ",
 StyleBox["FindMaximum[ ",
  FontWeight->"Bold"],
 "derivativeBz, {z,0} ",
 StyleBox["]",
  FontWeight->"Bold"],
 ".\n\n",
 StyleBox["2.",
  FontWeight->"Bold"],
 " Extract the ",
 StyleBox["last element",
  FontVariations->{"Underline"->True}],
 " of the output list calculated by FindMaximum[ ] using ",
 StyleBox[" Last[ ",
  FontWeight->"Bold"],
 "FindMaximum[ derivativeBz, {z,0} ] ",
 StyleBox["].\n",
  FontWeight->"Bold"],
 "\n",
 StyleBox["3.",
  FontWeight->"Bold"],
 " ",
 StyleBox["Assigned",
  FontVariations->{"Underline"->True}],
 " the value of -0.15 to zmax using ",
 StyleBox[" zmax = z ",
  FontWeight->"Bold"],
 "/. Last[ FindMaximum[ derivativeBz, {z,0} ] ]"
}], "CodingComment",
 CellChangeTimes->{{3.726583882082684*^9, 3.7265839973398647`*^9}, {
   3.726584035286137*^9, 3.726584104784143*^9}, {3.727143353404645*^9, 
   3.727143385015196*^9}, {3.727143436967924*^9, 3.727143479478119*^9}, {
   3.7271435127414103`*^9, 3.7271435628030653`*^9}, {3.727145001859844*^9, 
   3.72714502866667*^9}, 3.727145148250071*^9, 3.727145187894158*^9, {
   3.727183984630192*^9, 3.727183987709978*^9}, {3.72718551262123*^9, 
   3.7271855246555862`*^9}, 3.7271881173555403`*^9, 3.7271892576108847`*^9, 
   3.7271901469609528`*^9, {3.727190188238415*^9, 3.727190202036763*^9}, {
   3.727190238009068*^9, 3.727190370785295*^9}, {3.72726729054749*^9, 
   3.727267294615802*^9}, {3.7272910885460653`*^9, 3.727291283131391*^9}, {
   3.727291389258472*^9, 3.727291805200589*^9}, {3.72729191524312*^9, 
   3.727291970354864*^9}, {3.727292083507257*^9, 3.727292336367942*^9}, {
   3.7272923692380857`*^9, 3.727292480546373*^9}, {3.727292515875065*^9, 
   3.7272925254896317`*^9}, {3.727292606170292*^9, 3.727292640540761*^9}, {
   3.728413621363145*^9, 3.728413633650243*^9}, {3.728413867207844*^9, 
   3.728414085016127*^9}, {3.728414294775031*^9, 3.7284143032268257`*^9}, {
   3.728465676991366*^9, 3.728465754836597*^9}, {3.728466236869527*^9, 
   3.7284662634316053`*^9}, {3.728613154817687*^9, 3.7286133439321136`*^9}, {
   3.728613400699663*^9, 3.728613758729455*^9}, {3.7286137920328693`*^9, 
   3.728613810954376*^9}, {3.728613843255378*^9, 3.728613863370715*^9}, {
   3.7286138943860826`*^9, 3.728614093779767*^9}, {3.7286142497904587`*^9, 
   3.728614250523172*^9}, {3.728614410188237*^9, 3.72861450760599*^9}, 
   3.7294555951583357`*^9, {3.7296918170499077`*^9, 3.729691896841354*^9}, {
   3.729695571890891*^9, 3.729695660162862*^9}, {3.729696304948781*^9, 
   3.729696351323412*^9}, {3.729875876403116*^9, 3.7298760794963284`*^9}, {
   3.7298761293858337`*^9, 3.72987613064951*^9}, {3.7298762241648006`*^9, 
   3.729876291979252*^9}, {3.729876434644601*^9, 3.729876513301244*^9}, {
   3.729931366661736*^9, 3.729931368251974*^9}, 3.729931398422227*^9, {
   3.729931439904208*^9, 3.729931463162788*^9}, {3.7299314939033613`*^9, 
   3.729931504103903*^9}},
 CellID->364938521,ExpressionUUID->"c383062f-d18e-44a6-8ec7-616e663ad6df"],

Cell["Similarly we find the location of the minimum as follows:", "ReadText",
 CellID->1948911681,ExpressionUUID->"6ef40b3a-8167-49fa-9798-9be664e30b14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zmin", "=", " ", 
  RowBox[{"z", "/.", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"FindMinimum", "[", 
     RowBox[{"derivativeBz", ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0"}], "}"}]}], "]"}], "]"}]}]}]], "AuthorInput",
 CellChangeTimes->{
  3.727717865676312*^9, {3.727723193199544*^9, 3.727723195262595*^9}, 
   3.7277863401122*^9, {3.727829433546811*^9, 3.727829458180962*^9}, {
   3.727872308731249*^9, 3.7278723142951813`*^9}, {3.728054899907879*^9, 
   3.728054907969356*^9}, {3.728057475716712*^9, 3.728057513697538*^9}, {
   3.72808791227754*^9, 3.7280879126294518`*^9}, {3.728218174986389*^9, 
   3.728218176930233*^9}, {3.7282182550571337`*^9, 3.728218264422594*^9}, {
   3.728218300230447*^9, 3.728218302199257*^9}, {3.728218415860523*^9, 
   3.728218434258751*^9}, {3.728347793907155*^9, 3.7283478002049026`*^9}, 
   3.7283479197006407`*^9, {3.728384732659374*^9, 3.728384742568675*^9}, 
   3.728430855019929*^9, {3.728431168311101*^9, 3.728431171934526*^9}, {
   3.728466290265464*^9, 3.728466329751224*^9}, {3.728503496168256*^9, 
   3.728503497810693*^9}, {3.729455855396525*^9, 3.729455873946787*^9}, {
   3.7294559040739117`*^9, 3.729455911423382*^9}, {3.729456489810505*^9, 
   3.729456591390326*^9}, {3.7294572776000767`*^9, 3.7294573202955427`*^9}, {
   3.729457370900804*^9, 3.729457397959752*^9}, {3.7294581669045362`*^9, 
   3.7294582256451*^9}, {3.729554929921885*^9, 3.729554936083613*^9}, 
   3.729555324554101*^9, {3.729557024104142*^9, 3.729557146929554*^9}, {
   3.72955739634711*^9, 3.729557406459663*^9}, {3.729557576897826*^9, 
   3.729557578060405*^9}, {3.7295576861935997`*^9, 3.7295577576006403`*^9}, {
   3.729557860548238*^9, 3.729557922472046*^9}, 3.729558031271496*^9, {
   3.7295580698275967`*^9, 3.72955809272062*^9}, {3.7295581531117067`*^9, 
   3.729558219824678*^9}, 3.7295582816880627`*^9, 3.7295583200562353`*^9, {
   3.729558352276363*^9, 3.729558416888636*^9}, {3.729558448625147*^9, 
   3.729558533102365*^9}, {3.729558564819624*^9, 3.729558690765477*^9}, {
   3.729558722257391*^9, 3.72955872522358*^9}, {3.72955881340658*^9, 
   3.729558839579083*^9}, {3.7295590763395653`*^9, 3.729559118437521*^9}, 
   3.729559179673148*^9, {3.72955922795779*^9, 3.729559238504857*^9}, {
   3.7296954953491898`*^9, 3.729695550928406*^9}, {3.72969582444497*^9, 
   3.729695911957012*^9}, {3.729696384875355*^9, 3.7296965291817827`*^9}, {
   3.729696577138012*^9, 3.729696577920929*^9}, {3.72969666703584*^9, 
   3.729696706609447*^9}, {3.729696779163691*^9, 3.729696806751511*^9}, {
   3.7297727224707108`*^9, 3.729772728721044*^9}, {3.729834687113295*^9, 
   3.7298346995568647`*^9}},
 CellID->181487636,ExpressionUUID->"7525c775-aa4d-4b62-b000-62ad800b910b"],

Cell[BoxData["0.15000000009272907`"], "Output",
 CellChangeTimes->{3.730288109680149*^9},
 CellID->671159559,ExpressionUUID->"387cf94b-1488-4b17-adb9-bab5454de81c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["Problem - Helmholtz Coils", "Problem", "NoFrames",
  ExpressionUUID->"4ff2b9c4-f851-4fc4-8db1-89f47bc594df"], "\n", 
 TemplateBox[{InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox[
     "\"Open/Close Section\"", "ProblemButton", StripOnInput -> False], 
     ButtonFunction :> Module[{}, SelectionMove[
         ButtonNotebook[], All, ButtonCell]; 
       CodeSeal`Data`Private`logButton["ToggleProblem", 
         ParentCell[
          EvaluationBox[]]]; SelectionMove[
         ButtonNotebook[], All, CellGroup]; 
       FrontEndTokenExecute["OpenCloseGroup"]; Null], Appearance -> Automatic,
      FrameMargins -> 0, Background -> RGBColor[0.92, 0.94, 0.91], Evaluator -> 
     Automatic, Method -> "Preemptive"], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox[
     "\"Create Scratchpad\"", "ProblemButton", StripOnInput -> False], 
     ButtonFunction :> Module[{}, 
       CreateWindow[]], Appearance -> Automatic, FrameMargins -> 0, 
     Background -> RGBColor[0.92, 0.94, 0.91], Evaluator -> Automatic, Method -> 
     "Preemptive"], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ActionMenuBox[
     StyleBox[
      StyleBox[
      "\"Save Work and Give Feedback\"", Bold, StripOnInput -> False], 
      "ProblemButton", StripOnInput -> False], {PanelBox[
        TemplateBox[{
          StyleBox["\"1 \"", Bold, StripOnInput -> False], 
          "\"I am not sure what was being asked of me\""}, "RowDefault"], 
        BaseStyle -> "HelpfulButton", FrameMargins -> None, Background -> 
        RGBColor[0.68, 0.76, 0.63]] :> 
      CodeSeal`Data`Private`submitProblemButtonAction[1599379777, "Unclear"], 
      PanelBox[
        TemplateBox[{
          StyleBox["\"2 \"", Bold, StripOnInput -> False], 
          "\"This was an interesting challenge\""}, "RowDefault"], BaseStyle -> 
        "TooMuchInfoButton", FrameMargins -> None, Background -> 
        RGBColor[0.63, 0.67, 0.78]] :> 
      CodeSeal`Data`Private`submitProblemButtonAction[
       1599379777, "Interesting"], PanelBox[
        TemplateBox[{
          StyleBox["\"3 \"", Bold, StripOnInput -> False], 
          "\"I was not prepared to do this\""}, "RowDefault"], BaseStyle -> 
        "NeedsMoreDescriptionButton", FrameMargins -> None, Background -> 
        RGBColor[0.92, 0.87, 0.66]] :> 
      CodeSeal`Data`Private`submitProblemButtonAction[
       1599379777, "Unprepared"], PanelBox[
        TemplateBox[{
          StyleBox["\"4 \"", Bold, StripOnInput -> False], 
          "\"This was not challenging enough\""}, "RowDefault"], BaseStyle -> 
        "IncomprehensibleButton", FrameMargins -> None, Background -> 
        RGBColor[0.86, 0.62, 0.62]] :> 
      CodeSeal`Data`Private`submitProblemButtonAction[
       1599379777, "NotChallenging"], PanelBox[
        TemplateBox[{
          StyleBox["\"5 \"", Bold, StripOnInput -> False], "\"No comment\""}, 
         "RowDefault"], BaseStyle -> "IndifferentButton", FrameMargins -> 
        None, Background -> RGBColor[0.85, 0.85, 0.85]] :> 
      CodeSeal`Data`Private`submitProblemButtonAction[1599379777, "Abstain"], 
      Delimiter, 
      PanelBox["\"Give custom feedback\"", BaseStyle -> 
        "ExplicitFeedbackButton", FrameMargins -> None, Background -> 
        GrayLevel[0.8]] :> 
      Module[{CodeSeal`Authoring`Private`response$}, 
        CodeSeal`Authoring`Private`response$ = 
         DialogInput[{CodeSeal`Authoring`Private`name = ""}, 
           Column[{"Type your feedback (thank you for the interest)", 
             InputField[
              Dynamic[CodeSeal`Authoring`Private`name], String, 
              FieldSize -> {25, 5}], 
             DefaultButton["Proceed", 
              DialogReturn[CodeSeal`Authoring`Private`name], ImageSize -> 
              Automatic]}], Modal -> True, WindowFloating -> True]; 
        CodeSeal`Data`Private`submitProblemButtonAction[
         1599379777, CodeSeal`Authoring`Private`response$]]}, Appearance -> 
     Automatic, FrameMargins -> None, Method -> "Queued", Background -> 
     RGBColor[0.92, 0.94, 0.91]], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False]},
  "RowDefault"]}], "Problem",
 CellTags->"CodeSealNavigation",
 CellID->695984209,ExpressionUUID->"741d9e40-c747-403b-b5c2-ec416e1a0e3b"],

Cell["", "Hidden",
 CellID->63175454,ExpressionUUID->"220d3f87-5ae8-4c82-b022-1f9749da01cc"],

Cell[TextData[{
 "Consider two parallel rings of radius ",
 StyleBox["a = 0.15 m",
  FontWeight->"Bold"],
 ", with a current  ",
 StyleBox["I",
  FontFamily->"Courier",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["= 3 mA",
  FontWeight->"Bold"],
 ". The rings are separated by a distance ",
 StyleBox["d = a",
  FontWeight->"Bold"],
 ". Each ring consists of ",
 StyleBox["200 turns ",
  FontWeight->"Bold"],
 "of a thin conducting wire. The current circulates counterclockwise as \
viewed from above on the + z-axis. Consider the zero of the coordinate system \
to be the midpoint between the two rings as shown in the figure.\n\n          \
                              ",
 Cell[BoxData[
  GraphicsBox[
   {Thickness[0.001941747572815534], 
    {FaceForm[{RGBColor[0.004, 0.004, 0.004], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
        0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
       0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {0, 1, 0}}}, {{{256.44921875, 266.085}, {256.44921875, 268.335}, {
       251.25, 268.335}, {251.25, 273.56546875}, {249., 273.56546875}, {249., 
       268.335}, {243.80078125, 268.335}, {243.80078125, 266.085}, {249., 
       266.085}, {249., 260.835}, {251.25, 260.835}, {251.25, 266.085}, {
       256.44921875, 266.085}}, CompressedData["
1:eJxTTMoPSmViYGDQBWIQDQIXlhQ49B/6qnHnT4EDCp+hEMxfoInKZ5CA8HUO
Q9UrQfhvDkL5GhD+nisQvoEhhB9zC8JncEDlJ5Sh8hcwQvhzfKB8bgj/jDNU
PR+En+MKtU8AyneH2icMNc8TwleQhOr3hfAbpCH8P34Q/gN5VP4FdVR+gD7U
P95Q822h7nOEui8Aar8x1L4EqP26UPcWoPIndKDyGeZA+DyWaPwgVH5MLNQ9
k6D2pUP4Be2o/A81qHyGEig/FpWvE4TK/+MG5UP196DxdRzQ5G2g/quAug/q
foNiVP6CdFR+ATR8cvyh5kVA/RsN5ftB+GsyIHwHV2j6y4eaZwqVL0NLr8D0
CwDx9PXo
       "]}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{229., 116.7998}, {243., 116.7998}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0013592233009708738`], 
     Dashing[{0.005825242718446602, 0.005825242718446602}], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 161.8999}, {237., 183.0999}}},
      CurveClosed->{0}]}, 
    {RGBColor[0., 0., 1.], Thickness[0.003883495145631068], Opacity[1.], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{237., 
      206.29979999999998`}, {306.312, 206.29979999999998`}, {362.5, 
      198.59879999999998`}, {362.5, 189.0998}, {362.5, 179.60079999999996`}, {
      306.312, 171.89979999999997`}, {237., 171.89979999999997`}, {167.688, 
      171.89979999999997`}, {111.5, 179.60079999999996`}, {111.5, 189.0998}, {
      111.5, 198.59879999999998`}, {167.688, 206.29979999999998`}, {237., 
      206.29979999999998`}}},
      CurveClosed->{1}]}, 
    {Thickness[0.0013592233009708738`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 182.3999}, {237., 267.2999}}},
      CurveClosed->{0}]}, 
    {Thickness[0.003883495145631068], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{237., 266.}, {234.5, 264.5}, {234.4, 264.6}, {
      236., 268.7}, {236.3, 270.1}, {236.6, 271.6}, {236.9, 273.}, {237.2, 
      271.6}, {237.5, 270.1}, {237.8, 268.7}, {239.4, 264.6}, {239.4, 
      264.5}}}]}, 
    {RGBColor[0., 0., 1.], Thickness[0.003883495145631068], Opacity[1.], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{237., 
      66.2998}, {306.312, 66.2998}, {362.5, 58.5998}, {362.5, 49.0998}, {
      362.5, 39.60080000000001}, {306.312, 31.900800000000004`}, {237., 
      31.900800000000004`}, {167.688, 31.900800000000004`}, {111.5, 
      39.60080000000001}, {111.5, 49.0998}, {111.5, 58.5998}, {167.688, 
      66.2998}, {237., 66.2998}}},
      CurveClosed->{1}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 189.}, {332.4, 181.3}}},
      CurveClosed->{0}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{330.5996, 181.3999}, {328.7006, 185.1999}, {
      328.7996, 185.2999}, {334.4996, 182.4999}, {336.4996, 181.8999}, {
      338.4996, 181.2999}, {340.4996, 180.6999}, {338.4006, 180.3999}, {
      336.2996, 180.0999}, {334.2996, 179.7999}, {328.2996, 177.8999}, {
      328.2006, 177.9999}}}]}, 
    {Dashing[{0.005825242718446602, 0.005825242718446602}], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 162.6001}, {237., 176.6001}}},
      CurveClosed->{0}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 61.}, {237., 159.}}},
      CurveClosed->{0}]}, 
    {Dashing[{0.005825242718446602, 0.005825242718446602}], 
     JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 41.799800000000005`}, {237., 
      58.799800000000005`}}},
      CurveClosed->{0}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 5.}, {237., 36.}}},
      CurveClosed->{0}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
       1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
        0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
       0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQILOrMcJKZe4cy4l++Awj8F4TMsgfA1jkP4B/ZA
+C8OQ/lHIPwVe1D5HWvQ+AsgfIfDUP4ECD9hF4TvUQhVHwPly+RB5P2g/Be5
EP3OED7HQwh/gSTU/luo/IxjEP4BlmysfJh6hhtQ8+5CzT8N9e9TVP6LX2h8
Joj7GC5A+dJQ/hWoezQhfIf/EP6Jk1C+NMw9UP9pofIZHFD5CzpR+QeOQPge
N6HmvYbyf0HVc+ZA+CLQ8JWC8FeYo/IzElH5LzZBw/9BNkp6cMhG5SOnFwAX
/7Sn
       "], {{217.75, 252.809575}, {218.05078125, 253.92285625}, {
       218.19921875, 254.14941875}, {219.07421875, 254.14941875}, {
       220.3984375, 254.14941875}, {221.17578125, 253.29004375}, {
       221.17578125, 251.9502}, {221.17578125, 250.8642625}, {220.8984375, 
       249.39941875}, {220.3515625, 248.51660625}, {219.67578125, 
       247.403325}, {218.82421875, 246.9502}, {217.2734375, 246.9502}, {
       216.94921875, 246.9502}, {216.6484375, 246.9502}, {216.2265625, 
       247.02441875}, {217.75, 252.809575}}}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{238., 
      251.79979999999998`}, {240.761, 251.79979999999998`}, {243., 
      249.56179999999998`}, {243., 246.79979999999998`}, {243., 
      244.03879999999998`}, {240.761, 241.79979999999998`}, {238., 
      241.79979999999998`}, {235.239, 241.79979999999998`}, {233., 
      244.03879999999998`}, {233., 246.79979999999998`}, {233., 
      249.56179999999998`}, {235.239, 251.79979999999998`}, {238., 
      251.79979999999998`}}}]}, 
    {FaceForm[{RGBColor[0.004, 0.004, 0.004], Opacity[1.]}], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
       3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{
       231.828125, 131.345525}, {231.828125, 134.6549}, {230.575, 
       138.345525}, {227.459375, 138.345525}, {224.10625, 138.345525}, {
       222.971875, 134.53615000000002`}, {222.971875, 131.28615000000002`}, {
       222.971875, 127.13927500000001`}, {224.853125, 124.3674}, {227.41875, 
       124.3674}, {229.96875, 124.3674}, {231.828125, 127.13927500000001`}, {
       231.828125, 131.345525}}, {{228.73125, 129.09865000000002`}, {
       228.73125, 126.13927500000001`}, {228.4, 124.945525}, {227.41875, 
       124.945525}, {226.440625, 124.945525}, {226.06875, 
       126.13927500000001`}, {226.06875, 129.09865000000002`}, {226.06875, 
       133.57365000000001`}, {226.06875, 136.595525}, {226.41875, 137.7674}, {
       227.38125, 137.7674}, {228.340625, 137.7674}, {228.73125, 
       136.49552500000001`}, {228.73125, 133.57365000000001`}, {228.73125, 
       129.09865000000002`}}}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{230.2002, 49.799800000000005`}, {
      241.8002, 49.799800000000005`}}},
      CurveClosed->{0}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{231.3999, 189.1001}, {241.1999, 
      189.1001}}},
      CurveClosed->{0}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{237., 49.}, {332.4, 41.3}}},
      CurveClosed->{0}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{330.5996, 41.4004}, {328.7006, 
      45.200399999999995`}, {328.7996, 45.2994}, {334.4996, 42.5004}, {
      336.4996, 41.9004}, {338.4996, 41.2994}, {340.4996, 
      40.700399999999995`}, {338.4006, 40.4004}, {336.2996, 
      40.099399999999996`}, {334.2996, 39.7994}, {328.2996, 37.9004}, {
      328.2006, 38.0004}}}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
       0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQ3ffkk/ylqGIH+dbXgTM4MxxA/CIvCL/iXjqYz+QC
4e+4BOEvskXlF1mh8i9ZQPgW11H5N+6i8md8hPCNrKF8Doj9l6D2WbhD+UkQ
vgRfJsQ+M6h5HBD+In0o/xZEvREaf5E21D9MEPWXlKDuFYLqF0Tjfy9C4Rfd
gfAr3kLNPw7hS2yDum8TlN8IDb8lEP4MO1S+xf90FL7EYWh4boXaNwvKP4/K
Z3qByr/0C8L/sR0aflD3WzBD7eOBhtdjqHncUP4NNP5ZVL7Faqh9YsWo9qmg
8heZo/KZfKDhvRnqnmSo/F+ofqT0BQCN1S7a
       "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3ffkkzyTWrGDfOvrwIizGQ7I/BlzIfxLElB5Vwjf
iBPK54Pwi/4VQfjP08H8RR8h/B2XIPxLz1D5RXdQ+YuuQvgWD1D5EgwZKPwI
Oaj77kH1x0H5b6D6p0Pd9x3Cn3EE6j42iHt3fILKi6PymRTQ+FD/33iEygeF
DwAE+JTX
       "]}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
       0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQ3ffkk/wlrmKHapF17olqXg4gftGvIjD/YaUnmM/0
Bcr3gvAXvUXlF71C5V96AeXHoPITy9H4xyB8o9dQvhLE/ksw+2S8IXwhqPss
/CD2PYOqV4bwF92H8rN9Ieah8RfdhprHCVF/6RLMvVD9B9H4y1H5RT1Q/lao
+eVQ82/4QMxLgvJZIPyiECj/lxcK/+EfT1R5Hmh4pkLlszwg/HpUPtMMVP6l
VVD+fQjfCOZ+Hqh9e6Dm90DN3w3lJ6DxTVD5D9dA7TuGZt8VNPc9R3PfH6h5
56HuEYbE18Nv0PhGSl8Agm4nlg==
       "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3ffkkzzTtSKHapF17ommvg4o/DIfMP/SCShf1BvM
N9oJ5Vt6gflF66D8uZ5g/qKFEP5DLwj/0jRUflEPKn9RK5TfgMpPZPBC5VdC
+Ex9UPVVEPcwzYHyYyDuNVoOVS8E8U/RNqj8KQjf6Dgqn+kCGh/m/240PjB8
AMCEjBM=
       "]}]}, 
    {Thickness[0.0011650485436893203`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{357.9004, 187.}, {399.9004, 187.}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0011650485436893203`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{381.9004, 177.1001}, {381.9004, 
      63.20009999999999}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0011650485436893203`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{381.9004, 176.}, {384.0994, 174.7}, {384.0994,
       174.8}, {382.7004, 184.3}, {382.4004, 185.5}, {382.2004, 180.8}, {
      381.9004, 182.}, {381.5994, 180.8}, {381.4004, 179.5}, {381.0994, 
      178.3}, {379.7004, 174.8}, {379.7004, 174.7}}}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{381.9004, 64.2998}, {384.0994, 65.5998}, {
      384.0994, 65.49980000000001}, {382.7004, 61.99980000000001}, {382.4004, 
      60.799800000000005`}, {382.2004, 59.49980000000001}, {381.9004, 
      58.299800000000005`}, {381.5994, 59.49980000000001}, {381.4004, 
      60.799800000000005`}, {381.0994, 61.99980000000001}, {379.7004, 
      65.49980000000001}, {379.7004, 65.5998}}}]}, 
    {Thickness[0.0011650485436893203`], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{356.5996, 60.}, {400.5996, 60.}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0011650485436893203`], 
     FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
       0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}}}, {CompressedData["
1:eJxd0r9LQlEUB/CLYGCLBAUO0Q8scIrb9iIEo0ULpSSaSl9FLQ29IUT/gBzb
gsYLTg3BG4KGoN0l3hI11xJkcHWMgtTvF+zcB4/Hh++559z7uPOHZ+XjmFJK
99/Bd/BEl43czMXndqrg54auwa9ZWB/BnkevMl+WTk3DZl1alRzv0JMjz/Z9
HR85O/7Ssj/Vof0yrJ/pPPM8rNeYv1eQe3QCebQEB1OsTzuecPxbx/oO+qkO
fQNHT7Bdgc098+a+cPixJ2xP6DYcLMLqTdr/ljZJnqfKfIHuwdEcHN6xH62N
tG06+QbXZxpyP5602XTyCucd0OfMv2B9ynlj+B/Kpx9Zv8v6K3pL2hQdc75t
Ofu5dfIH9uN9CTJyftiF/9/3P4Lp5E0=
       "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQIG1pUOtlzXF39oi3NA5m9wgPATtCD8gsJYMJ9B
BsrnhvANBCF8g70xED4rVH4qhL/gZwUq/z0q3+AlhP9hPyp/ww80vjXEvgUf
oeq3Q/gX/kH4BopQ93JB3V8L9Y801D1XofI6qHwDUzQ+zP+bUfmg8AEA1Ihg
fw==
       "]}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{263.0459, 121.8545}, {
      167.75390000000002`, 101.8935}}},
      CurveClosed->{0}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}}}, {{{169.5112, 102.2617}, {172.3952, 99.1847}, {
      172.2912, 99.0787}, {166.0622, 100.15870000000001`}, {163.9672, 
      100.17970000000001`}, {161.87120000000002`, 100.20070000000001`}, {
      159.7752, 100.2227}, {165.5092, 102.8037}, {170.7802, 106.2917}, {
      170.9132, 106.25670000000001`}}}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{179.84720000000002`, 116.8545}, {
      308.75620000000004`, 116.8545}}},
      CurveClosed->{0}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}}}, {{{306.9609, 116.8545}, {304.7699, 120.4585}, {
      304.8929, 120.5395}, {310.7679, 118.2065}, {312.81489999999997`, 
      117.7555}, {314.86089999999996`, 117.3055}, {316.9079, 116.8545}, {
      310.7679, 115.5035}, {304.8929, 113.1695}, {304.7699, 113.2315}}}]}, 
    {FaceForm[{RGBColor[0.004, 0.004, 0.004], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
        0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {0, 1, 0}}}, {{{331.44921875, 118.085}, {331.44921875, 120.335}, {
       326.25, 120.335}, {326.25, 125.56546875}, {324., 125.56546875}, {324., 
       120.335}, {318.80078125, 120.335}, {318.80078125, 118.085}, {324., 
       118.085}, {324., 112.835}, {326.25, 112.835}, {326.25, 118.085}, {
       331.44921875, 118.085}}, CompressedData["
1:eJxd0z9Iw1AQx/FQ0EGKuAiOCu2kw3MQcVDSoSCO4qLWGgqdfaDOrm7FxbUB
F10kIPhnswhCBSEgok6paBERpCiiFARt7it4KYTyye/evbz2MlRamS2nHMcZ
/706352Pl1l3J3tudmxUcOMbg+JWYSl2OICzRXEa18V+F+v7l2Pbt7XYJiX2
H8TBF/V1cetV257hK233mvoa+R39A7HToH5bbB/J56l/Jm/LedxP+n3Ief1v
XNA2wwl3i22b80SLkr+z/lhsXsg3ySP2L4vDW23vQts5x1X6HWiHu4m8yv6r
2jafyHvFjT3y5oL0O9L2L7W9J86foR+/R1DheQz/f4X58cQmXVQO9rVNk3ma
0/PTN619OqHtjzJ/90Xl4ETbbjE/Y9RvsP8ULolNnvUz5OxvcgmPaP/Nk8nR
7xBn9fv0//36AXVLHG8=
       "]}]}, 
    {FaceForm[{RGBColor[0.004, 0.004, 0.004], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
        0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
       1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{
       140.54541875, 98.627}, {140.54541875, 100.877}, {135.3462, 100.877}, {
       135.3462, 106.10746875}, {133.0962, 106.10746875}, {133.0962, 
       100.877}, {127.89698125000001`, 100.877}, {127.89698125000001`, 
       98.627}, {133.0962, 98.627}, {133.0962, 93.377}, {135.3462, 93.377}, {
       135.3462, 98.627}, {140.54541875, 98.627}}, CompressedData["
1:eJxd088rBHEYx/G1tQdZ0holOaw9uypx2Rs3pW/Z5WCMxEHtZdy0F2UP/gBp
S3shlAvroNwosnIxRSu1a5PEyabUpvx43od9vodpevU8z2fm+5359nuZiflw
KBQa+b3+7uHTSCwozSZr2/lzt2sq2ezKa/rfzgN+Fxcr2sGLtt/iKZsOfE29
W1zIkjeA11NSb6W/R1z8Ir86KXkf4vi9OKhpO7fa5kpcaOBDbX9T28nxvDvt
+L5Vz+A89THyTixXtZ06+73A+yRY/zf9g3hY1u+M4jXmpz2dt6rt71n1Evu5
wn41xG6E/Df6+1J8f/oD+s+oX5J/rG12LG8x/8j8Bu6VfJOlvzOt6u5SWufv
Ur/QNmXLT+TnmP+03D6nbBJi90C7ULbcJuehGBXHhzgfdU/Z3GgHR3yvmNhf
5n1c/vdF1vvM+ZrBUebHrbym8/kDtg2fjQ==
       "]}]}, 
    {Thickness[0.002912621359223301], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYCYjObvUHT5kU5MHF2ySebZTrMXaS8syYpAjtf
DsL/Mz/CYQ5IXCrTgRko/vgyRH6xeKbDhathb9Z/iHDIyP/QysmH4IPsufYr
A87PBMp7vs+AmPcEat4lqPzVCAdTkLu2QeW/hIP5YlLpEPkLEP61q2kQ+zeH
g+1/fCENIh8a7nAeSOufRuNvhvD1+yKx82HqFSLB7uM8B+WzRoLdt+caGv8j
gg/Wz5gOdk8ydyQkvESgfDWIfL5rOiQ8/0L5FyH+1ZeLQg0vhyiI/yUzHVDi
Rw6ND4wfAIfez/A=
      "]]}, 
    {RGBColor[1., 0.23900000000000002`, 0.09], Thickness[
     0.002912621359223301], Opacity[1.], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}}}, {{{124.8901, 170.05270000000002`}, {
      139.0401, 166.53770000000003`}, {153.8411, 163.3137}, {167.9731, 
      163.36370000000002`}}},
      CurveClosed->{0}]}, 
    {FaceForm[{RGBColor[1., 0.23900000000000002`, 0.09], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{165.2754, 163.3696}, {161.6504, 168.5536}, {
      161.82639999999998`, 168.6876}, {170.84439999999998`, 165.7566}, {
      173.95139999999998`, 165.27859999999998`}, {177.05839999999998`, 
      164.8006}, {180.16639999999998`, 164.3216}, {177.1454, 
      163.45159999999998`}, {174.12439999999998`, 162.58159999999998`}, {
      171.1034, 161.7116}, {162.5314, 157.6566}, {162.3414, 
      157.73659999999998`}}}]}, 
    {RGBColor[1., 0.23900000000000002`, 0.09], Thickness[
     0.002912621359223301], Opacity[1.], JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}}}, {{{111.2554, 31.8564}, {125.4054, 
      28.3414}, {140.2064, 25.1184}, {154.33839999999998`, 
      25.168400000000002`}}},
      CurveClosed->{0}]}, 
    {FaceForm[{RGBColor[1., 0.23900000000000002`, 0.09], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{151.64059999999998`, 25.173800000000004`}, {
      148.01559999999998`, 30.357800000000005`}, {148.19159999999997`, 
      30.490800000000004`}, {157.20959999999997`, 27.560800000000004`}, {
      160.31659999999997`, 27.081800000000005`}, {163.42359999999996`, 
      26.604800000000004`}, {166.5306, 26.124800000000004`}, {
      163.50959999999998`, 25.255800000000004`}, {160.48959999999997`, 
      24.385800000000003`}, {157.46859999999998`, 23.515800000000002`}, {
      148.89659999999998`, 19.459800000000005`}, {148.70659999999998`, 
      19.539800000000003`}}}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4jQQ6I50MLPZGzQtMsDh7JkzZ3z8w7HzNSH8
Mz3hDln5H1pPKgY4GAPB5gMQeTGZAAegkQwNd8MdmDm75B9zIPhWru5FP4/4
w/lsQiL2x6b5Q8y7GO5w+d4D7snKUPlDUPWb/SDyD8MgfEcPiPxeKN/AHWL/
gjCH3IqqpTqy7hB5pzCHBavX3ohnQ+MvcwPzGaojsPNh6nkjIO4ThPI/Qd1n
gsZfgOCD9d+DuMf4RzjEPdoeEL4w1Pz3HpDwfAXly0P8y8AdiRpeupEOcxcp
7/wjH+CAEj+aaHxg/AAAVj+nIA==
      "]], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
       1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
        0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 
       0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
       0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{
       0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
        0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {0, 1, 0}}}, {CompressedData["
1:eJxd0z1Iw2AQxvEoCQVFdHCxlEYriuLiYKAUajsIDiKIW6eAEHBIVOokCF10
cSwUFPwAcRTBTboUkUBBFyfBJa4OgpPiUOPH/QUvQyk/7n1799xLR1bWl71u
wzDy35+f7+bjXidsbpUnC/Xbk4mg/OtzHPviM3HtVWwdazcOtL197r9r25/a
rZT0c47E0ZTYO6W+JG5cc398Tep17XCb87vMv0H/CvcrOIMXxW6HfHOJPMVE
3nzCM8z7pl0zA+0B5sF2mnwFcWmWeVzOT0seZ14cj4mtYfKlxY1e6kParsn5
LPUu9pNj3o9A+0U7fuI9bNwmT4b+l9T7yLPA/CnO58hnUu9JmH39uXXHvvvJ
f4VHEy5qO7xfdM/7Vfn9EvNtals+9wfJu8q+DO3o2Ve228xb1f2tnYQPtcML
9vHA/De8d5Z+//5vXxsyyKQ=
       "], CompressedData["
1:eJxTTMoPSmViYGBQB2IQreD4MXmOcpWDptWk0/ZXcx1A/BwjCL/eIA/Mn8MJ
4d9XhvBzflWC+fLyUPmnEH68FCpfnhXK/w7h1zND+Dq/oeoZUPn2H3NR+S9z
UfTfPw913ycIf/4yCP/PaQh/f0UORP4I1HwbCP/PfijfBMI/swY7f74clC9Q
hZUPV/8H6j9TKP8b1H4rVP5/XzR+BJT/A2pfMdS9DNDwXg7h67BC7T8OdT8v
lL8HyheHqt8B1a+AyteJROP3Q/jydrko/PgLqHx5bkh8/KlHjX+dZFR+jg8a
3wqafqDx/wctPSGnLwBrfAzC
       "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQreD4MVkntspB02rS6fgzuQ7I/PrZUL4vlC8L4ecY
QfjzX+SA+We0IHz5WxB+jhJU/QUIf44kKv+MACr/DyfU/rto/Leo/P+/oObz
Qfj3paHug5p/PwXC/6MINX8+hD9HGSq/MhfFvfX7ofpNofL3oHxHqPwPqH5f
VL5OOBofFl5vUPmg8AQAXVGYdg==
       "], CompressedData["
1:eJxTTMoPSmViYGBQB2IQreD4MXnO6yoHTatJp+2v5jqA+Dm/IPx6gzwwf85F
CP++MoSfcwjCl5eHyq+F8OOlUPnyrFD+fqh5zBC+zmGoegZUvv3HXFT+y1wU
/ffPQ923C8KfvwzC/zMZwt9fkQOR74GabwPh/2mH8k0g/DMl2Pnz5aD8G9j5
cPVHoP4zhfL3Qe23QuX/90XjR0D5B6DmF0PdewIaPsshfJ2zUPnjUPdfhfL3
QPn3oep3QPW/QOXrKFaj8sMhfHm7XBR+/AVUvjw3JD7+uFejxL+ONio/RwSN
zwTh20Pj/w9aekJOXwDiXxBV
       "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQreD4MVlHtdpB02rS6fgzuQ7I/PrZUL4olC8L4ef8
qgLz57/IAfPPfILw5W9B+DmvIPz6CxD+nIeo/DM3UPl/LkL48XfR+G9R+f9/
Qc2/BuHfl4a6D2r+/RQI/89LqPnzIfw5r6HyK3NR3Fu/H6r/L1T+HpTPCfXv
D6h+UVS+jjwaHxZeb1D5oPAEAK76oa4=
       "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQreD4MVnmbbWDptWk0/VGuQ4g/p5bEP7/Xzlgvs55
qPwLCP/PXlS+zVpUfs4SqP5/qPx6rVwUfrw5hG+zFMLf7wjhn1kG4d8PhPB9
zkLVx0P4MQ+g6nOh5n2EyndB1TPWQPhLoebxQPjyJ1H58a9R+feF88D8O3+g
7jWA8Hkeo/J9VqLycwog/PnrclH49tqo/P93IeHxph2qfweEv2YVKj/mJCpf
5hE0PK5Bw/MHlK8CMR85/gCRj861
       "], {{446.5499, 239.78513124999998`}, {
       446.5499, 237.69919374999998`}, {444.85068125, 235.86716249999998`}, {
       442.60068125, 235.36325624999998`}, {443.49911875, 
       238.85544374999998`}, {444.5733375, 240.76559999999998`}, {445.7764625,
        240.76559999999998`}, {446.37411875, 240.76559999999998`}, {446.5499, 
       240.36325624999998`}, {446.5499, 239.78513124999998`}}, CompressedData["
1:eJxTTMoPSmViYGBQBGIQvetW19/UuBoHTatJp/935jqA+RUQfr1BHoSfAOHP
V4Hwj0ZA+PZKUHkNKF8Klb+fBcJntULlH7WD2vc/F4W//wMq//4dqHuMoPbX
Q/isYlD3HciByLuh8o8GQfjx/FD1UPf/T4Ly06D8Wqj5BVD9iyF802oo/xTU
PS1Q9feh6rvQ+JNQ+aaTof45CNW/CJXPugGNvwvq3luo/Pu/Ufn7paHhtwE1
fkwXo/Kn9qLFXx00/Dig+tHjG4kPAEnkE58=
       "]}], 
     FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQBmIQHVKiMv3/5iqHgIsTY/79tXYA8edPhPKnQfj/a6H8
TCg/Hsq3QeP3W4H58Skw/RD++TQ0fgYqf34xGr8Syg9D41+1ROVbQ/jxJVA+
hwXEPdlQvokZRN6vymHBIuWdfwr1IXw3KP+xNsQ9DlD+VQ1U/np1VP5DVYj9
3lB+uwrEvmhU/vxSNPlmKF9UDSI/H8oPh9o/Dcrn1IHw22DqNSHurYPJQ9yn
X47GL0bjF0L5yWj8k2j8Woj5/2H6xSHu+V8J5Z/WdUBPHwCr1AJN
       
       "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3b48/JSRfLVDwMWJMf+YzRxAfCYWVH7SqyoIP8IU
In8Nypc1gfD3QfkrjCD8dVB+pgGcv2CR8s4/T7VR+azqEP4pKL9dBcyf9B6V
n8RVjcJnUoLyL6pC1JtC+fYaEHk/KN8VYt+keCj/rT6cD3aflxEqvx/in0nu
qP6/pIDKRw4vAKvymfE=
       "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3b48/BSTQbVDwMWJMf9OGzug8JcZgvlGitUOCxYp
7/yTqgPmT+KF8gs1IPKsUP5RNYj87yoInx3CN/qIxn+Kyp90F8pnVkfl62ui
8s31IPrfVkHc99AIbj+Y32EC5l/igfJ5TSF8ESjfB8I3kkXlX9JA5cP9v9vE
AT18AGWjk9s=
       "]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
      3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4vbl4acu8dQ4BFycGPOP2cwBxGdiQuVPOlzt
sGCR8s4/lXpwPljexAjC3w/lPzIG85O2VaOatwzKP2UK4c+A8pdA+RVQfhAa
f7kJhN+Exm+D8qdA+EadUH4GlD8Ryv8Gdc8MqPtv66Py72ui8pM14O4D84vV
Ufln1VD57Spg/qVFqHyjnVD+eoh5l05B+Z+1IfI3ofxmiHsuPYO6N8AQYv4H
NPN/ofKFXGsg/Le6EPMyofGVZoTKrzJB5XtDwndRLGr8fvJHi29nVH6SBZTf
YorKbzdB5WtA+VZQ/nlI+Bs5QvnhEP4lNyj/E9S9nlD+MjR+Ghp/BSR8kmyg
/CADiLwkNDx6IeGLnJ4BijNq0w==
      "]], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 
       3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
       3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQ3b48/FTT5xqHBYuUd/5R13EA8ZUeQvnrNcD8SVeh
/HZ1MD/pCCp/0WZU/qVVUP57DVT+cm1UfinEvkWroXxpXTDfaC2UL6sH5m+6
DOV/hfAPPYPyb+tDzPte4xBwcWLMv0sGEPXstRD+KkOIecJQ/gkjVP4tY1S+
nCmY78QM5TObgflFL2tQ+JvWo/IvlUH5XwzhfLD7Nmuj8u+rgflBfbDwUgHz
hTai8g+dR+U3vYDycyH6L/2D8n0h5iPHHwDG/vC+
       "], {{462.9499, 
       20.285131250000006`}, {462.9499, 18.199193750000006`}, {461.25068125, 
       16.367162500000006`}, {459.00068125, 15.863256250000006`}, {
       459.89911875, 19.355443750000006`}, {460.9733375, 
       21.265600000000006`}, {462.1764625, 21.265600000000006`}, {
       462.77411875, 21.265600000000006`}, {462.9499, 20.863256250000006`}, {
       462.9499, 20.285131250000006`}}, CompressedData["
1:eJxTTMoPSmViYGBQBGIw7fgx+UxKrUPAxYkx/84bOID5dVA+sxmEnwblLzEF
83XiofyJEP4ZPSg/EI2/1ATMz3FA5eu4Qvn1aHxWNH6aMcQ8Cyi/BuK+HJla
hwWLlHf+YVeFyPug8nUiofyvmhD1aVC+vj6EnwM1Lx/q3zIof7YhmD+nEcq/
bAQxrxvmXqh7JqDxZ6Dy58yE8nuh+lei8nO2ofEPQPlBxqj8OBNUfiw0/Lej
xs+claj8P5PR4q8Fyj8CDd9UtPhGin8A+t31Eg==
       "]}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{396., 
      229.29979999999998`}, {391.58, 230.09579999999997`}, {384.305, 
      230.7368}, {376., 228.29979999999998`}, {371.68, 227.03179999999998`}, {
      364.606, 224.9568}, {359., 218.29979999999998`}, {357.763, 
      216.83079999999998`}, {356.766, 215.33879999999996`}, {355.959, 
      213.89679999999998`}}},
      CurveClosed->{0}]}, 
    {Thickness[0.001941747572815534], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{356.84280000000007`, 215.4751}, {
      361.0128000000001, 216.1041}, {361.04080000000005`, 215.9591}, {
      356.61780000000005`, 211.4421}, {355.4118000000001, 209.7271}, {
      354.20580000000007`, 208.01409999999998`}, {352.99980000000005`, 
      206.3001}, {353.3758000000001, 208.3621}, {353.7508000000001, 
      210.4241}, {354.1258000000001, 212.4861}, {354.2438000000001, 
      218.8061}, {354.34780000000006`, 218.8961}}}]}, 
    {JoinForm[{"Miter", 10.}], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{405.5996, 
      17.3701}, {401.1796, 16.5741}, {393.9046, 15.933100000000001`}, {
      385.5996, 18.3701}, {381.2796, 19.6381}, {374.2056, 
      21.714100000000002`}, {368.5996, 28.3701}, {367.3626, 
      29.839100000000002`}, {366.36560000000003`, 31.332100000000004`}, {
      365.5596, 32.7731}}},
      CurveClosed->{0}]}, 
    {Thickness[0.0013592233009708738`], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}}}, {{{366.4434, 31.1953}, {363.9664, 27.7823}, {
      363.8434, 27.8643}, {363.7264, 34.1843}, {363.3504, 36.2463}, {362.9754,
       38.3073}, {362.5994, 40.3703}, {363.8054, 38.6563}, {365.0114, 
      36.9423}, {366.2184, 35.2283}, {370.6404, 30.711299999999998`}, {
      370.6314, 30.5733}}}]}},
   AspectRatio->Automatic,
   ImageSize->{515., 286.},
   PlotRange->{{0., 515.}, {0., 286.}}]],ExpressionUUID->
  "33e861bf-e07f-4f88-8494-328fe3d5c4b3"],
 "\n\n\n",
 StyleBox["i.   ",
  FontWeight->"Bold"],
 "Calculate the ",
 StyleBox["z-component ",
  FontWeight->"Bold"],
 "of the magnetic field at any point along the z-axis and plot it vs. z.\n\n\
",
 StyleBox["ii. ",
  FontWeight->"Bold"],
 " Plot the derivative of the z-component of the magnetic field, plot it vs. \
z, and calculate its value at z = 0,     ( ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     SubscriptBox["dB", "z"], "dz"],
    FontSize->16], TraditionalForm]],ExpressionUUID->
  "df699b79-fbf8-4a03-a55a-5be06e120c60"],
 " = ?  at  z=0)\n\n",
 StyleBox["iii.",
  FontWeight->"Bold"],
 "  Plot the second derivative of the z-component of the magnetic field vs. \
z,  and calculate its value at z = 0.    ( ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["d", 
       RowBox[{" ", "2"}]], 
      SubscriptBox["B", "z"]}], 
     SuperscriptBox["dz", "2"]],
    FontSize->16], TraditionalForm]],ExpressionUUID->
  "7398e46d-153a-406f-9293-d8c11aaf4fc1"],
 " = ?  at  z=0)\n\n",
 StyleBox["v",
  FontWeight->"Bold"],
 ". At what values of z is the first derivative of the z-component of the \
magnetic field a maximum or a minimum? Compare those values with the radius \
of the ring a = 0.15 m."
}], "Emphasis",
 CellChangeTimes->{{3.726445726815338*^9, 3.726445865871956*^9}, {
   3.727207209075716*^9, 3.727207209766169*^9}, {3.727207291972084*^9, 
   3.7272073075564823`*^9}, {3.7272080618505363`*^9, 3.727208087247233*^9}, {
   3.727208169846469*^9, 3.727208222082082*^9}, {3.727208265578059*^9, 
   3.727208283713862*^9}, {3.727208562565826*^9, 3.727208638466642*^9}, {
   3.727208668595604*^9, 3.727208820510469*^9}, {3.727208954064992*^9, 
   3.72720895481068*^9}, {3.727209137843541*^9, 3.727209144711803*^9}, {
   3.727209217847672*^9, 3.727209258475563*^9}, {3.7272093653804693`*^9, 
   3.727209427545096*^9}, {3.7272100612894506`*^9, 3.727210233696929*^9}, {
   3.727211048763857*^9, 3.7272110565861588`*^9}, {3.7284328547119017`*^9, 
   3.728432953782145*^9}, {3.7284379648993473`*^9, 3.7284379805773907`*^9}, 
   3.728439300404992*^9, {3.72960230084833*^9, 3.729602301204873*^9}, {
   3.7296968821370687`*^9, 3.72969699919314*^9}, {3.729697303539624*^9, 
   3.729697432960368*^9}, {3.72969747703662*^9, 3.729697546414619*^9}, {
   3.7297633377369432`*^9, 3.729763414023882*^9}, {3.729763480617219*^9, 
   3.7297635246446943`*^9}, {3.729769651075451*^9, 3.729769877744938*^9}, {
   3.729770243460902*^9, 3.729770391349161*^9}, {3.7297705132152977`*^9, 
   3.729770556369751*^9}, {3.729785849030189*^9, 3.729785851622633*^9}, {
   3.729785998454527*^9, 3.729786103475786*^9}, {3.729786189384396*^9, 
   3.729786191262814*^9}, 3.72978622176014*^9, {3.7297862605145807`*^9, 
   3.729786263387196*^9}, {3.729786885105612*^9, 3.7297870865880404`*^9}, {
   3.7298147823510733`*^9, 3.7298147835246696`*^9}, {3.729815237126549*^9, 
   3.729815254707481*^9}, 3.729834740489704*^9, 3.729834773259289*^9, {
   3.729838662719346*^9, 3.729838675984017*^9}, 3.7298582143746557`*^9, {
   3.729859836520296*^9, 3.729859885619625*^9}, {3.7298771823592167`*^9, 
   3.7298771828237047`*^9}, {3.7298772251778927`*^9, 3.729877233429285*^9}, {
   3.729877304568734*^9, 3.7298773109674263`*^9}, {3.729877489510322*^9, 
   3.7298775255082912`*^9}, {3.729877696221719*^9, 3.729877735581359*^9}, {
   3.729878043837245*^9, 3.729878075645039*^9}, {3.729878642725555*^9, 
   3.729878811605612*^9}, {3.729899447386129*^9, 3.729899452838777*^9}, {
   3.729934425350172*^9, 3.729934459679772*^9}, {3.729934779209716*^9, 
   3.729934783878248*^9}},
 CellID->1759705777,ExpressionUUID->"cb258472-aa68-4374-8682-bc0dd5105886"],

Cell[CellGroupData[{

Cell["Work saved at Sat 17 Mar 2018 11:35:20", "ProblemSubsubsection",
 Background->GrayLevel[0.75],
 CellTags->{"8617029096150563781", "Sat 17 Mar 2018 11:35:20"},
 CellID->1857370810,ExpressionUUID->"57811774-bfab-4b55-a2bc-63a66602904f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"currentNew", "=", " ", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "3"}], ")"}]}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"current", " ", "in", " ", "amperes", " ", "A"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aNew", " ", "=", "0.15"}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"ring", " ", "radius", " ", "in", " ", "m"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", " ", "=", " ", "aNew"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"ring", " ", "separation", " ", "in", " ", "m"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"bFieldNewTop", " ", "=", " ", 
  RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dB", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"aNew", " ", 
         RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
        RowBox[{"aNew", " ", 
         RowBox[{"Sin", "[", "phi", "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"z", "-", 
         RowBox[{"(", 
          RowBox[{"d", "/", "2"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"200", "*", "currentNew", " ", "*", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "aNew"}], " ", 
          RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
         RowBox[{"aNew", " ", 
          RowBox[{"Cos", "[", "phi", "]"}]}], ",", "0"}], "}"}]}]}], "]"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"Element", "[", 
      RowBox[{"z", ",", "Reals"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.7302887703206587`*^9, 3.730288893745248*^9}, {
  3.730289658698308*^9, 3.730289659087014*^9}},
 Background->GrayLevel[0.75],
 CellID->37013077,ExpressionUUID->"2edfd9cc-b8cd-4fc9-99b4-7030f4fefedb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", 
   FractionBox["0.00015974125605807416`", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"9.`", "\[VeryThinSpace]", "-", 
       RowBox[{"48.`", " ", "z"}], "+", 
       RowBox[{"320.`", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "}"}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.73028888337611*^9, 3.730288896584276*^9}, 
   3.730289664245616*^9},
 Background->GrayLevel[0.75],
 CellID->814139628,ExpressionUUID->"6e126918-2865-4b5f-a5ff-59bf9a7772a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"bFieldNewBottom", " ", "=", " ", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dB", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"aNew", " ", 
          RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
         RowBox[{"aNew", " ", 
          RowBox[{"Sin", "[", "phi", "]"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"z", "+", 
          RowBox[{"(", 
           RowBox[{"d", "/", "2"}], ")"}]}]}], "}"}], ",", 
       RowBox[{"200", "*", "currentNew", " ", "*", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "aNew"}], " ", 
           RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
          RowBox[{"aNew", " ", 
           RowBox[{"Cos", "[", "phi", "]"}]}], ",", "0"}], "}"}]}]}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Assumptions", "\[Rule]", " ", 
      RowBox[{"Element", "[", 
       RowBox[{"z", ",", "Reals"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.730288904782044*^9, 3.7302889269458923`*^9}, {
  3.7302896613007307`*^9, 3.7302896618281727`*^9}},
 Background->GrayLevel[0.75],
 CellID->599250171,ExpressionUUID->"04647a76-2d82-4118-a77d-86b4b9f57feb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", 
   FractionBox["0.00015974125605807416`", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"9.`", "\[VeryThinSpace]", "+", 
       RowBox[{"48.`", " ", "z"}], "+", 
       RowBox[{"320.`", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "}"}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.73028890721626*^9, 3.7302889295302477`*^9}, 
   3.730289666721085*^9},
 Background->GrayLevel[0.75],
 CellID->66275668,ExpressionUUID->"c77f251e-ff75-451c-9b88-482c80d3719e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bFieldNewTotal", " ", "=", " ", 
  RowBox[{"bFieldNewTop", "+", "bFieldNewBottom"}]}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.730289009533944*^9, 3.730289022548531*^9}},
 Background->GrayLevel[0.75],
 CellID->1005558258,ExpressionUUID->"262ee3b3-e1d2-47dd-a21b-c65cb57fc809"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", 
   RowBox[{
    FractionBox["0.00015974125605807416`", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"9.`", "\[VeryThinSpace]", "-", 
        RowBox[{"48.`", " ", "z"}], "+", 
        RowBox[{"320.`", " ", 
         SuperscriptBox["z", "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]], "+", 
    FractionBox["0.00015974125605807416`", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"9.`", "\[VeryThinSpace]", "+", 
        RowBox[{"48.`", " ", "z"}], "+", 
        RowBox[{"320.`", " ", 
         SuperscriptBox["z", "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}]}], "}"}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.7302890237081137`*^9, 3.730289669254282*^9},
 Background->GrayLevel[0.75],
 CellID->600413669,ExpressionUUID->"f22b48ce-211b-4656-9712-ab89186c140e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bFieldNewZ", " ", "=", " ", 
  RowBox[{"bFieldNewTotal", ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.7302890417003117`*^9, 3.730289057593643*^9}},
 Background->GrayLevel[0.75],
 CellID->838245962,ExpressionUUID->"63860933-5913-4fb0-85a2-a4becdb783a2"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  FractionBox["0.00015974125605807416`", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "-", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"3", "/", "2"}]]], "+", 
  FractionBox["0.00015974125605807416`", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "+", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"3", "/", "2"}]]]}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.730289058572249*^9, 3.7302896715746727`*^9},
 Background->GrayLevel[0.75],
 CellID->733165131,ExpressionUUID->"95173833-c310-460a-b357-a4483e4e2824"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"bFieldNewZ", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.7302890656484528`*^9, 3.7302890826402283`*^9}},
 Background->GrayLevel[0.75],
 CellID->1189844749,ExpressionUUID->"e66a4519-7cf3-4da1-89d8-21e586ff40da"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
1hIB/L/zvuj/n/f9P5SJeXI=
       "]]},
     Annotation[#, "Charting`Private`Tag$29763#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.7302890831432*^9, 3.730289673689661*^9},
 Background->GrayLevel[0.75],
 CellID->1734217499,ExpressionUUID->"01009049-fb87-45a2-b650-f1b6cc3712c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstDerivativeBFieldNewZ", " ", "=", " ", 
  RowBox[{"D", "[", 
   RowBox[{"bFieldNewZ", ",", "z"}], "]"}]}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.730289173905801*^9, 3.730289194138731*^9}},
 Background->GrayLevel[0.75],
 CellID->2031448008,ExpressionUUID->"dd676825-3ade-4a03-a8f8-1da3b1976899"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"0.00023961188408711122`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "48.`"}], "+", 
       RowBox[{"640.`", " ", "z"}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"9.`", "\[VeryThinSpace]", "-", 
       RowBox[{"48.`", " ", "z"}], "+", 
       RowBox[{"320.`", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], 
     RowBox[{"5", "/", "2"}]]]}], "-", 
  FractionBox[
   RowBox[{"0.00023961188408711122`", " ", 
    RowBox[{"(", 
     RowBox[{"48.`", "\[VeryThinSpace]", "+", 
      RowBox[{"640.`", " ", "z"}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "+", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"5", "/", "2"}]]]}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.730289194361068*^9, 3.730289676266635*^9},
 Background->GrayLevel[0.75],
 CellID->1079325626,ExpressionUUID->"8b79031f-f0b9-4f5b-a408-f03ac454b67c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"FirstDerivativeBFieldNewZ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.73028919781111*^9, 3.73028921919976*^9}},
 Background->GrayLevel[0.75],
 CellID->1433958493,ExpressionUUID->"e1082930-d8f0-422d-a030-95448e7dc6c7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
sP1fv2qoYeRHGfS//xr4v/8a9H8eZMd5
       "]]},
     Annotation[#, "Charting`Private`Tag$30753#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.730289220024953*^9, 3.730289678848274*^9},
 Background->GrayLevel[0.75],
 CellID->365174271,ExpressionUUID->"1a1af652-2440-4292-b778-0f1ab53b3e7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstDerivativeBFieldNewZ", "/.", 
  RowBox[{"z", "->", "0"}]}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.7302892380671186`*^9, 3.73028929097915*^9}},
 Background->GrayLevel[0.75],
 CellID->273232455,ExpressionUUID->"a7601841-e01f-4971-ad0f-479fb3c28143"],

Cell[BoxData["0.`"], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.7302892921429987`*^9, 3.7302896818789473`*^9},
 Background->GrayLevel[0.75],
 CellID->1291688759,ExpressionUUID->"8a98f24e-3ba8-4743-a378-a59d34f7aa42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondDerivativeBFieldNewZ", " ", "=", " ", 
  RowBox[{"D", "[", 
   RowBox[{"FirstDerivativeBFieldNewZ", ",", "z"}], "]"}]}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.730289306569303*^9, 3.7302893179810743`*^9}},
 Background->GrayLevel[0.75],
 CellID->1863939,ExpressionUUID->"583b1b2b-0a70-434f-9ba1-a307a163e258"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"0.0005990297102177781`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "48.`"}], "+", 
       RowBox[{"640.`", " ", "z"}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "-", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"7", "/", "2"}]]], "-", 
  FractionBox["0.1533516058157512`", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "-", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"5", "/", "2"}]]], "+", 
  FractionBox[
   RowBox[{"0.0005990297102177781`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"48.`", "\[VeryThinSpace]", "+", 
       RowBox[{"640.`", " ", "z"}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "+", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"7", "/", "2"}]]], "-", 
  FractionBox["0.1533516058157512`", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "+", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"5", "/", "2"}]]]}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.730289318949972*^9, 3.730289684297323*^9},
 Background->GrayLevel[0.75],
 CellID->467686119,ExpressionUUID->"9e33c85c-2ad7-4fca-8d38-cecf0e7e95c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"SecondDerivativeBFieldNewZ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.730289322846566*^9, 3.730289337458261*^9}},
 Background->GrayLevel[0.75],
 CellID->1694579755,ExpressionUUID->"949339fe-8ebc-4ce3-bcb1-9ef7904d158e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vmu7t29eIgZhRRxPQ+drsYxQ96HhgBjUGgyWmFbW4q8nwhkEdsTg2PEYWvhQ
ix1UxB/m0IgDSlU1o39Wizcqx6mbucXB6d7JosVbtVjlMKHQFMQha6OSsvpC
LV6/fIzswT1xCP2WUIa2a7Bh/uL0RwNxsND1eJbbUIPF+dXFXazEQZH6IRdP
Qg0O7dHpyHMUhwtVYr0JDjX4+QuOz5fdxIHAhS6U8WYNbiwriPniLg79vCvS
YSw1mKtfr3zvuTgUDjeuEq9V4yWr11q79uIQ9eZ7slt1NdZrjay1fSIOtkoB
Wmux1Ti2uL3uipY43N03PmlhU42/vzllSSwnDjyZMnj4RjU+k2t5sfiSOJCY
MNtqnqnG7aa++xxk4jDGsHvh78IfTJgSHUg2Lgal9Z2dN8r/4FrKeiaxQjGI
88wJKnr7B9+7kN7jEigGLkKvr121/INp+Ii64lT/9Xvq6dJX6T/4KNukpDWd
GFyNVU5kpfuDM51vGv1qFgUqlYvqb6ercODiIfFtf1GYIzxGSlFchcWimY1X
hEWhOm/ol094Fe7wJ3rs3C8Cny1+W+2aVmEVpvauDDcR0G11aJuirMJZu+fj
bb4Ig4T/fX+9sUrM99gpMk5AGOglBSQ68iuxU+Hkp/JMIWhKmP5YblCJ/Q47
olTeX4VU9SpVCZFKrBFNqGVBeBUCyRKJMskq8ZLsW7MxQ0G4bvvQIi67AjMc
aWZ+dvwKMHOKM9MFVGDjj+OV6rcEYLebrjn4YQW+1fQrTJ2KH3Jk/oo4E1Xg
Z6pMEe3VlyFs/fv0Ync5TvbQsfIg5YanXwNiTdPK8VGmktE8US7gPHX9qJpG
OR4lOvJk+uEFOFrJnFt7uRxzPuKOJFFjh0Gn3ccyBOU4ZtAgnVCcFaKHchr4
vpbhpvDRj/gdPZBlXIwh3S3FQwPxgWyyy2jC6Ngtz7+lWLrgvoLt3dricvrh
g43EUhx9bf9o5N2tYlePd8Zjt0qxynzUte5ZKrxwh1wAx5XgeHvtdsKR8/hz
7/jLaZ9irCrNL/WEWgT3uJ7++OFqMXbwKhLSeiGKKZgVMu6N/Mb5bRUb3Iti
2EE/paUAfmO+BycJJioksfy4OX3Qzi9MbeZqSpcojV383nOhr79wNUfnm75b
MjjtYr34isYvHHaKRc9kVQbTm/M+1M4txL7F7v6awrJ4amExntu6AL9PQdp8
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
       "]]},
     Annotation[#, "Charting`Private`Tag$31825#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.730289338896226*^9, 3.7302896871270103`*^9},
 Background->GrayLevel[0.75],
 CellID->924484843,ExpressionUUID->"f6869596-7d82-4dec-b624-649d695b5311"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondDerivativeBFieldNewZ", "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.730289349763061*^9, 3.730289361887525*^9}},
 Background->GrayLevel[0.75],
 CellID->1893295967,ExpressionUUID->"007d291b-e4d8-4783-be43-43964c135694"],

Cell[BoxData["0.`"], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.730289362395465*^9, 3.7302896893375273`*^9},
 Background->GrayLevel[0.75],
 CellID->1175653120,ExpressionUUID->"e3a01344-5c75-4ad5-8d07-045e5fc7837c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{"FirstDerivativeBFieldNewZ", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.01"}], "}"}]}], "]"}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.730289450796817*^9, 3.730289505987608*^9}},
 Background->GrayLevel[0.75],
 CellID->640799038,ExpressionUUID->"6c482057-9fc7-4c3b-a4b7-e1fd61a38005"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.00006114474181103511`"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "0.13935549067049804`"}], "}"}]}], 
  "}"}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.73028947724124*^9, 3.7302895064400043`*^9}, 
   3.730289690828724*^9},
 Background->GrayLevel[0.75],
 CellID->1584138355,ExpressionUUID->"965f8630-8b8c-4f91-9283-6838103e933f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{"FirstDerivativeBFieldNewZ", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "0.01"}]}], "}"}]}], "]"}]], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.73028951137547*^9, 3.730289523838778*^9}},
 Background->GrayLevel[0.75],
 CellID->621652366,ExpressionUUID->"dc8c802e-3db0-422c-9224-1810dd9abcbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00006114474181103511`", ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"-", "0.13935549067049804`"}]}], "}"}]}], "}"}]], "Output",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{3.730289524100986*^9, 3.7302896935194397`*^9},
 Background->GrayLevel[0.75],
 CellID->210959689,ExpressionUUID->"a7be89f7-3253-4d4b-8b08-3aee4a11e667"]
}, Open  ]],

Cell[BoxData[""], "Input",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 CellChangeTimes->{{3.730289168093669*^9, 3.730289172028318*^9}},
 Background->GrayLevel[0.75],
 CellID->559310572,ExpressionUUID->"a2a71711-7f2d-4cb5-bd18-6cc19daa6a29"],

Cell["", "Hidden",
 Editable->False,
 Selectable->False,
 Deletable->False,
 Deployed->True,
 Background->GrayLevel[0.75],
 CellID->469991125,ExpressionUUID->"560ba95a-b8f4-4c84-879e-3752f4f72569"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
After you view the teacher's solution, you can incorporate anything you \
learned into your work here if you would like to do so.\
\>", "ProblemSubsubsection",
 CellID->721521415,ExpressionUUID->"d9d68edf-961e-46c9-8368-126f9fa3afc6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"currentNew", "=", " ", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "3"}], ")"}]}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"current", " ", "in", " ", "amperes", " ", "A"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aNew", " ", "=", "0.15"}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"ring", " ", "radius", " ", "in", " ", "m"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", " ", "=", " ", "aNew"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"ring", " ", "separation", " ", "in", " ", "m"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"bFieldNewTop", " ", "=", " ", 
  RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dB", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"aNew", " ", 
         RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
        RowBox[{"aNew", " ", 
         RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
        RowBox[{"d", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "z"}], "}"}], ",", 
      RowBox[{"200", "*", "currentNew", " ", "*", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "aNew"}], " ", 
          RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
         RowBox[{"aNew", " ", 
          RowBox[{"Cos", "[", "phi", "]"}]}], ",", "0"}], "}"}]}]}], "]"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"Element", "[", 
      RowBox[{"z", ",", "Reals"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7302887703206587`*^9, 3.730288893745248*^9}, {
  3.730289658698308*^9, 3.730289659087014*^9}, {3.730289895275608*^9, 
  3.730289898905026*^9}},
 CellID->428263218,ExpressionUUID->"0ef5a7df-820d-45a8-baf6-49e8271f3634"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", 
   FractionBox["0.00015974125605807416`", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"9.`", "\[VeryThinSpace]", "-", 
       RowBox[{"48.`", " ", "z"}], "+", 
       RowBox[{"320.`", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.73028888337611*^9, 3.730288896584276*^9}, 
   3.730289664245616*^9, 3.730289901728092*^9},
 CellID->1666034246,ExpressionUUID->"085a48cf-53ab-422a-a00e-f9447e3c41b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"bFieldNewBottom", " ", "=", " ", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dB", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"aNew", " ", 
          RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
         RowBox[{"aNew", " ", 
          RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
         RowBox[{
          RowBox[{"-", "d"}], "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "z"}], "}"}], ",", 
       RowBox[{"200", "*", "currentNew", " ", "*", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "aNew"}], " ", 
           RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
          RowBox[{"aNew", " ", 
           RowBox[{"Cos", "[", "phi", "]"}]}], ",", "0"}], "}"}]}]}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Assumptions", "\[Rule]", " ", 
      RowBox[{"Element", "[", 
       RowBox[{"z", ",", "Reals"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.730288904782044*^9, 3.7302889269458923`*^9}, {
  3.7302896613007307`*^9, 3.7302896618281727`*^9}, {3.730289906554373*^9, 
  3.730289911332973*^9}},
 CellID->723385355,ExpressionUUID->"98908681-ba62-4108-b87e-76264ca4c1e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", 
   FractionBox["0.00015974125605807416`", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"9.`", "\[VeryThinSpace]", "+", 
       RowBox[{"48.`", " ", "z"}], "+", 
       RowBox[{"320.`", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.73028890721626*^9, 3.7302889295302477`*^9}, 
   3.730289666721085*^9, 3.730289913377059*^9},
 CellID->1006689848,ExpressionUUID->"b78b4c06-95a8-4ba1-a559-b0aea1c5da38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bFieldNewTotal", " ", "=", " ", 
  RowBox[{"bFieldNewTop", "+", "bFieldNewBottom"}]}]], "Input",
 CellChangeTimes->{{3.730289009533944*^9, 3.730289022548531*^9}},
 CellID->352312854,ExpressionUUID->"7ed42748-3054-4497-8c2a-facefa58143a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", 
   RowBox[{
    FractionBox["0.00015974125605807416`", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"9.`", "\[VeryThinSpace]", "-", 
        RowBox[{"48.`", " ", "z"}], "+", 
        RowBox[{"320.`", " ", 
         SuperscriptBox["z", "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]], "+", 
    FractionBox["0.00015974125605807416`", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"9.`", "\[VeryThinSpace]", "+", 
        RowBox[{"48.`", " ", "z"}], "+", 
        RowBox[{"320.`", " ", 
         SuperscriptBox["z", "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7302890237081137`*^9, 3.730289669254282*^9},
 CellID->1293127926,ExpressionUUID->"4402bc0f-64d8-412a-8aeb-dc1204616de0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bFieldNewZ", " ", "=", " ", 
  RowBox[{"bFieldNewTotal", ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7302890417003117`*^9, 3.730289057593643*^9}},
 CellID->686090473,ExpressionUUID->"6800fe4e-ef6a-484b-9f99-1b38a4064ceb"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  FractionBox["0.00015974125605807416`", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "-", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"3", "/", "2"}]]], "+", 
  FractionBox["0.00015974125605807416`", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "+", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"3", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{3.730289058572249*^9, 3.7302896715746727`*^9},
 CellID->904967220,ExpressionUUID->"db01531f-a133-4324-b4e2-a2a35f7bd215"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"bFieldNewZ", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7302890656484528`*^9, 3.7302890826402283`*^9}},
 CellID->1933926964,ExpressionUUID->"b71e4e01-848c-4b87-9ba8-9e7f3ed03708"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
1hIB/L/zvuj/n/f9P5SJeXI=
       "]]},
     Annotation[#, "Charting`Private`Tag$29763#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7302890831432*^9, 3.730289673689661*^9},
 CellID->1270148754,ExpressionUUID->"435c84f3-cb5c-426c-bdd6-230918bcc9aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstDerivativeBFieldNewZ", " ", "=", " ", 
  RowBox[{"D", "[", 
   RowBox[{"bFieldNewZ", ",", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730289173905801*^9, 3.730289194138731*^9}},
 CellID->870633730,ExpressionUUID->"772d75f2-e935-426e-9871-3270f86b3ce4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"0.00023961188408711122`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "48.`"}], "+", 
       RowBox[{"640.`", " ", "z"}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"9.`", "\[VeryThinSpace]", "-", 
       RowBox[{"48.`", " ", "z"}], "+", 
       RowBox[{"320.`", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], 
     RowBox[{"5", "/", "2"}]]]}], "-", 
  FractionBox[
   RowBox[{"0.00023961188408711122`", " ", 
    RowBox[{"(", 
     RowBox[{"48.`", "\[VeryThinSpace]", "+", 
      RowBox[{"640.`", " ", "z"}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "+", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"5", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{3.730289194361068*^9, 3.730289676266635*^9},
 CellID->1617087103,ExpressionUUID->"664bf728-13c0-4c00-ae20-7778805f594c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"FirstDerivativeBFieldNewZ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73028919781111*^9, 3.73028921919976*^9}},
 CellID->800339807,ExpressionUUID->"dd6e67cc-8b7d-458d-964f-731bd2a04e6f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
sP1fv2qoYeRHGfS//xr4v/8a9H8eZMd5
       "]]},
     Annotation[#, "Charting`Private`Tag$30753#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.730289220024953*^9, 3.730289678848274*^9},
 CellID->1492286096,ExpressionUUID->"56e3c0b5-4aae-4b10-9d41-ebfb799f4198"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstDerivativeBFieldNewZ", "/.", 
  RowBox[{"z", "->", "0"}]}]], "Input",
 CellChangeTimes->{{3.7302892380671186`*^9, 3.73028929097915*^9}},
 CellID->1607962764,ExpressionUUID->"45540d40-9422-46f3-a396-cf9fff0f3e2e"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.7302892921429987`*^9, 3.7302896818789473`*^9},
 CellID->1614479435,ExpressionUUID->"5fc70e1c-f930-48f7-bfb5-375029377e91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondDerivativeBFieldNewZ", " ", "=", " ", 
  RowBox[{"D", "[", 
   RowBox[{"FirstDerivativeBFieldNewZ", ",", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730289306569303*^9, 3.7302893179810743`*^9}},
 CellID->1558561764,ExpressionUUID->"efd8199b-2b10-4149-b77e-f3702e892494"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"0.0005990297102177781`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "48.`"}], "+", 
       RowBox[{"640.`", " ", "z"}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "-", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"7", "/", "2"}]]], "-", 
  FractionBox["0.1533516058157512`", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "-", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"5", "/", "2"}]]], "+", 
  FractionBox[
   RowBox[{"0.0005990297102177781`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"48.`", "\[VeryThinSpace]", "+", 
       RowBox[{"640.`", " ", "z"}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "+", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"7", "/", "2"}]]], "-", 
  FractionBox["0.1533516058157512`", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"9.`", "\[VeryThinSpace]", "+", 
      RowBox[{"48.`", " ", "z"}], "+", 
      RowBox[{"320.`", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], 
    RowBox[{"5", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{3.730289318949972*^9, 3.730289684297323*^9},
 CellID->60892785,ExpressionUUID->"8d371ad5-b9f2-4944-847e-0c4951309d2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"SecondDerivativeBFieldNewZ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.730289322846566*^9, 3.730289337458261*^9}},
 CellID->200160918,ExpressionUUID->"3706edf7-5fb3-4737-87c4-eae2e4ffd132"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vmu7t29eIgZhRRxPQ+drsYxQ96HhgBjUGgyWmFbW4q8nwhkEdsTg2PEYWvhQ
ix1UxB/m0IgDSlU1o39Wizcqx6mbucXB6d7JosVbtVjlMKHQFMQha6OSsvpC
LV6/fIzswT1xCP2WUIa2a7Bh/uL0RwNxsND1eJbbUIPF+dXFXazEQZH6IRdP
Qg0O7dHpyHMUhwtVYr0JDjX4+QuOz5fdxIHAhS6U8WYNbiwriPniLg79vCvS
YSw1mKtfr3zvuTgUDjeuEq9V4yWr11q79uIQ9eZ7slt1NdZrjay1fSIOtkoB
Wmux1Ti2uL3uipY43N03PmlhU42/vzllSSwnDjyZMnj4RjU+k2t5sfiSOJCY
MNtqnqnG7aa++xxk4jDGsHvh78IfTJgSHUg2Lgal9Z2dN8r/4FrKeiaxQjGI
88wJKnr7B9+7kN7jEigGLkKvr121/INp+Ii64lT/9Xvq6dJX6T/4KNukpDWd
GFyNVU5kpfuDM51vGv1qFgUqlYvqb6ercODiIfFtf1GYIzxGSlFchcWimY1X
hEWhOm/ol094Fe7wJ3rs3C8Cny1+W+2aVmEVpvauDDcR0G11aJuirMJZu+fj
bb4Ig4T/fX+9sUrM99gpMk5AGOglBSQ68iuxU+Hkp/JMIWhKmP5YblCJ/Q47
olTeX4VU9SpVCZFKrBFNqGVBeBUCyRKJMskq8ZLsW7MxQ0G4bvvQIi67AjMc
aWZ+dvwKMHOKM9MFVGDjj+OV6rcEYLebrjn4YQW+1fQrTJ2KH3Jk/oo4E1Xg
Z6pMEe3VlyFs/fv0Ync5TvbQsfIg5YanXwNiTdPK8VGmktE8US7gPHX9qJpG
OR4lOvJk+uEFOFrJnFt7uRxzPuKOJFFjh0Gn3ccyBOU4ZtAgnVCcFaKHchr4
vpbhpvDRj/gdPZBlXIwh3S3FQwPxgWyyy2jC6Ngtz7+lWLrgvoLt3dricvrh
g43EUhx9bf9o5N2tYlePd8Zjt0qxynzUte5ZKrxwh1wAx5XgeHvtdsKR8/hz
7/jLaZ9irCrNL/WEWgT3uJ7++OFqMXbwKhLSeiGKKZgVMu6N/Mb5bRUb3Iti
2EE/paUAfmO+BycJJioksfy4OX3Qzi9MbeZqSpcojV383nOhr79wNUfnm75b
MjjtYr34isYvHHaKRc9kVQbTm/M+1M4txL7F7v6awrJ4amExntu6AL9PQdp8
3jcwUxhr1gBzARagU6KzIpXHKlfulYc35OOOE0XUpYHy2KflRZu8az7Wy1BU
6CZUwPl2WeM73PmYcyDZ2sJRAc/Rjm6kdedh86E2E/4xBcz6k4bEKCAPw70y
kyElRaymIcdIL5qHix6tGF1LUcSBW/bcdeM/8Z2XCaqkh4q4OOazpEfkT1y8
e8z8xB0lvCLRceuq7E/87BeLJeUbJczZR6w7uZyLVeonxsZblbC2m+h/7+Nz
MS7gNjUmU8ahzGaed+/mYjK33WITMWVchqNfEx7k4MDvHHy1j5Txhn5NQl5q
Dv7D6/jK0UUZcx/dybbQycET+Z7eWqHKWDeRu5KFLAfXTL5+bRCjjMPldDpa
87PxCfo8Wf/3yrhqPHjS/3E2npoJlKqOVMY7fkVbkqezcWdsujyXrzLm45on
XarIwlnZM48yLZWxYc25s0l2WfhxSEam3U1lHGV+h0eTPQuzblz75MumjOtO
eFw72ZyJI0muZBIuKmGCH+l3SjwycQh7gQtVjhIWujOkZ8+XiRnfOEW2WSth
s0UqG67+DPyl4tozdw4lHBsm49UXnIHdn5SrXG9RxE1XbCPCJDJw8XrGgpaj
IiZJvqEU2JKONZeYXI/RKeIubpJQrZdpuEV+qptLUgFLP32SUTrzAw8sKZ2W
qJDHKem1LZcUf+AyobL3JxXksbPQS/qdo6mYODTfU03yBj6DqD+9c/qKm2YU
KlqnrmMvT7vyox0pWPf5EY+rytfxbFnbuPnVFBzvEeX0OEUGFym85ZZcSMYl
72TsCR9J40f3mHJ6jZJwFuUXughTSTy3ui7+rCIR99s3fsyhk8CuUX8xBUci
3vH8bG5fKYZje73qZCY+YYVI+UQ6bhGcU9dSebc5DvOkNG1LM1/BbVR+zV7h
HzCZTMgDt2Z+vPpAvD/3fix2MmRlv2LPiwWHPq6d7YjBXt8HXulOceF7HPcJ
7r6NxiOdzfeCijixtTnxSS/Nt/gOY6RNc+IFnL5meX6qJxL/nEzzCMlgxY3i
rPxnYyOwvepX7bcZ5/CCe6vEnUfh2Lo+xcWR/wwmr/CTf8H8GrPeuMNRNHga
a1LbJ5nhV9hzcTlJqZwGv43t+dUo8xKz+plSjfdS4Q5OmVahiiC8xO+l+Fj9
JKbN/DLzTj4AU40waNmbHMf3JSmOHqnxxSoWMnv5k0dxeKU94+Ob3pjg79Nd
O7xf3HS3V6ChwRPru80tWn/cKGbO8Q4zjXfFrNtfRQ3tlorfV6tgwc+OuGTv
s7yV20QxQ/+5hYOvttiTOSbq7qm+4suj7eJRjywwgQ/3V1+hxmLOk9Zv+R4b
YAJtkq+v7fKLPdu42s6W38YEAr++9Yy8Luah7Dcn4hUCAmkm/jZr/eKOZa+P
VFuaQLD17a4Rz9fipbsXV/6zNQWCgW5vogcVxc8j5GsthKyBgEOtZuRye/GB
u/P7j/zPgEBWxqP21Eixp3mqZSu3C0jzCxJ98ZktJlQfvHac0wP0lRlvJdmv
FpezBvp/oPIC1uG3valMO8U+UezWoqE+ECb0ZEanlwDLnyzSbD7hDxkxrwVl
WYjwca8HMhaBgcAKhg0pnaS4enPhEtHxENDnltkaP0KJg54GUH/0CQXNkAsV
AbepcfJymBvTizBoKn9oT6BChx8/5jb9eRAOJEr81+MXz2JFdkdt72uRUN3z
/c1hAMu/vV9+R8X1DSyIZapr/mOwM6qPRGe23wKZR0cQfSYHtkRhJMzrsWA8
HtTUlcSHb2/37c1cjYNrUfGxCT4CmC/n0nKe7Ue4cXPxqcbvK3grcniOayse
uObmL8uDEC4ge95e9iwRJII/Pn39nziO56VrTWdPgtPSim9b+iSwn0p6U+zf
JJD0/94hoSyF1aJG6xwuJYOJv9HwdTbAS2y3yrj7U4BhVOOb9L3ruFNuAtMH
fQVO6x8VadvXcfFjz9/HRL+BnHf038MPsjj4R07+QNh38DozH6baJYdtm+78
rLuWCofKgab6T29gzdWp7PyZVIh+0qpsvncDc4qfSw+XSwPx2u8jecQK+OTD
vFSP5TTwbCRv4X6hgFfd732zjEsHl7LVk9urCni+ab01lSMD+moc7lTrKmL9
kTLV864ZsD1CHSVXqojbVl81x7RkQJiRowPrWSWsQPRIhepSJmBVk0d0lkq4
8DT3Xz+PTOjiZGobzVb6h6ebt/fbM+EeDOfdX1HCCeIV9XY8WUDwRtJc6KIy
prv5+uaMVxaomAZvPVRVxgEPdWv1u7PAdydHItVOGe89vazUyZ8N4X8+T5EE
K+P/PLb+3PbLBulLIckG0cp4JKxSvqIvG1Slvh//8Q/f1RPCKyWu5oDchSr/
6X/4XpOtJ5cZmAMX2vmfn/NRxlKVPOUXh3KARSRuXf2JMs7o2JaJE8mFmsml
L9/llPH5qaoS2pe5wLnCkyt2+h/eb0dA8GgudC4fuLMPKGGyEwbFRyR+Qn3b
BfPIWCXsxsR3zSnsJwxk8b0vuaeEl3h3fy1M/IT1jzSpg/uK2BiqJUyu5UGU
wXkdgU//8FvlTUFvRB7MRUxd3ZRUxDcNDcVUZ/Jgc/mtoHujAhb03ROGt/mw
Ee7iTN4njz9H1eTkzueDwinSp6Ua8pghJeoqj1wBpDZ7koTU38CHtQJXGJcL
YJK0dmss4d9/6NtPf6VQCKkjqdwSRHJ4Yr6WjziuEOoVWwYEDWVxPZUJz6ry
L+jvfNqVSX4dv1OPudiQVARn6IxLTz1FWHjkCPMLTQzPH2/LBasLYr5CjWWB
rxiUr6YTPZgVwJzhPyqGtjEE7zO91yHkxyc+pQrH3y6BjZkEP3HzS3hPRbPv
cKEEkuotRbKpzuEtKcIqDfpS4DlaVChVR4/XuNLS06EUkvbVhkXeUeM5gmPe
emGlMNUcdy91nQD3Z6RfwlfKYC+SL+usIBH0xGrT0GuXQViVjs91IQroCCDa
t/IqA3u1C5rO7jTQqK/TxNxaBsave+57LZyF2lvEhQ67ZaAmMXuJd5sFqsQy
ExvPlwPf4ovP/itsUEx13NHdvhwsyjNlEtM5oHAvU78jthzuX7q7+dbhIvyc
eqjMV1kOQVPZk794L0FaSda5AboKcInkM/Gy5IFvqY+Oi6AKaFRqdxZY44Xk
aJLll6YVYKljS3HBkh8+WutWXMurAMoPyjQfT1+B2IekaW8GKyBBku2F6q8r
EK2Y83b+eCVs0pUlmmkKQhgrmcUHzUpQ92V1P+N6FUJO5qqte1aCoJba+5mj
QhCwpYduf60Ew9TWXl8vIfBsyj21v10JvHTin99bCoNrkf6uGnsV7ImEkml1
CoNTyonxVOUqKCwk2DGVFAH7yJ+Nx+yqwPRgjmEmWgSsPQ3yH76vgpN+qqdI
lkTA0vJkQk55FahdY7aalBYFM8284JNzVXDsM5lzerAoGMsZPjOm/QOx9Ixn
AppEwUCAXK9I6g98lP6cH0MpBrpM+Yq0Jn+g8Qg1M7mSGGiTGAlavvwDa/Lk
2ifc/umZNXKmitw/wF1omvL7uxioDuUTMQ38Ad1hO83b7WJwp95o0Y64GsLm
dnJHt8VAOZ+iu46vGmoexq5+ZRQH+aSCsvMa1fA2K+t0jZA4XA8zTn3uUQ2K
jnFjT27+05eulFGtX6rhp4R9c84jcZAwK/S43FQN2PPIUrOFOIiomTzx3qqG
OYZzo1PPxEFQmup+L2vNv3kWaWJ1FQc+nl9SV5VqgIf77P34f3qRm8GUM9im
BqQmem1f/tOTnMdOUY3G1ADVrfa35M7icH7p17ZEWQ34rxZ73bARB9cGWZ+1
+RqIu/zb46aJOHR8q6NIY6yFhQeT7Q0PxEEg4H7M4xu10F/11WnrujgEmfSe
Z7OpBdGPc3c2eP7pxetGaT2xtXAnvZBn+Z9evsY6KxZZXQv5ISyNp7bEIGrf
tvz2Wi1IWnG1enSLwVLPzu3jrHUgvLZaZJD/v/3y6iq5WQf2n37P9kWKQdIb
MiMXxzrgs275QPefGGionHGab6wDBu/1HuVzYpDBm3D0y04d7C7NSQQtiwLZ
Ce6X+pz10GMnUneyQhSKK8UTWt3qQT3IYEzNWBQYEkt5Xn6th6zpOFM1QVGw
9VTKk2+vh95cI5oThyLAIalVX8DTAMfe6F0lfiMCIRlOGx97G8CJM6auLVcY
tN/nKVuK/4UuwicbFX1XIccJ2jlM/kKotACtXfxVoFD/ozcY9hdunzkxQW58
FUqpOu1Vp/4CDxvnksSsINDKPr8be7MJTkwrF33ZuQLP8985e+00QRBbDkEU
hwBwfRlAelTNELfpuyLVzQ9tb9iPSXE2w0qC3gG/GT/w2X0LXb/XDOI9hpsD
AXwwwluYaPa1GaR5afR5O3hAKbG74Y5mCzAb6bnTfb4ES75pppVPWyCr/0pG
/41LEG3mfSjp3QLFUpRTVZNcMMXLe+VSWgv0D0u2HfJxQUC+ZyThsVbg6j14
R1vHCdUNF3Xy01vBqk23TEP8Alhn7K3yVbYC1X806mfnzgNDRHPI555WePDs
1/u1j+f/zdvz4nCiNviQU3Z8iOw8kIw2sj3VaQPBor4RnXk2UNh6NsV2vB3o
2St/2lWywEKP8otopnZguFs/8ewmC0T9ZjlDKdgOsy+2HVVbmWHCq+bm3sN2
EPnG2+k9dQ78yM+ld2S1Q4cPNwsnFxPwLS0r3K5uhwJO7yvaRWeho6VqqLy/
/d++p/KUUD0LnNHW1JkkHWCjJlox5XUGqtgrngXrdkBGiFy8ziYDWBHFUBy1
74CugibJe9EMcHrq6RenwA74/Gk6olKCAUx/0Heb5HRATTGzGq0PPRCLWUhJ
k3XCUugj88yLp+HGbWrC9dxOMCvNzL+VRgOhBqTL2zWdsCPxIj/6CQ10PSMY
POjvhC1X+rJpDhowj1soJCHuguikwfjgT9QQulhry6TeBT0acvUmSaegk7BM
n828C3iXj52weXwKWBkK7nC6d8HfPYYuo8unIFv6C7dAchfo2mOxlVwq6Hrt
PSK70QVbFc7Jyd8ogS3ZpUmRrBtMGX0nHBElmBfaFN9m7oYDblKC0VYK2BvR
e6ch3w29IivVTwkpgE1IStUiqht+CfSWfbc/CeYda6XhIj0QIvERSt6RQvbM
bPpb5R64KmnRY3WDFPYORj7E6vYAmxM+92iZBEIvNjsn+/VAxvZB19gtEsh2
+nGlsKMHFklOjJyhPg57Z0w/DTv0grXsLYLLzcfgBv+jVxNBvfAhtITx68tj
ECqr5jYb1wvZP35tstw8BmyW17XWq3qBkUzs7VQ1Icj/Zj5FSt8HzPcEe13/
HoVXep2eAnl9wDNNbfaB6Aj4zUnBRH0f/F4SlHSuIwB354T99yN9cFQEwsXC
CcAq4qnLcYp+yDffjVdlJ4A7fwjtB4z74ehpeHY25gDJqz0RjHTpBwLKVY1r
ggcIDTcuKYX1A4X/mZm5+n3EtxvzNPdXP7xrCirvId5HFPwCj0OoB+DSGJ8E
hOwi4qI3HNe5BkBQ/Vbm2Su76EBxd3Tz2gAk/OY9qda5gxYMq/SNngxAUMqj
l6UXd1Bj1ENtiZIBWJR351rv3EKhBwG3p54OQprj/SQxmw3kF7xwIs57EFK8
RHU1Lm0gdwa12vsxg3DknKL4i5F1ZCXIooArBuERuTLtuMY6upitzVpHPgQn
GpT+Ot1ZQ8cnlxgTjIfgLq94ienjFeT94/y2639DUPutZUSDbwUd2ql3abgM
AU16gyj9xjLaJCiKIg8bAs81NZtV/2U0ecafxvnXEBD+42O1OUvoz51z5CrU
w3Ba37g9V38B0fINn7ZlGoaHrZNmr04sIH3yz6yRnMPg2Kcq75k3j3bqeIS6
JIaBW5K4/C31POJRktLRNxoGk+9egQLtsyhMVuerdc4wSGfVZDQHTKM+dpbs
8OJh+Ms79Puh7DS6dHS0KKd6GPZuSvtUHkyhshLzpq2+YTD78O73eacptH7N
ZdOTaATqN+IYi+0nkbZYzI3X6iPw+TmP+0z4OEqmf3Q3W38EjjCt5q5ojaPV
DVatdvMRUPaon/zONo5CclMsGT1GQL5LwPVi9hjCgvkRn76MAFuAs+KRgVF0
gbdzOHNrBKbDsipv3htB1iffz7YeHQVPFvaLquwj6Pes7vr6yVEgUTF+NbE6
jNS/TZBIsI3C0KJsa2b0MAq4uMFfpjQKcb+tHsRNDaF5Njr3lnejEPv1t16o
9CASe/7JpjRpFIwth02E1waQVxuvSUbaKEx83szPTxlAp/3lb4WWjcKRBrVV
RdoBhOYczyjPjEJ1C3ne9fU+9Opnz89S8TFYfj32+n5fD+qhfPwtQ3YMsnxi
ZDxje9CFJ6sfPt4eA/5JDm39Rz0o/+xJXzeDMej/aFJ5ZbgbDXleuy8eOAa6
er+v9y11oSs34xczusYg4NKzNne+TuSaxDP6cWQMjpRXHBvb6kBV+/kdoXNj
wKO2TtpX3oG0M5p/WxKMQ0XRlIGbTgfyoiMM4eIaB6bHQXfVXrej1kETrnjH
ccj/s7U2QNeGntlfNnh1egKk3A1WRh2b0WmyxSJ1tgmwpnHOe3CnGeV/zGJg
5pmAlY7FNimOZrRXK96UKjMBJWG3uEzampAXmyLUWk5AIY1z9bpoEwptND5H
VD4BMRNW7dUcjUjAmMu5vmEC4loFzUiGGlDz9mxbRNcESEgV/Tr+vgHRctiF
sC9MgOX7Uj4pmgb07vmLXWCcBMogy17Jk/UomSuu2+W/SfBp6Wf4wVyLFIsN
hK+7TEKP/RfP/tEaNH2f4zWp7yTUX39r8P1rDeLxSFWMfjcJVN3ku/SiNSir
vTAvt3ISUuhHFwi0qlGxV+ebpbNTIOocphmYV4U6+6hUTaunIPxij6B2WzlS
Djbpsm+ZAobnCbbNqeWoSLxQ17tvChpFeSOSfctRfJSRRfzSFPjFfLY1FStH
Zio/fXoYpuGUQ4wUW0IZ2inXybvzZBp2gEYi07cUWdpmXHtkNw3ODVsQaVSK
BliJKizcpkEy5bJFlUwpKnNLawp4PQ2xQRdGaA9LULDokZmygn/5YeZZsm4l
iOl7MpMo2QzUFsoZOFJgFKq1m3CDdgbm6p1dTFqLEQGJyiU15hm4NUEY2B1d
jMaMt4VtBGfg/frdE3c4itEP5lt3v2vPQFIT72VZud8IhS+/YPk+A176l4pR
zC+k7yw1efzWLByzHhZEb/MRt3F1+4L6LBgMjEK9aT5avaNW0W4wC6y8H3jr
RfKR3wXLT4mOs7Apd7aDqSsPpf59rwOJs9BCa6Q+xJKHtjl2/zrszMLe8GHA
alkuKqPyL35ENAfosIzydEwuCtml/iFHNQfVkuyF0f/lItZm7iBqzjk4utft
WnguF8m7asul3ZuDB+ksjmruOSi8pSB/PGUOnF5n+p9SyUYPf9/4Up89B0sv
rT9VXM5GHCnNb7KL50DglKtQzfFslO82bfuibQ5WSdydykuy0AAXI+85gnlY
qM7oNxHJQtweTp/UNOYh+c3P8Rz+TFR+WTSonGgBFkd9E4m+pyFdfrXEZcoF
OAgLcn/pmIa2BG2KWM4sgIq3zWtXuTTEI/F94TnfAvzauhwfMvgDRSqy3BfS
WIC58cxs7TM/kKnJcabPKQtQnWlEOv3pOyJ4ckG4NWsBUp7w7jjZf0fvLGXu
HPm9AJ754WKGCt9Ro91zz0fNCyB3sGt9beEbEvVaHKPbWQC+NHHiI9LfEMnH
zh9+NxfBRd57inY1BSUkrFXlPFgE6SF5n4HaFCSVfGpoRG8RmFg6368npCDr
HzepwX4RrMseB5GqpaDuX9hhM3YRBHxPdOcWfEHfur6A2cIiFN7Ol34dnow4
SYumkhSXgIgll57HIQmt/OEzT7i9BC9bPb9RayShYr9Psx9Vl0D1jXvlFbEk
pH7Mf+HdwyVYmHXJo99NRL6H99bCrJdAUMqn9Jl3Ihpbnzx0jV6CV+NvEunj
ElDCCA39g6klsGYiP39qKx5ZffKLVp1fgpiOtz7Cg/FIQn+bUWVlCYzZDxx8
q+JRS/8A0829JZArok9NfhOPjnR/ZZehWoZuV562MeF4pP8X+HjFlkGI1P0U
+V4cOldkcYMoYBmuKeZO2jyIRbSMOztWL5dBiiXD7yh3LDrpEJDRFb4MAqar
LSMH79Ee/+ezqR+WgSX2VMOrr+9RT+LAsmr2v3hWKbrAo+9RVPC9uPiBZej6
YmNjWRaDKHRENyWFV2CesJNl4NlbRJxfmfpZYgVMeSZpxe6/Rfu0aoaU0ivw
XHRG6a/AWzTXaN0wovzPf5ndLXsuCtVe/5YYqL8CZAnfAm88jkL+3OdUOoNX
YKRzb+zi4zeIYOfoV9uRFeBZazXuDo1A+qPdqx6TK/Bg7qRGh30EKqnPQC/n
VuC/8P2cPe0I5PlRt+3LxgpMTH9+UXExAh3KFR72ka2CUGM4q1h5ODp4ZaOu
cHUVPldZBvx3JBztcQwRMvmsgteFrNZrMWHoIWXenUuBq//2be2xQe8wVLT1
MkYkdBXcG3y5PlmFIdc6Sf570auwUjio4y8Xhnat32r7pa6C320jgW+jr9DO
rzuZS22rANkEPIFJoWjz3m/dSo41aNPisDm8F4K8utP70eU1eEAmJpp/OQRR
GCQ8zBdYA4qys6tpRCGI09pf+7vkGjBPPXBRKwxGaqH31F/fW4Nsv2lkxxmM
MmrHbz9yW4PVGAGXONIg9ESW4tp62xrUlwwJNm/5o7VagiKrnjWovVF53anb
H3mqrkpMDa7BzNqBhUqhP4o26BLrnVmDxULSz+Gu/qjKI0GolGAdzN8d0Dwg
9EfsRSI8L3nWQcTN9IY/ox/qFdI7y+GzDibTiXlWpj7IdFuY0jdwHQ4Wi4ao
bvugpd8nCcdD14HHYr2l66oPOqZQOJMUsw7Ta0zk3Ud8EJ8WXeGF9HVY1Guo
j/jojTzd6jQv9KwDrQVH/q9hL8RZJRp1XmADnOPzvEQ9XqCMIIogb+ENoHlR
Tn7O/AWSuDvuNiqxAUjShZ7twQt0tyvcJPHGBgSZHuvxvvwCOc3MC53X2YC0
0bSotG5PVEeR1MrutwFdGa6HTyU9kbUG1Sn2vg3gTLeR/MjpjgxT+N9xDG/A
2hmKb2lE7ujB9p3zlyY2oMK0VnR6zA1JvH8pLLC0AXajVN8GEt0Q0SCZNjq2
CRdupbWVn3dD70yJErV5NiHXyOGY9GVXVPFsRyjCdRP670u/0tFwQT+rGIuj
XmzCuOCpdA1JF/SVXlzhnd8m/Ecd6e3I4oJCCxy1PoVtgl/4ngPblDPS2l9z
S0/ahIMPy00Mz53Rgs9iVV39JiiydPwy++KEGCPHNI+d2wL3QN+/4gyOSMyb
5bQ9+xYQZqeKKx04IHVb7dbRi1swRHM29PmYAwpXabpdLrgFw0cFzypmOqCT
5EXXvRS3oChaedjllgM68I3gIbDfgolLIjyMgc/QmON1gr3aLXiuMfKrl9Ee
HX3s9tuiaQu6iYj0xgntEat6vktv+xbsNCpVnFiwQ4+E+NYLh7bg4QlSzrQy
O9SxxDjjvLEFiiRxIXJP7VDNk+XWTbZtGJ9sJ4v4Y4vSdOK/rDptg7XEhHnc
Kxsk1Hl+h9h9G0jS48J53W3QL9Uvt854b0PGZ2W3ZksbVK2Utiz9cht+/ufC
paFsg0ZFiyRDP21D0w75L3ViG8RA2/WXq3YbdOxWAii8rJFXPeXWo7M78InS
89kdyv8QiWKEsg3rDnjel3cVWrZCr8pPf/Dh2PmnzzddrrVaodjCc9e/8+9A
ZD1ZYt5bK5SXcjlkS3YHmPSfeSmwW6E5HwXWCMsdUDriG/zj2lOkcc1Dsfr3
DmT5jV82CLFAfesTlGVlO/BMaOdLi60FMky70/nrzw6Qlva90teyQJYszKbp
zTvA8WCespnTAnkd+e0dNf6v3oZ0J0G5OUqr3Ck2Jt8F+t5mfVcCc3TsjoPw
kUe7wDMTVr4WaoaCiAf2dgx2gUD+zq0MJzNEiW9UrJnuQmLtdVIfQzN0RoDu
/pT1LpwX1vpsJ2KG+KlzrP/67MJRgqjT1oOPkXbH8vcPqbuwElk3Xy78GGXq
PmWX2NuFiI8bDlSrJsgwd+lc/JE92LhbT7XWb4JoT9ozEh/fg29/644sVZsg
hwIXqpZTe1BR9sVU4KMJkqANOHhycQ9I/NRz/t4yQWU1CT0xqntgSJVWbplq
jNqEusK3U/bgRiGh5W1XI+QbrBOql7YHxMROlwnMjZDIyEBgZfYeIG93vz8a
Rij61bjn6+I9sJdFiRFXjdCjmRWrS23/6tFKhTDPGaKJj+Q3tQ73wDmKSXZK
3xBtkckSFjzYh9GG0xCraYCoFygiy7T34Y7ti5USJQN0ubnnQr3ePvBwGUyu
SRgg3be28oNP9gGCX90KOmeAys8nBBK578PkQ+8TT0b1UajUESrV5H/5tA4j
Ezb6iMMKM81u7EPMF7mVbkE9hO4F/1jb3QcVo5KIDAY9pCmkgQ4IDmCitcDr
04EuCtpZ0Dt14uAf/yRsbK7VRUt+zImiLAdAlrpTYWasi4o+ul3yUTgAb/lS
KvXYR0i1WVLkXPQBvLNO3jRmfojIJE+UFn04AF2RWou4Yw9RaVLPzYeJB5BZ
8efq2owOEnByNnifdgB/FfX51vJ0EAVLXghj5QEIUhKMytzXQTWWgqN0KwcQ
fFHu/XqoNpImuRRGcesQTBjNj7QyaqEtm60zafcOoXbhqLMaoRZK7/3z+bbG
IRzz7Dq7MKeJmNNNf4UYHkKgiqr5kxJNtPcgaYLM+RDKXkaOu5pporxElmvH
kw+BqelG/n6RBrIiX/yT/P0QJEivUa190UCcjsWq8pmHMPW9p4wgQgNFKj8y
8y06hMtCNjUPn2gg2+V3EYSt/2wnU10meg3ErWPOnNh1CCP5HSFlRzXQcIX4
1+sDhyA5/VXKfUEdqUR3Fb+YPoRqma8/havUEcnRFCW2xUNwMlW+dSVLHWEL
x7aStUNQORDdkYlTRw7t8nr6O4dAaxaQ/DhIHf3f/Sn8//3p/wDCrKHC
       "]]},
     Annotation[#, "Charting`Private`Tag$31825#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.730289338896226*^9, 3.7302896871270103`*^9},
 CellID->1145295615,ExpressionUUID->"82da02c9-10f9-4aa6-a69b-140af67d79db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondDerivativeBFieldNewZ", "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.730289349763061*^9, 3.730289361887525*^9}},
 CellID->1140218411,ExpressionUUID->"59f2bf25-a102-4bc4-9a98-a748e02cfb9e"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.730289362395465*^9, 3.7302896893375273`*^9},
 CellID->565335189,ExpressionUUID->"85fbd760-d9fd-419c-be22-602991893560"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{"FirstDerivativeBFieldNewZ", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.01"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.730289450796817*^9, 3.730289505987608*^9}},
 CellID->289500727,ExpressionUUID->"c67a0b86-f7e6-4141-b33b-e2116a0a9cc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.00006114474181103511`"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "0.13935549067049804`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.73028947724124*^9, 3.7302895064400043`*^9}, 
   3.730289690828724*^9},
 CellID->1607904530,ExpressionUUID->"c3607c15-cc6a-4cef-a796-2b38f423166a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{"FirstDerivativeBFieldNewZ", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "0.01"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73028951137547*^9, 3.730289523838778*^9}},
 CellID->1489820033,ExpressionUUID->"24f77388-e989-47af-8a4a-6b4335e7142c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00006114474181103511`", ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"-", "0.13935549067049804`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.730289524100986*^9, 3.7302896935194397`*^9},
 CellID->1465153847,ExpressionUUID->"c102e451-e75a-42dd-b45b-0582b423d9d5"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.730289168093669*^9, 3.730289172028318*^9}},
 CellID->1044559238,ExpressionUUID->"5779dfd8-0f4b-43d3-8a3a-bbeaf5ce87fa"],

Cell["", "Hidden",
 CellID->1700779722,ExpressionUUID->"5e426aa3-38ee-428e-ac72-4417b9ddf3c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["Solution ", "Solution", "NoFrames",ExpressionUUID->
  "a2f9449e-936f-4378-b5df-d321b63dc823"], "\n", 
 TemplateBox[{InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox[
     "\"Open/Close Section\"", "SolutionButton", StripOnInput -> False], 
     ButtonFunction :> Module[{}, SelectionMove[
         ButtonNotebook[], All, ButtonCell]; 
       CodeSeal`Data`Private`logButton["ToggleSolution", 
         ParentCell[
          EvaluationBox[]]]; SelectionMove[
         ButtonNotebook[], All, CellGroup]; 
       FrontEndTokenExecute["OpenCloseGroup"]; Null], Appearance -> Automatic,
      FrameMargins -> None, Background -> RGBColor[0.93, 1., 0.93], Evaluator -> 
     Automatic, Method -> "Preemptive"], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],TagBox[
    ButtonBox[
     StyleBox["\"Access Solution\"", "SolutionButton", StripOnInput -> False],
      ButtonFunction :> 
     Module[{CodeSeal`Authoring`Private`cell$, 
        CodeSeal`Authoring`Private`data$, 
        CodeSeal`Authoring`Private`submitted$, 
        CodeSeal`Authoring`Private`viewed$, 
        CodeSeal`Authoring`Private`howMany$}, 
       CodeSeal`Authoring`Private`cell$ = ParentCell[
          EvaluationBox[]]; 
       CodeSeal`Authoring`Private`submitted$ = CurrentValue[
          ButtonNotebook[], {
          TaggingRules, "CodeSeal", "Data", "SubmittedProblems"}]; 
       CodeSeal`Authoring`Private`viewed$ = CurrentValue[
          ButtonNotebook[], {
          TaggingRules, "CodeSeal", "Data", "ViewedSolutions"}]; 
       CodeSeal`Data`Private`logButton["SolutionAttempt", 
         ParentCell[
          EvaluationBox[]]]; Which[
         Not[
          Or[
           TrueQ[
            ContainsAll[CodeSeal`Authoring`Private`submitted$, {1599379777}]], 
           TrueQ[
            MatchQ[
             CurrentValue[
              ButtonNotebook[], {
              TaggingRules, "CodeSeal", "Data", "password"}], 
             ToString[
              Hash[
               CurrentValue[
                ButtonNotebook[], {
                TaggingRules, "CodeSeal", "Data", "enteredPassword"}]]]]]]], 
         MessageDialog[
         "You have not submitted work for all the required problems, use the \
menu to generate a progress report.", WindowSize -> Medium], 
         Not[
          TrueQ[
           Not[
            CodeSeal`Data`Private`inViewedSolutionsQ[
             ButtonNotebook[], 
             CurrentValue[CodeSeal`Authoring`Private`cell$, CellID]]]]], 
         MessageDialog[
         "You have already viewed this solution.", WindowSize -> Medium], 
         True, If[
           IntegerQ[CodeSeal`Data`Private`mainNotebookID], 
           CodeSeal`Data`Private`logButton[
            "ViewedSolution", CodeSeal`Authoring`Private`cell$]; 
           CodeSeal`Data`Private`addToViewedSolutions[
             ButtonNotebook[], 
             CurrentValue[CodeSeal`Authoring`Private`cell$, CellID]]; 
           SelectionMove[CodeSeal`Authoring`Private`cell$, After, Cell]; 
           NotebookWrite[
             ButtonNotebook[], 
             CodeSeal`Data`Private`showNextCell["1", 
              CurrentValue[CodeSeal`Authoring`Private`cell$, CellID]]]]; 
         Null]], Appearance -> Automatic, FrameMargins -> None, Background -> 
     RGBColor[0.93, 1., 0.93], Method -> "Queued", Evaluator -> Automatic], 
    MouseAppearanceTag["LinkHand"]],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False]},
  "RowDefault"]}], "Solution",
 CellTags->"CodeSealNavigation",
 CellID->932933760,ExpressionUUID->"57e24816-1ed9-4603-961e-6b158f587ba3"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 1 of 24",
 CellID->274817489,ExpressionUUID->"0bde0787-f31a-4c7c-beb4-0c7358609e52"],

Cell[TextData[{
 StyleBox["i.   Calculate the z-component of the magnetic field at any point \
along the z-axis and plot it vs. z",
  FontWeight->"Bold"],
 "\n\nUse the bField[ ] function of the tutorial to calculate the fields of \
both rings and then add them together to answer the questions. Recall that \
now the origin of the coordinate system is not at the center of the rings.\n\n\
",
 StyleBox["\n ",
  FontWeight->"Bold"]
}], "SolutionText",
 CellID->1650647738,ExpressionUUID->"df53634e-bcc6-4b1f-a340-2d84ba26993c"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 2 of 24",
 CellID->998202844,ExpressionUUID->"65606450-c2a2-4ae5-941c-70c2db9c0332"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Magnetic", " ", "Field", " ", "of", " ", "the", " ", "Upper", " ", 
    "Ring"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"n", " ", "=", " ", "200"}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"number", " ", "of", " ", "turns"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"current", "=", " ", 
     RowBox[{"3", "*", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "3"}], ")"}]}]}]}], " ", ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"current", " ", "in", " ", "amperes", " ", "A"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", " ", "=", "0.15"}], ";"}], "   ", 
   RowBox[{"(*", " ", 
    RowBox[{"ring", " ", "radius", " ", "in", " ", "m"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", " ", "=", " ", "a"}], ";"}], "         ", 
   RowBox[{"(*", " ", 
    RowBox[{"rind", " ", "separation"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bFieldUpper", "=", " ", 
     RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dB", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
           RowBox[{"a", " ", 
            RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
           RowBox[{"d", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "z"}], "}"}], ",", 
         RowBox[{"current", " ", "*", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a"}], " ", 
             RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
            RowBox[{"a", " ", 
             RowBox[{"Cos", "[", "phi", "]"}]}], ",", "0"}], "}"}]}]}], "]"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Assumptions", "\[Rule]", " ", 
        RowBox[{"Element", "[", 
         RowBox[{"z", ",", "Reals"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "AuthorInput",
 CellID->443442243,ExpressionUUID->"4a90faec-07c7-46ab-8b11-adc1bed8a723"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 3 of 24",
 CellID->1911976002,ExpressionUUID->"c97d4d57-8ba9-4aba-bf56-007d38bf7794"],

Cell[TextData[{
 "Note that the sourcePoint, the position of the element of current, is at a \
distance d/2 above the zero of the coordinate system, therefore the \
z-component is +d/2 instead of zero: \n\n",
 StyleBox["sourcePoint = { a Cos[phi], a Sin[phi],  ",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["d/2",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" }",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]]
}], "CodingComment",
 CellID->143847122,ExpressionUUID->"e435d5b4-83f6-462f-ba61-0968db636e48"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 4 of 24",
 CellID->1129532716,ExpressionUUID->"70df0725-e17f-476d-87a9-fe04e7f8b7b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Magnetic", " ", "Field", " ", "of", " ", "the", " ", "Lower", " ", 
    "Ring"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"bFieldLower", "=", " ", 
    RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dB", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", " ", 
           RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
          RowBox[{"a", " ", 
           RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", "d"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "z"}], "}"}], ",", 
        RowBox[{"current", " ", "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "a"}], " ", 
            RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
           RowBox[{"a", " ", 
            RowBox[{"Cos", "[", "phi", "]"}]}], ",", "0"}], "}"}]}]}], "]"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"phi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Assumptions", "\[Rule]", " ", 
       RowBox[{"(", " ", 
        RowBox[{"Element", "[", 
         RowBox[{"z", ",", "Reals"}], "]"}], ")"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}]}]], "AuthorInput",
 CellID->669459574,ExpressionUUID->"615f9690-c105-4c19-952f-5869676edecb"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 5 of 24",
 CellID->2077774086,ExpressionUUID->"eb9950c4-e747-455c-91fd-feadf8def812"],

Cell[TextData[{
 "Note that the sourcePoint, the position of the element of current, is at a \
distance d/2 below the zero of the coordinate system, therefore the \
z-component is -d/2 instead of zero:\n\n",
 StyleBox["sourcePoint = { a Cos[phi], a Sin[phi], ",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["- d/2",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" }",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " "
}], "CodingComment",
 CellID->252197823,ExpressionUUID->"20ab2ec8-39b8-47b8-9f71-dbbdf9cb478b"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 6 of 24",
 CellID->1540093304,ExpressionUUID->"0a72a5bf-7996-49e9-9cc1-d537a13b0fcd"],

Cell[TextData[{
 "The ",
 StyleBox["total magnetic field ",
  FontWeight->"Bold"],
 "is given by the sum of bFieldUpper[] + bFieldLower[] ",
 StyleBox[" ",
  FontWeight->"Bold"]
}], "SolutionText",
 CellID->1547377541,ExpressionUUID->"10b8d3e1-17ae-4e9f-ad4a-2c15aab7ccfe"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 7 of 24",
 CellID->1052537630,ExpressionUUID->"54820e06-93aa-4bc0-a09c-d6ce9d645c46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "total", " ", "magneticg", " ", "field"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"bFieldTotal", " ", "=", " ", 
     RowBox[{"bFieldUpper", " ", "+", " ", "bFieldLower"}]}], ";"}], " ", 
   RowBox[{"(*", " ", "superposoition", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bFieldTotalz", " ", "=", " ", 
     RowBox[{"bFieldTotal", " ", ".", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"the", " ", "z"}], "-", "component"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"bFieldTotalz", ",", " ", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", ".5"}], ",", " ", ".5"}], "}"}]}], 
    "]"}]}]}]], "AuthorInput",
 CellID->884895753,ExpressionUUID->"c28f3ab7-fe99-4cc6-8a15-f3a712c52e2e"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 8 of 24",
 CellID->1007856657,ExpressionUUID->"5f1c5e66-bdcf-4c77-9679-48987c9c8e30"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
BJr+ND4hrKIE//e+DP3/+7L/AVhif8E=
       "]]},
     Annotation[#, "Charting`Private`Tag$27518#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 0.5}, {0., 1.7749028450789764`*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "AuthorOutput",
 CellID->519533418,ExpressionUUID->"3c0c4d7a-8fd8-4a20-aff6-c1a709ba4f62"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 9 of 24",
 CellID->295973869,ExpressionUUID->"63d4e292-ebc3-4c3f-8b8f-5e4c88f3361e"],

Cell["\<\
Note that the z-component of the magnetic field is almost constant around z = \
0, we expect the derivative of the z-component to be zero at z = 0. You will \
check this by answering the question (ii).\
\>", "CodingComment",
 CellID->1068749443,ExpressionUUID->"bc16bf26-cec8-4069-9aae-67c59b7f768f"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 10 of 24",
 CellID->719694336,ExpressionUUID->"7769b577-e7b5-430e-af39-ad185a64586a"],

Cell[TextData[{
 "\n",
 StyleBox["ii.  Calculate the derivative of the z-component of the magnetic \
field, plot it vs. z, and calculate its value at z = 0,     ( ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     SubscriptBox["dB", "z"], "dz"],
    FontSize->16], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"c349d1d8-f481-4bd5-ab91-bfde31d2006d"],
 StyleBox[" = ?  at  z=0)\n \n",
  FontWeight->"Bold"],
 "Use the function D[ ] to calculate the derivative of ",
 StyleBox[" \[OpenCurlyDoubleQuote]bFieldTotalZ\[CloseCurlyDoubleQuote], ",
  FontWeight->"Bold"],
 " use",
 StyleBox[" Plot[ ] ",
  FontWeight->"Bold"],
 "to plot it.,  and use",
 StyleBox[" /.z\[Rule]0 ",
  FontWeight->"Bold"],
 "to evaluate the derivative at z = 0.\n"
}], "SolutionText",
 CellID->1441269485,ExpressionUUID->"051bc903-4b20-417b-8186-1ac818677ed4"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 11 of 24",
 CellID->1669388737,ExpressionUUID->"9d9c6342-85a6-4afb-a8d8-9c40b89384a3"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{"Calculate", " ", 
    RowBox[{
     SubscriptBox["dB", "z"], "/", 
     RowBox[{"dz", ":"}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"firstDeriv", " ", "=", 
     RowBox[{"D", "[", " ", 
      RowBox[{"bFieldTotalz", ",", " ", "z"}], "]"}]}], ";"}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", 
     RowBox[{
      SubscriptBox["dB", "z"], "/", "dz"}], " ", "vs", " ", 
     RowBox[{"z", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"firstDeriv", ",", " ", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "]"}], "         ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Calculate", " ", 
      RowBox[{
       SubscriptBox["dB", "z"], "/", "dz"}], " ", "at", " ", "z"}], "=", 
     RowBox[{"0", ":"}]}], "  ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"firstDerivAtZero", " ", "=", " ", 
     RowBox[{"firstDeriv", "/.", 
      RowBox[{"z", "\[Rule]", "0"}]}]}], " ", ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"use", " ", "/.", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{
      "0", " ", "replaces", " ", "z", " ", "by", " ", "0", " ", "in", " ", 
       "the", " ", "expression", " ", "of", " ", "\"\<firstDeriv\>"}]}]}], 
    "*)"}], "\[IndentingNewLine]"}]}]], "AuthorInput",
 CellID->627365911,ExpressionUUID->"5de2d73e-ca2a-42e4-9af3-8607858cea16"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 12 of 24",
 CellID->180661985,ExpressionUUID->"82525bc3-7981-4824-a828-fb1beb33552a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6P8Ang4U+A==
       "]]},
     Annotation[#, "Charting`Private`Tag$27571#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 0.5}, {-9.171698087913132*^-7, 9.171698416361847*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "AuthorOutput",
 CellID->123341283,ExpressionUUID->"a469cd17-24bd-40b6-a34f-7408b8ed48de"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 13 of 24",
 CellID->1320910727,ExpressionUUID->"1c463483-65de-4895-8dc5-9b43fa941481"],

Cell[TextData[{
 "From the plot, we observe that the derivative of the z-component of the \
B-filed is zero at  z = 0.  Check it with the value of ",
 StyleBox["\[OpenCurlyDoubleQuote]firstDerivAtZero\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 "  calculated in the third line of the code above.  \n\nNote that the first \
derivative is also flat around zero. As a result, we expect the second \
derivative of the B-field to be zero around z = 0. You will check this by \
answering question (iii).\n\nThe plot shows a maximum and a minimum of the \
first derivative of the z-component of the B-field. You will calculate those \
points by answering question  (iv)."
}], "CodingComment",
 CellID->455479474,ExpressionUUID->"58301785-5f68-4854-96af-b9a9bbbcc544"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 14 of 24",
 CellID->1773989021,ExpressionUUID->"308f3c46-698f-444a-9a4b-5c0f06d64407"],

Cell[TextData[{
 "\n",
 StyleBox["iii.  Plot the second derivative of the z-component of the \
magnetic field vs. z,  and calculate its value at z = 0.    ( ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["d", 
       RowBox[{" ", "2"}]], 
      SubscriptBox["B", "z"]}], 
     SuperscriptBox["dz", "2"]],
    FontSize->16], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"4acdad15-86a9-4683-bd51-1df862d825f0"],
 StyleBox[" = ?  at  z=0)\n",
  FontWeight->"Bold"],
 "Use the function D[ ] to calculate the derivative of ",
 StyleBox[" \[OpenCurlyDoubleQuote]firstDeriv\[CloseCurlyDoubleQuote], ",
  FontWeight->"Bold"],
 " use",
 StyleBox[" ",
  FontWeight->"Bold"],
 "Plot[ ] to plot it, and use ",
 StyleBox["/.z\[Rule]0 ",
  FontWeight->"Bold"],
 "to evaluate the second derivative at z =0.\n"
}], "SolutionText",
 CellID->733090227,ExpressionUUID->"eb582b1a-2274-4e77-a388-9e344f5f65fd"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 15 of 24",
 CellID->1453682319,ExpressionUUID->"da00eb55-21dd-45b7-b558-4ab5c759b020"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Calculate", " ", "second", " ", 
    RowBox[{"derivative", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"secondDeriv", " ", "=", 
     RowBox[{"D", "[", " ", 
      RowBox[{"firstDeriv", " ", ",", " ", "z"}], "]"}]}], ";"}], "   ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Plot", " ", "th", " ", "e", " ", "second", " ", "derivative", " ", 
     RowBox[{"vs", ".", " ", 
      RowBox[{"z", " ", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"secondDeriv", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "]"}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Calculate", " ", "second", " ", "derivative", " ", "at", " ", "z"}], 
     "=", 
     RowBox[{"0", ":"}]}], "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"secondDerivAtZero", " ", "=", " ", 
     RowBox[{"secondDeriv", " ", "/.", 
      RowBox[{"z", "\[Rule]", "0"}]}]}], " ", ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"/.", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"0", " ", "replaces", " ", "z", " ", "by", " ", "0"}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]"}]}]], "AuthorInput",
 CellID->69947616,ExpressionUUID->"52f20308-785f-4636-ad26-df9c1c6200d5"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 16 of 24",
 CellID->497582581,ExpressionUUID->"739601a7-b4fb-4b57-89df-797b8b277e95"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3+vA//+9zv8Bb9n/VQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$27630#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 0.5}, {-0.000012180415226416393`, 5.83531794089104*^-6}},
  
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "AuthorOutput",
 CellID->1597529441,ExpressionUUID->"3f2719ca-9693-47de-9c93-8b992ceca5e6"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 17 of 24",
 CellID->1199480333,ExpressionUUID->"d9bf5d49-b6c7-48c2-807c-703d5c893a55"],

Cell[TextData[{
 "From the plot we can see that the second derivative of the z-component of \
the B-field is zero at  z = 0.  Check if the value ",
 StyleBox["\[OpenCurlyDoubleQuote]secondDerivAtZero\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " in the third line of code above is zero. \n"
}], "CodingComment",
 CellID->1167042155,ExpressionUUID->"84f2c8b5-536f-4363-b1e2-9fdaada51cf7"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 18 of 24",
 CellID->1527819880,ExpressionUUID->"42d7d606-cc2a-48b0-924c-f941ab5d8436"],

Cell[TextData[{
 "\n",
 StyleBox["v. At what values of z is the first derivative of the z-component \
of the magnetic field a maximum or a minimum? Compare those values with the \
radius of the ring a = 0.15 m. \n",
  FontWeight->"Bold"],
 "\nUse FindMaximum[ ] and FindMinimum[] to calculate the value(s) of z for \
which",
 StyleBox[" \[OpenCurlyDoubleQuote]firstDeriv\[CloseCurlyDoubleQuote] ",
  FontWeight->"Bold"],
 "is a maximum or a minimum. Use as starting points values of z close to the \
local maximum and minimum. You can get those values looking at the plot of ",
 StyleBox["\[OpenCurlyDoubleQuote]firstDeriv\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 ".\n"
}], "SolutionText",
 CellID->1451678156,ExpressionUUID->"dce5cc0e-167d-405a-a7d1-a164ed3836dd"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 19 of 24",
 CellID->559651811,ExpressionUUID->"e877a47f-84dd-48dd-a6f9-0f093c765564"],

Cell[BoxData[{
 RowBox[{"zmax1", " ", "=", " ", 
  RowBox[{"z", "/.", 
   RowBox[{"Last", "[", " ", 
    RowBox[{"FindMaximum", "[", 
     RowBox[{"firstDeriv", ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", " ", 
        RowBox[{"-", "0.4"}]}], "}"}]}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"zmin1", " ", "=", " ", 
  RowBox[{"z", "/.", 
   RowBox[{"Last", "[", " ", 
    RowBox[{"FindMinimum", "[", 
     RowBox[{"firstDeriv", ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", " ", "0.4"}], "}"}]}], "]"}], 
    "]"}]}]}]}], "AuthorInput",
 CellID->927713773,ExpressionUUID->"4cd2532b-67ed-46aa-9019-eb05a17a8c52"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 20 of 24",
 CellID->356732138,ExpressionUUID->"e7ad840e-b041-4e85-8593-e6bc42734c3f"],

Cell[BoxData[
 RowBox[{"-", "0.1393554906871145`"}]], "AuthorOutput",
 CellID->1444547564,ExpressionUUID->"0830209b-a75e-43a2-b90c-b12bccf2bf73"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 21 of 24",
 CellID->1935570431,ExpressionUUID->"9b9f5e12-05e8-47f3-ad02-930f5aec07d9"],

Cell[BoxData["0.1393554906871145`"], "AuthorOutput",
 CellID->876265556,ExpressionUUID->"5646d368-8454-4b6d-b69b-38e4ddefbc44"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 22 of 24",
 CellID->1740521434,ExpressionUUID->"4f6e9e6a-7ef7-472a-8048-1bb476cfe446"],

Cell["\<\
Due to the symmetry of the B-field  the magnitudes of zmax1 and zmin1 are the \
same. 

Considering that  the radius of each ring is a = 0.15 m, the location of the \
maximum and minimum of the first derivative of the B-field is approximately \
at  z ~ -a  and z ~ a. As a result, a little bar magnet place at these values \
of z will experience the largest force.  (Recall that F ~ dBz/dz, section \
8.4.1). \
\>", "CodingComment",
 CellID->856836226,ExpressionUUID->"0e629f69-f155-44ae-8b82-6b159e519fb4"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 23 of 24",
 CellID->1595959893,ExpressionUUID->"39f50213-5f08-40e3-b917-181b3abd56b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "the", " ", "three", " ", "functions", " ", "in", " ", "the", 
    " ", "same", " ", 
    RowBox[{"figure", ":", " ", 
     RowBox[{
      RowBox[{"the", " ", "z"}], "-", 
      RowBox[{
      "component", " ", "of", " ", "the", " ", "field", " ", "its", " ", 
       "first", " ", "and", " ", "second", " ", "derivatives"}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"bFieldTotalz", ",", "firstDeriv", ",", " ", "secondDeriv"}], 
     " ", "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", ".5"}], ",", ".5"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
   "]"}]}]], "AuthorInput",
 CellID->1034307271,ExpressionUUID->"b5a26be2-09aa-4c9e-95cc-fcc4e5da0842"],

Cell["", "SolutionDivider",
 CellDingbat->"Step 24 of 24",
 CellID->918320432,ExpressionUUID->"f076510d-998f-4161-a556-043da2c64832"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
BJr+ND4hrKIE//e+DP3/+7L/AVhif8E=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$27708#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6P8Ang4U+A==
          "]]}, Annotation[#, "Charting`Private`Tag$27708#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3+vA//+9zv8Bb9n/VQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$27708#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-0.5, 0.5}, {-0.000012180415226416393`, 
      5.83531794089104*^-6}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"bFieldTotalz", "firstDeriv", "secondDeriv"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "AuthorOutput",
 CellID->733505771,ExpressionUUID->"94143b6f-9e8a-47c4-b475-6e80e2844f3f"],

Cell["", "SolutionDivider",
 CellID->1360871682,ExpressionUUID->"1c13d2a0-43ea-4d9a-8f44-a8a336791bd2"],

Cell["Use the button above to start viewing the solution", "ShowNextButton",
 CellID->1039597573,ExpressionUUID->"faf76021-b360-441a-a77f-9e1379a0cf92"],

Cell["", "Hidden",
 CellID->589457419,ExpressionUUID->"bc559023-9236-4db0-89c3-451d8f17d056"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Colorful",
NotebookEventActions->{
 "WindowClose" :> 
  Module[{CodeSeal`Authoring`Private`newLog}, 
    CodeSeal`Data`Private`debugSpeak["close"]; 
    CodeSeal`Authoring`Private`newLog = {
       AbsoluteTime[TimeZone -> "America/New_York"], 
       SessionTime[], 
       Last[
        EvaluationNotebook[]], 
       Length[
        Notebooks[]]}; 
    CodeSeal`Data`Private`logEvent[
     "WindowCloseLog", CodeSeal`Authoring`Private`newLog]; 
    CodeSeal`Data`Private`killDataLogging[]; 
    SetOptions[$FrontEndSession, FrontEndEventActions -> {}, 
      TaggingRules -> {}]; Unset[$Post]; Unset[$PreRead]; 
    Unset[$MessagePrePrint]; Map[ClearAll, 
      Names["CodeSeal`Data`Private`*"]]; 
    CodeSeal`Data`Private`activatedQ = False; 
    CodeSeal`Private`closedNB = EvaluationNotebook[]; 
    CodeSeal`Private`closingNB = True; 
    CodeSeal`Data`Private`activatedQ = False; Null], PassEventsDown -> True, 
  PassEventsUp -> True},
NotebookDynamicExpression:>Dynamic[
  Refresh[
   If[
    TrueQ[SessionTime[] > 10], If[
      And[
       TrueQ[CodeSeal`Private`closingNB], EvaluationNotebook[] =!= 
       CodeSeal`Private`closedNB], Clear[CodeSeal`Private`closingNB]; 
      Clear[CodeSeal`Private`closedNB]; Null]; If[
      And[
       Not[
        TrueQ[CodeSeal`Private`closingNB]], 
       Not[
        StringQ[CodeSeal`Data`Private`studentUUID]]], 
      CodeSeal`Data`Private`studentUUIDFromFile = CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "CodeSeal", "Data", "studentUUID"}]; If[
        StringQ[CodeSeal`Data`Private`studentUUIDFromFile], 
        CodeSeal`Data`Private`studentUUID = 
        CodeSeal`Data`Private`studentUUIDFromFile]; Null]; If[
      And[
       Not[
        TrueQ[CodeSeal`Private`closingNB]], 
       Not[
        TrueQ[CodeSeal`Data`Private`activatedQ]], 
       Not[
        TrueQ[CodeSeal`Data`Private`activatingQ]], 
       StringQ[CodeSeal`Data`Private`studentUUID]], 
      CodeSeal`Private`mainNotebook = EvaluationNotebook[]; 
      CodeSeal`Data`Private`mainNotebook = CodeSeal`Private`mainNotebook; 
      CodeSeal`Data`Private`stringFromInsideNotebook = Uncompress[
         CurrentValue[
          EvaluationNotebook[], {
          TaggingRules, "CodeSeal", "Data", 
           "encoded-data-collection-package"}]]; Export[
        FileNameJoin[{$TemporaryDirectory, 
          "encoded-data-collection-package"}], 
        CodeSeal`Data`Private`stringFromInsideNotebook, "String"]; Get[
        FileNameJoin[{$TemporaryDirectory, 
          "encoded-data-collection-package"}]]; Null]; If[
      And[
       Not[
        TrueQ[CodeSeal`Private`closingNB]], 
       StringQ[CodeSeal`Data`Private`studentUUID], 
       TrueQ[CodeSeal`Data`Private`activatedQ], 
       Not[
        TrueQ[CodeSeal`Data`Private`activatingQ]]], If[
        Not[
         IntegerQ[CodeSeal`Data`Private`dynamicCounter]], 
        CodeSeal`Data`Private`dynamicCounter = 0, 
        Increment[CodeSeal`Data`Private`dynamicCounter]]; If[
        Not[
         IntegerQ[CodeSeal`Data`Private`windowStatsLastCheck]], 
        CodeSeal`Data`Private`windowStatsLastCheck = UnixTime[], If[
          TrueQ[Subtract[
             UnixTime[], CodeSeal`Data`Private`windowStatsLastCheck] > 5], 
          CodeSeal`Data`Private`windowStatsLastCheck = UnixTime[]; 
          CodeSeal`Data`Private`getWindowStats[]; Null]; Null]; If[
        And[Mod[CodeSeal`Data`Private`dynamicCounter, 2] === 0, 
         TrueQ[CodeSeal`Data`Private`dynamicCounter > 5]], 
        CodeSeal`Data`Private`sendLocalDataToServer[]]; If[
        Not[
         IntegerQ[
          CodeSeal`Data`Private`counter["NotebookLog"]]], 
        CodeSeal`Data`Private`counter["NotebookLog"] = 0, 
        Increment[
         CodeSeal`Data`Private`counter["NotebookLog"]]]; 
      CodeSeal`Data`Private`getNotebooks[]; 
      If[CodeSeal`Data`Private`counter["KeyLog"] > 100, 
        CodeSeal`Data`Private`purgeDataFromMemory["CacheTrigger-KeyLog"]; 
        Null]; If[
       CodeSeal`Data`Private`counter["EvaluationLog"] > 10, 
        CodeSeal`Data`Private`purgeDataFromMemory[
         "CacheTrigger-EvaluationLog"]; Null]; 
      If[CodeSeal`Data`Private`counter["NotebookLog"] > 30, 
        CodeSeal`Data`Private`purgeDataFromMemory["CacheTrigger-NotebookLog"]; 
        Null]; If[
       ByteCount[CodeSeal`Data`Private`eventLog] > 1000000, 
        CodeSeal`Data`Private`purgeDataFromMemory[
         "CacheTrigger-EventLogTooBig"]; Null]; Null]; Null], UpdateInterval -> 
   10, TrackedSymbols :> {}]],
WindowSize->{1920, 2797},
WindowMargins->{{Automatic, -1920}, {Automatic, 35}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        TemplateBox[{
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1: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
/E7o27fvcS3+1r2pWXn5KLbSQmzDJUmS5Dv51L3vv//+U+fNm9duxowZZ69Y
saLTxo0bO6v42yqWNnXsmJiYbkRp11b/4VaUL/KIiIgLt2/f7mWLTS0bx/Do
2Eq7turVBP0vxX6XWcG+PjVibPNowTju5YTaH47XF9/v/XyB4/ZvqFTyd4lG
BZ6NVwh/g/cNR8F75ZWCN/h3aRTgWq9qDOCdXqhFsrOzBwhCbYD7SRAEQRDK
4PTzSbB9Zjv+Dio0TgoLC690kvr6Ni4oKLiioVEbv9fgOP0bKk7/tiiUi+Nr
j5obdblWytfammzDdsduXUp2BfZk+RWsm8j3odVjXrqUWg717+LiYl3zoQZE
G0hq3+np6edQ+6Y/4dWrV3egzeV777138m233XYidW9DoypX7xbdW5IkSZVI
uu7t5+d3zLJly3RQP6ZDhw6tH3zwQd3H+bx5885Be+egoKAu9GdO/+TKdlvZ
aCv/4tSufaFstZU9d1RUVI8dO3Z46dvUsml7rdYjmXVs89oupVtTryaYM3Ww
bz9SgWZ9hRnqijj+lTjmAGL3DYlj/6Mxg7+hUYFrHlhT8HwVao9BQuME89vV
jQF8Awi1CP5NB1cE+gmCIAiCIAhNBLfbfbVQNXLr+R0d5xwklKW+vo1dLtfA
Jso/hPojvwGsPasNnF6r1Ryp6pok2ohU0/7lSuv6GGofuVVcG4H5uZ8duT50
/BxDg8c46UMth7pOSUmJrvuEhYX1oL0ktW/GwDVsKjv9/PPPZ9Hm0t/f/5RR
o0a17tmzZ0vRvSVJklRLSde9qXdjvtBhLIV27dqd9MADD5xOH+dz5sw5F9vP
27Rpk+6bnFDvJmYbbTsf43YoH+Xbt2/vFRUV5bHZ5pxIe2xlg63ssHEOW/tr
9NX1ajPY9yrsp4N9BxClZxPUPVpwcnLyQEKNFMcbhP0HEzt9APte05DBM61J
gWeyUE8UFBRUCPoNEbzBv0ujAO/K1zYGcK1CLYJ/0+sEoTYoLCwUBEEQhDI4
/XwSyuL0+6fQeNm7d+8QJymop29jnOuahkZBJX6Pacw4/XtXXeB2uwc3BZxe
q9UccVdhDVZV1glZ18LkWGyZzHZm+VVYG4H3vaus5JfjKyTP0NypmdMmEefr
U1RUdBntGyMjIy+hvSS177S0tPOV9k3/wrS59Pf3P83Pz+8k0b0lSZJUi+ko
ZetNzTsoKOhY6t7du3dvM3bs2HZz587tOH369K5Lly49f8OGDd2UT3PaalPz
3rVr1yW7d+/WfY7Hx8dfRux8j5tRfsp37NjROywszEvfxv66nm22w6aWbadf
o6+uV5vBvlcj16ENodKyzfjQiYdgPr6O2H1D4jlxfUMG19ikwN90Q03Bs16o
HDcKVQfvmzcJtQfei4cKgtDwwLfrzYIgCIJgxennkyDUBk5/AzUUioqKbmwO
FBcX39DQwHXVGBzn+oZKYWFhk8Pp30trC6fXzzXHtXdVXJNUqXU8lVl7Qt0j
17ceX2UfJRXp7fhbB1DLYdxVXKOu+1ADYkxb+v9Fezf6EGb83DVr1nRetGjR
We+8887pw4cPb3PBBRccT51KdG9JkiTVMOlzBOcTf3//Y1HWYSwFzDNtR40a
1X727Nmd5syZc8Hy5cu7BQYGdt+5c+dFhHMVoc5NO+3Y2FiveNlWlD9youJs
R0VF9d2+fbvH3zjarty9e/cAzH1eNtloH6R0bAX1axyrjH6Ncw3BftdmZ2d7
QP06pWkTpRVjnr2BUCPFMW8s73sIx765MYO/e1gz5BahYvAOVCHo90/BG7zH
NQowv93aGMC1CrUI/k1vE4TaAO9AwwVBEATBitPPJ6EsTr9/ChVTUFDwT8GW
W5oxw5oybrf75qaG0+vOGiL1/Rt3bgNYN1XbVLQmyWyHY7f+xWWxcTKv01Br
BQos2nr+3/4Xq+Q7I++ID8zyNParqefg2FcVFxdfQf2bGhDtvqkl0e47KSmJ
PoTP/+mnn7osWLDg7HfeeafdyJEj23bp0qWV6N6SJEmqYdLnBvqOMOveO3fu
PI66d9euXU8eP358h5kzZ3aeNWvWhcuWLeseHBzcIzo6+mJC+26ya9euy1Hv
FxMTY42h7TOetorDjXNdGRERodtuE86JON7ViYmJXv7FsW0I7bHzTD6Gs7Oz
r8Wxrle6tYL6Nfa5CbkOytSsrejPSVzHMBzjFhzjltTU1H+i/23E7hsS7cMb
M07/LlJV8P/n9pqC4wiV446KwHi7U/AG81CjANc6ojGAaxVqEfyb3lUR6CcI
giAIgiA0Edxu9wihytwpNAjuaK64XK7ba0phYeHwhgqur8nh9O+ltQX+ltsa
K06vM6vL9Wk5R+xCdDsW2tzk+bBPUmtLULbDa01Cbjn+TVzl+Ln05WPCZdLV
bXwhUF8fQj0Hf8ugkpIS3W8vNSDkfah9M04ufQgzfm5AQMD51J4+/PDD9n5+
fidXVfc2tG9JkiRJMid9bqDuTb/mmGOOQ10H80vL3r17nzJx4sSzZsyY0QXb
Llq5cmWPoKCgS5Rfc9p302abfsnRdiXwiqltxuybnCjb7sjIyIERERG6T3Jl
v02Nm/baykY7IyPjemzT9WzMlx6oaWOu1LVrM9SxqWFjPx2UbyUo6+A6bgMe
PRhlXSPFvndg+13ETh9A3381ZPBv0ujAs9An2O7XkME1Nhnw99xdEegnWMB7
4z2NAbyPNgpwrfcKtcp9glAbYHwKgiAIQhmcfj4Jts/se4WqUVhYeE994moA
3112FBQU3O0k9fUNj3P5NURq+psOjvEvof7IL+e3zMaE02u1miNum/VXeWXt
GDx2LLmGLZLLtM4l17BhclWwLsPlvUbAo6Xn22jqBT78NSgd3dqGfXVtHdc/
1Eyuoa9TG6eugz7X7NmzR9d9YmJiqAcxtm2fzMxM3e6b2veaNWu6zZ8/v4u/
v/+ZY8aMOWXAgAEniO4tSZKkGqYyujfmnJaEunevXr1OHTduXMeFCxeeN2/e
vItXrlx5ydatWy+Njo7WY3gzFjdhvAb6Jcf8VSbWNsnIyBik4m0rVGxuHGtw
ZGSkbstNrTs5Ofk6atzY7mWvjX10TZvzKm2zlX02jqFr2BZuR/87qGMTlO9E
7rHRxL4jlLZNvRj9/ZD7Ib8b7fcRXE8Z0H5/QwZ/T7ngWdOowDWPrCk4jlA5
/i1UHbwnjmoM4P32gcYArlWoRfBvOroi0E8QBEEQBEFoIhQUFDwgVA232z1K
aBD8uz4oKioa2dDAddWYwsLC+xsquL4mR14D+M20NnB6rVZzpBLrsfS1SPnG
Wh3DDslqu8TcajvmtY7B8O+nfAGSamnoGMO3WVFaer6NrTq1dNogUr+hpoO2
6/fv36/rPtSAaC9J/7/K7pva95o1ay6aN29eV39//45+fn6n9e3b90TqVGZd
m9pVeTgtsEmSJKlBJd3HuYrtPXHixOOWLVvWEnWdYcOGHd+zZ8/Txo8f3+nr
r78+f86cOZcsX7780o0bN/ahnTd9m2Nu0n2WU7+mb3LMX4yt7cEu7jbhXEft
m77McaxrsZ8eY1v5J8dxPb7HSVJS0q1oG2620SbUtrFtRGpq6l3KTptg3vQz
a9kkPT39HpxXB+V7lbZNvRjbRyIfifzfaBtN7PQBtI9pyOA5VS541jQqcM1j
a4FxQsXgnaVC8K70oOAN/l0aBbjW8Y0BfD8KtQj+TScIQm2AZ/JEQRAEQbCC
9w3Hn1GCN06/fwoVU1hY+GBDxOlvVlzDuOZKQUHB2CbOmKZGfgP4zbSWcHy9
VnPD1xqs/L9tGHT7FTwvdHubnJwc5lzfUmbdhcvig8esn6Pu0dBRvsfw5Vmh
Xm7F7cM+3YhVWCZGRVZWFrmduji1HZx7aHFxMePSXk8NiPaRqampV2ZkZPSj
3Tfj5wYEBFy8aNGiC/z9/Ts98MADpyvdm3q2pmkVIrq3JEmSLMkT23vZsmW6
7j116tTj09LSdMaMGdPqiiuuOH3SpEnnzJ8/v9tXX3112apVq3oHBgb2ZSxv
2nnv3r1b92FO/Zr+yePj46/FvKf7J1c+ys3QXznnOaJ0cBzjhqioKK9Y27Th
Tk5O1u22le22Vd/muiVq2zi3rmNjfx3q2ejn0bKVng1GZWZm6qD/A0DXt5GP
Qf+x6EfG4domELtvSLRPbMjkV/C7BPo81FTB32cLnq8PNxXw99QJGF+Pbtu2
bfL69euf+/bbb1+dPXu2/8cff/yOlU8++eRdBeaDN5csWfLa8uXLX8G+zxBc
4yQc7xGh4YH33EmNAdxDj1pBu1CH4Nn2mCBUBO4VQRAEQSiD088nwfaZ7fj7
ZWOjoKBgUn3iagDfXXbg2h5xkvr6Nna73Q83RPJr+LsOjvFQA2ai0DDJbwBr
6KpLXgNYa1Yd3BXbLxCuB1J2SLpdV763nZjdmgVdN3cbPjTyTfo5tXPDJ2oZ
rZw2gWaN3EqBj9gUyg69wBIDgDq6YWt+J+0Xaf9dUlIyFOcZSg2IdpLJyckD
ld03te9169b1mjt3bve33nrrnPvuu++MSy+9tLW/v/+xldG8RfeWJEmSTaLu
fbTSvenXPCAg4HjMQ60Ide8hQ4ac8eSTT3ZesGDBhXPmzOmzYsWKy7ds2dI/
Njb2Csbzxtw0iFC/pn/yxMRE3WbbGoc7x4jFTX/lnOeIitmN49wcFRWlx99m
3G0c7/a4uLg7k5KSvOy3rfo2ob6N/v+mlo1z6KCsa9rUs2kDTT0bxx1HTRtz
rQ76PAgmEPSbCB5C34fQ52Fs17UW5I81JviNi7//8fJAn0YFrvmJmoLjNCsw
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
1O6U9k1Nz6p941ynYZ9TsU3XvakNVkb7pt5IlP6oadpxtaV9txD776aUfGre
mo3ubda8NZPuzXvKau+t7kGleyvNG+P2RKV5Yy7RdW/e07y/eZ9b7b05Fjgm
lL03xmFHjhuuG+EYwj5duJ6E60pQ78axxvUmGDcXo88lGFOXot4b2y/Htn6o
X4H6VVy3gvLV1Ly5ngX9r8c8ciPqN2PbLajfhnPdjvIIlP1Qvgf97kd5FMpj
wDiUJyKfhPwJ5JOx7ws45qs4zn8wV7yB8tv4Oz7GdU/H+ediDlqCa1rKtTk4
1kr0WY08AP1/RnkzCKLmjX+jbWjbjrkvnOt+UOf6nyjknBN3cY4E8QaJaE+m
5o1yBudYzrWA8y7nXxdwgwJjfRLXKe3Fvz3nba5dKqHebcztB7jOieud8Gw4
ZDwH1DNBPSPUM+N3bPvdeJbwmfKHetbwuaM0btMzyaNxm55b6llmfcZZn4HV
fqYKjY/AwMC/Jk+eXNq9e3cvLfWoo47S7bmpu9Im+ffff69P6VeSTcL/Lw3/
v7TPP/9c9yV/xRVXMEa4rS1+nz59aItfunTp0lL6rXf6PhMEQRAEQRAEQRAE
QRAEoXapxG/1ldK/iythA46yrkVQk6AdHnOz/behX/jUwKl/G1APOaDsv6l/
Gyjbb2opugRO/ZtJaeDUYKjF0P4b/XT7b0OnSUNbKkgx7L8TDT1H18CV/TfY
iXPuQK7bf7tcrlC32027yCBqRmhfT/07JyeH+vcqtC3Ly8uj3ffC7OzseRkZ
GV8lJSVN3b179/sJCQn/iYuLey49Pf1xHOMhMB77jsU+o7HPv6lvUedC/V/U
vah/paWlUQcbiuPdiPbrrLbf1NKoqZltv9GnF7U37Huxsv1Gm8f2G9fTRdl+
o73att/KBzo1xZraftv5QNfKt/0WDbzxp1q1+UZ7Gf3bzuab6zaUzbfyda70
b6734LoPjLXTlfbNccH1IRg7Zymbb44fZfPNdSVcX4L9unG9CdedcP0J16Fw
PJptvrlehetWuH6F61i4noXrWmjzTf8OXOsC/km/D/T/wLUw9AdBvxD0D8G1
MmjTtW/s/yi1b+TPIH8B+79M7Zs23xjPH3Dewbln4RoXIl+C9u9wDPqlWIV8
Lc4bgPJGlLmOZwv2pfYdgnluO/6NwpDvMHxfeLRv+sfg/Ii+CSgnIU/lXMo5
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
39R8qH0z3q3L5YpkDFwcg/G+t+Xl5W2hfgR+Rp3+zldTX6LWlJKSsoC+zuPj
4z9F+e3s7OzXqFGB5/Lz8ycjfxI8hvIjYCLKD9LnOWP5ZmRkMKavH9pG4Fh3
0Pcx9TD6PKdPZLPPc/pMpo5GPQ31Mj7P6XOZPs/pg9nO5zn1O+XznLoefTpT
57P6PKceWN8+z7UK9O8W4vO8KSVbDdxEGR1c3TeaoYUjV3h0cOS6Do5c18GR
t+L9yXsV5ROpg2M8n4R5pA0pKSlpu2/fvpP3799/yoEDB049ePDgaYcOHTod
nPHLL7+0A+3R/0z0PQt0RP9O4Bwc71zs0wVzTFfsdz76dMP27pj7LsL2i3HM
S7DtUrT3RvvloB+2XYFtV4F/oP1qtF2DYwzB/tej7Ua03Yz9bkH7bTg+18Hc
g/x+HOcBrpfh3IFjPIa/4SnOKRjHr3CuwZj+GGN0OsbyLLTPw9y1AH0WY99l
2Hc5WI1yANp/RvtGsJmxG8AWnJdxHOjTYjvOGw524ByRyCPRFm3o3/GoJ6Ke
jGMxVkQGyploywY5KNPfOedcN+oFoBAUoc55uRjlEs7bOO4+xvlGfgD5QZyb
8SwOAca4+BXtvyL/zeAw4TMC+e/K1zn6/GnBo3/jeDpm7Rt1T27VwdHm9Yyz
1g18PjPR3/HnenMF9+Rfc+bMKR04cGBpC5NP6379+mnTp0/X8P+m7kVVSY0q
0R/6/PnztUGDBnn5Qe/Ro4f26aeflmLudPy+FgRBEARBEARBEARBEASh6lTC
Zq1CmzjzNnPsb1+232bt2+z33Ij97VP/Ntt/Uycx7AU9tt+G/k3tu9jQWDy2
39S/le9z6jLUv1HW9e+CgoIsQP2bfs+pfaco/dvtdicA2n7T7jsK+Q70oU3k
9vz8fPoHDgKbXC7Xz8rfeXZ29vcpKSnfJCYmzk1KSvoiNTX1/ZycnCno9yqO
8RL6Pk/bb0Cf57T9fhQ8jH0nIKdN52jafVPnwn7/ou032m6n7TfKXrbfqA+h
7Te2DcJ5/8GY31bbb/TRbb/T0tL0mN+0TUWbx/Yb19hF2X6jXbf9xrWfVVXb
b7P+XVPbb4n53WyT6N82+jeuj34fRmDe8aP2jbE3lvMFjvUwtj+G8hMYny9i
nE7Btvcxbqfi75yOeWIW9pkLvgbf4jjfgZUo/wjWYX9q3xuQbzK07yDGccA1
bOP6HmrfuL4I5ITrfhj3IQ7leGzXtW/aflP7Rlsm+mZR+zbWGLlQtmrfe4FV
++YapoMo67o38jLaN/LflO6ttO+9RozvYh+6d7FJ/y42+SQpFv27yYAx/ddL
L71U2r59e49uecIJJ2hjx47VduzYUffiqaQmkfAOoz3//PNau3btvPzhP/vs
s6WYSx2/zwVBEARBEARBEARBEARBqBy1bfNt1ryLLbbf5fg9V3r3H4YdX3l2
314+z+nvnPaCvnyeHwnz/bfPc3O8b8PnuVn3ps9zPdY3NW+QBKh7K5tv6j07
6QMY5woz/AJvNXwFbwA/5eTk0OZ7VXZ29rLk5OQliYmJc+Li4qampqa+l5WV
5Y++L+fl5b2Avs+i/DS1Ktp8Y59HsC/9F49Hv7Hp6ekPGJq3H7UulG83bL5v
oc039r+RNt/UvFG/JjMz82qleaN8RUZGRr+0tDSPzTeOp9t8K82bNt9K86bN
t9K8afONc+maN2Ma+9K8rTbf1At92XwrzdvO5luzaN6ajc23aN4NOh1lh6//
V1XBHOO7IsxrJXyBfsdaUfHB7cD2lgrGDidTp0493gy2tZo/f76HTz755AQF
+p+A45yoWLhwYWsz06ZNOwl9Tpo7d24bsnr16jaLFy9uSwICAtpi28lk1apV
p5B33nmn3QcffHAm2s5es2ZN56+++qrbTz/91D0qKqpHbGxszx9//LEnznPl
t99+OwTbb1m3bt3dwcHB94SHh/+bscExbsdi7D2McfswfaRjPD+L+osov4z5
6VX6ScfYfw1j9nXOVZgb3sC2t1F+F3PHu6i/ifo7ONbHONYXqE9D+wzMEbPA
fGxbhDlpEeamJWhfiraVyFejTt/qa5CvwfF/wvk3cc7EPBqIuSIIeTBji4Pt
9KWBtggjpkQUttG+PAb5LmMe5hqkJBwrxfDNwRgVnLuzjbmcczrXM9HePN+I
ceEy5v4CY/1TYdHficuj9hg+QooNqMeX8HlCXV75ZOezxnjmUJtnTm3+kOGH
RNfojWeU/rzyZaeubNWVvbrS7n3p98az0mO3Xp52b34O+3pmU8Pfa8Ql39uI
45Pjnv/r8ccf9/JlfsEFF2jvvfeehr+pfsRSSU0u0Qf+ggULtMsuu8xzXzEm
OO81rrFw+r4XBEEQBEEQBEEQBEEQBKFylPfbt/U3crJnzx5uK9fm24RPv+fF
5cT8rozP8z2meN9mn+e09za0b6+Y32abb8aiLSgoyDO0El37pr9zbEszfPem
GPp3osvlYrzvXYx3y7i32BZBjSY/Pz80Ly8vWGnf1HVQX5OVlbUyLS1tKWPs
JicnT0f+UXZ29lvY9jq1JavNN9o9Nt+meN96rG/G92WcX8b7Zdxf9P8n4wAz
HrDJ5pvatx7vm/7OGUeY8YSt8b4Zd5jxhw1/53q8b8YnZpxiFe9b+TsvL963
8ndOm2/GR65KvG+lfddmvO8Won03xVSuhm6NAW7xE+CJAU7UfUbtmvcd/Q7w
XuQ9SXiPEhUDnPBeDgkJaRMeHq7HACe837nug+s/OA6io6PboW97xgTgOhGu
F4mNjT0bbZ3Qdg62n0tfCtina1RU1AXY3g3bumNbD/S/GPVLMG4uRbk3ypej
3A/lK1C+Kj4+fiDKV2P/a3CtQ3DcmyIiIm7FNdyB9n/heCNxrNHY50GMzwlo
ewjbJ0dGRr6Mvm/iej/G9s9wrGmpqalKn16A8bwIfIfyChx3NcprUA7g3AXW
Y2xvxByxGXkgxm0w2ujTIhR5CNq2Y46IxD4xqMdifO9GWwL6J6NvKupp6JuO
tixszwF5+UeSiwnbC9C2B/W9mL9IMZpLUN+HfD/qB8BBlA8hP4S59heDX1H/
DTk5bPA75prfkf+B/A/kfxKUPWCe/j+FigPO9Veo6+uwFGpdlpHra7dsnmO2
ujKfhcTuOVmZZ6rTz/7GRmBg4F933XVX6bHHHuvRJYcMGaKtW7dOKy0trWeV
VFJTTps2bdIGDx7suc/atGmjPfPMM6J/C4IgCIIgCIIgCIIgCEIDpjL23ja/
5Zfr89yiE3jZexvad7lxvpXNN9p03Rv5YcN+zsvP+Z4jsb51zdvs59yw+a7Q
3tuwC6Q/Xj3Ot9vtzlT23mij794k+jlnLFurvTe2h2FbqOHnnJr3Rsb4pr03
0P2cJyUlfZOQkDAXTE1OTqafc//c3NxXkOsxvnGsp8ET2Ncc43s8+ozNzMx8
ICsr616x9xZ7b0lVSrWilfO+VPeoumfNWjnva+rkyk+60skJxwPHBceHVSfn
OOJ44rjiehKOM64vYWwBjj+OQ+rkHJccn4xFwPGampraA9fSKzw8vC+OdSX2
GRgbG3st+t7ENTDoexvah2P7vWBcVFTUY5GRkc/jul7GOf+DY78B3gYfYd74
mLbaOP9MHHsuxvt8zA0LkS/B+b5B+Tv0WYbyCvquQJn22muZo20d9tuIvz8I
c1Aw4Py3He070DcK/xbRIBZtcahzvVAy6h7bbNQzsS0H9VyQZ6w9coEC1Lkw
qUjp4WjiPF5izOn7gb7GCfkhoD8D+DwAv/EZQaiDEz47jOeHx5eIUTavs/pT
aeGGHm5+Lnk9s4pNvkuUJm7Wxq3PQCt2unhNnsvNEerdQ4cOLT3qqKN0DfKY
Y47R/Pz8xJe5pDpPuPfK6N+TJ08W/+eCIAiCIAiCIAiCIAiC0MCoLRtvO1/n
vnTvYsPOmxpDscnW22rnbdW8qW1Y/ZxbY3tbfZybY3tbNW8jrrfu4xxl6t0Z
1GXMcb1BAlCatx7bG+ygnTfOF0LNJy8vbwvYTM0b2+jjfDVYkZmZSVvvhQkJ
CTPj4+M/TU5Ofis7O/tV2nhju27jnZOT8wRtvFH2xPVGeTTaR2VkZNyPY/wL
bXfQxhv7emy8sZ023tcqG2/UB5ptvNPT0/umpaVVy8Yb/c6y2njjXKfjXKcp
G2/qeZW18bbq3ZqmHaf0RLM9riY23pLqJlVLB9dMscJ96eDq3jbr4Lz/zTo4
14OYdXCOH186uLIX57oTsw7OdSmpqaldQ0JCum/atOnS2NjYPphT+oeHhw+i
9s31L+gzFPvfvHXr1ru2bds2KioqamJERMTTuA76Mn8J4/kV9PkPjvcOxvF7
4FO0fYG2GRjzs4Cuf+NYC3DuRWAJ6t+i3/fUvzFvrTR08B9wjACwEX03gyC0
baUdOLZHoF8k5kv6KI9GexzaEugvgzEj0JaM/mloy0S/bNRzkOfS5wZtwSl9
FxxJ1L73IN8Lium7A7nSvg9Q/0ad8z/5BfXfiPGc8OjfJu2b+R8KpX+bNXA+
jyy6t8c2XGngVh3cl024r7VgxaKDVwvc03/dcsstHr27VatW2qRJkzSMj3rV
PiVJwlyvXXPNNV7xvz/66KNSzCWOjxNBEARBEARBEARBEARBEI5Q1/beZv3b
pBmUifGtNIhK+jkvY+9t8XGu23szdmtBQcEew7+57uMc/VwgH1Ta3ttXfG/a
e5vie3vsvakN0d47JSVFt/eOj4//IjU19f2srKwp2PYq+r2I/s+hPBn9n7Sz
905PTx8t9t5i7y2p1pJP/duqfWsW/dvOXzray+jfZhtwq790pX2b9W+uI+F6
Eq4rMduAc90J159wHQrHo7IBDw4O7rZ+/fpLoqOjLwP9wsLCBmIsXoO+16Hf
TbT93rZt2524zn/j/ON37NjxBLY/jbH8Ao7xEo7/GngL4/sd8DHKU3G+aTjf
TBxjNq5lLq5lPrbp2jfadNtvlHXtG9u+x7aV2GctjrcBdT1ON9jC+NzYFs7Y
3NS9MT9FY9/dVt0b7fSFnomyHpMb0PbbS/em3bfSval5E9R13ZvrnJTuTZtv
+j+n5m22+TbwaN70ge5L8zY9d/7PTvu26t6mWB0+dW+752GxD727Ks/j5qZ9
h4aG/jV8+PDSo48+WtcYjz/+eO2xxx7TcK/Vq9YpSZI1Uf8eMGCAR//u1auX
tmbNGsfHjCAIgiAIgiAIgiAIgiA0d6r6G7tV8y6umvbt5efcpC9Y/Zz/bta8
lb23L83bbO9Nzdvwi0s7wb1We29q3rT3pn0h9W5qLtS7gbL3TqNPXmXvjTzB
5ONct/fOz8+nvfd27B+COjXvoJycnArtvZOSkt7Ozs5+Df1ewPZnsd/TKOv2
3tjvYTDB5XKNw7lGY9uotLS0kWLvLfbekuos1VgH12xswCvSwTlOzDq4ihlu
1sGtvtA5HhkzfPPmzeeuXLnywujo6Iupfa9fv/7KyMjIgampqYPR91rMM9fi
fLcGBgbeHRERMTo0NHQS9nsc7U9j+7MYt9S/X8d5puCY7+EcH6P+Gcb8l6hP
xzzzFeagWbiGOSjPo/6NbYvp+xxzwFLlAx37rMI512H7z2jfwPkP5S2M/435
KRRzWBjnSbTH4Hi7UI8z5tEEtCejH2OAZ3DeRVuWYfdN7TsfbS7UPdq3Eati
r9nmG/kBoPs8Z+xvtNlq33x+KLtvpX8T5fvciP9ta/ddGdtvswbuy+67Ih/o
Fdl8N0cdHPfrXw888EAp/ZhjjGrHHXecNmrUKA33Xf2Km5IklZMYSx7PBK1z
584e/fumm24qxZzr+BgSBEEQBEEQBEEQBEEQBOEIvn53t/NzXlk7b8Mmroyd
t1XvNmzxPP7NLT7Odb3b0LwPIWeMV9p57zdp3R7/5owRS+NubLeL502/5lnK
tznydPRj7NkUxqKlNoO2OLAbxAJqN4xZS/+9YchD0BaMfYNo65iTk7MxNzf3
J8DYtytp543yN+np6dS858TFxU2Nj49/NzEx8bXMzMxn0edJat2gjNaNbSPR
fi/KfklJSXdlZGTcirab0XYTbbuV1o361VatG2XdthvbL7XRursprZu23dS6
lW23ndaN6zrDTutW9qpK61b2rBVp3UobFK1bUiNItWoXbucX3aqHm/2i+7IL
p6+FFStWnLVkyZJzse8Fu3fvvmjDhg29afeNvldh+z+ogW/ZsuXG4ODg4aGh
ofeGhIQ8GBUVNQHzzySM68fQ7ylq3/Q3gWP6M9436u9h/H+E/FO0f475aCry
LzHHTEcfPf435oJ54GulheM4S1NTU1di+2q0r0FbAI6xEQRiLgvC3Khr4Nge
wZjfaItGWwzQ436jPQm5ivmta+AgC+f2xP1G3X3EBLygUPk9Z8xvZfuNbbrP
c+rf1L5p923E+jZr4F46uDX2t6F9e2nhVltwo+zTFtyXFm7Ww6124dbnpt0z
tSZ24Y0V3Bd/PfPMM6UnnniiriEee+yx2vjx4zXcV/UtaUqSVOn0yy+/aC++
+KLuj4D3Le/fl156qRRzkuNjShAEQRAEQRAEQRAEQRCaItWJG1oVrbu4HM27
2BTX29AHPJq3yb7bS+82x/M2dAxbn+ZGrNcS6iD0Z45URH3E8GfuVlo32hg/
NseidaeBVBXLG/vStjve7XbHUZvB9UWjLQp9dqK+Iz8/PwJsp303CELfTcg3
gJ9ycnLWUf8By2kTmZWVtQTlr9PS0mbHx8dP27Vr14cxMTH+iYmJz2VmZj6G
bQ9lZ2ePz8jIGGto3fcrrRvtd4E7ad8dFxd3q9mu26x1o34F6v2U1k0/5qjr
fsxTU1O9tG7GBS5P68Z5OuAa2ys/5nZad3h4uJfWbfVjLlq3pCaeqhUjvDL2
4ZWJEU44BmfOnHnGJ598ott9U/v+8ccfe4aGhvbmPIDxe0VsbOwVgYGB12zY
sOGWsLCwEdj2b8w9ozEPjcc88BDG8yT0m4z+z4JXUKb2/SbG+zvIP8B4/hDz
zUeM/Y3yZ5hTGP97Otp0O3Dag2PbLPqxAEsZ+xvbPDG/0Xc94z1wfqT9N+Yc
xvwOxzwawXkURKJ/DM4dj34JRgwJxvxOBelo0+2/qX+jrvs+p/0353OkQmX/
jWZq3yW0/0Z+AOg+z9XaKMMviI6d/m2N/03MvtCVLbjVHtx4ZinN20sLV884
Ox3c1GZeC1ambH2eFltswqsaE7yq7wJOwb9r2rRppe3bt/fYzd5www0a7v96
VjAlSap+Yrx5Pz8/zz3co0cPbePGjY6PL0EQBEEQBEEQBEEQBEForNSnvm0X
17TY0Lh9/Oav9AGlI/xh1blpo2foFL+gHzVuLz/mBrTtps0f/Zgz/iu1bvow
12N2K53b7XYzbmwmbblpT0h92xSvm3oL9e3dYBftEKlxo89O7LeDNt2M2w1o
172Vtou0687Ly9vkcrl+Rr4OfVaj7yq0L6ff3+zs7CWMi4tts1GfgfoXaWlp
n0RHR78HXouMjHw6NjZ2YkpKyqisrKx70Ef3X56ZmenxX06bburcjNVLnXv3
7t2DU1NTacvtpW+b43QrfRv7nq/07cTExHNrEqe7uvq2JnG6JTXvVGldXDO0
cTVO7HRxzYgfjrylshHHMdo++eSTHbZu3XoW+nRetGhR95CQkJ4Yn70wv/TZ
vn17nw0bNgzE9uujoqJuDQ4Ovhvzz32YA0ZhfhiD44wHj2Iee4zaN+aCl6h/
Yz55HcefgvH+JngLc9k7aHufOji2f4L6Z2j/HPPJp2ifimPNxByyAOVFONYS
tOu+z1H/EXPjWrAO+67H/BSEfCvm0W2MCwFCuYYI/eg/I5bzL9caUQMHSSDF
WI+Uzvjf9H/O+Zx+OkC+sZ6poPCIEM5nAH2fc+3TAeNZQV8gh4w1Uh4dXNmB
m3VwFTvD7BPdeB55tHBjPZYnLrjC7KsEzz0v/+hW3+jFR3yclLEDt2K1B7fW
S0pKbPNiG1/p1dHEK/MOUResWrWqtHv37h6tsG/fvlpgYGC9aZWSJNV2CggI
8Pg+p49++jDAfOX4N4IgCIIgCIIgCIIgCIIgNCaqGgPU1+/ke23id9vZodn4
MffE8LZq3ga6JmDj01zZ33l8mVPzNrQLa+zuEkPj0H2ZK80byW1oItRGqJPo
mjfK6dRQqHejnoScenc8/ZdTb8ExY+h/F0TRDhFEuFyuMKV3Y/sWEIh6YH5+
Pu0X11PzRpma9wpAf+bUvBnzdgHKjIn7VWZmJmPlfkb7yV27dr0VGRn58s6d
O5+Ijo5+MDU19X7adGPbnTgOfZjfgn2G4rw30o85rmWIsu2OiYkZmJycTM27
WnG60dbRGqebmrfZnptxhasbp7s8zVvsuSU181TrvtIDAgKOHzduXJuHH364
Pf2d79ix45wFCxZcuHXr1ouTkpJ6YWxfhrbea9eu/ceGDRuuDw0N/Se2/Ss2
NvZujNWRmAe45mYsxvkjmG8mYY55GvPR85gzqH2/itwf7f6Yg6ZgLnoL29+m
9o39PkKZ2venyD9G22fYbwbOqfs8R/sixv1Gv+U4/g84BrXvNWj7CfMO40AE
G/Mp2Ub7b/SLwvyp+z1X2jfa6fs8GX1TaPuNY1P3ZkyKHM7tjP1No2/q3vR9
jj58BuxFO32eq7gX5Wre5eneSvv2pXtb9W9lB262BzfbgJvtwq324L58o9ut
J7M+Z63P5+JybMJr6iu9LnVwxvAeMWJEaQtD76ZOuGjRIu2vv/6qZ5VSkqTa
TwcPHtQmTpyoHXXUUR7b702bNjn+rSAIgiAIgiAIgiAIgiAIDYma2nNXpG9b
8fX7e0X23RaU3q1r3oYvWfqU9Wjdhn9aL9tu7Eedex91buR76ce86IjgUaiL
HoWFLrfbne9yuejDPIu+y6lzg1TaDNJ2ENupce/Cdo9NN4ikz13kYYB+y0Np
i4hyMOPS5uXlBdJPL9p+Bj9hv3VgDe0Yc3NzV2L7Mmo82G8h+tO+e252dvYs
MM3wC/xRVlYW4+W+mZKS8p+dO3e+GBoa+jgYExYWdndSUtKtRqzu69BvCPVt
nOcfOMdVOB59l/fHsfvSvpsaFo5xUWX9lVcnNrfZnltic0uSVOlULb/nWjn2
3b78nqsY4ByvOOZpoOO6devOxZxyvvJzjnHfF9uvJNhvSEhIyLCIiIg7Mabv
j46OfiAuLm6cEVvhYfAk5oenMDe8iDnlNerdmHfeRP4O5r73gMfOm3Macj3W
N32dg2mM+Y39vsZc9i3KnA9XIP8B/dZiDtL9nGM+24h9gnD9och1H+eYY4nu
5xz96ec8Ufk5RzkVx9FjfHPdEud1JJfu3LywkP48Cih5U+dmXAs+F9BXj3XB
+N7o/ytyWxtuFdPb7NdcxfQ2+zZXfs2t/s357DKt2yqjaVdWzy5P07baeds9
j+18nNdUt3bCvpsxj6dMmVJ60kkn6XogYyK/+uqr2uHDh+tXmJQkqR7Sxo0b
tS5dunji1T/11FNi+y0IgiAIgiAIgiAIgiAITYTy9Hazll78t9/X/5aUlCg/
sZ6cdnXFR3zLemKDo0wOGyj941eUdftxcNDgAPbVdXXkJchL0K8Y+d49RxID
hRei6gYukA/y0JZbVFRE28NMlNNBKtqTAeOC0458N+3HgR4PHP3C3G53SH5+
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
r7y8XLz3Dx6XsYT+YnEd4rvpu5pvedxWVFSUiyORp7jydssLFwRpF7NWXEoh
kF9urvLEgllsy6Tv5ummPYmxtGg0miKOhn0j6Y+gHiq9N6hP7/0FY59x7ieR
SKQv+z5knbTe78nzF0jr/VY4HP4P5/bkvBdZ+xx4pqys7OlQKNRVem/mHpTe
OxAI3M3a2wsKCm6eOHHi9ampqZdPmDDhHPFVs2fPPlo5u6dPn95Smm/xW4m5
uufOnRvXfbNnt7S0tL9nZmb+TV7gyTm5fX5b/FtDHLeTpPl26uG4f4vfdozj
trJxl3X2JHcS+O01eZKvDb+td1T0rkoiv52fn7+b/P/1bOs59/ltvePi89vE
DpffZuxQvRPDOUcwdiT9o1nj5vCeMWPGacST87j2xeAK4kl7rn8j87dw7h3s
u4trPUjs6cL1nwHiul9mby/Oe4Oz3tU7PNJ0c/Zn4rqpv+J+B1EPIaYNJe4N
J8a5/uXU46lTGUsD6ewTMqTr5pws1ufIf8N7B8nN002/RO8o6X0l1rne5crP
zedBlXJIMKf3m1z/cvqrcd2sWwqWJfPc7P3Bz8vt+5f7+m5fxw0afJdrTe96
JXPbjeGzN6Qn+ebAbyeDn7lVN910U91WHr93zDHHODNnzmxSjtGKlY21fPbZ
Z85f/vIX99k4+OCDHeJ6sz+zBoPBYDAYDAaDwWAwGAwGQzI2xO++1xb63Xtt
Iz3OG/G7/wb1csnauYb03QlwOYmqqqq41jsWi/1AvVScN1io/K2uwTlFGkDG
XG0354fYW8JUkD0BxouUG7ampkb8Si5rs+Sjy9wMMJUx5ZRNA+JnJrB+XGlp
6WjqYYwNVl5tzhXXPQD0By7PDT6Vny/7P1aebdofRCKR9+krx+0b4HXW/Ae8
xnnyBH5J2m7WdSsrK3uKc59g7ePseSQQCIjzvoexO4LB4G3hcPimoqKi69PS
0v41duzYi8eMGXPmiBEjTsjMzDxi9uzZB2dnZ++fn5+/D1/nHsuXL98d7CZ/
c/Fj0oCKK+vfv/8u7P8r+//PdNxWtvCyQXNuM77GnNvitpVfINGPnPEdk/lt
5a9P9CNP5rf1bov4bc44gD0Hyt+BfS6/zbrDWdOKNUfRP4b2ceK36Z/EOacw
fyp7TmfuLPpnEzsumjx58lWFhYXtOb8j93g79b2s6Swvc+LQv7nO09QvgFc5
601x3Zz3AWvEdX9C/aXioLhu2t8pToJRek+IeDaeeJcinwyP457M2FT6mfIv
pz8TZClnt3JOMBfnuqlLmXP9yz1dd6Wfp5u+UAvk76EcFy7PTayPc93yLhfX
zdj39F1Nt/Tcgpcz41e5uRM8R9bIb9euJa+9Jk67vvHf+ozfHLnthtCnT5+6
nXfe2eX0/vznPzuvvPKK89NPPzUxs2jFysZd+Hegc9hhh7nPyfbbb++8/fbb
5ntuMBgMBoPBYDAYDAaDwWBoVmxIjdc6/B5+vbnuBD4gruFuDGpX13TXC+Z/
FJR3Vbx3eXn5CvB9RUXFEuX2pl0rToQiz1tpAstisVhEuV+VB3bevHm+l3mh
vMwZywFZrJsl/qW6unqa8skyNxGkMD6e+THy441GoyPD4bD8eQdJ182Y/Hu/
9Lluxj5mrfLY9ikrK1NOW+m636b/ljSRjPVi3SuMvQxeAj04T37m3amfZo34
7sdY9wjXeDASidwfDAbvob6de7mFdsdAIHDDnDlz2k2YMOHKkSNHXvDdd9+d
NmTIkGMnT57ccvr06Qekp6fvI29jzt5V4Hr/4Pq7LF26tIV4tCVLluzcr1+/
nfr06fMXX89tWm4rW0D5XfJt+/x2Q/m26+O315RvW/y2/BnEb/PMxvlt5Svw
+W3GWsrfQfw2Y3F+m/5x9E8ghsT5bebOEL9NLGjDeecSY85n/p/MXczay1h3
RU5OTvvMzMxblUOBtfIyf5Tzu7Lmab2TozhF7HmNa78lrhv0Ze+n4ro5cwD1
N5z5HdcY5sXK8V78TJNXhjwziL1TxHPLvxzMBtny12AsX6CvmKz3kUpolzIW
UfzWu0t6jUneHZSaBP/yRZwpLBaYW6pcF+K56cvD3NV1S88tMLbC9y/33p+K
5+n22qt9HtWj816nd8jW5nPc+O36IY33lVdeGdd4t2nTxuHnsSmpRCtWNqmy
fPly5+abb477ntOuI2Y2+7NsMBgMBoPBYDAYDAaDwWDYMrA+vxtfH467Pr67
Pqwv713bSP67tn5P83q57wTe+4eysjLx3otoL6A9LxaTvLsyxlhU/Ek0Gg0x
V8zeOTU1NcoRW0BfGu+s6urqmYy5ubsZnyIdonLMerlmxzA/Yt68eeJyhsqv
NxwOf0O7H9f+nP6nXp7uD6Xr5pz3wLuMvcP+t7jGG7TFdb/GPbxCvwfrXmDN
c9zLs9TPlpaWPsOZT1H/m3mX7wadOftexu4OBoO3s/dmxjqEQqHrWduusLDw
qgkTJlw2ZsyYc4YPH37yd999d1RaWtrBGRkZ+4I9pe0WlyaOW7rRxYsX77Ro
0aK/CwsXLtyxT58+O44aNWr7gQMHbmdabiubWfnd82+vrT/52uTfpl+vPzlj
h8mfnDVxf/JIJHI88yfSP5l+a/qn0T6Tdhvu7WziyXnEqgvoX8TcJexvy5lX
0L6adjva7Vl3gzwkuJc7s7OzH+T8R1nflfvUuzg9mH9FebuVj0F8N3Vf9n9B
LQ9zcd1DPF33SNrj5IshrlteGV48dXluYt0s4uhs4p/rXw4KxHODuSDAeIDa
9TAX102/XLpu6iovX4U8PFwPc86Srlt5updyprDMg6/rFtf9g89z+7pueZj7
em7vc+RXXHfyZ9i65txeE0e9vvNbEgYNGhTP4y3/5nfffdepq6trWhLRipVN
tPTu3dvZbrvt3OfnhBNOcPg8avZn2mAwGAwGg8FgMBgMBoPBsOVgbX4Xvj4c
d2O47tp15LxrG8jZvTZ8d+0aOO9aj/cG/ysrK/shGo0ul785mE+7Wr7m1dXV
8sYNVVVVBVlTLO/cmpqa3Hnz5uUwl11RUTGbdeJjpjKWIU0iayfKhzcSiUwA
o9k3zMvdPYh5cTxfl5SU9JfOkTM+opa2u7fydXPG26x7Hci/vBdrX+Ma0na/
xJoXudbz9J+l/zRrnwJPgq7K4R0Oh5XD+yH23c+a+1h7N3vu4B5uKy0tFed9
I+Ptg8FgO3FWRUVFbeVxPnjw4DYjR448sX///q3S09MPSEtL2zszM3O3WbNm
7SKvZHFuwoIFC/7mg+/hDq+88soOnTt3lkZ1W+O4rWwGZYNw3Rs6F3cy1633
UcR1y6s8ketuKBd3Q1w3a07kPlyumzl5lZ9JX1rucxK5bsZcrpv2lbR9rvs6
cd2s60j7FtqKMXdx/w/k5eV14TxX38299eTc/+j9HeVoUO5u8Alz/agHsncw
Z8j7ws3XLR9z+qnEt4kgQ+8Ref7l8tHI8nw1cvXOkfhuxny+W3knFKfDnr47
5um7XXE3ZR79eM5uzlgE4tpucd0e4jm7fW23z3UL8z0f8/m/6Lvry7FRr3+5
cd3NB36GVvE5VbfNNtu4nN1JJ53k8Dw1NW1oxcomX/jMcvbbbz/3OVKegG+/
/dZ8zw0Gg8FgMBgMBoPBYDAYDBsEa/t77eT19fHeDenREsd/S7NW2wjuu3Yd
OPDaevjv2kbw4LX1cOC19fDglZWVK6urq13eG8R570gkUh2LxcprampKKyoq
wj7vTdvlvcW/iPdmrct7057KmMt7832SJ2+qPHoT83iL96b9DfgqGAz2Uy5b
+ZlznT6sf58178jPXJw38PXdr3LNlznzBda8QP85+s+w7ingct7gCca7hMPh
x7iedN73c417wF20b+dr6VRSUnKTeCrx3nPnzhXvfZV475SUlIuHDRvWJjU1
9YSvvvrqyAkTJhyYmZm598iRI3dP5r3FxQnivcXNiffu3r37dvXx3uZfbmUT
KL+7ptv3Lf89NN3yLfd5bsZcnpvzfldNN22X59a7NPTv0Ls19O+j/YDyKnAf
XQsKCp7nWi8rHwP38DZn9mb+I8/P/AvwFWOD9T4Q8PN2S9/t5uwW3633iKhd
H3Pa2dJ2i+uWzwbjRbSVZyJIX3y3y3VTu7m7PY23q+8W3y19N21X3+1x3Yl5
u10fcz4LXH13At/9v4b47vlJXubeZ1GD+bob+jxt7Oe58dzrDj7fVrVs2dLl
6bbddlvnmWeesTzeVqysRyF+OmeddVb8mXrxxReN+zYYDAaDwWAwGAyGBCxY
sKBJ0dxfr8FgMDQnGvo9+4bQe68PB56M9eXCk+FzE3wOrExGMu8diUTEey+I
xWLSe1cxJs1gmDUlFRUVAcaKlMt73rx52ezNYm424zNZn8nY5JqaGnnyulpv
zhTnPZY9I5gfwtgg1gxk/9ec27+kpET+5srj3Zv6fc4R5/0meIOxV8EroCfr
XwIvsv858CznPUNfnPcTnNeFNf8Gj3Pe46FQ6OEkzvsOzu5E++ZwONyB+7me
9rWBQOAa1l9JfemYMWMuGjt27FnghEGDBrl6b5/3TktL28XnugXxcz6k9+7e
vftf27Vrt11j+e6tjOu2snGUBvnuxuboboyuOzlHdyLf7T9Hibpu5RLg+WxB
DNklMUe3dN3K0Z2s607I0e3qupWjmzVujm7OSuS74zm62XM6MWE1XTf9C+mL
776Ucy6nfyXta5jzdd03su8m2rdK1834nYoxijXKp+DlVZDXRFeu352vz9V4
03+bug/7+oLPOLO/3vlh7bfMDaMeTdwbp/zdYKLeGfI8zacT28R5K8bmen7m
yitRJH038S5A7eq75cdBO0pdxng5dYXvae5z3ownc95xX3P5mcvLnHj2g6ft
XpHoZz7/l/zd8RzeyZy3/5mUqPOu5zPtd9F1G377e9ejR48635f5gAMOcCZP
ntz0JKEVK5th0bsjXbp0ief87tChQx0xt9mfe4PBYDAYDAaDwWAwGAwGg8HH
78F9ry//nYwNxYMn8t70V1ZVVQk/lpWVrZDPeSwWW5jIe0tLKN5bXrpJvLd0
iLNYO1NevLQnM54u/oY9Kax3ee9IJBLnvVkzkLXiffqFw+HPxHuz7gPx3oy9
Q/tNeZxz9iuc9TLnvMw15W/+PPu7g2dY241+10TOm/HHuc6j4r3lb87YXay5
UxwV/VvlcS7eWxwWa//FOpf3LioqumzChAkXjRo1qs24ceNOHDZsWKvJkycf
KJ9z8d7SnCZrvH3OW9zdv//97x3uvPPOP/q8t3HeVjaBst6ct1OPvntNnDfP
8mqcN+M7Zmdn/z2R807Ud/ucN+v39Dlv6bvFeTN2QALn3TKZ86Z/DP3jmD8h
mfNm7iyf8yY2nE+cuJC5i8V5Ex8ulw8E89ew9lr614vzZq3Ped/O+F2076Xd
WTkVxHlzzuOc8wTjT3PNF7g/+VS8Sf89rufqvJn/gr6fy/s7rjOSfWN8nTdx
KZ06g3qa8ngT32bKT8PP4Q3cHN7EtmLij3hveZqXsiYijTfjMY/3rqSuYq04
7/l+Hm/5mnOm62vuc97Senu+5r6f+Wq+5j7nXZ/O2/M4/y2N969479/6/G3M
WGPmDLWreA5WXXTRRXVbeZzcbbfd5ixfvrzpyUErVjbz8umnnzrbb7+9+5yd
ccYZdXr2mvv5NxgMBoPBYDAYDAaDwWAwbPxY39+XN7RmbSF/1vVBY3Tc6wLp
7BrC/CQv2tp6/NErKyt/Eu8diURWlJaWfu/z3rTFe5dJ711RURGUry5rxHvn
cXaWz3vL4xxMZZ303uK902inKE8tZ4xhz3DOG8zYN9XV1V8zPoCxfsFg8LNo
NPoRe96n/x5r3mb+ddYpr3dPL593D+ZeZO45rteN8W70nxLHxDnivB8DjwqM
PyKPc+p7mXe13vIi5n5ukTdxKBQSf3WtPItpXy0P4/z8/MtSU1P/Kd47LS3t
xIEDBx4l3js9PX0f2q7euz6+24f03uK927Vr94dG8N3GeVtp7rJOvuaN4b2T
fc3Feyf7mify3mvyNRfvLV9z8d48y3v5vuas25/n+gDf11y8t3zN6a/ma07/
V77mPPtnJPian0v/AuLAPz1f88sSfM3/JV9z2q6vufwi5Bvh+Uck+po/DB6j
3YU1T8qLgnt4ka+jF+239D4P1/+Y+lPi1ZfUX7N2EPVQ5kf6/ubyx/C03hnE
PTefNzF2VkO8N3Ouv3ky7824y3vTl+B7Nd6buUXSenve5uK83ZzeyuWdyHsT
4xrUeifn864vl3ey3rs+X3PD74exY8eu2nfffV0ebocddnC+/PLLZmADrVjZ
csqUKVOcXXfd1X3m9t9/f4fPvmaPAwaDwWAwGAwGg8FgMBgMBkNjsbFpwGsb
oQevXYP+u6qqSlhZVlb2v2g0Kt57kfJ703fze8tHt7KyUtrCIPNzKyoqlGM2
R5pv6iz64r4zWTeFMXE36dSpjKewfpz4HdrfsfZbL7/3QM4eEAwGpX/sy9gH
rFH+23flc87+N6T3lsd5kt77WeX1Zv/T0nvTl977cdaK+35Meu/S0tKHfL23
fM4Zu116b+k1pfemfZ28i7n2v0pKSuL5vVNTU9tMmjTp5KFDhx6dnp5+SEZG
xr4DBgzYU/m9Te9tZTMrGySn95o8ztcmp7f03sncd35+/m7K6S2P88Sc3oWF
hfv5Ob0ZP8j3OG8opzdr4tw3c6f7Ob2JH6vl9OZe3ZzetK+k7ef0lsf5Daxz
c3rLP4LxO2nfozgj7ps5eUw8Brow/hTXeJ6v71XWvUH/Xa73IfV/Wat4N4Ba
8W8I88PZM5r94xUrvfwQkxRHfZ9z5ZGgn+Nz3/I5J7bNZa6Y8WCi5tvzOfc1
31Wghrn5CT7ni+RzDuLct3hv5faWz7nHeTdK753Af/8m512bpPc27vv3/beJ
fM3/+Mc/uvzbCSec4PDMND0JaMXKFliI806rVq3cZ+/vf/+7M3jwYMv5bTAY
DAaDwWAwGAwGg8Fg2GyxsfDiDaGqqurn6upqn/f+oby8fHFFRUVtLBarAcoV
G6UvbqWENQHmC2tqaqT5zhX/zVyWvM5pT2NMnI2r+2Z9aiQSSWHPGPaM4DpD
GRtC+1txP6FQqL90kOyRD7C4od6seQe8DXr5Ob5Z+zJnvkj7OfAs/WfoP5XA
fbte59JdlpaWKr93Z+5Jmu+76d9Ju5M4K+k25VtMv304HG4nXWcwGLw8NTX1
0gkTJpwza9asU4YPH358RkbGoWlpafvT3mvSpEn/EC+3cOHCenN8v/LKKztc
fPHF23fv3l0a2DhXaPy3lU2kbBAO3GmE/ruxHHhD+m9x4NJ/J3Lg0n/7HLiv
/+a8BjnwZP23z4F7+u84B+7pv9sm6L/FgbcXB+7FkVvkJSH9N/sS9d+PcB9d
CwoKnudaL9PvxT28zZl6r+cj+p+w/wvwFXB134yP4Hsyys/zTUyTX8YkYpo8
zzMZn5mg/c6lzmfO5cDlwaFc34rNykfh5/oGMeDqvr0c3z7/vdDnvznT579d
7pv+Dz7ou9y3z38LSdz3ajm+a3/xEFmN+07kwOv5jPvVZ+SaPkPXZ35zh7yV
zznnHNfXfOutt3YeeOAB58cff2xi5s+KlS27LFu2zGnbtq3LfW+77bZOz549
jfs2GAwGg8FgMBgMBoPBYDBs8VhXf/X18UkX711TUyPe283xXVFRsaS8vNz1
OgdV0hDSl995KfMh2uJa5nDdfHEwrM8V9y19IudlKj+tOBswifUTOUP5a0cz
PpL5YawdGolEhoRCoYHMfcn4p/T/y/iHrOvNvvc46w3P87wXc68xp1zfL9J/
PhqNPifdN2ufZt2TjCvX9xOlpaVdwuGwPIcfZN397LtfnsSslzdxJ+X4Zs+N
rL+ednt5GSvH98SJE9tOmjTpvKlTp56Wmpp6Au0jxowZc/B33323T2Zm5m7S
ogri5ASf/xa6d+/+t1tuueVPHveX6Am9Rv7bMQ7cysZVGs1/O2uR93vUqFG/
8j//rbzfeq6U9/u3/M8T8377/Lfyfvv+537eb/HfyvvN87ta3m/6JxATTuI+
TvH9z+mfRdxQ3u9zlfdb/ufMX+z5n19O+yrFjIS83x1o+/7nt8tfQvw39/RI
fn7+U1zvOc7uwb308nN9cz995HFB/3PmBlB/oxwQ7B1GPVJxUvkh6KcS08R/
T6Y/le+R4qqr/yY+ymcjrgEHRSDOf3NGGESAuG+9t0RVVePx37W0F1LL89zV
ftNflsB9f+/x3j73vYI62ff8V57ntf8/f8ZqvHdi3/c7b+7P2M0N48ePX7X3
3nu7XNvOO+/sDB8+vGnJPitWrMTLzz//7Dz44IPu8yjccccddcTOZo8TBoPB
YDAYDAaDwWAwGAwGw8aK30Mr7um9f4rFYuK9/1deXr60oqJiEf0FtGsodCvK
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
aPQl1nZj7ZPUXZQ/V3l06T9I//7S0tJ7SkpK7hAHzviN0l6Kh4rFYtfQv5J1
baXTpH2RuCv65zF/jjgt+meK42L+VOk9uYeTGDue/rH0j2atdOIuF866Qxk7
BLhcOPtdnTjj+7B+b/mXJ3PhnLVLfVy4cownc+HSifs5xhvDhTtJ/uVry4U7
lmPcysZVNijvfcMNN+w0fPjwXTIzM3dLSUnZKz8/f5+ioqL9eXYOkt9DVlbW
Ebm5uUfKD0LPu7jvgoICl/vmeWzN83s6z6Pre077HMUN5T6Q77liCc//xeK/
i4uLlQf8KuVLAO2Yv66wsPAmnuH7Zs+e/TjP+FNAub57cY23Wf8h533Kni9Y
P4DzB7N+LPeRxvmT5Jsh/wz5aCgPBPVs8d5cK857s6ZB3ltxO5H3rvVyfxvv
3TD4+1h1xhlnuJz3n//8Z+ebb75pUq7NihUrG0+ZNm2as/vuu7vc91577eWM
Gzeu2WOUwWAwGAwGg8FgMBgMBoPBsKkhme/2c3on6b3jmm/f+7w+zbfPdSfy
3Z4H+g8e1728urra9UCnlubb5burqqoW0q6lnk8tDqWK2uW6GYvRjlKXenrD
EtrBysrKYsaL6Luab8byKioqcnyumzqT/hSPz5HeW1z3WMZHS+9Nf6j47mAw
+E04HJb3ed9AINCntLT0DXkDyyO4Pr03172dM25Vrm7Te5ve28pGWdbIYyf+
/Cby2Ak/69v6z4D/XAh6TpTTXs+Nnh89R3qe9FzpGXv//fd3evPNN3djbq+M
jIx9J0yYcGBmZqar887JyWmlZ511x/FMniiem+e2NbHoNNpnieemf65iBzHs
AsWSoqIiN7c38eVKeZsTe8RxX8va67mXjsrrLf8JcBv77uLsB7ifrlzreWLD
K5z7FmOKa5/QHsD1BxGfhrB+GGNjGZtEncnYTOLkbGKEYqj8MwoYK5S3BueG
uX4Z8zGgnBRVdOcz72q6ifuurpta7y4tFhhfwtgS2ku51g+c8ZN5964O/l5W
tWrVyuW4WrRo4UyePLlpSTYrVqxsdIWY7rRu3dqNC9ttt53z+uuvW85vg8Fg
MBgMBoPBYDAYDAaDYS2QyHcn673X5HmeyIGL/671dN4J3uc+Bx73PU/iv5eK
HxH/Lc9zIL9zaQXnif+W57k4FipxLbEErXcp/RC1NIgBznC13hUVFcoDniut
d2VlZRb9mfI7l9Zb+b99rXd5ebmr9Rb/rRy3kUhkYCwW+5L2p6Wlpb0DgcCb
4JVQKPRcNBrtyjn/Zu2j4CHancG97L+L9bcXFRXdwv4bWHetdN4+By6dt8+B
s14c+Lk+B648vokcuPL80l8nDpyxPZM5cD8nuM+BZ2dn/72xHLg4vUQOPDEn
uLOeOu+tjAO3suHLOnPcTgLPnZj3PpHjFvRcCD7HLW8En+fW8yTo2dJzxtn/
GDBgwJ7ivFlzQHp6+iHULufte5uL82astWIAz+gZigmMn03b1XXTvohrXaJ8
3jzT0nRfLU03caU9sfU6nt0bWHMzcaCT3sPR+zjEtXvYcz/P/qNc55m8vLye
3NPrxLH3ud5/9W4P67/hvKHsGcHa0ZyRypqp3MdM5YhQ7OScfObnKI8ECNAv
YW0UKO9Epd5JotRwzQXML6If57prf+G55d+huL6MtrCcdSvY/5P8vJv7825j
wZQpU1ZJz8nPrnPIIYc4/N00LblmxYqVjbasWLHC6dSpkxsfhJtvvrnO4qfB
YDAYDAaDwWAwGAwGg8GwdkjmvRN138ncd63ncZ6c95vxuA7c57997Xd9+m9x
3+JI/Hzf0n4r3zeo9fJ9u/z3L9R3tTiXcmkO/ZzfyjXree8GKyoqAkA5v8V9
54nDEfft5/tW7lruR7m+JzLm5vuOxWJjI5HIyLKysiHl5eVfl5aW9qPfNxQK
vS/OiP7LrHuWc54GXVkvr/PHWPsw7QdYc18gELiT/bfQ7yD+W9xUNBr9F+2r
aV8hP2Ll5ZVHMe0LPP77bGk7xXkxdxrt1uFw+GSueyJnHs+Zx8oDuaSk5Ej6
RzB/mPhveSTTP4g9B8g3Wfw3a/aRz7n478LCwj3q47/nzJmzc15e3k7i5aQD
T+S/BXF44vLE6SXz34kc+Jr470QOvJE+58aBW/mt8rvqtn1OO1m3rXdCfE5b
z4reGdGzo3dI9C6JfBX0bOkZ07OmZ07vnuTk5OyVkpKy3/Dhww+ZPXv24Xp/
ZcaMGcfyXB7P+pPz8/NPk4c54204+1z2ud7lig+MuRy3NN1co5003TyrNzJ2
k6fplp77Tp7Tu/XeDe0HmH+E9Y8rLrHmSc7qRux4kWf9de6/N/N9Obcf1xrE
/Q3lrDHsm8DXl8o56eybxng2+wrYXyRtt94l0jtF8teQnzlgWayKa7pW5vIw
Z2whY0tYE+e3if3CcvHcymXh4Qflt2D9j+z/mfXN/jm3MWDkyJGrdtppJ5fP
Oumkkxy+T01LqlmxYmWTKL1793Y134oVJ554okNsb/b4ZTAYDAaDwWAwGAwG
g8FgMGwqSNR8J9a1Sdx3fbm+fSxYsCCR9477n/vcN/0Vnvbbz/MtjmSZr/um
juf59rlvIO7blX4zVuF7n1dWVpZJ9618s+K+5X1eUVGhPN+FnkdvvnzPqWfL
95y106iVvzadeeWzdXXfpaWlo6PR6NBYLPZNKBRSzttPqD+QP3A4HH6VNc+z
/hnOeYoznkjUfpeUlHRm3d1lZWWdlOMbdKB9vbTfHvftar897vticVy+9ls5
vum72m/OEfft5vhO1n77Ob6Li4sP87XfPvfta7+V43tN2u/f4r7XpP0eNWpU
o7lvx3J8W9lwZZPivfX8ifceM2bMwew5TO+s5OfnHy1fc73TUlhYqNzdrqc5
z+TZPLfn6V0YxQXmL2W9ciVc5fuZMyYv8w6su0le5ozfThy6k/7drLuf+Ydo
+9z3E+K+Of95rtmLa75P+yP2f8H1BnJ/39FXrBvvvfeTznXFe2exN5+9hcod
oTiazHuzror5+T7vrbwU7JdPh/Hea4kvvvii7k9/+pPLY51//vnO0qVLm5RH
s2LFyqZV+Cxx9t13Xzdm7Ljjjk7fvn3N99xgMBgMBoPBYDAYDAaDwWDwsGDB
ggbnEvzNV6vZI477Z7/2OG9/zOW7az0O3MNKH54G3NV9U4v3djXf4r/FiYgb
8XiSZZ43rnLCLgLivZU7ttbjWmpYVwUqQYWn+y6jHaF2uW9QUl1dHWCsEBSw
Px/kKGct582gncn9ZjA3CUyU5znrx8disTHKdVtVVTWorKzsq/Ly8k8Z6xOJ
RN5m/DXWvcC+Zznj6YULF3al7sL+x4Cr+WbPPfIaZt0tXKMj4zfQbg/a0b+a
9Vdwnbb0LwEXKW8vY+ctWrTobNa2Ye+ZjJ3Gmtbcw8n0T2T8eNYey/jRjB/J
+BHsOYz7OZTxQxg/CBzI+P6s34/xfcR9s29PsAdrdmffrsz/g/ldEnN/c92/
83XsyNf0N9a6Hs2sd7lvab4FcYCO47jeztQuP0i9Wu5vapdT9HlvH/Vx304D
vLdj3LeV+kuDfLdTD+fdkHe5Uw/nvbbe5XpHRHy33hnRuyN6hySR82Zsd/ks
EAf2VO6B9PT0A0aOHNlSem/Gj2TtMew9QXpv5lvzDLp6b/aeo3dglAdBvuZc
57JwOHw593MVdTyHN20/h7ferblD+RXo38PcA+BhnvFHvXdxuhKzurH+Bem9
uf/36X/MuV9K7613e6T3Zk+K3vtR3gfuOdPXe3NGkXzNQQkIy0+DsTLaHF1e
zX0p/0St3kmSvzmQ3nuZF7uX13qcN4hz3h7vvcLnvYkxzf4Z2Jzo1atX3R/+
8Afft9hZuXJlU9BmVqxY2cQLsdY599xz3dix9dZbO3feeaf5nhsMBoPBYDAY
DAaDwWAwGAxrQKLHeQLiXHcD+JXfea3Hdyvft+Dl+U7O9f1DdXW1eBHl+Hb1
3sDN8y29t/huP893VVWVr/eulN5bnDdt+ZxHpUn0+G5xNYHy8nLl+S4A8jl3
td60Z0jrDab4fDfr5PM7TjluQ6HQiEgkMpixr8QRhcPhj6jfDQaD/6HdQ97B
0lFWVFS4HufsE9/9YDQa7cyae4qLi2+nfRNjyrl7nTyKpdf0PM7bysNYvJby
9krfyf24HuecfaY8j32Pc9afyNrjlf/X9zhnv+tx7uX5PoQ1BwUCgQMZ27+w
sHA/eZyLaxPnxt49xMHl5+fvlqzz9vN8J+q8fa13ose5OECfD2zI41xI1Hk7
9Wi9zePcylqUDarppl0vx90YTbfPca9J0y1vBT138lqQ5wJjB7DnQHkxiO/m
WkdJ4+3n8ZbGWzm82ePm8KZ9IWdcIh8IxQnlRGCsHe3ruO6NtG9S7gTGb+ca
rq85451Z/xD3/TD9x2k/wfzTysMgTwrQgzUvs/51nvsPOP9T7rc/+Jax4Zw3
lnYa9WRi0FSe+ensyeKMOYwV0y5h3OW7PS+NcupK5ZjgGvPBQs+LY7FyUjC1
XHkqxHN7+MGH3m3y4L7rxLqVrP+Z/c3+Oddc6NKlS91WXq7erl27OnV1dU3K
m1mxYmXTLqtWrXJefPFFZ9ttt3XjyNFHH+1Mnz692WObwWAwGAwGg8FgMBgM
BoPBsD74Lb12Y9bXtz9xLFnv7Wu8fSRqvWtX13jHfc5rE/TeHn70cn3/z9N5
r/C4kdW03uJTgKv1ptCcPw9I513NvLTeFczFgHTe0ZqaGnHeIdpBUEx/LpjD
WC7IBlmMz6CeBqTzTgeprJlAfywYVV1dPTwWi31XUVHxNe0vysrKPqmsrHyf
+o1oNKrc3t0XLlwofffj4BHu60H2deaMe+nfJd/h0tLSm9l7vfTd3NvVzF3J
XFv2ufpu9lywePHi8xg7R/puxqTvPp3x1qw/mbHV9N3sO5K5I7iPwxl39d3s
d/XdixYtcvXdzO8DVtN3M7/bsmXL/rF06dJdQIslS5bszL5f6bsFX9/tOE6j
9N1OgsZ7TfpuZw0a762M77ayetlcee9j6Z9AfUpRUZF47zOl8y4vLz9H3uZ6
FyYSiVwqjTfx5kppvBlr7+VJcL3Nme/EmJvTm/H7lNNb+RWUZ4HxLow9Sbsb
99qd+gX6L3FOr8LCwve5x0/Yr/d4BnFd8d7SeqdST/J470z2ifcuEO9NO67z
boj3Jm40mvfW+01ezN+ieW99lt59990u573NNts477zzThMwZFasWNlcS0ZG
Rtz3/P/+7/+ct99+23zPDQaDwWAwGAwGg8FgMBgMhnrg5/RORm0Dem/Wu9x3
fXpvwdd7+zm+pff24HqcV1VV/aD83tJ7K0+suBTpCcHCxNzerKtRbm+K9N7l
nCett/x3I4yHGCsB8uedqxy10nrTltY7q6KiYiZ9ab0z5OtLnUp/gvJ60x8d
i8VGhMPh7yKRyEDa4oikkexdUlLyZiAQeEW5cuUfnJjT2/M2vw/czfwdRUVF
0mXeoJzezF3j5/Rm7aXK6S0fYz+nN/PSebs5vZk7VTm9aTeY09vTebs5vcWr
iV/zc3qLd1tTTm9f563cxOL11iand2Iu5A2V03sr03lb+aWsk495Y3J3Kxe9
fn71c5zIdyf6mCfy3eK69Xw05GOu50o+5nrOOGcveSzo+WPd/jyjB7DuIMYP
1nMqbwbu5aiZM2e6Wm/5OIjz5rwz9eyz5jz5PnDGxcrn7Wm9r+I5Fed9He0b
aXeU1lu+5uK8GXO13vKYYDyey5vxp1j7LOue42t7gVrv6bzKnje534+4/hfM
f0V/CNcbxd7x9NPBFGJgJpjJOTmMz6EOgLBiqjhv5mLEB46rqKY/j3oB8Wsx
cXsxsd3N6+3x3ol+5j8k5LBY4ft7sF4xfyVnbnG8t77eDh06uJy3/M0/+eST
JuXHrFixsnmWxYsXO+3bt3e5b+Gcc86py8nJafaYZzAYDAaDwWAwGAwGg8Fg
MGwsSOS5k/nv2gTeW1x3UjuZ826Q9xYHUl1dHfc5B9+L92ZsWVVVlXzOpSNc
BJTb2+W8QY30hp7HuXJ6xzyPc/EzpdQu5834XOWnBQXivBmfTT2rvLw8kzHx
POlAWu/xjI+Vv7k477Kysu9CodC38gOORqOf0f44HA6/EwwGexUXF/eg3U3e
5pzzMPseYM/9yufN2rvkQRwIBG6dM2dOB9ZdK6/ihrzN2Rf3NmfuNN/bnOud
yLXq9TYXjyZvc/Fq4tfkbS6+LdHbXHycvM2T+W7xd+Lxkr3NpfNuyNvc57vr
8zZ3kvhux7zNrax7WW99t5Dou98YfXdi7m49D4m5u319N89qC56LXRL13cof
4Ou79ezpvRM9i76+W8+o3k/ReyqsaVVQUBDP563nXJy3r/Nm3QU8t/8U582Y
q/MW5613ZvTujJ/Lm/FO3McdereG8fvlb874I4pFyregvAuMPQPEeb8of3Nx
3owrN8O7xIW+fJ39mB9If5jyetNO4azJrJ2m3A9gFntyGS9iLEhbvHeUWjG2
XO8ZKfYy5mq9aSsHxRLi+VIvZn+vXBXiuz1tdxxePgtpvX/ks0DxfyVrt6j8
3sq9e9lll7mc95///Gdn+PDhTUuMWbFiZbMvH374ofO3v/3N5b5Vv/7663W+
X5PBYDAYDAaDwWAwGAwGg8GwpaIhnXd9Wm+f91adqPem3SDv7ef3TuS8xZdI
K+jn9pbW2+e8q6qqauVv7uu8xXnTrpAGkbWuv7ny0FZWViofbTHzRaBQnHd5
eXmul9N7unx8GZPOeyJIpT2evaOYG8G6YfQHR6PRb0Kh0IDS0tLPaH9UUlLS
OxwO/6e4uPiloqKiZ4PBYJcEfbf4bukvbxM3BTrOnTv3xjlz5lzLfvHdl0nf
LV7L13dzrTb0XX23cvxy1in0G9R3c93DfH23z3f7+m5xbmvSd/t8t/SriXx3
Y/Td0sluaH23Y77mVuovjdZ6O43wNk/0JqhP6/1b3uZr0no3xttcz6zPfXPG
UTk5Oa7eW34Oeu7Ffeu9F5/71jsx4r4VN8R9yyeCde2l96bdgXFX7835d9BW
3Oms9270/g3rXe6b+inWPiO9N+0Xpfemfo31b/l6b9qu3ptrjZTem/Zqem/O
y6Hv671DjJVK7w1c3psS13tT+7z3Ep/31rtLns47rvVO5L0V92u3QN6b7+Wq
c8891+W8//rXvzrjx49vSirMihUrW1AhNjtXXHFFXPvdunVrZ8aMGc0eBw0G
g8FgMBgMBoPBYDAYDIbmQkOct4d4Xu9k/jtZ7y3uuzYhr7fHefu8d9zj3OO9
pRV0td4e5724qqpqIbXrb85e19jc0xxWVFZWxqTxFucNxM+UlJeXy9u8iH4B
yJd2kbEsxqZzxhTqDPoTY7FYCnNjwWj2DWV8SFlZ2bfK6R2JRPqXlJR8Hg6H
P2LsvUAg8FYwGHy5uLi4O3giFApJZ3m3+G7OuY39N7O/I+0bWH9dfn7+tTk5
OVd5fPeF0naL25KnMf0z2Xd6op85bVfbzfzR4rulD03wMz/E9zOXnlTcmq/t
Fucm3Wki3y1dqvSp0qn6fuY+153Id/ta12S+uyFtt5Coq3XMz9zKhi9bBO9N
PDlFz7/ee5Hmm7Zye5/PmdJ8XyJvCNpXyitCnhG0r/d475uJNbfQvp119+i9
G71/4+f2Vt4F9jzJeDfWubm9wUus8X3OP+T6n7NG7/QM5gx5W4yjPZE6Q7kf
pPnmnGz6BexTfu+QPDQYE+/t+pzXx3vX/uJzHue9fZ9zn/dmfovWe/O9XnXS
SSe5/NMuu+zizJw5s2lJMCtWrGyR5dNPP3V22mmneN7vp556qo7Y3ewx0WAw
GAwGg8FgMBgMBoPBYGgsFixYsEHOSfRETNZ6J8Pnvbl2or47znkzHue9mVf9
o+dzrlyvK7w8sOJKlvtab+WM9XN6A9fbnDH5mlf4vuZAubzD7A0yFpDOGxSK
76afw3iWvM3Ly8tnMJbB2ET6adJ4K483e4dTf8f4QPAV4/2Z/5z6v5FI5MNY
LPYO8/8pLS3tGQqFugeDwSfAQ/IZZr3LdXPGDbTbg3Z8XVczdlU4HG5bXFx8
MWedI203Y2dy/dNY25r+yfRPBMdzX8cyfjTjRzJ+BPsP49qHct1DGD9I/Bnj
+y9cuHBfxvdh/d58TXsCl+tm367M/6M+rps9O/J9/xtrd/C9zMXvycdc8H3M
E7lux3FcjpA6rut2PG234/mYOx7f7SRx3U4DfKVj2m4rjSubvc85dVzvTX26
8htI782ac+UF4eu9xXtzPfHe1zDWnrEbfL23fCWk95bPhPIrKL+39N7EgTXq
vYuKij5Myu89krar92aPq/fmujPFe0vvzb5AEu8d13tTi/deCJbU53OumJ7o
cy7O28tp8eOWxnvz977qqKOOcnmnvfbay+HnrakoLytWrFj5lfZ77733dj76
6CPzPjcYDAaDwWAwGAwGg8FgMGxRSNZ4+77nXr0a353kc16v1lt8t+BxHXGP
c7DC9zf3tN5Lq6qqXH/zyspK+ZvP973NOU+8S0z5Zr1c3mEvl3cxmFteXu7m
8mZtDmtnA+XynhGLxaaCdNop1BPKyspGR6PR4bSHgG/Ed3OW+KDP6PctLS3t
EwwG36N+XZx3IBB4oaio6Mni4uJHCgoK7mPutlAodCP72nPmv9ijHN5Xgssj
kcilc+bMuTgvL+989p21przd9NeYt5vzXR/zDZG3O9nH3PJ2W9nISoP8t1MP
B57Ifztr0H37P+++7tvnv/VsJPLfPgfu898N6b71LOqZ5Lnf0+e/9czq2eXZ
P1DPsp5pzjuUtUdI8019rGIA55xE3Vrxwee/5QlBDPL9zl3dN2fqPRo31zfX
ke77Rum+GXP5b/lOJOi+Xb9z2m6ub9CNtnTfL3LOa9zru9xLX64pL4uvuf53
tEdxrRT2Ke9DBjFtGphJPxcUyuuc/b7XeVTcd+UvpYbxWrBY3hzyOWdMvPdy
T+/9vfc+k48VXk6LuM85fZf3pt/sn3e/F/h7XnXEEUe4XNMBBxzg8H1vSrrL
ihUrVuJl1KhRzuGHHx7nv08++WRn3LhxzR4nDQaDwWAwGAwGg8FgMBgMhqaA
rwPxuW4fPtddm8R7+/7mPu/t1Ykab+m+Xa1fVVWVy3lTrwA/VFZWfi++RJw3
7SXl5eWL5KEL5gPxK5WgnL0Rj38JS4coT3Mwl31zpPGmncd4tjSLjGUyNjUa
jWbIxzcSiYwvKysbRT1CWkfqb+j3p/5CXDfX+ZDx3oy9GwqF3pwzZ06v4uLi
HsFg8FnaTxYUFDycm5t7T05Ozq30b5APMXOXS59ZUlJysTyK/fzd2dnZZ2dm
Zp7B2pMLCwuPF9c1d+7co2kfKf5L+bqLiopa0j8kPz//IHkj09+fuX3px/N1
i1OTvpTr7pqVlVVvvm55MnOtuH95WlraX33/8vp4bj9f98CBA7dbk395Y3nu
rf4/x208t5UNVdZb/+0kcN+0G6X/rs/zPFn/vS6e5zyvh+nZJ74cybpjFBf0
Hoy03+w5VbkPfM9z7uFc5UdQXAkEApdRu57neseGceX7voGxm2nfKs9zzrhL
/Dfx537a8qN4lPF/M9aV9tOc/SzXeon7eQN8wH6929OP6w1ibhhzYxlLJW6m
g8nsy2Q8S17n1HMZU+6IEOfrXaMy5iuUbEIhWbGaOLuY2KycFIrfy+XbId7b
z/Pt5fpWLguX+5bum88D8d8rWb/Z8t7E6lWHHXaYyy8dfPDBDt/PJma5rFix
YmX18tNPPznvvvuu06JFCzc2bb311s4111xTN23atGaPmQaDwbAlQTlw+Pe8
C/6fv2r27NkuUlNTV02YMMHFkCFD6oYPHx7vK1b76+QnpL38W73ZvxaDwWAw
GAwGg8Fg2FTg895JnPdqeu9aj/v2eW+hpqbG13u7ubwTuW9P7+3y3tL9ifeW
1tvzxl3m895gEWO18tL1csmqxNgj3jssDga4ubwrKiqK2Kdc3nkJubzlaz6V
62fEYrFJ4nT4P+FY5oaL5wGDSktLv2Lui7Kysk9Y34e53qx7l/pN6l6BQEDe
5s/RfqqgoKBLUVFRZ+o7cnNzb+L/mddyrbbSdns5vP+p/Ly+r/mMGTPaTJ06
9TT2nBAOh4+pJ2d3Sz9nt7gxcWTiyvyc3eLQEnN2+9ruRB9zn/NOzNktzq4x
Obt/S9ttObutbESlybTfelaStd/yS1gX7bf8GRK13/JvYN7lvokrh/MMt9J7
MIwdx7oTOOdkab9pny6PCPbHtd/ivn3vc865St4S0n4zdj11R9bdTCwS/y3v
87uJGfczHtd+y/tcMYzx5/Pz83tJ8037Q/AZ15Xf+WCuPVrvBbFH3PdE6imc
4Wq+OXcOZ8ylLqGWv0aEeXlu6F2keWChvDk83nsJUJ6K5V7Oiu+9/BVx33Pm
Xd6bcXl9rKS/Wfqc831e1bJlS5dXUs33qUm5LStWrFj5rbJw4ULn4Ycfdrbb
bjs3Tm2zzTbOlVdeWTd58uRmj58Gg8GwqYF/Fq/i//+rBg8eXPfuu+/Wvfji
i3WPPvpoXadOner0btG5555bd/zxxzsHHnigs9NOO7kxdyvPe2NDQLF89913
dz09Tj/99Lq2bdvW3XzzzXXE+boXXnihrk+fPnWjR492/33a3N8rg8FgMBgM
BoPBYGhOJPLeiZpvn/NesGDBary3p/3+Sby372/uc920f/QhvTf/N3T13tTi
Qb6XRlCct3SDFRUVrtZb3ubUyiNbodyyoJT5EmkPxcNI5009h34e49nyNZfO
OxaLKUftZK6TxpmpkUgkpaSkZEw0Gh1KW3z319J4U3/C2Ie032f9G8rjTftV
9r9M/XxRUdEzwWCwC+sezs/P7zxnzpxOOTk5HWbNmtWOucvEcysvr3jusrKy
s+ifIc9icOrUqVNPTklJOZ71rZL9y6Xrrs+/PJnjTtZ1J/qXi5NL9C9P5LiT
dd2N4bjNv9zKRlzWqPtuDPe9przfa+N7rndPkrlvYsRu4r6V9zvR99zP+y1f
B+JBS3k9sP8I5ThQrgPlPBD3zZ6TiGmtpfum7fqec73zWHOh3q1h/DLlUVA+
BfmeK+834zfSvkncN+OdWHMn44l5vx9hzeOMdQXPcg+vco9vy9eCsz8JBAL9
2D+I68sDYyx7UohnqeybzHnTOS9bmm+9W6R3jPSukfw2WBeTBwfVPODz3npX
yfU6JxYvox/nvX3u29N7S/e9WfPeBQUFq6Tv5ufWkd5buXWtWLFiZWMsxH/n
1ltvdf74xz/G9d8XX3xxnXSFzR1LDQaDYWOBeO2JEyeu+vTTT11O+6677qq7
7LLL6o477jhn11133aAc9u+N7bff3n0n8/zzz68j/tc999xzdZ988kmdeHv9
rqe5v9cGg8FgMBgMBoPB8Hsi0efc571rE7zNa5N8zun/5PPeSf7mP8rfvDaB
95bmTxwI/4d0Pc69vLBuTm/xKPLP9Xx045y3OBeuI65bObylQSxgPpfxLMZn
ct50cd6RSCSD8TT64zlP/r2jQ6HQsHA4/A1t8TyfU38s7icajb5N+3XOepk9
PcR3c8YzJSUl0nj/OxAIPMDee/Ly8u6Qt3lubu41OTk5lxUWFl4gbop9p4vn
llexeCvOO4H+cWlpaceOGTOm1ezZsw9OzNMtLkyc2IbI0y2OzvJ0W9lCynp7
nidy304jPc8TuW89i8nct/wXiBstkj3PxX0ne57zXB8ozbdyffvct+95zrrj
5HlOvDlF8YT2GfI850xpvs+T57m4b651KeNXMH81Z7bjWtcx3wHcxJpbWHO7
uG/a93JvnVn/EOseY6wLdTdi2svcw5u03wMfc+0vqAdy5jDOGsW+8YTdFOJa
OmdNA1mcIx+NOZxVTB30cky4XufUykGxQHGb2L6IejHzS8V7S+9NP857C8Rk
l/venHlv/p5XScvDz6vTqlUrh6+tSTksK1asWFmXwmeAc/fdd7t8yFYeNyJO
RNrF5o6rBoPB0FTg36Wuh/iXX35Z161bt7p27drVHXrooc4f/vCHZuermwLS
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
+CMOhoKKgCBDEGXIdAEqW4ZQKKtQuneSposO9lAczfc/55KbXxpaLJAmBd73
ec7z7e+m7f3eJD33Pe9p+FM+cxSAa1Lr3ICxaCCBfpu8NuO+Me8ifPwltC/D
15HfvkqgfQ3zrlvjvf9gvDfm/4U9/30QcwIeP37cxnm3atVKXblyxaW8k5iY
mJi7LSUlRe3bt0+LAc+XL5+N48ibN6/q06ePhXl0H0T/LhAIsja8vLxSpkyZ
YqlatarbOV3B3aF8+fJq7NixEgcuEAgEAoFAIBAI3AZH3juN/v+M90afLeZb
h328d2xs7B8xMTHXqY1r1Tlnbm8t3htzzIz3Rl2L92ZuWcZ7Az4Yo+4utc61
eG/0HbGP90a5A/3U7N1iNBq/DwkJ2RAREcH4xSXkejBnDtozgXfDw8OnmM3m
Cbjua8yFi/rY0NDQF3x8fEZg7UDM7RcQENArODi4C/Zp5+3t3YrxlIytZIwl
OSrm9Cb/zTy9uHb1HTt2VF29enVFT0/Pkvba5uTF7Dlw8mYZ0TbXuTjRNhcT
u83+Mybb/mykxXfrMdnWZ0xu47x1vptnlGeVZ5bPr9jz3YzV1vXOeeaZ14D5
DXStc/iS0vAhZeFntNhtct6M3eZzMvAv1eg34FNqM36bfoXP1pDzptY5Y7Yx
1gZ7t8N4B+zfGe3u8F294Bf7oK8/fRXGB+M1aPm9cR0tvzc5b8wdz+d7sNc0
YBZzPOA1LED/Yox/hfJb9G3E/B/hy7ZQ6xx77MW+5L2Pou+EVV+DWudB2JvP
IhkxFgMkYpwB3Xxuiby3xnkzphu/o6tW3lvTO8f4Dcz9g75f1zkn742229/v
7ga4F1I8PDy0/9+1bdtWXbt2zcVsk5iYmFjWMvhGtWjRItW4ceNUHEfx4sUV
NYcZ5ye5wAUCwb1CuO6HD7Vq1VIffPCBJSQkxO33l0AgEAgEAoFAIHi0kJ4W
1Z1473Pnzv2rc97nb4/3tuX3xtw7xntTO5ectzXeOwhzb4v3Bo6jnireOzw8
fC/jvdHPeO/vIiIiNgYGBq4NDg5mvPeC0NBQ5radgTo578nARJPJNI4cEcrR
WDvS399/mK+vL/WA+0ZFRXXH97Gu1AoOCAhoib2eJCdFfoo8FbluxnqTuyKH
hddd+Ycffqi0cOHCsjt27ChGXsye59b1zMmhkU/LKM+tRM9cTOxu7T/jwFU6
nLhKIw5cpcOJEzonzvNtz4nD39niwPUYcPLhmOcBH1USc0slJiaWZgw4dczR
X4l+BPOqHz9+vA78UD1dvxzjzYxG41Oot8B4G5Ttsb4j0AnrutJXMfYbfq8v
9uzPnN+M/ca8EcAY+K7X4acm4fVS52I6tc3hu+bBNy5DewXmr8Y+38LfbsIc
PjO0A9iHvoMYO4p96W9Pw0f64+cNwfWMQBzGz8G3Y+hcIuacJweO6/M5pkuM
/cbYZYI8OGO+MX4Dbeb6von5/zxIvDf+himMVcF9pTp06KCuX7/uQmZJTExM
LOsb3lPIZajq1aun4jjKlSunxowZY9m6dasF7xFu9+cCgSBrgzHBr732mqVi
xYpu52gFmYdcuXKpZ555xoLvYBbRQRcIBAKBQCAQCARZAY78N3nvhIQElv+c
v8V73wYr7/0X5t1kvDdwPS4u7oo1v/d5Pd7bmis2yprfOwxzghITE/0Aau36
oJ8lOfDj6PPCNT0x73BERMRB7LEL838BthqNxh9CQ0M3At8w3jskJESL90ad
8d7TyH1TAxj7vcJYb/LfmDP67Nmzw7CGMZR9g4ODe2JeZ8Z7o78V83uj3Rjj
DTFWnxw483tLvLeYmNvtvuO/VRp65/cS/029c/v4b+qdY64W+029c/iNstQ7
1+O/Ma8qfFc1X1/fmgEBAXVOnDjRkFrn1Jeg1jn8jy3uG/6kE/q7YY8e1DrH
uj7oG4C+51AfAt/4PHzaCPS9gHXUOX8d5SS8xnexfgZ9IPZkzgctlzdew2pc
fwN85mbs9xPW/Yq+36h1jv00rXP8DN7UOse8INTDo27ZOfQlwq+T807GvAvw
xRfhk/ks02Xm8Ybf1/TO8TvSYr6pc44+Pvf0F+bzWSm3v5dlBPgdptStW1f7
H92TTz4pcd5iYmJi/2GBgYFaLvDHH388Fc9RrFgxNWjQIMuqVasseE9xu38X
CARZA/hcmbJs2TJL27ZtLY+5mH8VuB98r2AMOL6nuP1eFAgEAoFAIBAIBA83
MvLcrc5/67y3vda5o845eW/yHVadc1u8NzlvQIv3jomJ0eK9yXljrp7f2x9r
fbA39c29mW8WOIE1R3HdwxinzvnB8PDwffjOvB3tn6jby/zewcHB34aGhi4n
5x0WFvYJ471Rf5c8EDAB817CdV4wmUyjUB+O+UNOnz49iDrC6OvGXLp6vLev
r+9Tjvm9mZeX8ZmYUxX7VVm3bl2luXPnltPjvSWvt5hYptoDkd/bXu8cfqQ8
fEcFxnjreuf2+b3PnDnTEHjC29v7KeyhxXcztzd8R3s9tzf6+sA39kNff7PZ
PAivbwjWDqcfoz8DxqD9KuZOgE98G/tMA2aiPhsg570QY8vx+tagXGfN7/0j
9tyGPXbievtRP4TX6UV9DexH3+uPeSHojwTMzO+N/iT45iT4XPLeF/FewGeY
tPze8M2a1jn89jWsvU6dc2p92Of3fhB4b/z8KeS6cZ9puox4/S7ljsTExMQe
ZGMu8KNHj6pJkyYpR53iAgUKqJ49e1oWLVpkwfua2/29QCBwPfbv358ycuRI
C/3BYy7mWgVZDwULFlS8H6hv7+57UyAQCAQCgUAgEDycSC/Pd1qgbqF9vLdd
nm9HnXON97bqnF9FqeX2xvpE8igxMPTZdM6ZU/bcuXN+WHsGU05jPTkYxh4e
t+b2Poz1v2MteW/GKP5K/gZrv6fOeVBQ0Bpq+aKcD3wcGRn5fmho6FT0vUle
CPNfYGxkVFTUMOw5JCAg4DlfX9/+YWFhPdDujLkdsa61n59f85CQkCcw3hDX
qaNz3thD0zjHfpUZt7lly5YKM2fOLPPDDz8USY/vdozpVkpJTLeY2P1blo73
Tov/doz3ho+p6ePjU9fLy6sxuW/qS1DbHGVrlO0wtyPmPEMdCuqaM9abOb4x
9hz6n8e1hsEvjoDPHI2547DuNbyON/Da/g/4ANdhju9P4MPmYc0SQIv3xh4b
sWYzxn/Cvr9izl7Ge2M/amkct3LfZ3G9QCAcY1GYG481CdZ47yTqnKN+gRrn
ery3DrTJfWvx3mg/UPHe/fv31+KOqHGO35NrCSMxMTGxh8zw/qimT5+uGjRo
kIrryJYtm2rUqJGaPHmyZe/evZITXCB4iIHPnilz5syx1K5d2+08a2Yid44i
qkDuyqpYvgaqdMHWqkKRnqpq8edVrZLjVP3SkzQ0KDNFNS03S8MT5T9SzSsu
1NCi4mKUi4DP1dMV5qknys3U0LjMNNWg9Fsaanu8qB4vNkCVL9RRlczfVBXO
U03lzVkC/jSH23/2+0X27NlVp06dtPwY7r5fBQKBQCAQCAQCwcOJjHDf/P8U
eW/MJe9tw4ULF/7Wgfbf586d+xvzGOtHrXPy39eZ+5XxgTExMZeBi/Hx8cnU
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
Zfk5qlbxoVpseLbHsrv97+OIqlWrqi+++MKSlZ+fFQgEAoFAIBAIBA8HrPm9
tVjuCxcu/JMWME/jvTH3b2u8358or6N9FbgSGxt7GX0Xzp07l0QeBWU8+mJR
mjFuAhivzbzfBiAcewUDzP9NvtvPZDL5oDyONmO2f0f7QHh4+J6wsLCfgc2o
rzUYDCtQLrbmt51jNBqZ83ZaTEzMlOjoaGqUvxkYGPgaxsZQLxjzh4WGhj4X
GRnZPyQkpDf6n2HcNUrGXbYhH8V4TKzV4q2PHDnS6Keffqrn5eVVjfw28/eS
3ya35chvk/8iD0Y+TI+nzii/LTnCxcTuyjI197eufZ7R3N98noXnHm0P67Mu
5am9gLmVDhw4UG3Xrl11sWd9zG0cEBCgaZ3D/2jcN/btBHTjszdYw+dv+vB5
HPihwXgNQ+H7hgHDcc0xWPMyfM947P822lNRfw9zZmL+R/BD1KZYjH2Wov8b
vNbV2G89fJSmdc58ENj7N+B3+Cpy3yfoY/G6A7EmAnOYbyI2KYnuOj4e44nM
9U29Dfpx+HviIvlvDGta5xgj733Dmuciy8Z79+jRQ9M3b9asmbp586ZrCR8x
MTExsVT2559/arHgU6dOVU2bNtXyvj5mx4EULVpUdejQwTJw4EALY8L79u1r
IS9eq1YtVaVKFVWuXDlVvHhxVaxYMRuoo87nm2rWrKmaNGmiraf+8qxZsyzf
f/99Ct7r3P5eJBA8iMDny5QpU6ZYeMYeczEfmlEUyFNFlS/aTzUoN0u1rf6r
6lU/QvVuYNSgc932eFR4b+L5VPBRg2p7qvaVFqt6Hi+okvkbqezZcrn976eD
2iBfffWV6J8LBAKBQCAQCASCTIM11jvFGt+dJjjGHODkvgHm+v4L+JPat4wD
JAfOuEC0L9vFfZ8nD86YQsw5Ry7cql3OnN9mIAp9RnLhZrM5PCYmhjy4H6b4
REdHa7m9gUNGo/E3YAfm/GQymb7Dd/J1BoOBeW2XYe5CzF2AtfPQ90loaOiH
zNlNLhxrJoWHh0/EmlewZizWjyQXjvZg5udmvCX58LCwsB7UIvfx8enk6enZ
zs/P72nm3k5Ld1zPu41rVsPeVak7HhwcXJm64+TJ70V3PL1827oes+iOi4nd
0TI9L7ijNjrPKtZonLiuf46+Ur/99lu5jRs3Vv3ll1+qY15tb2/v+oGBgY2w
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
X7YMHjzY0rt3b0vbtm0tzBtRu3ZtValSJUUdFx2OOUyYC8h+vEKFCqpy5cra
WuYH6tSpk6Vfv36WkSNHWpgr6N1337UsXrzYgs/IlkOHDqUEBQXJ86ICgUAg
eGBgz3tfuHAhFc478N728d4o/9Tjval9i75U8d7Ux9XjvWFayDc1dBn2zXhv
tKMZ740+Ld4b7+davHdcXJwf6sxDexLQ4r3J40RFRW2NjIz8njGNAPV8l0VH
Ry9kbm+smYu+j/EePAtz38F6xnq/ZTQax1v575eAEagPxbxB2Kc/yj6M9UZ/
V+oN47NE+/3797cJCAhohr5G2L8B5tTDdetY47w1Hhxzq4aGhtp4cPJdd+LB
8fps2ud3w4M7xnk7kwd/TOK8xbK2ZTiGW6XDb6u7iOFOj9+mLgPPLJ9hIcdt
n8ub55z5DugHqP2AeTUOHjxYb+fOnc08PT2fCgwMbAVf0h57dII/6Ia1vYAB
WDsUa4bDJwzHaxhN30SeGz5sPPzfRPiut3DtqdQyh3+ciWvMxtxPMf4Z5i/C
Xl9gzxWYsxpjq9H3Heb9gJ+DzwZtR1uL8cb8wyiPYb+T2PcMfKU/2iGAAeDz
R/Hw67oGhxbfjZ//AvN5o3oJfv8SysvMYYHx6/Tz6KOvv4k9/8E13f7eRfB7
IHVrcc8wZs+lfI2YmJiY2P0Z3ps0jdvHsgD3raNIkSLq1VdfteB91e3vcQKB
s8D/lT/++ONu5rpba1x3pzpnrVy3PYT3ziq89/9wSvWp9r1q4DFaFchV2uX3
TK9evSzMY+TusyMQCASZiYSEhJRTp06lbNq0yTJ79myNz6aWXePGjZWHh4fb
PxenhRw5cqjSpUurJk2aqAEDBljefvtty5IlSyzbt29PCQwMdPvvVCAQCAQC
HcnJyRmK98Ycnfcm56Hl+Na5b8Z9o81c31et3Pdlq9b5BSufkmzN+a3l/cYa
Jv+OY95v6uyazWbqnTPfdwhK5vr2oyYvtXmNRuNhct+o72QsY0RExA/kvtH+
GvO+jImJWYJyEeYsCA4O/hTlTOzzLvqnRkZGTsbeb2Dd68z3jbEXsHYEyqHU
Og8LC+uPei/M7ebr69vVy8urY0BAQEv0PYnxJ7Cmic6Bo61x4Pax4I4cuMSC
i4nds92TZrlyyMut0uC79WdIdL5b57qpWc7zxrOXlJSUiu/mcyqOfDfPMc8z
1pblGWd+A4xXZ+4D+I06R44cabRr167mOLctsaYd/FFnaktgXW9y3vgOMATX
GwU/8iK1KOA/xmHsdez9VnR09GTmZ6DfQt/08PDwj9D+BHM+w9jneK2LsG4Z
rrUcr22VNY/3BvRtwWvfirm/Mpc32gesMd5e2OskytMAc0cEAdTWiMI8ppug
H05k2glS4PDz563PK2l8N5qXUV6hlgfzWMA3/YG+P+j34ef+zSq8N/NS4r5R
derUUX///bcr6RoxMTExMSdYw4YN3f7/u7TA/+nx/454P3b7e51AcK/AZ9OU
Nm3aWNx1jorka6jqlf9Ydarrq7o3jFHdGxCOnLfw3lmV9yZGsqxzQnWoME+V
KdDMpfdP8eLF1VdffSWx3wKB4IEH/+fu5eWVsmLFCsuECRMs3bt3t9SoUUPL
u+Puz7zOBvNWNGrUSA0dOtTy4YcfWrZs2SLPMQkEAoHALciIzjlhH+8dHx9P
3tvGeaOtaZ2jfdk+vzf5bsZ7A7Z4b/LdaNvivePi4kxRUVGGmJiYUMZ7k/PW
472pdR4REXHAmt9bj/deB3yNOvnuBYyDBD4NCwubExQUNAP9/xcdHf0W8+Ji
3WvklsgzAc9jv+dCQ0MHYn1fjPVE+QzjMXHtdvgM0va3335r5evr28Q+pzc5
bvJaut45c3qT476fnN7k2Bxzejty3JLTW+whs/vWKFdpcNp3q1HOZ034zAnP
JHUYqMdgz2nzWRU+s0Jem8+w8IzzvPPZFj7jwmddcN5r8PkXjNXlszF8RgbX
ak4fAnT19vbujmv2BTQdcz5rg7VjgFex9g34jElYN5naFNj3A1z3Q/TNgS/4
hNoV6F+INcvQXoE2n+9ZA6zDnE2Y/x25bpS/Moc3+vbhZzyAub9jzlHgBKBx
3Vb9jGAgDHOZU8KM+fGo8zmk8/D5FzB2kTm8yXXDf/OZpavw99fQJq5b/fuf
KG+izfwW9P98P3D7e1dAQEBK/vz5te9Wu3fvdilPIyYmJibmHJs6darb/z93
J2TPnl1169bNgvdet7/vCQQZBT5HpowdO9ZCDX9Xn5mcOQqpisWHqZY1dqvu
DWNv8d06hPd+IHnvkXV0nFT9qv2o6hQfrHJmz+eye6pz584Wf39/t58rgUAg
yAj4//XDhw+nzJ8/X9MLZ1x03rx53f6Z1t1g/Hq7du0skyZNsjC+nZ9V3P23
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
0agPQ30w6gMw1tvf37/HsWPHumEPaha3xD7Nse4pahlT09he95x6x/+V+5u6
yeTbJPe32ANu952XO73Y7vTyctvrlusct71uuZ6Xm8+RYK6HPcfN5030vNw8
h+S4eS5xzqtaOe4afG6FHDefYyHHjb0a8nwzvwGfd+FzL6i3wHVawce0wbjG
cwOd0O6Kse463w0MRX04+keT78brfhPlZOz9LjATczUtc+BzzOPzOczXTa2K
tdiX8d3fM183/NXPcIm/wiXuYHw3rn0AvuB3tA8nJiYesWqZn8S6U/iZfQBf
tP3JdWMsjM8Moc8IaHw380jofDd9Lv0v+i7pnDfq161cN3NU/EGuG9chtDze
BPluXducnDfwD3lv5qtyJ++9d+9e7XNqvnz5FH4+15IzYmJiYmJOt3nz5rn9
+8q9gHHqO3bscPv/bwSPLnj/Va9e3WX3fOF8DTUt864NotUzDeNtnLfw3sJ7
j7bhuOpeeYWqWLBVpt6LjK/84IMPRPdcIBBkCsixMqZ77NixFj5r4+7PnILH
tBzpXbt21WLBg4OD3X6PCB5MCO8tEAicid27d2u8N+MMrTiPdlJCQgLjD8l9
U4OX9LeZvE1sbGwk/BBjvoMAP7PZ7A14of4783wbDIadwFaTybQZc7/F+tWY
vyoyMvKrsLCwJeSYsM9sjH2IOTNQvotyKvaYiPWvh4eHv4z1L6A+AvWhoaGh
A3HtPgEBAb1OnDjRg/rFjOkk980YT8Z6pqd5rnPf5NN07luP+ybnpmuek/v+
L81ze+47I5rnjI0VzXMxJ1m68dvKifx2RuK4df3y/8rN7RjLrfPcOGs2nts+
Pzfjufm8is51W3N0N7Fy3c34jAufdWFMN9qt0W6r8904753JdzMfArUhyHlj
Xn/mSiDnjf5R2GsMfMir+JkmoZyC67+H1/Yh9voYc+dhzkLMWUZdc+ZowJ5r
sNd6YDPwI661Fb+HbfBFzOFNH/cb6vvhyw7Cx/2OsUN4DUew7ijmHgdOAd70
kRjzx1w+JxRi9Z2RVl8ahTZzSFBTQ8vtjfI8+uiHL8MNX0b9CvqvJicna7rn
1vzethzf5MSpfY5r3GT8N+b+Dfzrzmdt27dvr8V6T5o0yZW0jJiYmJhYJhne
O93+feVewZwb06ZNE+5F4FLgs2QK4594/2X+PZ5DlSnaTz1dfbfqqnHd9hDe
W3jv23lvHd0qL1Ml8tbM1PuzX79+Fnx3cvuZFAgEDz6o47N+/XrLgAEDLPnz
53f7Z0xB+qDGTYsWLdTcuXMtzN3q7ntH8OBAeG+BQOBM7N69m3q6jDNkzPfF
hISE84mJiYw/TLJq756D36HeOfkZU2xsrAEIt9M6P4PyOHAY3/EPALuNRiO5
oR8YL4m91mLtasZRBgcHL8fYAuzzCebPYa5vzPsAa6g1/DZjvkNDQ19F/0vk
qlAfBjyH+f0CAwN7nzx5sifaHcl5MdaTMZ/2muf23LeD5nma+b51zfP08n07
ap5nNN+3Y8y3UiqXs7jvxyTm+2Gx/+Sy7e8JZeWylVUrQFn5bN5PyqpJzvvM
er9pXDZKLVYbZV7enyjzMVab9y1B7YLk5ORCFy5cKExcvHixyKVLl4pevny5
2JUrV4pfvXq1BOBx7dq1kjjHpTG/DOaXBcphfgWgItZUgq+ogjWPY041zKmB
8Zr4vFIb43WBepjTAPs2wlgTjD2BsSeBpzHWAmOt0N8W4+2ADtinE/bpirFu
mNsT6I25/YABmDcI/YPR9zzWDUffKPS9iPZYtF9G+zVgAn7Gt9E3GWPvoJyB
8iP8vJ/Ab82HT1iKcjl1KPC61wGbgR/JaTOWG9iD6+8DDmDt79ZY7mPY9wRw
CvBGmzm7/VEPxJxgIAR1xnVHYH4kSiP6ogAz2nEo44FziXSsyclJmHse5UXg
EnAZzSvktXU+m3HdjO9mTDe5bMZ0Y44GxnWj/Bu/B61kjDeB+j/oY/kv2imE
Mz5zYs8062m1iZ07d2qfUQsUKKDwc2Q+GSMmJiYmlumWkpKiihcv7vbvLPeD
7t27C/ctcAk2bdpkKVeuXKbf09key67KFh2gWtfyUl0bnrNCeG/hvTPOe9/C
UdW67Lsqf84SmXavVqtWTXl6err9bAoEggcP1LGjdgrjukuUyDw/Jcg8kANn
nnXGgfO5QHffU4KsDeG9BQKBM7Fnz55riYmJl+Pj43Xu+wI+W2i8N0ANXvLe
56y5aKOscYoRZrM5FGUAxnyio6NPMtYR9YOMgwSodb4F45sxfz3KdREREatD
Q0NXMK4S+8zF3E+Y6xvtmSjft2qdvxEWFjY+MjJyHPpfCA4OHoH2EMwd4O/v
3/fUqVO9w8PDOzPOk/rGOveN9lNoN2NsqK53jnZ9jNfF/FT5vhlnynhTct+M
P3XM9x0QEFDaz8+vlB7znVa+b8a82uf71vXOyS2SZ5R832L3YW7Jzc17+W5z
c1MnwTE3N+ZV0XNzY38tNzd1FxjLfafc3NRvoI4D2ozjbg+f0RE+h3Hcz6Dd
HWO9sE9f1PujPhD9g4GhaA9HexTqL6Ici/IV7DWevgT1ycB7qM9Ayfzdc/Fa
FzOuG3MY1/0t+jdi/AeUW1HuAPbiuvuAA4zjxtk+gtdynBrm8Ive8JVnqGEO
BCQnJwclJCSEoC8UCMccA/2j1U9G03XSf5Lzpn4Gq9bnii7yWSPUrwBaHDd1
zVFqObwxpumZk/OmljmBz3/M3Z2K69aBfubz/vf8Lc5by+3tLN77btGuXTst
1vudd95xLSkjJpaF7MaNGwp+TuEcuvuliIk5zQYMGOD27yz3i0aNGil35gER
PNyg1s6YMWMyPcabfHeZon1Vy1qedny38N7Ce98b7/1CnWMahtc6oBp6jFI5
suXJlPuW+rdLliyR548EAkGG4OvrmzJp0iRL2bJl3f75UeDc94K+fftaNm/e
bJHP5IK0ILy3QCBwJnbt2nVd572t3PcFtM+To7HmntV471gYqmYUJrRtWudR
UVG+gDfaXigPRUZG7gd2ob6VuXGxx0bGfaNvbUhICPN8L8Y+89A312QyfWw0
Gj8yGAzTUf8/xnyHhoZOZMw3dYkDAwNHYQ3z8w7E557+3t7efdDuSl4M89uh
v01aub7Dw8Nvy/WNPWvpub7JfZOf0/XO/fz8KmQk17ej3vnRo0dv477vR+9c
cn2L/Yc91Jw4+m7jxHm274YTp7Y59h2KPuqbv4D6q+gfb/UtU+FTZqGcjXmf
AV9gzpfkwDF/LcpNVk3zbbjGL4Atlzc58OTk5EPwjZ649jHm8SYHDpwFfAFq
mQcBwYCezzuS+SHweT4a4zHxTByRwNQRt0K/UaevpcbGZXLgqF/V+W/gD2s+
b03DHJ//bPm8z9+K/dY4cHLhzOlNMN6b/Le78nsfPnxY+3xKzTHh+8QeZoOf
UB9++KHq1auXqlWrlipcuLDKnj27So/r4BjzXBYqVEhVrlxZtWnTRo0bN06t
WLFC20tM7EGwpUuXuv07izNQo0YN4b4FTgc+O6fUq1cvk+/fbKpUkZ6qRc3f
VZeGCYAj5y28t/De98576xhUfYt6vHAn7X7LjPt4woQJFnc9nysQCLI2+H8M
5uzu06ePJWfOnG7/zCjIXPCZhilTpogOuiAVhPcWCATOxO7du28kJSVdtcYe
knu5xHzf5L+B8+hLiouLY+w3LS4+Pp78DfPSGgFN7zw2NtYPc06jfsJsNh8x
mUwHUe5B/3ZrTtytRqPxh/Dw8I1RUVGrsM9yrF2KOYux5nPMn4t+5vueHhER
MQ31yQaD4Y3g4ODXIyMjxzKek7HfZ8+efR7viYz37IU53cl7kf8iD4Y9GQPe
lrl/mQP4v3J/M59wRnJ/p6V/Lrm/xTLBtL9fWn9XZ+XvduS0+ayGzmunlbub
OgfUO9B5beog6Hm7qY9gn7ebZ0fP280zxWdMqLNAvQXmHKD+Ap9FoR4DdRmo
z8AcBdRroG4D9Rv0fN1AJ+brRpv5untivDfa/VB/FvVBqA9BfRjqIzF3NOaN
QTkO/a8yVwL2fQvjU1CfBszC2GyUc/E6FuL1MNfCSswhz81nchjrvQ3ldpR7
UB7A74Vx3odxjo+iPAF4w7/4UN8c/tEP7UD4HcZ5h2GOrm1uYJw3eW5y3EAs
Nc7JcVPbHPNsPDefMwI0npux3oAj130Tc//SY73t4rw1jlvXNSf0eG/GeZ93
c7z3c889p8V6v/rqq64lY8TEXGDwd1q8K7nrx5z8OYycOPnwvn37qmXLlqlr
1665+8cVE7vN8DnBbd9VKpYvrxrWreu0/Zo0aaLc/T8dwcODhQsXWvLly5ep
Z6BEoY6qeY39Vr474Y68d1fhvYX3vg/e+4U6XupF4JlKC1XBXKUz5X7u3bu3
Bd/P3H52BQJB1kBERETKtGnTLKVLZ47PEWRt5MmTR/F/SXv37nX7vShwP4T3
FggEzkRavDdzz96J9ya3Y897o2Ss42mUJ6Kioo4CB00mE/WCyXv/zPhJo9H4
Y1hY2CbM13hvfNdZpvPemP8ZeW+0p2POu+S9sT4V7x0QECC8t/Dej4I91DHd
LtQ5f5PcN/AB5sxEOQevcR5e6xK8hi+x1yr0rce871BuwbpfUO5Gex+ufZDx
3YAtthv10/CLZ8h9o+6PvmDqm6MdhlLjvtFv4jNB1DgHyHvHJpDwTk5OpB+l
xrmV++azRYzxpt+9hrrGfaOkzvmfus65znsDOudt0zk/b+W8s4rOOfxzSu7c
ubW4VvKDYmIPi3l5eam6TuTbMgoPDw/Vs2dPtX79evXPP/+4+9cgJqZZxYoV
3fJdZcPy5UolJ6vffvxRNWvc2Cl79u/fX/R2BfcF5qgcMGCAJTPv/fx5qqkG
lb9WnRsmOnDeEu8tvHfm8t7ESGqflxiuaes7+95u2rSpwvdGt59jgUDgPnh7
e6e88MILFurFuePzpbOQM1sOVSJnEVUtdznVOF911bpAQ9WjUHM1pEhH9UKx
bur1Ev3UJI/n1Hslh6kPS49W88u8bMOX5SaoFeUm2mGCWlz2VfV5mbE2zCk9
Ur1fcoia7NFfvVa8p3qhaGc1uEgb1bNQM9Umf13VMG8VVTGXhyqc/cH+PRJ8
NvXbb78VDfRHGMJ7CwQCZ2LPnj0a7834Qyv3fZnx3uRnHHhvUjioxsWS9wb0
PN8hzPONNvN8n0Jb0zsHyB/txLpfqRlsMpm2hIWFfYc5a7DPV+hbjvpS+LRF
mDsfdeb6nhUeHv6+wWCYyphNa67vlzH2AjXPz5w5Mxzjz6Ldh3Gg5L7j4+O7
4prkvjswXtRoNLbV834znhR7PYk9noiIiLBx34w/Jfdtzfutcd9YUzU0NNTG
fTvm/bbnvnGt2/J+nz59OkPct2Peb6WU5P0Wszfb39Hx76v/7e25b3uNfPv7
56uvvtLuKfTnJsh7E+S9Cd6PBO/PvXv3avcq+gtSu59x3/v27SuCdtEjR44U
w7ziJ0+eLIG5Hj4+PiW9vLxKYU5p5gRAu5yvr2955grAeCW0K6P+OOrVcF6r
Y6wm6rUDAgLqoF7P39+/Ac5yI9SboP4E6k9in6cx3hJl6+Dg4LY4H+1wjjri
rHcOCQl5BuewO8pe6OuD8f4oBwLPMQcCyuEoR2HuC1j3Etqv0G+gfBP4P/R/
gP5Z6PsY15iPay7FHsvRvwrjGzD2Pc71FpzvX1DuRrmPz+3Qh1G7AuVxlKfg
384w5pu65vA/AXzeB+1QnPNwxnwzt7c1BwRjvqNRxlp9ZQJFza15I86jfRFg
bm/mlriKfi23N+rkvG+gpK75n+jXYr5REvaa5rb83ujT9M2xvY33dpfO+cSJ
E7X/+zJeVUzsYbA///yTvJjbP6MRfJ6katWq6q233lI43+7+1Yg9wjZ69GiX
3vuM8f553TqN89ZhSUpS67/8UnkUL37f+3/xxRdu/9+O4MHE7t27UzLzOZBc
OYqqmuU+Up0axGqct/Dewnu7g/fW0a3SIlUol/Nz7FaqVEkxR4C7z7NAIHAt
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
iHKz2WzeEB0dvQpYgTlL0V6IsbkREREfGwyGmYzvRjk1JCRkclRU1Hi0X8Yc
La4b5SjMHY76UKu++UC0+5tMJi2uG/Xu1rjuznpcN9pt7eO60X4S7SfQboLr
N8KcBmjXw/Vtcd3oq67HdeN12OK6ycuRn2NcN/m69OK6yXPbx3WTB9TjunVt
c8e4bp3nvlNct2NMt8p4XLeYWJr3h7LjwtV/aKbzflRWLlylw4M7aqbb8+D4
bJqmZroeKw5XUxLzS9lrpmOsAs5zRYxXYqw4eXBqpmNdDZy72mfOnGlIjQad
+6YWOvbvdfLkyf5eXl7DAwMDR2JsHMo3w8PD/w9zp+PczsZeczGPvmcJ1ixH
+TWutRbX3YTX8V1SUtL3AH3WNlxzB3zbHry23/Az7AP2o5/c9xH0H0P/CQJ9
1EL3Rz0Qr5f8dxj2ikSfCfVoamWgHofxcyiZOyKJvhb1C9RA5zNHfAbJmnvi
ulWP4w9cT4NVq0PTQbfmAP+bOb5dwXvPnz9fi/Vu3ry5q6gWMbFMsYIFC7r8
+/mdcKeYb0fDuVcjR45U6cUjMl/5pUuXMvG3J/Yo2qRJk9x+TjLj3Ln7/zyC
rAF8jkoZOnSo03N558heUNWttFx1bHRe47yF9xbe+2HhvYkXa/2u6hTt59Qz
M3bsWOExBIIsDnJUfE6FuZZc+bmNcd29irRXs8u9oVZWmmUH4b1dzXvbY1PZ
l9U7xXuolvmqqZzZXBsH3qJFC3X8+HG3nwnB/fuUe/n7C+8tvLfw3sJ7p4Xd
u3eTO7lGbV1q7JLvTkpKIt+i6ZmjjzGIWk5vGPnueHI1Vs4mKjY2lvGLWl5v
ct6on4Wf8mbsI9qHseYg6gcZH2kymahpvg17fU++G6Cm+bfUGDYYDF9izhco
F6D9CeqzIiMjP0CdeuZvoz4xKChofFRU1Bhy3YDGdaN8jlw3+vuj3ceqYZ6K
68b12pHrxt6tsQ+57qcduW7GipLrZuwouTNy3Ywp1bluxpqS6ybnpnPd5OLu
lusm5ydct9gDYOnGhqs04sMddAbSjA935MR5z+vx4Y766fbx4TxDPEs8Uzxb
9nnE9fhwPnfCM8nY8AMHDlTz9vau5eXl1fjMmTPUb+C574B210OHDvXH2EDs
NQxg3Pd4YDLmvIu11JOYAz8wF2f+c+y7GPXluP438CGr4RvXolyHc7sR/T/g
9f7M+G/4uF9R7oBP2ctne1A/yHwOmHsIfSeTk5NPoc3Yb1/0+cOHBGMv6qBH
Mgc45tt00Pk8ETlw6/NFyZh7AaBP1jTQrRz4dXwe1GCvg472n9jvL1znX/Rl
+ufRJ598UnsPyUhsqphYVrWVK1e69Pt4RuHj43PXP8v06dNv26dz586Z8FsT
e9QN761uPyPOBjXU3f1/HoH7gc9RKb169XI6510of2PVvPYpK+ctvLfw3g8f
7/1SbU8NzUtPdGrO7xEjRlhclb9JIBDcHTZs2GDhc4Ou+qxWKHsB1aVwKzWz
7AT1VaUPgVkOnLfw3u7mvW/hNbUFWFvmRTWuSFtVJ3dZl90jzCn/zjvvWPh5
zt3nQ3BvEN5beG/hvYX3dibvvWvXrut6bLce1406c3cn3Qrr1njuc9bctNTm
jSJXQ84mLi4uLDo6mny3P3kd1DU9c5SHzWYz4x93Y/722NjYXw0Gw7aIiIjv
qR2MuYyj/ArzvsScxSaT6XPg46ioqA/DwsKmk+sG3goJCZkQGRn5Mua9EBwc
PPLMmTPDqVdMfhtze5Lfxl5dsSf57Q7M82s0GhnL3Yr5f8lvMx8w9tA0y3V+
m5rI5Lepkazz24wZpYayzm+TPyO/zRhTR36bsaiMSWVsqp6fm9rNGeG3HfNz
K6VypaVZru6B335M9MrFXG9O1U7Xz4XOj9tz4/+lnU5unHkEsH+Zw4cPVzxx
4kQNT0/PhvAdTbGmOfZqvXv37mfgR7phfj9/f//nfX19X8TYq/ArbwBTgPdw
rqfj3H+Ec/0pygXMAQ4/tjQpKWlZcnIyfdZKvKY1eA0b4Ss3oX8zY8ExdxvW
/Iq5O+n74Jt24zX/Tg101I+i7zjKU/AfPljrj3YQEIp6OPaJAAx8lghtM/aI
YS5wvJZE7HEe19Xiv5kHnBw4Pg9eQR+fU7qGNTdQv4G+G9jvJub/m9mf85kH
ldqfefPmVZcvX3Yt4SIm5kSrWrWqy76H3w369u171z/LkCFDbtsH/isTfmti
YkrLH+/uc+JsuPv/PAL3gvkh9Wf6nIdsqlKp8ap9w3N2nLfw3sJ7P7y8N9Gl
/GyVM3tep50j5qGQuG+BIOuA+c4GDx7s9GfE0gJ1zOvkrabGegxWyyrOsPLd
Hwrv/QDw3v/Dq2phqcGqW4F6Kl+2XC75TF+nTh115MgRt58Vwd1DeG/hvYX3
Ft7bybz3VT1vd1xcHPnuRBjzdsejzfhDM/N3o25CnbHdEfBDYdYc3gFRUVG+
0dHR3la+2xPtg0ajkXGPzN29Bfv+YDabv0d7Q1BQ0BrGdaNvIeYynnIePjN9
Gh4e/lFoaOh7aE/x9/d/Oyws7PWIiIiXMH90SEjI86gP8vX1HeDt7d0X7Wdw
jQ5Y1455uSMjI1thvAXqTzMvt85x63m5yXFjrA72r6Xn5UZb47iDg4MrMy+3
znEzLzfaZRzzcuvx2/Yct31ebvJwjhy3Hr9tz3Gnl5dbpcFx30VebjGxB8n+
kydPK45c2WmrE/o5cowj57nD+qL79+8vgXNYfvv27TXOnDlTB2e64Y4dO574
+eef25w6daot1nUl940zPgRndxTO/1j6HZzpN+GbJuGsT4M/+gD1D6k/Ab84
Nzk5+TP4xvnwewuZjwH+cGVSUtLXwDfAKszbCP+zGXMZC/4jyh/hq3ZhjBz4
b/ChB9D3O8qj2It5wE+jfhb7+GHfALSDgBBA00LHGhPWw6XEaE4Z7WQ+l0QO
HLhIkAdnHDiucRVtjQOHv/0H+2bqZ9GpU6dq33Ofe+45l3MtYmLOshs3bmQo
P3ZaqFyxoipbunSmfVcvWrToXf88RYoUSbVHo0aNMuG3JiZ2yz766COX/N/K
lZDYkEcXgYGBKXXr1nXq/ZQ7p4dqWPV71aHReQ2u4r27Cu8tvLebee+xwIDH
V6kCOUs67Ty99NJLku9bIMgC+PXXX1Mq4ntQZn8my5Mtt+pQqLn6qNxbakWl
jzSk5ryF936QeG9iK7Ch7Bg1rkgbVTFn8cy/h/LkUXPmzJHnph4wCO8tvLfw
3sJ7O5P33rlz52Wrljl1dSmwG5+YmGjTMUfbCL9jRBmRlJQUyhzecXFxgYAf
4KPHeAOHo6KiDphMpj3kvA0Gw1bM3Yy916N/fURExOqQkJAVjO3GXp9i7GPM
m409ZoSHh78fFhY2iVrmoaGhr2LuixhjHt4hGBtA7XJ/f/8ex44d64Y92ul5
uTHnKVynGXP5ot0Y7YbYo759Xm6ghq5VzlzAel5uvF5bXm5y3elpletctx7L
jd+BLS83dZnJdTtqldtz3elplas7cN3qzlrlwnWLPcjmEt57+/btHidOnKiw
devWmj4+PnXhSxrB1zX75Zdf2qLd1tfXt+vZs2c13hsln68Zh/V83kbjveFL
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
MA4ECL1DCCWB0ItSRHoRkF4E6SBNOqgIIgiISpOOCArSpQnSEZAqvSRAIJDe
LzE9ICAq+mluvudZb+PlkgDJbbIpM7/fw07b2c2xM3t7/33fNzz8S5S/pi9z
lLfgON/iO9g2sm/aeaNuH/KHca4/oP4otsdRdxb7n0PfC9BF2nnjXF3QfoPs
G7pjsvP2Qt4Xf0MA7buRD0a9wr4xzs/YhqNM9h2D86Cd9yPUKXbe2P4GKdyb
Nt6oe4ryU+T/pFD+C/3/QV2afAdlbCR7e3vl3nHp0qX0ASsyyZRGKU+ePKl6
Xr597lwC7k09MRhE6ZIlNX0ud3JyeqG/48SJE4n2PXbsWBp/ejLJJMTTp09F
qVKl0uy3qfTU9OnTJUfJRtKaedvmKSsaVjsrXqv3i+TekntL7m3Bvf9l3z+J
akU6aDLfbGxsxNatW+WaLSWVhiIbHD9+vDGtYtoUtSkiBpfsJb6qOE+sc1gY
z7wl985e3PuQGfdWtaRUL1Erb9k0+87ftGlT4eXlpfsck0pakntL7i25t+Te
WnLvI0eO/Ewbb8gH8oyIiLgXHR2t+DKnbTe+71wLCwujf94r5DnI06c5+c4J
5I8GBAQcDgwM3Evmje1mPz+/b3x9fVf7+PgsQ/t87P+pv7//p2RLt27dmor2
8RhnBNqGY5yhUVFRg1xdXQeQSWGfzp6enu3v3btHVtXkypUrjVxcXOqhX+1T
p07VXLt2bQ1sK6bWXzn5mrWcW8bjlikTpwzhl5y+FlR7bszt4uhbwtyWm/Ob
77PwvRa+30J7btpyk2nTnhv7OKFfVcY3QF0Ng8FQC33qMP6B6R2ZZozhjXWh
I228sU8/tA3G2jCcviXIuxnHG5qJ77vz0L4Y46ww+adYh/PZgON/i3F3Yp3a
g7r9+BsOQoehI1jTjoWGhtKP+U9Yy87FxsbSl/lFxn1A/Q3kb5l0G2uOErcb
WyVuN7Z8v0jh3Chz7aV9dwQ5N2N4YxuDciza7qPvQ+gx8k/Iu1H/O+27ybrx
fZC8+0+Uybn/Qpn6H9r+h7p/sE2T76AnTpxQvoOWLVtWxMXFpStfkUkmrVOO
VD4rPwwISMS9afOtdbw72la8SLL0154/f/40/uRkkum/9NFHH6XZ71LpJb4D
g3up7r/zSKWPLl68qCnzLlLwVdG8trfCvCX3ltxbcu+kufeYmhegc6J60c6a
zDvGc9m3b59k31JSaSAywVfTwJeVMndz5hFdi7YTqxw+FWsdF5qYt+TeknuP
S6DD0IwSHUS53EXT5DqkLQd/29J7rkklluTekntL7i25t5bc+/Dhw4bw8HBv
iDbed7G9HRsbSxtvZ6w3V6OiomjbTbvFc8ifRf1plH/E9gdsD5B5+/v77wwK
CtpEO2/G8fb29l6G70oLDAbDHMbxRvtHqJt67dq1d/z8/EZGREQMDg0NHRQS
EtIfY/RxcXHp7ebm1tHHx6ctedW9e/eaBQcH1zf5Kq6FsaodO3bMadmyZZWP
HDliR8ZNXkZuZs64Vc6tMm7VnpssjlLZnCXjpswZt0jCnlsybpkyWcoQNtsP
HjwoYmmz/euvv5aESpnbbKO/vWqzDVXEeI7YpxLandBeFaqGPjVQXwtrUR3s
+xLaXkZ9fdQ3RN2rqGuC9as5zrMdzq0T1qLeWHe4zgzD2GP4zo2vr+8UrD0f
YG2aBc1Hn2XoS9vutbTtxv6M270d4+3Glrz7EPJHcRz6Mz+B72EncdwzqD+H
7WUc+wrO9yq2zujvCtFHxl3adWPrjq0Ptn4Q40cott2066ZNN/Yh745CPhp5
bGL4Dw5x/wG2D9H2GMd5Qr/m9Glusu3+02Tb/ZdJ/0P/eKH8N/r8Q7vstPgO
OmnSJMXH+YQJE9KJqMgkU9okzNVUPSPns7VNxLypH3bu1Px5nPZML5Is7da7
d++exp+eTDL9l3CfUt610Pr6T0+99957kp1kE2nNvO1LDBGtX46MZ96Se0vu
Lbl38tx7rIl91yzWXZP5V7hwYcE5rfe6IiWVlXT58uW4ChUqaP5dK2eOnKJJ
wQbi8wozxFrHzxXmLbm35N7P4t6Hy40VB+xHizFFm4tCuWw1vyb5/tSyZcvk
M0AGk+TekntL7i25t8bcO4g2iWFhYW7kNtjeiIqKuo7tldDQ0Ivh4eE/0Xcv
tmeio6NPIH88JCTkB7QfwJbMexe0JTAwUGHeQUFBy7y9vT+HPkXfGRhjGvLT
PD0933V2dh7r7u4+FPv2I+82GAxvBgcHv+Hi4tKdsbxV3+YeHh6v3rt376Xr
16/Xwveu6uhX+cCBA44LFiyoePDgwZLkaYzNrQXnTq3f8hySc8ukX0qWaZuU
LNMWJq6NrapkmTa2+VSmjXwBc6ZNPYtpP3nypDRURmXaULmkmDb2q6IybXzH
qYn22hizrjnThhqhrTHamkLNUd8KdW0wxmvYvz3qOqCuM/brinPsib+B79MM
wd/AWArvYr2ZimPORH4O1qgF6LMQ5eXo8xW0Ee3bsL59FxkZuRfHPQDRpvtH
9DmN/E+054Yu4jiXIfq9uM74D6jjO0J3oLs4P3fs443+vij7oz0A20CUDWhT
/JdD4aiPxDYKdeTc95F/gPwv0EPoEfSYQr3i0xz7/2Hmx1yx6ybrxnnEc25s
FaHub5QVH+dacm+MG5+vVKmSct84c+ZMOtAUmWRKu4TvFql6Pi5RvHiS3HvW
++9r/ixOPS9t3rw50T74fpQOn6BMMv2XJk6cmCbXf3qI9h56/74jlT66dOlS
XIkSJTS7diqWeT8B75bcW3Jvyb2fz73/1XnxUom+msxD8jkfHx/d1xcpqayg
77//3sj3SbT+rlU+b1kxrewEE+/+XHJvyb1fmHur2mY3VLyWv2qaPAu89dZb
Run3KeNIcm/JvSX3ltxbS+596NChwMjIyHtYW+jb/BbyztHR0Uocb4PBcCEi
IuIMY3mj7RRZEPLHgoODj9D3L7THz89vp7e3N7n318ivgpbi2WOBp6fnJ2if
TttK2ljeu3fvnevXr49G38EYuy/GeTMgIKBXUFBQTxcXl25Xrlxpi31a0kex
u7t7o7t379Y9e/ZsbXJv5Cvv2rXLcfbs2RW3bdtWkswb/eOZ96lTp5RY3fSv
TNF/OWXuv3zv3r15k2Lez/JfLpm3TDonq/2SU+bveyTll1y12+YcIuPmnFL9
kqu+yS39kjO2gOqbHPNV8UuO9cJe9UuOuc14BI6or4Q1wQnrQBWMUY1+yVGu
xdgFqKuL8sv07YB9G6LcCGM3Rr4Z2lug3ArlNlgv2kLtUe6Ivp3R3g3tPZDv
hXwf5PuhbSDyQ2jbjXMbi+O/A32IY32MY8xD/WLadqO8Gn2/QnkD6rdDe7Df
AYx/BDqOde4k3/HB53Ae20v4/nuVayK2N/Ad7CbjdGN9vMM1E/Ik60adD+r8
sE8gpPowD6UfcygC+0bSrhspBttYbGnP/QvytOlWYndD5NxPTFJ8mpN5Y3/G
7FbidtOHOdoohXOTeZvZd/+Dun/SgnurYixMXI+iZMmS4u+//05/sCKTTBqm
c+fOpeq5uGyZMkly797duqXJc/jjx4+f+XfUqlUrQf9ixYql0ycok0z/JdxH
Rb58+dJkDqSlbG1tBb4z6P77jlTaC8+Xcfz+osV1kzOnjahWYYVoU++h5N6S
e0vunSru/a/qlRyoyZxs0qQJ/fjovs5ISWVmrVy50mjpQ8pa5VF8mrcXXzrM
F18nYN6Se0vuPd6CfT+bex+2HyuO2I8RC0t2FxVyF9P8maBjx45G8la956GU
5N6Se0vuLbm3ttz74MGD5N6Kf3M8L9yEnGNiYq7QtzntvKOioujX/CzqTyJ/
HPmjISEhh7HdZzAYdpMd+fv7b8L2q8DAwJUBAQFLfHx85kNzyL3DwsKmeHl5
TfHw8Jh45cqV0X5+foNo643xetPWm/zq5s2bXcm9sU8LV1fXpt7e3q94enrW
ob23s7NzNcb0Vbn33r17S6h23rQ/JaNT7bytidstXtDOW/zHvWWSKS1ThvBT
Tt5tadONvqWwZpQ291MeGhpaTvVTjnYH2nSjvbLqpxzrQHVLP+Woq4d1pwHq
XlH9lKN/M6gF6lrTphtqi+8+r6OuI/p0Qbkbbbq5fqCuD+r6ozwI+SHQMOTf
xnlPwrryPjQTf+NnOLfPcZxlWK9WQl9hn3XYfxOOvwP6Huet+DKHTnC9g35C
/iK2im03xnXBcW/iPFxp4406N7S5Y+uNsg/qFRtv1AVBBuRp301f5mFQBON2
05c5DbwxlmLjDT1EUWHe90323ZDCvLH9DVvVt7nCvO+b7LzJvM1tvMm5Veat
KjXM29ymO7m6Dz74QPFxPnLkyPQBKTLJlIbp4sWLqXomrli+fJLcu07Nmpo/
f1O+vr7J/g30L50zZ84E/YcPH55+H6JMMpmladOmpckcSCsxjsC5c+d0/21H
Ku2FZ1DNfLbmymkrajtuUZh3RuXeHSX3ltw7k3Bv2n2/XKKfJnNzwIAB0let
lFQqNXnyZKPW37Nq568u5pWfLr52XKQwb8m9JffWgntT+8qOFP0K1Rc2OVLO
P56lRo0aCX9/f93nY3aX5N6Se0vuLbm3xn7O/SMiItzCwsIUH+eRkZHXGLcW
+QsGg+EcyicZ0xt9TsTExBylXWRoaOhBrEV70f4d7gvbfH19NwQEBKyGlgcH
B3+O8lwfH5/Z9HGOfpORn+zu7j7e2dl5pJeX10CM1Yu2mmTeGI+23l3OnTvX
Bn2au7m5NUafhhi71s2bN2u4urpWpc3o9u3bHaZMmVJ+165dxdM6hre085Yp
nVL8NWV5rZlfiyrnNvdNYG7PvX79+vhrnH4NeN3znQ/OA74DovpB4FyhOHdQ
X4g+E+g7gUJ90Tt37hS7d+9ecfQt4eLiUhJ1pa5evVoG7XY3btwoi7I92spj
/wqYqxVv377tiH0qYR8nzlPkq6GNc7YW5nEdzOO66Pcyzqc+5zT9OCDfGP2b
eXh4tEC+lbe3dxusD22xZrRHviPWkM7o2w35Htj28vPzexPt/bhuYDsE/Yai
bgT+tlHYjsV2AureQX4y8lPRZzrG/wTlecgvxThfIr8W425Ev62o2xkYGMj3
dfah/w+oP4HyWawd5xnXAbqCNek6tjexPt0ODw/n2kjbbg/Ii/bdkA/WHH+0
MUaEISoqSrHvRl04+jJmdyTqo1AXjT60776P8gPoIfQIUuy70f4E+o0yxfBW
WTftvJ/S1hv6C/srdt6op23339ia23Yruv8f81bsvSmtv3+qdqVHjx7VA6nI
JJOmKbV+zh0rVkySe9vb2Wn63K0Ka1Syf8PQoUMT9CUDZ9xymWTSI/3yyy9C
Sx/Saa2BAwdKRpINhOfJuLp162pyzdjkKihernIwnnlnVO4t7b0l985M3Hsc
430X7aLJHJ0/f75c16WkUiC+Lz9u3DhNmTdtvPuW6C6+Ulj3Ism9JffWxM+5
OfdWtbp0H+GYW9tnj+rVqws3Nzfd52Z2luTekntL7i25t8Z+zgNo7x0WFkZ7
70TcG3WnkD9jxr1/QP0h1d7b19d3O7l3UFCQyr0XmZjTx2j/EGXae5N7T7hx
48ZIb2/vQbTVDA0N7QX1xPHIvbuePXu2LVnY3bt3m/j7+zekvfetW7dq0t6b
8b1p7z19+vQK5N60R7Vk35a23kmxb2Fh6y2ewb7Fs229JfuWydqUIey5nxWj
29yemzG6VXtuNUa3uT23GqPb0p6bMbqTsudWY3TTnpsxumnPzRjdqj03yr1U
e27UDVTtudFnJNpHo24svhNNQPkdaDLKU9H+IdpmhoSEzMUxP8fxVzKGN/Lr
Mc5WlLdDuxnHGzoAHeP6Bp3DGBcwxmVsr2Fc+rxwhe5gzHuQB+o80a7Yd0N+
jN8NBaOe8btDGL8b/RTmzfjdkGLfzRjeSLTv/oU23tAjKN6+W7XtRh9FKP9h
0lPUKzG9aed93yyWt7lP8/tmdt4mJenj/EXsuZ8lrLXKd8/8+fOLP/74I30g
ikwypWG6evVqqp6FS5csmST3Lq2R/1xL4XtSsn9DwYIFE/StXbt2On6CMsmU
OG3cuDFN5oGWatWqlbLt37+/5CNZXPieF9e2bVtNfs/Pm8dOvFLjkmhT/6Hk
3pJ7S+6tKfc+j+1Pwqlwa6vnaa5cucR3330n13YpqRdQdHR03ODBgzVl3o62
FcUn5aaZ8W7JvSX3TjvufcR+tNhXdoToUbAOf6jX7Dq2s7Ojbzjd52h2leTe
kntL7i25d1py7/Dw8Ovm3DsqKiqeeyN/DPmjoaGhKebenp6e411dXUeg78Dk
uDf9nKNfE4yj+Dmn3aiLi0v1kJAQp927d1eaOnVqRcm9ZcrkKdmY3SIJ5m0e
s1skw7xfJGY3eTfnjKUPc/OY3ZjbJc19mKsxu+nDnDG7sTaQdzvQ/wKZN2N2
Y79q9GGO+ppqzG7UvYy6BDG7UW6K/ZurMbtxjNcwBnl3B5Q7Q13R3gN6A/k3
0b8f8gMw7mDkh0Ij6MMc5THQeOw/Cdv3oCnIT0PfGcjPwvYTrEULcS5LodU4
1/UYbzN9mmO7C9u9OOZ+9DsCnUD5LNc6jHEZ4/OdHzLvG4zhjfJd+jOnnTd9
mqPOF1syb3/kAyHaetOn+c/0aa7G8SbzRlJieZN7M5Y3FO/XXI3lrfo1J/dG
XmHetPeGnprH9Db3b25p223p55zMW5WW3z2XL1+uPBN37949/QCKTDKlYXJ2
dk71szBjeYfcuZOAexctUiRNGB3WgCTPf8+ePYn67tixI50/RZlkSpiMRqN4
/fXX02QuWCvGH9+yZUv83OnatatkI1lY/B5Em34trh3bPOXFq7XuiDb1H0nu
ncG5d+86nqJbzauiQ7Vjok3lnaJVpS2iueM60aTiF6Ip1Kj8QtGw3Gfxalx+
kWhWcaWi1o4bRYcq+0W36mdFn1q3JPdOR+5Nja5xSpQrUN/q+Vq0aFFx/fp1
3dcgKamMLL4X1rNnT82Yd64cuUT3Yh3FasfPxVeOiyX3ltw73bg39QM0p0RH
UTRXfs2eG4oVKyaOHz+u+1zNjpLcW3Jvyb0l99bYz3lwRESEJ3QPuhMeHn4r
NjbWGdurjPEdFRV1Liws7Dy+G501xfo+CR0LDQ09YjAY9gcEBOz28/P7Njg4
+Buyb9St8Pf3X0z2jfzHISEhM7y8vKa7u7tPvnXr1nhfX9/hGHsgxuyP/v3I
uFxcXHpdvXq1I/0d0/cx9m9Gbnb79u16d+/erUumtmfPnuqLFi1yOnLkiB05
HXkduR35HaXG/CYLTyrm94v4P09tzO8ckoXL9OLpudzbnH0nx73Nr98X4d6c
E5wfnCeUJfdGWwlvb++SmJ+l0FYa87oM6hJwb9RVxFx2JPfG/HYi98YY1TCP
a6BO4d7oUxfll1FWuDfaG6HcGOWmKDdHvhXyCvfGHG+PtaADyp3R1pVxDzCm
wr2R74f6gcgPRn4o6kcgPwr5sdhvPPabhPJ7yE9BnvEUZiA/C9tPcA4LMd5S
aDWOtx77bsZ+O7Ddhe1e9DvAeA3QjyiTe5/HZ0TufRVyxrnR78Vtvg9k4t6e
MTExZN+09faNjo72R10gpPg4Zyxv1JF7R6BOieWNfAxEAH4fegAp7BvbRxBt
vRX2jXwCH+dk3yg/NWff9HFuzr3N7b1VPXjwQFFace+OHTsqz8Vr165NZ4oi
k0xpk7A+WMfQbG3FtEmTxJ3z58Xtc+fShNNRyaUqVaok6FegQIF0/PRkkin5
hPu+8ltRWs2J1MjJyUnc4bsqSPhOpdR17txZcu8srA8//FAj5l1OYd6tFeYt
ubee3LtnHXfxerWTornjRlGv3KeiWqlRonyRTqJEgfqiUF5HkcdG2/fPbHLZ
isK2lYV9oZaiSokBop7dVNGi4krRrdpx0b+Om+TeGnNvamT1Y6J0vhqarPl4
HtR9HZKSyoiinbeWzLuoTWHxvt04hXerktxbcu/05t7UdrshooFtec2+B/Cd
2R07dsjnhXSW5N6Se0vuLbm3xtw7JDw83DsiIsKdcb4jIyPp31ex+2asW5Qv
oJ72kLT9Pov606g/YfJ3ftDf338vbb6DgoJo8/1VcHDwF3jOWIr6hWRQ6DPL
09PzIy8vrym3bt2a6OfnN5I2nBhjUEhISH+M09fFxaX3tWvXOgcGBjLGbxts
W6LtFTc3twaMD4yx6uzfv7/mokWLqh44cMCefI6cjrGIzfk3eZ60BZcpk6V0
tf8293meUvtv+jxXOTh9nidl/02f55b23/R5jn3roX8D+jw3t/9GuSXUmhwc
33Ha0f4b5U60/8Z+3Wn/Tf8QaO+r2n9Db6E8PCn7b4w7Feczk2sPjr+I7+Fg
v9Wo/wbljTifb9F3O+p2oz/59w+0+4bO8B0f6AL+Br7vc538G/lbOKfbkBs+
p7sou2PrgXbaf/sh7w/R9juYDBxb2n6HmxQBRZnbfqPvA9p/0+d5Uvbfqt9z
U5zvROxb5d/3k/dz/k9quPezfJ7js4kjU8N1qrBCmWTKKimHhr+Pp4XorzOp
lFRs8iFDhqTzpyeTTMmnH374QYk3r/ccovr166fEHlcTniOUer7PpffvOlJp
o9WrVxu1uP7+Zd63FeYtuXd6cm8/0aH6T6KxwxpRo/REUbZwW5Ef/xd8XNJ7
PVGVO1cBUbJAPVGleF/RuNxc0bXqYcm9NeDejPU9vNohUTyvo9X/R61btzbi
2Uz39UhKKiOJvxEMHTpUM+ZdNZ+TWFjh4wTMW3Jvyb314t4/KOVRYnjhV0VO
jb4z2NjYiBUrVshnhnSU5N6Se0vuLbm3xtw7PDIy0j8sLMw3PDzci/yb/n2R
d8V6c9PEf+j7/Ap5EBk46mkDTv79Y0BAwBGy76CgoB0Gg2ET7b5RtwZ1jK27
CH3me3t7f+bp6Tnr9u3bH6B+IupHo/5t2nBivKG3bt0afOXKlTfRrzvaOwUG
Br4eEhLSknbf9HtOVnbkyJEG69atq3v+/PlK5G7kb7RHdXd3t6N9Ku1UVR5u
aQ+u2rha8nAyQJUJvog9uJA8XCZtU7LM29LuW1gwb3MfBc+z/eZ7H6rtt+oP
QbX9Vv0lJMe8afeNuW2n+jzHPCtP22/s74B6R4xRmXEI0K+qavuNfrX4rgrK
L6Fcj7bfjF2A8qvIN0F7M+zTQvV5jmO1pe03jteRPs/R3g379WQsBOT78P0Y
5Gn7PQT5YciPRP1o7EPb7wmofweaTOaN9uk4Nt+3mQ8tw3G/xDHXYZ9NKG/B
uDvR9zv6O8f2MPofh05jvfsJ6xz9WpB5830fZ5zPTax7rnwfCNu7kDtjfaPd
C+0+XDeRD8S6GIStAf1+xjbMFOdbifWNcrzPc3O7b5V5m9t+k3mr3Bv1SXJv
c1/nSfk5R5vm9t7ff/+98mxct27d9EImMsmULilPnjy6/3b+LPEd86QS43ib
9yMfj6W/dZlkykBp1qxZus6fMmXKMJZTovNiPAC29+jRQ/6GlQWF/3OjFmt7
3jz2CZi35N5px7271b4rmjpuFtVKjxclCzYSuXMV1P3+mxrZ5i4uyhduK+qX
nSq6VNknuXcquTc1tOr3omDuUlb/n4waNUqu81JSZho/frwmzJtMsWPRduJL
x0XiK8clkntL7p1q7n1QY+79g/0oRTOLtxf5c2rzrM93KWfOnCnvJ+kkyb0l
95bcW3JvLbn30aNH6Zs3KCwsLCAiIsIXItPxCA8PZ8zvO8iTfd+g/9/o6Ohr
aL+Ctotk3+RFwcHBx319fQ9huxvaRr4UEBBA9r0afRnvezHaF0KfeHh4zAgM
DHwffSZi7HEYYwzGeptxv69fvz4AfXr7+fl1NxgMXWj/qdp+k5OdPHmy8fr1
6xteu3atKnkbfS6Tv6kMnFzOkoGT36U3AxfSJ7pMKU+a+D4XJptvLXyf05dC
cr7Pvby80sT3Oc4tWd/nyCu+z5EfYOn7nOsIfZ+jPAn1k3FeMxhjAVqAYy9D
3Sq0raXPc4y7BX2/xTHIv/eirLBvxm+gzTfWnZ+w1p03rXPXkXeBbsbExNAP
xh3afZOBc42E6CfDj37PIa6fjBkRgn4/o+1n+j4n/476Nyn8G/X0e06771+w
Vfg3to9Rjrf7Nvk//x37/AEp3BvtCdj3gwcP/k4mvneq7L2fpdGjRyvPx9On
T09bSCKTTOmcGAMyRwb4rTw52dnZJTpnrNuJ+nXt2lWHT08mmZ6dGOt7zJgx
usyd3r17C9w7kzyvr776SukzZMgQ+ftVFhPWx7hSpaxnZXnzlBWv1rolWtd/
LLl3GnDvrnXcRWPHDaJKqdGiWP6XRc6cNrrfb9NCBXAdVSn+pmhVcYXoV/Oq
5N4p4N7job6V1ovcufJZ/f+wfPlyudZLSd3XLv5H7py5xfBSA8UaxyWKJPeW
3Dsjcu+j0NrSfUSF3No9769du1beT9JBkntL7i25t+TeWnLvI0eORJPVhIeH
B4eFhQVi64eyD9YaT5TvRUVFkfUw1u0t8m/aQaqxv8m+AwMDT/v7+x8NCQnZ
ZzAYvgsNDd0WHBy8GfXfoJ3xvlf6+PgsgxZAH/v5+U2nbSb0Lvk3jjXuzp07
Y27cuPGWr6/vAOz3Jup7YgzF7hv7t6VN6IkTJ1ru2rWr8fXr12vRtpSMjazN
nIHTFlVl4LRRJaejzSptV5Ni4JZxwc0ZuIwLLlMGSKni4ZY24SIJHv7jjz8q
1zV9/5vbhJvzcHObcM4ZzNNkeTjnG3k4+is+0DknsY8D+lXCnKyMfgoPh6qT
h6Mcz8NpE44+DSx5OH0+mPHwdih3wNrQycTDu5tigfdGvi95OOoVHo7zG4tx
JmH8aTif2Rh3LsZZhO0SbFdiLHLwr+n3nO/qcN2i/TfWtYP4+w9jexQ6ibqz
pvgOF7AGXoqJibmM7VXouhoDnBwc7Vwn3RkvAlLif6Os2IKjj+L/HIqPAQ5F
xsbGkoWTgzOjxAAnCzfZgjMO+GPUP4HIv5+q/BuKZ9+q7bdq/33fxL1Vm2+t
vneqcYRxraQhIZFJpvRPDg4Ouv8u/iw1aNAg0Tm/8sorCfrw/XOsWzp8ejLJ
9Pz0zz//iBEjRqTbnKlVq5bA88Izz2nBggVK3wkTJsjfrrKQsA7GNWzY0Opr
KG8eO9Go5k0T886c3LtjBuTeHWu5iHrlFwq7wm1Frpy2ut9f01s2+Jsdirwu
WlZYJgbUcpbc+wW499gaZ4RjoaZWf/b0/3D48GHd1ygpKT21atUqTZh3oVwF
xZSyE+KZt+TekntnZO5NTSvWRpP7eOfOnY2RkZG6z+XsIMm9JfeW3Ftyby25
97Fjx37B+h0FRSCFQaH02RseHh6EfADqfenTl7596eMXeSUOONpvYz26YTAY
rgUFBV0IDQ09TbtJbI+g7gDye9C+A9ut/v7+mwIDA7/29fVdSftv+j5H22dh
YWEfY9yZtAO/e/fuZPSZGBAQMAb70wf6IPQly+pDf8fXr1/vceLEiU537txp
QX/JjP9NVkZmRn/KKNehf2UcoybZGtk4/S/TDzPZOBkcjqewcbI5czZu6Sed
bI+M79atW0XN2ThjIpMJWrJxNW64yhSfFTc8pWxc/MfHZcq+Kd39oVvagzs7
OyfrD51zB32T9IdO/s35p9qDm/tDR1nxh84Y4Ob24Cg3epY/dJTj/aGb7MEV
f+ho64f9Brm7u7+N44xDfjLOfTrG/hiah7qF2C5Fv+XY70tonekdHcZo2E32
DR3A2nYI4x9n3G98DooP9JiYmHj+DV1G/hrZN/K30Kbwb/TzoL8MlOkD3Yfx
v9GPa2gQZEBZif9N/m2K/a34QSf/No//TV/oqHsE/Yrx4n2eo6xy7/+ZmLcq
cz/nCvemtPjOic9S+c7J+N5//vlnGlCRtE1///23mD17tmjXrh3fz9X7dGTK
YInXRY4M8Ht4cmJcYvOE7yWJ+rRp00afD08mmVKQVq1apfjjT6u5Urx4cbF4
8WLx119/Pfdcxo0bp+wzb948yb2zkLSIV2qTq5BoWOOKGfPOnNw7o9h7t69x
SdQqO10UL9AAD7NpN/8zmxgbvFLRLqKd4zoxqPYtyb2T4N7Dqx0U5QrU0+wz
L1GihHB1ddV9nZKS0kMHDx7UJP5HmTylxaflZyRg3pJ7S+6dkbn3ghJdRF4N
fMq0bt3ayPcr9Z7L2UWSe0vuLbm35N4ac+/H9L0L0fYwOpL/REeHM1Yt7cCj
oqJor0huE0g7RnJwk12jR1hY2N2QkJDbwcHBzqGhoZfUuN8Gg+EE6n4gQ0L7
3sDAwO9Q/pZ+htFvDepXYv9l0GIc43MvL6/57u7us9FnOjQF+7wHjcU4o0y+
jN9ycXEZfOnSpT7e3t6daP9JO1D6R6ZdKO1DaSdKe1FyM/IzcjTak9LPMu1L
fXx8apC30e5UtRUnCzf3l057VfpxTo6Fp8RfusrCk7IVFxYsXMiY4TKlPL2w
HbhIhoWLFNiBq7HB+e5HSu3AycL5rglZON894bwjC1ftwE0svDrfWeG7K3yH
RY0Nzndb+I4L5qcSGxx9mzP2AcqtsRaRhbfDOvK6yQ68C/bp4ebm1h/HG4Lx
RmNOT8Qx3sc+M7CdifY5fOcGfRcy/jfKX9I3BfKbMNZWzOPtGG8XfaBjzIM4
xhHaf2N7HOvfCehUTEzMafQ9h3olFjjKV03xwG+h7g7q7iKv2ICj3gtbxR+6
agPONZUMnDbgjAcOhascnHbgdIjONRn7PMT2V+g3+j3H9k/oLxP3VoT6v6EE
3Btlzbj3mjVrlN+RO3furCkDSa80adKkBPe7c+fO6X1KMmWg9Pnnn+v++/ez
tHLlygTnW7Vq1QTttPXGOqfTpyeTTClLx48fFxUrVtR0jpQtW1aZx7/88ssL
nwfjAnDfzZs3S+6dRfTFF19Yzbxz5swj6lY5KFolYN6Se6eUe3ep4ynqV1gh
ShVsJln3C6hQ3vKiXplJ4s3qJyX3NnHvNyutE4XylNH8s546dapc86WynZyd
neOKFStm9fypgLXq8wqfijWOS5Pg3osl95bcO9Xc+1Aace/lpXqIfBrE96av
tZCQEN3ncnaS5N6Se0vuLbm3ltz7+PHjv0VFRdGvLu2+HyAfa/K/q9iAk8vQ
DtzEaELotxdl+kP3DwsL8wkNDfXEunQH+RvQNdRfxvY86s7SVzC2x4KDg2kD
vg/bXej/Leo2YvsN+n2N8Vb7+fl9AS0OCgpagHvKp2j7GJqmMnCMM9HV1XXc
1atXR/j4+NCncU/aepJz4Vw6os/rtAWlTSjGaE0bUdqKkpPRNjwgIOAVf3//
eNtw2piSr9HmNDnb8OT8ppPnJeU3/UVtwy1ZuBBC+k2XKS2SJjHDn2cjnpKY
4Zwvlmzc3d3dju+acJ6lJmY457VqI46+TTB2c6wV7fh+DI7Ry83NbQC2Q9F3
FLZj0H8izvcd09oyA3WfoG4hfaDTDhz6AuvNarQpLBzr0xb8Xdswn3dgjdwV
ExOzG/nvMcYB9P0BbeThP2J7Cvucw/YC+lzCljbhVyFnU3wIV/RTmDh9ZsTG
xnoyPrjJnwbjg/O9oiDsq/hF55qLFI2/6xfkH5F/47x+R17xeY794/2eo/w3
vh8qIgdHWWHfWnzn7Nu3r/Jb8tKlSzUiH+mXtm7dmuh+t2nTJr1PK0XpyZMn
Yvv27cp7B4xF3bFjR/HgwQO9TyvLJKwLuv/m/Sxh/sef644dOxK1N2/eXMdP
TyaZUp4eP34spkyZIgoWLGjV3Khfv77YuHFjqvyQVK9eXRnjzJkzuv+uI2W9
Tp8+HWdra63f7JyiusNahXlL7p067t3M6XtRsXhfxZZZ73tnZhRjnNMPeqfK
27I1925j/6GwyZlX0882d+7cYv78+ZJ5S2U7+fv7xzk5OVk9hxzyVhSLK34m
VivMOynuLe29JffOWNx7daneonAu62Oq1KlTRwQEBOg+l7ObJPeW3Ftyb8m9
teTeJ06c+MMUR/ZXU0zZRzExMfSz+4A2hyYfvEy0Q6Rf3gjUh0Oh4eHhBqxJ
gRBtwD3Q5ka+ExERcRNlxsC9TA5EHhQaGkoudAx9D4WFhe1D+x607YJ24F7y
LURb8K/RvsrEnz6H4v2he3p6zrx169YHfn5+49FvJMYahrYhyA9Evr/qD11L
Jo59qkkmLlMWSfHXQFLXh3rtqCw8uVjh69evj78m0ZasjTivbdVGHPWFrly5
Ulj1l875YG4j7uLiUhJ1pW7fvl2a/tJv3LhRFmUlVjjKFdzd3SuizRH7VMI+
TihX8fLyqoY+NZGvhTHqeHt7v+Th4VEP/RtevHixOfq3cXNz63Tz5s2eyPdF
n8Eov4X9R+JcR2EdGYcxJmP/afQ1gfn8KebxfNqBY21iLPCV6EffFF+b3tFZ
j/VkI9a0zcjTd8VO/K3k31zLDjK+A/Y5Dp1CvzOY/2dpE871j+8CoXwNedqE
30D5lomBc728hzE8Ue9tiifhRw6O8TB8cDgUg/wD9HmE7ROM+Qf2f4o1+k8K
+/0Piufe2PdvlP/RKvaQvb29cp/AZ2g98EjHhGtD5MuXL8G9jn9LbGys3qf2
3GQ0GsWpU6fEoEGDFP/yOSzu2XPmzNH7FLNUyptX299XtRL9EaqJvpstOSF9
RmM90PGTk0mm1CfcX5Q42y+//LLit+B584HcolGjRmLRokUC9+9UH/ePP/4Q
NjY2yvzBPVX333WkrBN/03dwcLD+N/2yM0Wr+r9K7p1C7t2lrr94xeFrUSy/
dv6opXKI0gXqiVYVFoshtW9kG+49psZZUb/kIM0/S/o3p49nvdcqKan0Ft+B
b9mypdW+UKrnqyaWOyxQmLfk3pJ7Zwbu/XXpPqJornxW3z9q1KjBZw7d53J2
lOTekntL7i25t8bc+y9T/Ng/YmJiGEv2N2yfYKtwcOTJwR+qNuEqDzf5RY+K
+Ncw8WfagUMB4eHhfmQ4EGOB38P2DjkP+jhje4UcCPU/IX8G+ZPQjwaD4Whw
cPBB9PmePobpaxjaBK1H3TrUfeXj4/Pl3bt3l6EfOfgsrIUzaBOO/BTk30N+
EvLjkR+D/NvIDw8JCRmK8mCUB6DcF8d5E/k3UN8d+a70jYyxO9BXsuo7HW0t
LX2n+/v7J+k7nbbiqu90+mw2952O8cqnxnc6PutClr7TLeOIS9/pMmmcMkX8
cM4jzidzu3DON8471Wc6+tU4e/bsy5hbr+A4LV1cXBTbb6gH6t7AlnHA+2K/
wdh/BMYch7p3se9UjPGhaV2ZheN/xnjgOM9FWCOWYM1aBq3A+vcF6r40vaOz
AdqMdXErxtyB89iDMfajTA5+iD7SoWOME874D4wTjv3Jwi9inl9GP9U/+g2U
lTjh0B2um+jvhfGCyL6Rj8K+93FOj7H9Df25Visxv5H/C/3/h++Hikz23/9A
Vn/fvHr1qvJ9s2TJkiIuLi7VnCG9E9m2o6NjgvscGeLly5f1PrVnJtotbtmy
RdStW/eZ9+yZM2fqfapZKqm2nxlNlSpVij/HHj16JGofPny4fh+aTDJpmHAP
E3v27BHLli0TkydPFmPHjhXvv/++mDVrlli3bp3A9wOFV2uRbt68qcwf2j/p
/ZuOlHXCvT6uTZs2Vv+mb1diiIl3S+79oty7Q203UcNumrDNrb0vaqn/VNTW
SbSqsEi8Vftmlubeb1XdL+zy19H886NfEDwX6r5WSUnpoSlTpmjAvKuKFQ6L
4pm35N6Se2d07r2hzABR0sZ6vzN8Dvfw8NB9HmdXSe4tubfk3pJ7a8y9n5J1
m9t8Q48gxpYl575vUqzJ9pv+z5kYAzw0LCyMNt/k3SrrZmzb27T5Rv/rqL+K
9ou0+cb2JPqTAx1G+wH03QvtDgwM3EWbb/o/R/tatK9B+wqUl0KLULcA9525
rq6us4KCgt5FeRzqR6Mf7b6HM/53aGjoINT3R7kvyr1p902+jXwXE9+m3Xc7
xgRmbGDybZSbob0JYwczhjBjCdPuG3UvMcYw7b5Vvo26qirfVu2+GauYfJt2
qZZ235Z8m/at5nzb3O6bDNDc7js1fFu8oN23+I9vyyTTiyTdmTjtwylLHo5+
pSxjiNM+fP/+/YotOOZc/StXrjRFXSu0tfPy8nqdDJxrAo7bgzETsK4Mwvwc
QR/oGHsc1ocJWCvewZgfMCY4jjGT/iaw7s2BPkH7Z6ibj76LsG4oftHJwflu
DvbZgPVhC/p8i7ZtZOFo+w7l71E+gDxZOH2jH2OscMz/UyifxfmcR5ks/BK2
V1B/DeO74m/zwnkGYd+fMX4k/sZfUP8r9v8tNjaW7yf9jmPQ5vsvfD9UxPjf
6KuJvfeiRYuU5+W+fftqwhvSI/3zzz+iffv2ie5za9as0fvUkk2//vqrWLhw
oRKn1vK8LcXf8MiIZNIu8bN/3ueuh1Suffr06URttP3++++/9f3gZJIpE6ZV
q1YJ031N2v9lctFvsbXrbLHC7UTLeg9MzFty7+dx73Y1rwvHksOETa78ut8j
s5NK539ZdKq8JUty7zccvxIFcpfU/DMbNGiQEc9Duq9TUlJ6iD4O6NvGmjnk
aFtRLKtIO+9lkntL7p2m3PugRtx7a5lBoqxNYavvH/QRePv2bd3ncXaW5N6S
e0vuLbm31n7Oo6Oj4+276eeczFu160aerDsG5eiYmJhI5CNMzPtnSPVz7kM/
5yi7QfRzzljf1xnj1uTn/KfQ0NAT0A/oS7vuvdButO3EWNsCAgK2+vn5fYP2
r0wcKd7POe0uUT/H3d19pouLy1T0JZ+iLbfCuunjnKzbYDDEs276OE+KdQcG
BrbE/rTlTsS66eNcZd2+vr411bjfSbFu+ji3lnVb+jhXWTd9Rj+PdafUx7mQ
rFumtEtWc3Fe35ZMXOXi6Jtf9ZtuzsPpFyEpn+mXLl0qjX3KY9xKZN+0/XZ1
dX0F87IZ+jVHv9b062Dy79DJw8OjB/2gY+4OxDwfgvk91OQrYgzm7gSsHZPo
TwLzdjL0Ps5hKtaVadj3I+gTxmFA3TyuV1gLlmGfVej3JcZaQxaOtm+gDVhv
lDjhjOuA+u/QZw/GjveRThaO8o8mHxinsf8FnPMtnJc3jhOA8UMwdjTqH6L9
cWxs7K/0y4H96ff8T3w/pMi9/0Tff9DH6u+b3bp1U35TXrt2bbpyCWvShx9+
mOgeN2TIEL1PK8n0v//9T6xfv/65vLt48eJi6NChjEWr+ECXSdv09OlTxefx
s/4P9NDVq1fFw4cPRf78ifnCgQMH9P7YZJIpU6b+/fsrc2jp0qWSe2di0R+N
ZSyTlCq/bRXR9KWfzZi35N7Jce92NZ1FpZIjRa6c1sfKlEq9KhRuKXpVPZRl
uHersh/gmsqt6WfEmBhz5syR67tUttW9e/fi6N/fmnlULo+9WFxxrol5S+4t
uXfG59477d4SFXMXs/oeQj+H/I6p9zzO7pLcW3Jvyb0l99aSe//444+08463
7cZWseuGaNcdER0dHRYTE/MziqEoh2AbHB4eHgT5h4WFeYeGhrqHhITcNvkx
v4ztBaxT5NynkD8OHQkODj5gMBi+Qz/adG+i73JsyYRWQSu9vb2Xe3p6LqQP
c+w3G20f0X85+k/Gfu/Qf7mzs/PYM2fODEO/N9Cvs8k/eXuz2N2tAgICWqj+
yTFOI+ybpH9yxu6mf3L0qeLn5+dEP8leXl6O9JtM/8n0o8zY3fSr7O7ubmfJ
tM1jd6tMW+Xa5v7JybXJtJOK3W1u/yr9k8uUhVKS16iw4ODq9Z0cB2fscEqd
N5axw0+dOlWQ75CoccNjY2MVu/DLly8X37p1a1n0rwBVxfpW28XFpR76NLpz
586rmJ9NGcfAFM+gLcqdoR6Y22+irh99RmDcgTjWcBz3bczl0dBYaBzWwvFY
AyfSHhx93zf5Rf8I/Wdi+wnWj/nYbxH6LUH7Uoy1HPt9gf6r0XctGTj6bmCM
cNqEQ9uxH9fF78nAoQNoPwQxVvhprEnXcN73MKYP+gThfKJo841xHuHvZQyK
XzH27xjjT5QVoY3c+29ruTf9h5YqVUq5R3h4eKQvmEhlwvWSKE5sgwYNNPOP
q1Wiz/gdO3aIypUrJ3tf5t/RtWtXcezYMYWPy5S2qXbt2rr/nm0uNbZ3UufV
unVrnT8tmTJ6Yjx43B/0Po0Ml+gjgb9ncR7hu4Luv+lIpU604axZs6ZVa6xN
rgKiYU0X0TIB85bc25J7t615XTiUeEvkyplH9/uilOnazZlX1Cs9TgypdT3T
cu9RNU6LGkW7av7Z2NnZiePHj+u+RklJ6SXGOWvUqJFV86hU7pJifoVPzJi3
5N6Se2ds7v2d3TDhlMd6vyHFihUTFy9e1H0eS0nuLbm35N6Se2vLvfF88Bvt
uxm7OzIyMt7G28S9ad8dHhMTE4YtY3iHotoQHh4eHBERERAaGuobEhLiCd0J
CwtzYfxu9LmI/DnGs2XsbqxZRwMDAw8FBwd/bzAYtqN+C7Qe+6wz+TNf5e3t
vdLT05N+g2k3OYfxuxm7GyL7fg/9Jl2/fn38+fPnh7u7u/dWY3OjLcWxuVF+
odjctOdmLOFn2XOnVWxulQVK9i1TFkjx16ZIgoGbS5g4OPK5KWFmB7569WrF
F4I5Az969GgBlYGrduDYvyj6lkafsidOnKh08ODB6pcuXap9+/btejdu3KjP
uN9cF/z8/JrQ/7mbm1tbqCPmejeM3RPryhuMk4DyQMzpIZjHb2GNGUYbcKxt
I7AWvc0YC1gTxkHvYqz3+Y4O1okPcfxZWB8+RZ/P+A4P6hU7cKxLS9C+HGOT
gTM2ON/5WYtx1mPt2WSK8bAdbTtRvwv77MFYP+Ccz+PcbuFc3bG/H+rCsQbd
R9+HWGseQY/R9zeUn8bGxj7Fd0TG+36KMa3m3s7Ozsp3Tb4vnhlie+NzF0WK
FElwb+O54/9H71NLkO7cuSOaNm2a7P04b968im037nN6n2q2Sps3b9b9t2xz
1atXTwwcODBRPf2bP3nyRO+PS6YMntq2bausJS4uLnqfSoZK9JnBeeTg4CBj
e2dijR071mr/5jUct4qW9Z9I7p0M9+5Q21M4lRqXKXg317oqVaoIxnrv06eP
ccyYMcbp06cblyxZYtywYYNx//79xgMHDhhPnz4dd/bs2bgLFy7Eubq6KsIz
hFJHHTt2LG7Hjh3GVatWGWkvPG7cOGPXrl2NdevWTfT9MiOoeL5qoqvT9kzH
vQdX2StK57PuvZWk9Oqrr8pYrFLZXlz7rJlH+XLlEzPLTxNfJmDekntL7p1x
uffesiNE7bzPjxX3PNG/Gr8H6D2Hpf6V5N6Se0vuLbm3xtz7kcm+O1q18cZG
id2NvAH5oOjo6EBsA1D2h3yxDnnTr3loaKibwWC4GRgYeEWN3w0dR/4ItB99
dqN9J/2YBwcHr8OWzGe5KTbuAvIhjPeJl5fXbHd392n+/v60oZxE20rG7qbN
pRq7G8+kA44ePUqfxPRT3ATHfBXjvYJ94v2UI6/4KVftuemnHMdy8vHxifdT
Tntu+imnPbeln3LGDGbsYEt7bnM/5eRrSfkpfxF77tT6Kc8hmbZMWSfxOk5w
rat5bvv16xdv/y1MNuDr169X3w+J94NO9k2pccEpzkvUFfrqq69KXr16tczF
ixcr4vur082bN2ugrS7l4eFRD/O8HtcOriNk3xivHeZuR9R1wXpEdfPz83sT
df2Q7x8TEzMgNjZ2INbAQVgLFRaOfUfimGPoi4Lv5fD9HKwrSkxw9KcPdMYF
n831De1zTevdIpSX0A4cY63kOz9894fvANEXOrQR9YotOI6/F2vdaZyfM9ao
O1ivvDF+KM4xFvv/gvNR2Lc596Yw3lOUrebe/N0P/0+iZ8+eOtCJlKVHjx6J
6tWrJ7ivMaYZ4yJnlPT48WMxefJkkVysNVtbWzFlyhSB/3+9TzXbJtUONCOo
c+fOieroAwBrmt4fk0yZILVr105ZUyT3TpgmTJigzKV33nlH+sDNpNq3b5/R
0q9LSlW+9Dsm5p11uXfHVHLvzi8ZRN3yi0TeNIi3bK3KlSsnOnbsaMR3JePX
X39tPHr0qOLPF9+F0+Xaw3fwOPLzefPmGQcMGGCsVauW7jFScua0EXVKDRND
al3JFNy7u8Mqkd+muOafw/Dhw41axHeSksrM4js9fA8otfPIBuvJpLLjxJeV
lknuLbl3puDeB8qOEg1tK1h9D+G82bt3r3w2yECS3Ftyb8m9JffWknsfO3bs
MX2bRyNhq/o2D6dtN54hQpAPwjNlILYK90adL/2bYy3ytOTe9G2ucm9s99Nu
MRnuvRj1CzHeZ+j3qYeHx8fu7u4f0nYS7eTe9CdM7j2CjAkaTO595MiRnpJ7
yyRThk7m12uuHCbGnZxttxnjZn1uy5jf9HWuxvpWObfq65zzEGuCMi85PzlP
Get7+/btZdBuf/XqVcfTp09Xc3V1rUXeTZtv7NMQ8/sVrDOvYp8W9+7da4N9
OmAN6Iz53g1tPaKionpi2xd1AzDHB3P94TqENXAo1qVhtPvGujEa/enzXIn/
Td8U6D8dmo39P8b6Mgf9PjXF/mYMhyXouwzlFSivQtsajPcV9vsGx9qIti2q
73PafGONOuTm5nYO6+JNHOsexkOVbxjGv4/9H8bGxir23vRzTtaN/J8UY31r
4ed84MCBCvdeunSpLnziRRNt0Xv06JHovrZ48WK9Ty0+7d+/X/m91vIcKf5m
OmzYMIH/X71PM9unb775Rtffr1Ulx3Rmzpyp90ckUyZJjI0g/ZwnTLxX2Nvb
K3Pp1KlTuv+eI5Vy+fn5xdGPsTXra9FCLUWLeg+zPPdOjb13Y6fdonC+Wrrf
Aym+h9atWzfj3LlzjQcPHjTi+73u119SwvfzuN27dyssvnHjxsm+25jWKmpb
SfRw+i5Dc+9mZd4RuXJq+/mQVfA9Xb2vAykpvcXnfmtjNvUv2Ud8WWl5Krn3
Ysm9JfdONfc+lArufdB+lHg1n4PV9xHGFtu1a5e8j2QwSe4tubfk3pJ7a23v
HRkZGUOX5jT3xvcmJaY38iHIGky23uTe/pAv+vmEhYV5YS1iXO87kAue+y5h
exb1il/z0NDQgyjvDQ8P34W27Xhe3RQYGPg1tJI+f8m86dOcMXFxjNne3t4z
7927NxV936X9JPqMhYarzBvHH3DmzJn++/bt6+7s7NyS3ApjKLwbY7xk6b8c
dVVV/+UYO8X+y8nOzP2Xk6uZ+y83592q/3L6YJb+y2XKxknh3MLsXQ5VFnw7
USxvzhXadFPqHDK36eZ8I+dmPG+KcxLrQJEHDx4onJtzlnOXc/j27dulT58+
XQ79HVxdXatev369Fvq+jDnf0N3dvRH6NcYa0xRqhnnbBuX2UGfke9DHOdaM
NzHH+2BuD8Qaofg4x5pHH+cjcez4eN/oNxF9JmOfqWibhjVpBtaTjzHOXPSb
j30XoN/ntO8m7zb5OF+NsuLjHH3WQxsZ9wH70sf5LvrHgL5H+36sST9ivbmM
c3PDcbxwvEDURWJdeog+Smxv6Anyf5B14/sh9RfG14R7Ozk5KfeHq1evpjOd
SFmaO3duontanz59hNFo1PvUxC+//CIGDRqU7L339ddfF7h29T5NmcySGtM+
o6lLly56fzQyyZSp0+XLl5W5xHeQYmNjdf89RyrlIge1Zh3Nm6ecaFI30Ix5
S+5Nta/tJuyLJX5/MD3Fe2+vXr2MS5cuNeJ7Z1xmnaPk8xs3bjT279/fyFg7
6fkZ2uS0Fc3sZ2U47j2y+ilRtUgHzf9eruXyHSYpqX/13nvvWXV/fK1IaxPz
ltxbC+69ocKHYkW5SeITu+FieumBYlLJXopGF+8mRhbvLIYV64BtJ0Vvo/xu
yTfEe2ifib6f240Uq+0niM3lp0junQz3PmQ/WrTKX8X6+6aNjdi0aZNk3hlQ
kntL7i25t+TeWnLvo0ePPvw3jDfNvRXsHRYTE0NbbwNEW29/yI/MG2Uf9PGi
j3OsRXcNBsMt6FpQUND50NDQkyEhIWTeh1Hej/rvGLM2MDBwi5+f3zfYrkL9
UrQvRL+5wcHBn0RFRc3EWDNo63337t33UDeesXPp4xzbIdgORN/+YWFhfU+c
OPHmjh07Ol+/fr1JMvbd1Z9l303ebWnfTd5tbt9Nhnbr1q0EvJuc7UXsu1+E
dwtp3y1T1k2KbbdIJfdWpc4lvkfCeUZx7lHq+yecm5ynfDfl8uXL8cwbdaXo
3/ynn34qT+6N+njuTb8QjO1N7o153ATrRjPsQ+7dDttOWKO6Y23qifreaH+T
tt7YZwjjLJhsvIdzXVLZN9cqrBt8T+d9lKciPx39Z+GcPkVf+jWfx7UObYsw
Bte9FfRrjrbVGOdrbBXf5mjbhH0VO2+yb/rIQP1enM8xrDuXcH70ce4JBZB7
47yey70x5j/Ypvp7ppeXl/I9k3GO/vrrr3SmEy+eTp06lci2pkaNGopPcb0T
faxXqJC0362yZcuKbdu2ZQg2L1PCdO7cuWTtrfVSnTp19P5YZMri6Y8//sjy
7+Co7yBNmDBB/r6VCbV161arftPPmTO3eLnaTxbMW3Lvlyp+IfKkgd/pFxFj
cjPmwPHjx9PNV3l6Cs8LcfSbirXHWKxYsXT7XJ2KdhaDa1zIENx7YJU9omS+
qpr/jc2bNxd4FtT9/1hKKiPozJkzcdb4mqhsW0msdFxiJffOXn7ON1SYIRaU
HSveKdVH9CvWTrQpWF/UtHUQdrmLi3w5U+9r3lIFctkKhzylRcN8VUTHQg3F
4KKviek45hr7cdmWex+2HyM6FKhh9WfL5/3Vq1fLZ4IMKsm9JfeW3Ftyb439
nP+KZ7P7UCztvhnjmwwcm7CIiIifafeNMuN8B9Pum3G+w8LC/BjjOyQkhDbf
t4ODg51Rvgj9FB4efio0NPRH6AjtFtH+fWBg4I6goKBNBoNhLfrQ1/kK1C9l
vFuMtcDb23uup6fnLIwznfaT2I9+gyfgWGOwz2j6FT5//vzwgwcP9rt79257
7NsS9c3Jr+iv2Nz+mzwcZYWHq/bf5OGq/bfKw2n/rfLw1Nh/J8fDU2P/LV6Q
h4v/mLhMMmW0lCLuTdvu5Lg3547Kvc19msfExMT7Myf35rsqaFeYN+csbb2d
nZ3tUFceeUfM22qW3Bv9XsV60pjc28/PrzXGa+vh4UHuTR/nZN9vYD73xnrQ
H3N+ENaiIaqPc6xVw03v5IzCsccxJgN9nKN+CvLTcIyZEON5f4axPsN+87FO
LER5MeM7oB9tvr+kj3OINt/foLwBbYqPc/TfAX1Hm2+cz1H8zRfxeXB9Vbg3
zlXh3uiTptxb/X25TZs26colUpLwOYvixRP+Vlu0aFH+DqbreZEfTZw4MUl2
Sp/mkyZNEg8fPtT1HGV6dqLfecv/O73k4OCQod89kcn6hHuLwLqr6zn07t1b
WZ92796t63mkVcL9WOTOnVt5TwrfDXT/LUcqZaIvab4vZtVaWna2aJGIeWdf
7t2m5jVRqnCbdL+nVatWTcyePduI7+a6X1fpKfpg+vbbb43t2rUzpkdM8CJ5
HUVPp+905d5dKq4Q+WyKaP63jR071sh3CvT+P5WSygjiO0MNGjRI9XwqaFNQ
fFbhYzPmLbm3JffeWGGW+NRutBhWvItoVbCeqJCnjMiVQ/93pAvmyidq2FYQ
nQu9It4r2V18ZT82W3DvHgXravL5LVq0SDLvDCzJvSX3ltxbcm+NuffDf1F3
NGN7k3eH4zvUz8jSz3kw/Zwztjfq/VHni613eHg4Y3srzNtgMDgHBQVdRP5M
WFjYcegH1B1E+/fotzM4OPhbf3//jeizBlqBNYyxvRfQ5ht95+AYs7y9vT8y
+Tl/h37OobFkTOgzFH0Vu++TJ0/23717d7dr1641R11DjFsf/V+mj3P0U3yc
q3G9cewqfn5+Tqir5OXl5UjGTbtv1CuM29PTs2xyjNs8rjcZm3lcb/o4Vzm3
aouaXFxvYcG4RRKcW/o4lymTJuW6NL9WnxG328Yivn1uxuymkI+371bnkWX8
buxTiD7Nybn5/gl9M6j23Zy/7u7udlif7OjLge+woG+FixcvVqatN9YAhXm7
urrSzrsJ5n5TzPvmWE9a0Mc51pi2GKcjxuiOdaAX7bzpWwLrxAD6OEdf+jcf
odp4c13ClrybPs7fwzo0Fft8iHP6CHWzMeZn2GcB3+dB+2LaeWN/hXejnaxb
sfPGeBuwxm5CfivattM3BvZR7LyhA8gfxlincM7XcH6M7e2DYwSjLhrjPkL7
E4zxG8b4jbG9ob/w/VAR9v8LY1rFvSdOnKhw74waT/j3338XL730UoL7GDnz
4cOHdT0vXEPi5ZdfTvI+y996cV3ren4yvXiylrFooerVq0vmncUTY3DzfZ0y
Zcoo65pe6d133xW2trbip59+0u0c0jJ98MEHypzq2bOn/I0rE2rEiBFW2XoX
LthENK/3SHJvE/OuU36xsMlVIN3uZVzjhg8fbsRzvO7XUkaQm5tb3LRp04zW
xqp/nnLnyi/aVViuA/e+KF4tPU7kzKEt38+XL59Yt26dXMOlpMy0bNmyVN8f
c+bIKcbZjRGrEjBvyb2pz+0nioHFOoja+SqLPDlz6/5M+KIqYVNYNM9fU4wv
3kmsLTsuy3Hv/oUaavI5zZo1S95LMrgk95bcW3Jvyb01ju/9W3R09MOYmJhf
oqKiHkRGRt5HPkbl4MiGI0+FoRhK++/w8PDgsLCwwNDQUN+QkBBPxvlG2QX1
V6CLyJ9D25mIiAgl3rfBYDgA7UbdNoyxGXUb0Gctff7S96+vr+9Kb2/vRegz
X435jXE+RJ8PkKcf4fcuX748Cec68t69e72Cg4M7o70D2tuTXWGfNkFBQa0C
AgJaoK0p8o1xrEbW8HHsq/BxcjVLPq76RdeCj1OSj8uUyVKS3FskY9+dHPc2
t+3m3KCvBDJvzptTp04psbyvXLlS+MyZM4pPczWOt4uLi2LfzXdXOEexRpXl
fHVzcyuP+VoRa4UT5nM1S+6NY8Rzb9p6q9wbfbth/iqxvTG3+6Kett5DsE4M
Q34EY3tjn1E4H7LvcdAEtL2LeT2FaxRje2PNmIXxP8X4io036hZhnyVYN5XY
3iirsb3p31yJ7Y3yFuy/DX/vTvPY3tgewjgnPTw8rpJ74ziJuDfGJff+3ZJ7
Y0yruXeTJk2Ue4PeHDm5NHz48ET3sTlz5uh6TgcPHhRJ+bEkjx87dqx48uSJ
rucnU8oSbXCLFNHeTulF9corr4i4uDi9PwaZ0jjR94O9vb1wcnIST58+1fVc
0uIdC66LEyZMENOmTdPNF8evv/6qcDfOqxMnTuj+O45UyoTvh3HW2Mfa2BQW
r9R2Fy3q/5btuXe7Ol7CrmjXdL2PrV+/3ojvqLpfRxlRtAH/8ssvjXzHLa3+
D8ieG5V5N9249/Dqp0Tlwq9p/ndUrFiRcWh0/z+TkspIoq9/a2IotC/aVqyq
tEJybxP3/qjMCPF64caiTO4Suj3/abv+5xCOeUqLNwq/KhaUHpzpuffwIk00
+Vzee+89ybwzgST3ltxbcm/JvbW291aMvZEi/02KvTeKBnN7b9Qr9t7Qc+29
0abYe2O92oW2baq9N/rS3nsJtguheWTc6D/b09NzJkR7b8bLnYCxaFM5Avlh
jK+Lcxl06tSpATt37uwu7b1lkilDpATs25x7i2ewb2Hya7569Wpbcztvsm9y
76TieXMumtt6M443567KvWnrTe6NeanE9Tbn3sjXw9xtiHneGGUlrjfWr+Z8
Twb7vYZ+HdDWFfO8J9YHxeYba1xftA2izTf9mzO2N9k3/ZvT7pvrE9omoc9k
lKfQ5hv5mRh/DtaOuViv5nONo9039luCdWwF2TfKCdg3pLBvvg9E3xhk3ygr
7Bt/24847ys4v7sYmzElgjB+NMZ/hPEU7g0lyb1RTjX3pu/AAgX+tQPCeaQz
oXh++vrrrxPdw7p06aIbI/zzzz8Vv+aW50SVL19eiUEuU+ZMmJdCnQvpqfHj
x+v9p8uUjomxEbKaXT/XY8t1sWDBguLGjRvpfi58J4rHJ4PT+zccqZSJXLBG
DetiOFZzWG9i3tmbezeuckjky1M+ze9fjCXQo0cPo3zH5MUVGxsbt3PnTmPd
utr4bk1yHhTrKYbWvJym3Luf025R3Lay5ufepk0bI575dP9/kpLKaBowYECq
bb3L5rETyxyXZHvuvaLcVDGwWCfFd3l6P++lt0rZFBadC9UXn5Xub8G/Mz73
fqdYG4XjW/sZjBw5UjLvTKLUcu8RBZzEyAKVn6m3k1SlJDUqgRyTVn5HMTpe
Ds9RxSQ1JoEqPFNjFZV/AZUT454re0Xjk1M+qmwCTUgku2Q10aTMyr3n5Sst
3rMtYVJxRZOfqWLPUVHx/nNVJF5TklXhRJpqrrxUoWT1QbwKPlPTklSBJPVh
AuV/pqYryvcc2YoZSSmPrSiRREzR5wnPpn/FxMT8ER0d/QftB8lS6D8X2yeM
IYvnscfQI5QpMnLFLjwiIuJ+ZGRkNLaRYUjIMwZ4IPk46nwhL+Tdw8PD7yJ/
C3JG+xXUXYLOo/4njHUK+ZMhISHHQ0NDD5tsHcl9vkM9bcO3oLwZ5Q2enp7r
XF1dvyBXwuFmYS2kjeU0xtZljF3G2qWPdOTHIP+26icd5cH0W0z/xbTnZPxe
xvFFvivynUx24+3Q77Xg4OA2auxw1W4cx2uE560kOTtjh5Ozq7HDydnV2OFk
cKnh7IxhbMnZLWOHS84uUwZIibi3er1RKOem1GuS8bwp9Xol57bk3pbxvDkP
OCfo4/zy5cvx/s0Zx5vzCfPRDvly9G/O+cZ5x7jeGKMq+lVH/9ouLi71aO/N
uYzxFe6Ndac57b0551XujXPogfZE3BtzUOHemJcjsFa8jTVsFLk3+ivcm+sP
6qfR1zmO/zHm8mdJcO/l5N6o/xJSYnur3JvrG9qV2N7If6fafGOs4+7u7pdV
7o3xEnHv5Oy9reHeFy5cUL5jMq5wRkv4v1R88eYwu385OjrqFhuX7wU0bdo0
yftq+/btBf6vdTkvmbRLmIeiZMmS6fJ7RN68ecW+ffv0/pNlksmq9Pfff4u3
3noryWu8c+fOwmg0ptu54H6p+MblsQ8dOiR/68pk+uijj6zyb16q2JtmzDt7
cu+OL4eJqnYfipxp7Kc1f/78StxlfAfX/brJrGKc3jVr1hjpAyQt/o/KFmgo
BlU/nSbcu2OFJSKvTSFNz5f+kt555x0jnnd0/7+RkspoOn36dFzOVPzuS9nk
tBHTyk01Me/syb0/KD1M1MtfXeTSOB5DZlGF3CXEsKJtxEb78Rmee79fvK3i
k9/av5nvifA9M73nrtSLKbXcWypjKiCTcu9qufLq/tlJaSNybzJvlXtHRUUl
4N5QIu4dGRmpcG8oxdwb23jujfJplBXuDR2x5N5o30K/6IyHK7m35N4yZaiU
JPcWSdh3C5ONt+k6VWJ6b926NR+3vKbV61qN7c1rn+J8YGxv2nqjXmHenD9o
U5g35xXqy6OuPOZwBc49tFVG/2qcm2ivc+PGjfqYZ6/Q1pt+zjm3VT/n5tyb
9t7k3mjvo3Jv5IeQe3MtSYp7Y/se1x+uQ+j/EcZUuDf2Ubg3xo/n3uj7Beq/
RFmJ841xvuG6Ru6N/b9Fnx3oz3WPcb73qdwbf4Mb/tYE3NvSzzljet/XiHsv
X75c+Z25b9++6cYmXiQ9ePBAVKpUKcG9izwD15Qu54NrTHk3IIfF/ZS2Tp9+
+qn0UZ2FEv8v6VPA8v9aS7Vp00Y8fvxY7z9VJpmsSmTeb775ZrLXOf35NmvW
TLRq1UqJKb558+Y09SvSs2dP5bi9evWSzDuTycXFJc7yPbeUKG+e8qLJS2HZ
mnu3r+MjShd5PU3vXeTdEyZMMOL7ue7XTFYRf+udMWOGUX1nR0sVt60iBlQ7
piH3viQalnpb81je9A+C+4Nct6WkktHrr7+e6vfCuhTrbMa8sw/33uDwiXin
9CDhZFshTe+LmUl5ctqIFgVqiM9K9dWVex9MhnvPKNFR2Ghwf6EfGvkOVeaS
5N5ZS5J7S+kt1d7bpBfm3lBsari3ub23JffGMAdMfn4V7o0+W1Xu7e7u/o3k
3pJ7y5ShUjz7fh73FmbsW+XeamxvNV6AGt+b1zzy8T7Ojx07Fu/fnMxb5d60
9b5x44YSwwDzuCLqHDGnnNzc3KqjXAP1de7cuVMf8y2ee2Ou0895C9XPOeo7
YG52Ue29uUaYuPdAxvjGepfA1znjfGP+j0XbRGwZl+F9zHPG+J6O+Tsb9Z9i
3s5D3XxsF0KM872Uvs6xjn2BMRRf57T5JvtG20a0bUG/eF/nyO/FeR3D33nJ
w8PjDs7VC+MHknvjXBPYe6OvpvbegwcPVp6jly1blmYsIqWJ3LFTp06J7l2b
Nm3S5Xz27NmTpP/rMmXKiDNnzuhyTjKlffrmm280j/nNuM6XL1/W+0+TKZMk
2krPnj1bzJ07V+9TSZS4Tg8ZMuSZ1/vw4cMF7k3CPJ4t3xXq37+/wP1N0/M5
fvy4Mj7Xanwv0P33G6mUqXXr1lbZetep8oMF885e3LtljcuioG2VNPvtgLx7
4sSJknenofB8E8f3hLT+vyuct7zoW/WA1dx7aPWTwqFQC83Pr3LlyuLKlSu6
f/7pLcZqps+tXbt2GfkO8gcffGB8++23jX379jV26NDB2LhxY8G4D/RzxZjO
qugrKLk5qvapUKGCsm/Dhg0F19bu3bsb33rrLeO0adOMS5YsMW7bts2I5/E4
+mtI7fOjVPrp5MmTqeZBFfJWECsdl2Ur7r3B4VMxrlQ/UTGvXZrdE7OCHPKU
EmOKtRfby03IENz7k5JdRe6c1jPv9u3bGxk3R+95K5UySe6dtSS5t5TesuTe
Jp5C/Yq8wr0hSz/n91XujW3Ei3Jv7Gvp51zh3gaD4UeVe6v23tB29NuKMenn
fKPk3pJ7y5ThUjz37tevX7LxvEUS3HvlypX51WuZ17dq9636OL9y5UphzgfO
DTzfJfBvjrXADv3saed99epVR4znQObNOYh8Vc5LzJ2amH91Ua7v4eHxKpk3
pMT2xrpD7t0a/duSe1vae2MOxtt7J8W90TYObRMxx9/Fcd7H+vEB6mZgrNk4
xmfoNw/tC8i9sX7R5lvh3tAqcm+MF8+9ubY9j3vj7/FWuTfGf5yW3FuNpXnp
0iVNGYQ1iZwnh8V9a9SoUel+HmROM2fOFEn5lWvZsqX0a55NEu6hVvHvXLly
KTavWM/0/lNkymQJ9xnl+qGw/ut9OvGJayPj0j/ruudv9bg3Kf1x71TYhnk7
f6PfsGGDJucTGxsrypUrp4yL+4e0Gcxk2rFjh1XMu3TxgaJF/d+zLfduWHmn
yG2j7Ttaqvj9p2fPnkY3Nzfdr5PsIPpkXbFihbFQIW19iOfPXVK84bQz1dy7
b5XdophtJc2vL/IJPOfp/rmnlRinnHx51apVRvpw79y5s7FKlSrJsms9lDt3
buX+3LZtW4W7L1iwwPj9998b8Tyq++cn9a/4f5Oq9TtHTvG+/XsWzDtrc+85
ZceJKrYVdZ9XmUkFc9mKnoVeERvtx+jGvReU6ilsNYjP0qJFC2NYWJjuc1Yq
5ZLcO2tJcm8pvaVybzxb/W7GvZ+YMW+Vez806YEl9w4PD//5edwb+XjujfIF
c3tvcu/Q0FDJvSX3lilzJeV64TVF7v2seN4UrsW8FG28sc1vbuNtbuutcm/O
Cfo4P3v2rMK8aeeNNUTxb05bb6wJFV1cXCpjPlXi/OM8ZFxvzk3OUc5XzL+G
6N+Ycb1VW2/MK9p6t0FdO/Tp4Ofn1w1z7w2Ue2O/vlh3+mHuDkJeZd7DoBFY
i97GvqPp5xz7TTKtO/F+zjHHzbk3bb0/R34xjrkMfVaivApjrEb5a4y7FkrA
vTHeLpV7Y6xjWB/iubfq59zEvX/DuL9rzb3xd8WRp/A3j99++00T/mBtOnr0
qMJ4cpjds+rVqyf++OOPdD2Pv/76SwwePDjJeyhtHJ8+fZqu5yOT/snZ2Vn0
7t1bif9Nm9Wkrg2K1y/tbV577TXx7bffKr6gZZIptWnVqlVi3bp1KdqH6yXu
hWl0RkLMmzfvmc8ZtO/GPTDBPriHKjZoln0XLlxo1bnQ7rxbt27KWLRtk7Zr
mUv8/6patWqqn2lz5y4hXq0bkm25dzX72Zr7nFbVpEkT+rTR/RrJjuJ7BrT3
1fL/M59NMdG98pYUc+/2FRaKPLkS+zyyRnyfgvbNjHGu92etlci48axrnDVr
lrFr167G8uXL6/I7n5YqVaoU4/IozB7P+EY8o+v+OWc38b2J1P7/NSvcNAnm
nTW596oKM0T7wk2ybfxuLWSbM4/oUqieiX+nH/deWbqvKKgBa+IzgMFg0H3O
SqVOkntnLUnuLaW3jh8/Tn7yKDY2VrHlJteG7kMxUVFR2ERHoT0S+YjIyMhw
iIw7JCIiIhjrUUBYWJgPth7h4eF3UH8TckHdNZTJt8+FhIScDQ0N/RF9DkNK
/G5oF/psZ/xucp+goKD10BqyIfRZivZF9BWM7acYbw7ys5ydnT/C8/a7np6e
b5FNoV/v4OBghWEj38XEsF9XGTbKrc0ZNsqvovwKyg1wrHro8xLKdfBcEs+w
UVdVZdhkaeYM28fHR2HY9K+cHMMmozNn2OTX5gwb4+S3ZNhkgM9j2Cq/lgxb
pgyUEvg4V7m3SCKetzDF9KaQz8vrHs/LBTgPOCfIuplXmbd5XG/OK9W/OZk3
56Cbm1t5Mm/kHa9evVqFc5Zzl3MYc7Im43oj/xLfVUG/Rrdv31bsvE3+zRnX
m8y7Leb/6+jfBXO4B+Z0L64raO+PdWkgbb2xlih23qbY3qPIvFE3lrbe6Kf4
OKetN9qmo24WzuMT1M+jnTdje6N+CfZfBq1AWbH1JvNG+zocYz20kXEcMMa3
qNuBtu9M7/3sx/kr8b09PDzuMr43zi0I49PPucK9TfEoyL3/tIjv/b/Ucm/c
C5Tvl3Xq1LGKO2iV8JkqTDGH2f2qePHiAp9Nup7Hw4cPFWaZw+LeSda5ePHi
dD0XmTJuYpxi3KPFjh07FDFvyfpkkkmPRA7M9y8OHjyo+dj79u1L0geGqpde
eilZXxi4pym+/i332b9/f6rPZ9q0acoYRYsWFa6urrr/biOVMi1cuNAqW++q
Dt+I5grzzl7cu8PL4cKh1Kg0+Z2AvhM2bdpkpO2x3tdHdhbW0bh3333X+Kz1
NqXKk6ug6FZp4wtx75G1Lol6JYcKPvppeX0VLlyY35kyvV8OPHvGkQUPHTrU
mNR9LauK60OfPn0U3+x4Jo+T60TaKrW23gUx1xc4zM8W3HtEyV74e/PrPjey
igrkyisGFGkqdpWbmObce1XpfqJwrnxWn3Pt2rX5jKH7fJVKvST3zlqS3FtK
bx07duxxdHR0LDl3ZGQk7bcj8Z01HOWf8YwViq0hJiYmGPmgsLCwQJT9wsPD
fZH3Cg0NdceadBtbZ5QvY9dz2P6E8qmQkJBjZN3BwcEHoO+gb1HeiLZvDAbD
V+RAERERy9Fvqa+v7yJvb++5aJtNO260f4jtZBznHWgijjnu7NmzYw8cODDY
zc2tE7kV+rbCvi1ox4lyY5QbIR9vl00fx7T59PPzq4VyDdplBwQEVEXZiXbZ
9ItMps3YwPSXjH3tUV+WPpTJ2FSmjbFLYJwEdtlkcirXNrfLJsMjv1PjFSdl
l02pTNuSawsT0xbP4do5JNOWKWMlXou5XnvttUS+zUUSHJzvejC+t2rvrb4H
Qhtwk+13oSNHjsTbex88eLAknqUV/+bm7BvjOVy+fNmJ76lgjjqhvhrmZQ3O
eaxFtfluC+ZeA9Q1Qr4J1wquGfRzbrL5VuN7dzbF96bN95to60MfEfR1jvxg
SGHg2E+x+0af0dhvPPoovs4x5vtYT6bhODOgj7FmfYJ62n3Pxbo5H/t+rjJw
jLUC+gL6EuU15OBoV+y+Md5W7Lcd+Z0Y/yD+9nP37t27hXXHHcf0x9iROM9H
2OdXcz/nGOdPfD+k/iIDx3ip4t6LFi1SnqWHDh2aauagVaJ9Yv369RPcq8ht
GLM1PRO5Jd8DyGFx36T9rozlLZNMMqkJ9y3GJNX7NJJMo0ePFvny5RMXLlzQ
dFz66i9YsGCyzxfVqlVT4nk/K5GJ0ybDfD++78T3jVKacA9T9qfPEtrZ6f2b
jVTKRP/GfLctuevpeSpSqJVoXv+3bMe9X38pVJQt1kvz3wfIV4cNG2bEd2Hd
rw2p/3TgwAFj6dKlNft/zpurkOhRafMzufeQ6idE+YJNNL/G6OObrFTvzzQ1
YrzYPXv2GEeOHGmkTxOtP5vMKl6bgwYNMm7ZssWIZ2Pd/5+ykq5fvx6X2vde
+pfsJ76otDINufdi3bn31xXniBaFGmp6PUv9J7vcRcXMkj3ThHuTea8tM0gU
08CXCO8r3t7eus9XKeskuXfWkuTeUnrr+PHjZCj3Y2JiYlUbb9p3Q+HIh2Eb
GhsbG4K8ITIyMlj1ZU72jfXIMyws7C5EP+bXsT9jd19A+RzaTmF7nP7LDQbD
fvrwxTPCt7RvRH4D2tbR/pEMKDAwcIW/v/8i1M+FPqEfc4z/IY47hfFzcQ7v
Xrx4cdIPP/wwwsPDowd9k+M82mH/18jA0acl7TmxX1NLBo5yPANnzF/0UXyT
o64KxlB8k6M+gW9ylYGjvQyOURrtpbBfkgwc55ikb/IXYeDiBXyTCxMDF9Ku
W6aMmxTuPXbs2ES+zS19nPP6V/2cqzG9OVfM/ZzTxzn6FOEco7330aNHSzk7
Oyv+zTHf7NFPsfe+c+dOJawLylymvbfKvBmLgHMec7Yevve+4uvr2zgJ5t0G
7W3R3onxvTE/e9LPOZ7RVT/nA03xvYegv+LrHP1HMMY3xhmD/hMYWwFtiq9z
7Pch6j7CWJ+gz6dYj+aibT7WkIX0X0E/FnzPB4r3d451Yw3yazHuevTZhHH5
btAO1O3COIfc3NzO4e+8hb/Hw5x7M7439tece/N3Cvw/ipUrV6aYN2idRowY
keheNWfOnHQ9B9xrRFJ+CR0cHJQ2mWSSSSYmxqsma7W1tU0Vr02P9Oeff2o6
Hv0bVKyYfMxEttFnx4ukX3/9VfTqlZDbffLJJy98LowvPmvWLGU//ib8xRdf
SOadCYXvkKm29c6VK59oUMtNYd7ZiXu3resvShZqrflvA3xn5dixY7pfE1JJ
6+7du3ENGjTQ7P/b1qaIeKPy9iS5dy+nbaJwnnKaX2P0/Z3Z3qmg/eDatWuN
PXr0MD7rnS+pf5UnTx7RsmVL47x584y8ZvX+/8vsGjNmTKrukaXzlBYrHJdn
ae79ebn3hUNee92veXPxmYD+EPgef+vWrY2vvfaasWfPnooGDx5s7N+/f3y5
U6dOxmbNmomaNWsKOzs7kTdvxmUtjfNXEd+UHaEp995g95YobVPI6nNj/CS5
1mQNSe6dtSS5t5TeOnr06C/k3LGxsfF+zMm6o6KigqOjowORD4D8Uaadtw/j
dkPu5N2hoaGutPU2GAyXsTadQ/spbE+EhIQcxfYA+nyPZ5pd0Fb0W4e6Nahb
hf4r0GcJ/QGjfr63t/dn0MyAgADGyX3//+xdB3gUxR8FpPdOaKGEIr0L0gVp
giAIgjRBepMiHREQFAFB6YTeQaT3AEpLhCQQAgkJ6SQkkGhCFXsy//fW3ftv
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
nmbbOyBhGpo2bSq2bt0ag2cQq18T6Qna3vSUokj2IrFsvTMT721JO29qvnEv
xsmTJ63+25sK2j7TLr1ixYppMndzZ80hphftkmzee3/pEaJWzjKpHzd3bnH8
+HGrf98S5ofkvTMXJO8tYW0cOnSIuubUL3cPCwu79ejRI/LdzrTpRnwFdcSl
8PDwi6GhoT89fPjwPEAb71P+/v5HAwMDD/j5+e3C+8wW1G8A1pLzRvlSxF+i
br6Pj8/soKCgyVi/JqD/sQEBAaOpZ47xhqKfj1xcXAa6ubn1RtvuKO+CuBO1
iDF+GwLjt7a3t285YsSI+rt27Sot/W/LIIPVg3LN8/rnvNB4b71dN6HtLeE8
1HTNqWeO+VyI85XzlrrmTNOnN44pTJ/ep0+fLoE1pBT1zVFue/Xq1cpoU8Xb
27vanTt3Xnd3d69FTXO0bYx1iDbeTdB3U9QrfDfWqFb04421pz3KOnJdQZ7o
irWsG85J0TZHfT+c70DkP0KbYTh2hN62G5hArlvVppiCckXXHOc2B3WfA/Mx
9iKULcZ5LEVf36LNKpzLGp0Pb2qZb6Z9N9aybeh/B9K7gD2o3wd8T70M+olA
+jhwEudyAZ/9Os7PE+fphzGC0fevGOM51tiXOPZ3lff+U+W9/4r8j/f+2xTe
e/jw4QrvvWjRIrPwFikN69evj3NvGjRoUJqNv3Pnzng1wubMmZNm5yCDDDK8
OuHHH38kFyDwvGrtU0lW+O233xR7PeM1UkPr1q3FX3/9ZZax1qxZo/Q5YMAA
A6ft6ekZTY57w4YNit2NtfQlJcwLcnUJXVNJIWvW10S9111eGd67bS1fUTBv
fbO9/xctWpR7361+DUiYD2fPno2mlri5rpHUgs/V9EubHvdVUMuc9xT6y7X2
9yQRG7a2toJ293jXtvp1kh4wfvx4k+6TXYt0jcV5Zxbe21J23nXr1uX/ETFh
YWFW/83NBa69p06diqYdeN68eS06b7NmySoGF2yeJO99oPQo0SCXbarH4z6l
H374Qe59zaTgf5lc+yTSF0aNGmXS/ehV4r179+5t9d8pI2LcuHExtHlAOtoY
qItGXfTo0aP/Bf4ZOXLkX8CfI0aM+APxS8S/DR8+/MXQoUOff/zxx0+Rfjxs
2LAoFZEoj7x27ZpvRETEbeqZ4z7vRi1zrDXXkXdUOe/LuGdeRPlPoaGhPz58
+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
xUy7PWI4zr17qbGiSaFOolSuCiJrlmxW/25btGgRc+XKFatfb5aCo6OjSfzC
W4XeEisUzjtz8N5TSg3D9Za6eyHvgwsXLpR6J0mAPjLatWtn1rWzak7z3H+m
Tp0qn2MkJKwMyXsnjYzKe8fnk9uU440RmULeW7PzJtdBoO5PPe8dEhISx94b
cQhA3tsfsbembR4REWGw+UY7N/Tngv6uo801jOWI9CXEP6L8PNoo3Lfm1xvl
xxEfpS/awMDA79H3rqCgoK2hoaH29GeLPgw652ij6JwjTZ3ziagbhzZjNP/e
6Fvz7z0A72Xv+/j4vIN2He7du9fO19e3NcZ9E5+5Gc6n6bJly5r26dOn5qpV
q0poGud6ffPE+G+Np5P8twwyWCRkAxSdc8yRRKHpnK9bt64I1pcCmtY55zPt
wK9evVrk9OnTis65m5tbGfLhx44dq4JYsfnGPK9z8+bNukAjzP9mmPNtuFbQ
pzfWoLfIi2Pd6KCiI9Ya8uPd6c8b+Z5YS3pS5xxr1wdYK+jb+yO9zjn6oU/v
CVjnJmo+vXEc+XJN73w6+pqNYxU7cOQXIP8V8kuwli3DWApvjjr69l4LrEea
uucb0d9m9L0FacW/N0Db8F0o34O1cT/G/gHpQyg7gv5Oe3l5XQHccK5eXMNx
no/webi36Rn6eIHv7wXa/ga8RFoB7wfoJ0X23sOHD1febxYtWmR2DiO+EB0d
Ldq3bx/nfRT3AIuPfenSJWGs5UUOaceOHRYfWwYZZJAhteG7774T3bp1E7gH
pOi4f/75J0Xt8Ywcxw+Efr3GvTpF/SU3HD16VBmjQYMGwtrvfxKWwffff2/y
f6q5c1USzeo/z/S89xtVz2L+5U71/8S03dq1a5f8r/gVh5OTU3SxYsXMxmPo
0bBhQ+Hh4WH1z0jg/SiaugaJ+eawNArnLCPqFOos3ik9TYysvFNMrnYCOG7A
FAOsxXvH5b6T4r3/wz4Fc1RMrbxZ9C0zXTQv0kOUzlVZWEsjnXvkhg0bFoP3
Zqtff+bGl19+adK9cnLpKZmG915Tfr6wyVEiVdcI99mnp305GQHbt2+PSSut
kOSAev/W/k4kJCQk750cZGTeOyVtEwN9DEUmk+9GewURERHkMP5Rue6/ND+u
BJ7vyXv/HhYW9ltwcPDzBw8eRCFN+0BUPXyAuvsoC0SdL+29ccxtjfOmrTfi
m2hzI/L/9t5OyF9B/icjnXPaep+mTSPtvanXS51zPGPuo7030ptRv17lvVep
vDf93i4IDAz8jP69UT6B/r3RB/17j6I9JvJD6N/b2dm5/82bN3v6+Ph0Qdu3
PT0937p7924rvc75N99800Sz99Zz3vFpnZ8+fVr69JbhVQ6Ga9X4Gtaucb1t
t34u6PeF2NvbG/aLoE6ZT5xbnGOca5oPb9TlR3+F9+7dq+iUY26W9PDwKEVg
fpdCO8VX971798q4u7uXPXPmTEW8f1SlbfetW7equrq6VmeMNaAG6muhzwaO
jo6NkW+GfEsnJ6d2SHdGuhttvHFcT6Q/QDwQ4w1D2TCMMwLnNcbb23sC1oSJ
tO/GmJ+ibAbq5+Ac5mENmo/yL1D+pb+//xKsNct9fX1Xos061NujfAv6UWy6
0ZZc9F60p6YF+WjFDzfKjqLdSbQ7g7QDcB71PwGXUXYV/V7DuuaMNcsF7W9g
7VRsulF2G3kPxJ6ouwt4IX8PeR+kfRHTvjsQ/d1HmrrmoTinCIz1OCQk5CnK
nyP+HeV/qvbeio03bb1p4420Ahz7L//3SQnv3apVK+W9+vDhwxbhMYzD8uXL
4zwfLFiwwOLj4hpTfHoZj83zkUEGGWTIrGHfvn0KV71kyZJktX/y5ImoUKFC
gu9zuN9b7Fw//PBDZYxp06bJ/7gyKbRnDlNgZ7tBvNngj0zNe7eseVvkymGT
6v+JyXnv3r1bziMJBZcuXYouUKCAWbmIgQMHxvCdw9qfjcC7ZXS1atXSnI+h
bnn5vHVFmxIjxNBKm8WkaieBEyrffcJk3tsaOucp4b3nVNlrwGfApErrRLeS
I8Xr+d8QOc2wZyeloAbNgQMHMtV617FjxxTfK4tlL6ZonGcW3rtboXapui64
3+fq1atW/y0zIgIDA6N79uxpdd2Mfv36STt9CYl0Asl7J43MzHubg+vWeG4d
FB4Dx/9DjiMiIkLhvJEn5/0HQc4beBkWFvYiODj46YMHD359qDr2xjH3kQxE
kv5hqZvroWmbo98biAkXcjRRUVGOSDuGhIRcRbuLSF+gz1m0P400bbxP0R8t
7bzJeaPPg9T5xf1wN47ZirQ9zoG2javQhjrny1G3iDrniGdT55x2lJrOOTkq
6pzjMw328/Mb9PPPP3/o7Oz8HtKd/P3927m4uLRB3Bz9vQE0wXGNly5d2rBz
587VZ86cWSS1XLeQfr1leHVCgtrmIh59c6P9IPHqm2vzTOPA7e3t886YMaPQ
5s2biz579qzo8+fPi2HOFsfcLUFgzSiJuV7qt99+K+Xl5VX6/PnztkeOHLHD
OlDhzp07ldFXFcbkvhG/jjHqkPu+d+9eY+TfpE03juvAfTFYN7qifXdPT8/3
vb29P3R3dx+KtWII1p+PabMdEBAwFmOOx5if0F6baw/KZmKd+gzlc4F55L6R
V/x0Yw1ZgfNYjfw6rCsb0Z622Ntoi40+dgGKLTaO+x7r4QGUHyT3jbb0zX2a
OhjkvtHnTyi7iD4d0e5n7iPCsdQ0p545+W83gBob3Hd0B3WeOJa+J4h75L6p
bY6yQLQLQjoE/T0CItH3E5Q/o64HwL1Of6n3g781RP6nc04eXNE5V+87yYKm
f4jv12Jchhbw28Wxt27cuLHFfdXiWhLx6Tx+9dVXFh1XBhlkkMHaYdmyZYrt
9rhx45LVXuOe4wN9b1tqvabGuWanh/cAq7//SZgf1KSlr+mErq/EkDtXZdGs
/otMzXu/VSdEFMzbMNX/E9NXwM6dOzMVBySReuDdyyz+W9kHbVGt/XkIvBdF
494WQ7vf1H6u5IJcd8V8TUQnm0/FKLt9KtetR+p57/Skc54c3vs/7FEwy267
6FN6sqiZv6nIntW8/oKTAp5fYvDeb/XrMrXgu7wp+1TeKtRO4bwzA++9oMwk
kSNrdpOvheLFiwtqxVv7t8zooD+83LnTfi8L0atXr5iU/KclISFhWUjeO2lk
dN47pXbfWpxcjXNy3fGV0d5b599bgaZ1Tv4DdbT/+0PlRJ4j/QTxY5STA6fm
eXhoaGgYeRQcG4R+AlEXiNgf8EO5L2Jv2h+iLW0Rb6u24K5o7wxcp19alNMW
/CrSl5GmfeOPQUFBDuR/QkJCjpALR/l+9EEb8N2BgYGbEa/H3FiF9HLULyLf
hPbzkZ9L/7rUDPb395/q6uo6CRjl4+MzGPl+t2/f7k27TrR9B+fRGefY6cCB
Ax0WLVrU/OLFi1XwPGtLv8BoX5Z2pLQnpV0pfQfThzD9CePYovQxTH/DaF+I
WsrUVNY00qWPcBkyYEg2fy2S4Z/bmL/W23BzTnBucI5wvhCcO5xDnE+3bt1S
/HjTh/eVK1dK7Nu3rwz5bHLZ6KOir69vZbS1w5zkfK2G8uooq4E5WdPFxaW+
s7NzY8zdhqhr4uXl1Qx1TbnXBenW3Pvi6enZiRrlmOPvubu790X5IOSHcs8M
2nKtGA98CtBP92ysQXNVfYkvsV4sxtqyBFB8dqNsDdYE+uq2BzZhjdqC9jvw
Gfdw/w59NqBe89F9hn4dqHVBXw9c69DPJeSv0E834Ij8dfTjithgyw14oN+7
wD2U+QJ+gD+g8NjchwSEYG19oCIU5Q+BR+gTVeERwC/I/4p8JOLH5LqB31D+
Evk/VL5bse/mvqioqCglVmHwi8H3g+S+I+A3Up5d6O86pTq4KQ1//vmnqFev
Xqzngnz58lmcb8f1JMqUKRPnmWTSpEkWHVcGGWSQIT2EmJgY8sjJ4qt37tyZ
4Hsc/4PlemqpsHr1amUc+n629rufhGXQp08fk22HqlTYqHLemZX3jhClCvdI
9f/E5Lx37NiRLjhJifSHVatWxZi694Sg9m16+U/PwcEhTW28S+aqIlqXGCFG
2O0RE6udUmHMeUveW8PcKrvFjEqbxXulxgi7vHVT7aM5ubCxsRGHDh3K0Gvg
qVOnTOIWRuO7ziy8d83cVUy+BvLnzy/tvM0IrrWlSpVKs7WW6Ny5c0xK9Asl
JCQsD8l7J4308oycloiKikp22/h49aRsyMl1kOfQxYp9uM4OUOHHaSMeERGh
2IkjTfyu4qXqG/Y3pOknlv5inyP9DHiK8icY5zHiqPDwcCKSfDrakKNheAiE
4p4UgiLyOkFIB1CzV9XwvUs7c5UbcqX9I3ANZYqeOsa4SDvJwMDA85hDpx48
eHAEdQdCQkL2oXwn2m6hT1zE9nfv3l1/69atFUFBQdQqno22M9BuKtKTkf4E
6XFIj0Z6BNIfI/1RcHDwIOT7I98X+d4YoxfSPVDeDel3kO4UFhbWAXXt0K4t
+m6Dupaoa450M5zXGwEBAY39/PwaIl8f+br+/v61yd0h/zr5PKAq+T0cU4l8
Hzl5tCmP/sqi/zK0b8W522icvI+PT3Fvb29qtRclb6jx8honj+8kv7HvcmPb
9vh8lwsj23YRDy8vddwzZDDJXlu7BrRrQu/jXrt2tGuJ1xahcd287jS+m9ek
nu/m9cr9JLx+eR3zer5+/XopvF+WwzNxJcz1yoAd+qqKeVWN8wT9ke+uhXlc
G+V13dzcGjs5Ob2JdFPMmzfp0wDzowXGoM5DO+o+eHh4dMOxPTD2B2g/CGUf
o24U2o/z9fX9BONOQdksnMN8tFuAsRaiv8WoX4bxVlB3gvoTyK8DNpLrRn4b
sAN1u9F+H/1pc80BTpDvRtk54EfMwZ+4NmHdu0yum3t+aMONPP1BUL/8Jvpz
5x4hwAP5u+jXG2U+tNlGmwCuheS6cUww8iFcJ4EwpB9iTX2I8kfkuhEUrhuI
RB9RqOd6+wT5p6h/Tj0PpH/n/ibaeJP35hpPRP6nB2K4B+juCcnep0V/V7i+
FD7a0mHOnDlxngs2bNhg0THxe4pKlSrFGXfMmDEKFySDDDLIkNqwdetWZW8N
fVNn5IBnXFGwYMEE3+O2bdtmsbH//fdfYWdnp4yzcePGDP1/tUT88PT0jDbV
1jR3rio6W+/MyXtXKf15qv8npq6DnD8SSYF+JEy5vpo2bSq8vLysfv58z5k+
fXqa2HjnzJZP1C3cTQyosE58Uu20ju/OqLy3efx7J5f3nmv3f3xS4VvRpkhP
USi7ZXzNG6+FkydPjsH7s9WvV1Mwc+bMFM/R7FlziCUVlmYK3vuTkkNM/u25
r4f+qa39G2Y23L59O7p27doWn7tE69at040PDQkJif9D8t5JIyPy3hrHnJSt
dmQSNtuRqu9VDTobPQNUHkOz5/5bte9W9Gzpx5vcB8pfqviNePTo0Qs8z1H/
9nFQUFBkSEgINc6DkadNN31633vw4MFdgPaIN6Kioq6jz2u030ZMLseRdozo
6yK5HrT7EWM5qNrmxxEfBY5Q2xzHHwIOoN0++r0NDg7eRU1gHGOPcdfSrzfa
kW9ajrKlAQEBC1BP394zEU+hX2/UjQSocT4MxwzB2OSzBly+fLnvtWvX3vXx
8WlP7gvpFkg3wVgNgPrE/Pnz6zZv3txu7Nix+fV8r94OW0i+V4bME8zCd4t4
7Ls1vluz704u363Zd2t8N/dxcD+Ho6NjmX379lVUtRgU227y3dwfwn0imOsK
3401oB7mfgOM0dTZ2bkV1ozmvr6+rdFW2XOizv9O6L/bzZs3eyHdB/X96cMb
8Wj0Ox7tJqFP+u2eifbzgC+pWY7+l9C/AupXot81WKvWYn1Zj/JNKNvOfTT4
fHtQzj01B1B+CMcdxTmeQuygaZWjzSWsedyTQ71yJ1XrwqBXjtgNeXfu56Gf
bpTRT7cP+qV2RgBAvjuYtt04VrHrxjFhyJPnDkc+HPlYfDeg8N2IFb4ba/NT
7j9Cc67xv9PWm/uW9LbeOnvvVPHe1K7Cdabo2loy4DdXbJCy6J4JOnXqZFHu
Gd+BqFmzZpxnkQEDBojo6GiLjSuDDDK8WmH06NHKf6xz58619qmYHKj3gWfs
BN/hevbsadHx9+7dq4xDH50Z9X9qicQxYcKEVNh6bxHNDJx35uO9m1Q9K7Jm
zWHSd6PHF198If/rl0gSfEegHnRKrq3BgwenCx4C76bR5ERSO1eSAm2725Wa
KMZUOaTw3Rok72067z3Xbpf4HJhrt1P0Lz1VVM5jeQ7tzTffFHfu3LH6dZtS
0NY1pZ+1au5qBs47I/Pe62wXivI5S5v8m0+aNEneBy0Ecl7c/2TJOfvGG2+I
kJAQq39WCQmJuJC8d9LIiLx3cqHnGBLz9Z0Yf27MmWt+vqlzTpAXj4qKMvDi
jMmDhIeHG7TOaRuI9AvEz8mfkEdB+nFYWBhtCX+hni7wiPq65GIA2mqTmwkG
7qNdUGhoaADKFe1z+p5FW9oy0hctfdK6008txrqBds7Az0hfQXwR9T9SGxj5
sw8ePDgN0A84bbfJke9E3xtRt55+wJFfhfJvqUMcEBCw5Pbt2196eHjMoW5x
YGDgBLzTjKZ9J46nvfYAHPMhrp8P9u3b19XZ2flN6iPHZ39Nvo321+jbjjrL
tL/28vKqQPtr6qKbYn+t6aLr7a/JE2o2stL+WoZUBotol2v8dkLa5dT512uX
0w+AXrvcmNumHwH6E0D7MvQvgLlZjtoG1DXHsXbnz5+vgTHqaNw25yjmW2Nq
JlA7gRoK1FLgvhb03x7n0Jl6C5inXdFnd7TrjnQv2ncDA9CGmubD0X4s5uxk
xDOQn4Mx6SfhC8SL6T8B8Rr0vRbjbsDno2+F7VhXqBWxG9iLsgOoP4w15BjK
T6DsJObxGeQV227y3Eg7opxrGW25b2AtvIm17xbWs9vAHa5/9AOhromaL+4A
TcMc9cFcR2nTjXKur+GqdvkvaviVehlci9H3Y6zd5LifUlOD2hooo74G1+wX
1N1Q9Te4lmt8NzU7FDtv8t4az62B9wvcGxSo945k894jRoxQ3qsXLlxoMT6D
fAp1a7PongeKFStGbsNiY758+VLxQ5vF6DmkR48eFtdzl0EGGV6t8OLFC3Hq
1CnFl0NGDfPmzUvw/a1s2bLUHbfY2H/99ZfB1nvp0qXy/8pMCP6HWbhwYZP+
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
Nzg4uDfSvZDuQZtSpN+hjSnSHTQ99KCgoDbGeujopzHGbYixDH7C9XrotG21
pB46bXON9dCT4ydc6qGny5CkhrlIwkd3cuy6jX106+26NR/dertutC2KOVDM
2Ec37brpo5t23dQwp49u9FGJdt1oVwXXcTXadSNfA21qoc86aF8P6Qaob4R8
E/TTFP28iXFaUNPc3d29I+bEO8i/y7mo8dxo1xf5DzXbbqSHkuvGuBMwr8ej
fhLy01A+Ff3OQvwZ+W70uRjpZbTxRvl6lG1Gfjv63Y14H87vIPlulJPrVvx1
A/TXfRHrimLbre6/uYZyV9p202c31yfgjt6+G7E/oNh1Iw7B+vcACAUUrhtl
XAtp2q0466Ztt8Z1A0/oq5trKvlurrMa1821V+W5FbtuTcNcz3drXLdm363u
Y1Ji3Tofh+/+1UhLxPjekpz71qlTp5Tnljp16liEz9i0aVOc54DVq1dbZCyG
gwcPKpq8+vH4LoZryWJjyiCDDBk7/Pvvv+LLL7+0qK+HxEKDBg2Udeunn35K
87Ht7e0TfGfLmzevwLOARcffv3+/YSz5n1fmRceOHU3ivckJN6wdkCl577Z1
H4r8uWuk6r9i7iO8cuWK1X9ficyBo0ePKtx3evHl7eTkFG1ra2t2zjNf9mKi
U5lZYnx1B4Xzlrx3+uS9ifnA4DLTRYmccfUIUgtqKqdX+9LOnTun+J7ZNH+z
DM97r7NdJIpnL2LS77ljx450sW69ijh58mS0qT4oihcvLrXpJSQyECTvnTQy
Ku9NJMVlJ7d9Yry3xnnr7b+NeW/UxfLvree96edb470Jjfemv2/Vd+xvKh9D
3vu5apP4lLxNpBHv/ct/QeO96ff7ITXQgQfkhQDyQ+S9/ckbAfdwnBe5b3JK
ALWDb6D+OmIn+tMNDQ2l9vl5pB3IUyGvaKCHhIQc9vX1PeDn57cT84i2nPTb
u5KcF9p+BSxE+wU3btz4/Oeff54aGBg4nPwZeTSVT/tA5b570hZc5b67kPsO
Cwt7m9w3zqMNfYEHBAS0RN/kvpsi30TvC5zcHvK1kK/h4+OjcN/kADXum9wg
uW/0V46cIblvcogp5b5pD06+ktxlan2BCx2XmkzuWwbzBP1egkT9dRPG/rpR
Zvg97e3tDf664/PZjTLlGjlx4oTir1vz2U1/3WhTUPPZjbI4PrudnJxKor6U
i4uLjeazG/ly9NmNdAX67HZ1da2MOjukqyJdnT67UVcT12htDw+Puiivj3RD
pBvj3N5AuhnSzRG3Qts2uN7bIn4bY3ZDP+9hLr9Pv92YE/1wzQ+gbTfKhqDs
Y85dct44/hN3d/dPkSamo81stJmDNvMQL6TPA/RLP94rgfXoZwvinQD57gOY
UwcRH8W8OYX0eczbC8BPmJuXgKuYYwrfjXnvjPwNwA1rwW11bfLEmuKFucf9
Or6oC0BdEBAMPOD+HmpeaLbdCNQxVzhv2ncDip452lHL3OC7m2sqYs1nt+Kv
m2uvpmNOzlvlvRWum7G6Xiu23ZqmOddyanloa/wvqj9vo31P2v0i3vtNcvdq
rV27Vnmvpr2ducOzZ8+EjY1NrGcAao3TBtwSgf5pyZ3ox8udO7fAHLDIeDLI
IEPmCJcuXVJ45wIFClhl/EGDBin7c5LLMVOX3BzrKO7bcXxQ6LFhw4ZUj5FY
wP1cFC5cWBkro/jclEg5qKFs6v+hJYoOUDnvzMd7Vyg5MVWcDdcs2tFb+/eV
yFzAe5XVz4E4d+5ctOb/wlzIljW7qF/0fTGy6lGV807fvPer5t87Id6bmFt5
i+hcvL/ImS23Wa8J7qtwdXW1+vVuDHLyKf0svYv1yfC89yybsSb9jo0aNRLW
/s1edUyZMiXFezX4DnD58mWrn7uEhETyIXnvzM17EynlvhNqlxgidby3nu/W
uI9IVeNc070lN6Iilr23nvfWbL71vLeKZ6q9N+2+n6g6veS9qX9O3ttg8402
is03eW/afKu8dxB5b+RpL3mPtpPUPkfsAdwJCwu7+fDhQxfU/4yYXBR57x9R
fv7BgwdnUXYK+eO02fT19T0YEBBAO07adK738/NbjTm1HG0W0+Yb+OLWrVvz
nJycZpA3o81ocHDwYPQzgLrJ5L7R/n3qKas+hLuS+6beMv2Bh4aGvkW/w4GB
ga1pn0o7VXLftFul/SrtWDXum/at5L5p74pjqpL7xjGVaQ+rcd+0kyX3TbtZ
Y+6b9rW0s6W9Le1uyXuTl0wO921s8y2EMNj/6u2ChQncdxZp823OYLJ9t0hj
v92afbfebzev4/j8dtO+m367Uab47Uab+ji2IfKNcR5vaPbdyLfifOK8oh9v
9NkZ59Yd4/fmXMRxH3Juco6ifgjSw3D+I5AejWMV/904z5n0ZYD8HLSfhzaf
I70Qx9DOW/HljfZrkd+Ic9mB+j3AAZQd4pqB9EnEDuS7sd78RE0JzCtFzxxr
43XAoGfO9QjwBLxQ5o3Yh1oVQIC6jlHD4oHqt/sh1r9HAIUvFL6b9t3UM+fe
oHhsvLX11GDjjbFj+e020jJXbLu5VqtpzbZbs/M2rO+ROm3zSHUvFPnulGiZ
Jwb6wcJ1LKZNm2Z2TmPixNj/6ebIkUN4eXmZfRwG2nMba2zxP2Haf8sggwwy
JBZ+//13MWLECLFy5Uprn0qS4erVq4pfir59+6aqn+fPn4tq1aol+L7Wo0cP
M51x/OGPP/5QNNQ5VocOHWL0+7gkMhdmzJhhssZ5ndedMyXv3bjqWZE1q2l7
ATTMmjVLct4SmRJHjhyJyZ8/v1n5zVK5XxcfVtwoxhn4bsl7ZyTee77ddgWT
KnwjKuepZdZro2TJkumKe+PzEJ/zUvo5JpWekuF57x6FO5j0G27btk3eD62M
R48eRWvP9ckB9WoyOjckIfEqQvLemZ/3JlLLNaSU99ZiY947PntvjfdW7QgV
X9+qjaGB91Z9zL5Q7b2pea7YfJP3pt457lmPac+IMoX4Ju9D/geBPm1p/0hb
SNpEGmy+Ua5w3zjuHuq8UEZ/uR4q30R9YWfgZ/rZRf1P1CIm9438GRx3Kjg4
+IS/v/+RgICAfUhvBzYhvQ4x/X0vQ7uv0e5Ld3f3hc7OzrMDAwPHPXjwYERI
SMjHwBC0G4S8onlOXWWd5vm7muY5+umAfPukNM/J82ma5+T/4tM8J1+oaZ6T
RySfSM3zu3fv2iRk963x3xr3TT/g5tA8F/Hw31Lz3GLBYn67td9b77fbmOvm
NWPMdafUbzevXc1vN69pY7/dGtfNucA5wbnBOcK5wjnDucM5RA0F+hHg3OIc
Q3ty3n2AAagbxHnJ+cl5is8wCvNvLNITcMwklNNXwSyc7zyUf472X6D8K5Xv
Xob8CrRdjbHtEXMfzA6MwbXhIPJHccwJlJ0GzlFDAmVX6EuBPhWwTjhTZwJr
lqJpjjXJXd2HwzWJ65MP4Idyf2O+m3t7AK51EareRSzf3eS61f1BBr6bmuYa
300bbxW/a1rmOh3zPzWeO1L13a3XNI/U7WXSg+t+pM6Pd6SZee/evXsr/0ev
X7/erJwGrgOF586iu/9/+umnZh1DC/gcIr598StWrLDIeDLIIIMM1goODg6C
trNdunRJVT8DBgxI8F2tfPnyAvcXM51x/GH48OGGsdKzj02J1IHPK/yNE7rW
EkOhAu10nHfm4b3b1g0T+XKn3JZPj/bt28u9IhKZEtQwMIXzSwivZc0h3izx
sRhb/azCeUveO2Pz3v9hm+heYojIlS1hvZoU328KFRLnz5+3+vVP3LlzxyRO
4SvbrzM87101V8UUf+7SpUuLiIgIq/9uEpHRLi4u0eSzk/rNuMZzf5O1zzc9
YciQITH87iQkEsKSJUvSxZyRvPerwXsnBktw4r/o/H1HxqN9HqnyJTpotoOa
LaGBB1ftDjUbxJeq71nFBlyFpn/+FP0q2ueRqv45uXBV41ezA3+k8kSK9jkQ
DNwHgsLDwwNUf7nUPlfsv8k/AeSjaP99nX53UX4V+UsPHz78KTAwkDrFp0JC
Qo6EhoYewHzaS74LdZvR3h7xem9v7zW3b9/+Bu3mIT8rLCxsOtp+ivQkpOkr
eCw5No0TR91H9AOO8g81Thz5npofcKQVLXScy9uaH3Bqoes5cb0WOtrUQxtF
C13PiaOsSnycOPlGjRNPTAs9KU48Pi30lHDiQmqhJ8pXCyNdcpEMO229rbam
Ta7pk8fHX2v+uKlPrtlra/rk/O2ph2/MYbu5uZXAMSVps61plLu7u5dFmeKT
G9dVBaQr4bjKvP6Qr4p8dWr0o74m8rXRl+KXG/kGSDdCugnSTZF+E+fQAvlW
SLfB8W1xfbbz9fXtgHQnpLugvBvadEcbg3Y50v2Q7k/tcrT5iNrlwHC0G4Pz
nIi+P8Xnng7MxDVPO+7PgflILwS+RHox4mU45lvOZ8yPNfj8G1BG/wbc77IN
8U7ugQF+QPowjjmOsc4gfR74CcdcAi4j7YS5cR1z8SZ1zAF3gDoTnuq6Q7vu
e8hTy9wfMffocH26j3QI5hZ9NiAZRi3zcORp1/0rYq51UZptN9pzPxD3Bj1V
/Xc/R/6Fpmmu7il6qdPW+EPV2tD2Hxn0zPX23RrvrSLWXqb49M11a7/+3pAq
UBcMc4Pv+mblNDp16hTr3l+qVCnx9OlTs47BQJvBFi1axHnWGDVqlNnHkkEG
GWRIDwH3S2XtMzWsW7cuwfc07ldydHQ049nGDd9++61hrDNnzlj93U3Ccvjh
hx9MtvWuXvlwpuS9U6tvXqZMGYHncKv/thIS5sb27dtjsmfPbjYus0TuquLD
ipvEuOrnVGQs3tty/r0zNu+9QME2MbnCN6JcbjuzXS9FihRJF3bfx44dSzGn
kC9bPpXzzri895ryX4gcWXOk+HcbN25cuuCCJP7DihUrEn3u47P/nj175G9m
hH79+pn8vCzxamDhwoXpYt5I3jtpSN47cWh2fGo+ls13pBHvrbf/1vmB/UfH
pxg4bxUKF4P2cXhvI/1z8jrP0O6Jat9o4L3p91vjvcP/C9Q+D1XtJYPJJ6GO
Pr8DkPajfaVm+63nvenzW7X/Vnjv0NDQiwEBARcwh049ePDgsI733o5jN4WF
hW0k7+3l5aXw3uTR0GY22lIjeSrSk5H+hPrJ1FHW896J2IJ309uCa7y3OW3B
9by3tAW3ejDJVlsY8d0iDWy1ea3wmuG1kxxbbV6LKbXV5jWv2WpzLnBOcG5w
jnCucM5w7nAOaXbbmkY55xrnHOce5yDnIvei4BwWYYwl+NzfAN8CKzHOGs5d
gHtXNmPOb0O8E8fuw7E/IH8Qee51OYH0CaTPAOe4F4a65VgzrlK3HP1QN8IN
6wp9dFNLQrHfVn0sKFrlXH8Qh3Afjt4/N301IBh8c+u1yrnHh2ueXqecayPa
EL+r+4QU3QxNq9zYdluvUR6p6pRHGtlvG+1V+jex9d2S9xhjFC9eXLk343ox
G6dBbfEsRvf+bdu2ma1/fRg6dGicsbp27Sr+/fdfi4wngwwypN9w6tQp0b9/
f3Hu3Dlrn0q6DS4uLiJ37oT9Yy5fvtyi4x87dkxovp5Xr16dLt7fJSyHd999
16T/8XLmKCua1n+Z6Xjvpq87i2xZU/7/iQZygidOnLD67yohYW58//33MTlz
mj43YiOrqFukpxhd7bSO8874vPeUKgfF2MpbxccVVon+5b4SvcrMFt1Lf6qg
q81E0ankaCXugTzxfplZYkC5RWJ4he/E+MqbxbQq+1XeOy73nRF5b+JzfK4W
hbuIrPjNzXHtFCtWTDg5OVl1LqxcuTLF903bXLYZnveeaaJv79OnT1t9/ZKI
je7du8d7DfP5f+PGjfLZPx5I3lsiKUjeW/Le6QWmcBLGtt16vfNII17EWPc8
UuVWdHaCejvCOLy3yt0YeG9yPOS9yffQ1lvHeyu65+S8MUYUQM5b470Vn9+I
Hmm8N/19k/dGeRB5b9XeOxbvjTLqDd9AvYH3Rh9XNHtvPe9NH7563lvlzNZp
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
l1/i7HiGhX6fXDePQd4dzw4mf3eTSHhozxbGImXKNEqNykHR8t5JKb93tkzV
df+21bNnz0Tx25aERFyAv6G1a9cuVr/pM593pyI/KaMF52063ntCmVNKi3zj
lQyps5r8N/CkgLSp0ivNc/VWvi+xw+S8948ltildzAbEmvueOXNmvPnnO3fu
GM0nZEmdJcnz3t8VGGv0/6FEiRKS95ZINpC8t0R0kLy35L3jE4b5ug3jtyPG
cxvy3CrvEKZZrnISEXNzC81yQuU0yG8I3XKV8xB5ulUtXHIiL9S8sUK7XOO6
GUtIXV3y3cw5y/zcjOXG/p/o84WND+rU5KU+ryvG30O7M3kbxjCSy0H9DrYi
Pzfz3gJXYXcZbeS5L6J+PiAg4Cy5IewzZ66Fv7//cZU3Yp7uvcBu2FNbeAfa
fsP18Cv1y4OCgtaSh2LebnLdGD8f88z19fX9AduZzN/t4+PzrYODwwRHR8fh
Xl5e/Zm/29bWtoebm1sn6iDjs2vJPMHnzp1rdvTo0fqwq+Th4VFO47m1nNwa
z41jfpHnNszJbQzPreXkjg+eW/l/rlsWWYwtccqLR5U/PCIvbpg/nNcNxudY
t25dnlOnTgkNdOYJgG0hXou4xovw2tRyhHNdCuYqZ21tLdatuLi4VMU81Qlc
n7U9PT3rkgt3dnZuhuu5lcaBw7YnruNvML4/2ga4uroOw7HHwH4i7KbgGNNx
jFnYzoHfmEtfg/NcCCxW/c8q+iOcz3rYbYHdNtR34Dx3Y84DsD8IGwvUT8KX
naJ2BfAHbM6jjfkbyIczn4OICYctY8GpiS64cOw7o90V9iI/OHlwaqEzfwT2
A9AXzDVJ8K0PgPuq36b//kvjwenjMR9zVLxQNTyYu+K1poWu6n2ExYJr9xBt
/ZS6huo9xnz40nr0FStWiGfrAQMGxIrrqFevXrh7fJ8+fWI1n2HB9zbSM8TA
gQPjbH5ZZJFFluRSmFuiYsWKX3wHW7RoUbwcG/dfpXjx4uIYPAfcn03+7iZh
Guj93S57ttYGnHfS572rlDio+3ct5luQWgkSyQnLly+P1e/51M5uV/hHwXl/
nveOzH3HNe/9tfkaJW+GUib/7TspImfafMo3BaaanPcmWubsGqu/hbo5Z8+e
jZdr5fr160bzCdnT5EjyvPf3BcYb/X8wNzeXvLdEsoGe5+fBWSop/8vTOQwH
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
sd/wCV3gq74i/w1053objPkG/f3gRwZ4e3sPxv5IjBuH/Ynom4rzmknuG9sf
Mccy+KblXO8DX/UTfNBazLkBc5L73kL+29PTczvm2IP+ffSvaDuE/mOY7yRs
mUviHDU30HcZ81zB/g34rNuwsYOvvAu/TQ7cAW0u1D+njgf1PGDvzdzfqAv9
c9S5FiqIa6PUNVJC/5xrp6gVQu6bOTIMuO+nOMYrnMd7bKO8pzk7O4tnlRw5
cujiPphnO2IsAOaMFZ+C/4WSOXPmcHMWKFBAwWcXq3llkUUWWeKz4L6kTJ06
lfE+8X6st2/fKoMHD472XYu6GR8/fozTY797907p27evmJ/5RVevXp0o3r0l
EgeWLl2qS884Z46uSp3q75MF712vvCOejfRpIhcvXlzRq18sIZHYsHHjxljp
mzcrMEMZFY7zThjeu1uR5UqG1Fl1n3dMUKNGDWXNmjWheE8z+f8pJsA730fe
76tXrx6vn0vKFKmUdmb9TMJ7E/Wzt9R97mnTplWuXbsWJ5/35cuXjeYTcqfJ
nSx47woZjNeMmT9/vnwWlUgWkLy35L2jg+S9Je8dnyDvHRQU9IH5u8l3A39r
eubMpQobkVtVy9v94MEDQy1zlkfYp4Y5ie8gxnSjTi1b5uomz834Pm/G+uE4
nszXjflc0EYdXCdAcCTY3obNTewzdvAqY7uZT5Y5uwMCAhjfLfhuci/YHlK5
mH3U5GV+WrRtR13EdWOejfi+biDPzbhu1BnXvTw4OHiZr6/vYoxdgPY5jOvG
uB9gRy3gmZh7KtomMbYbduPRNga2I1AfivMaDAzCuIHklpi/Gza9MbY7OShy
UbBth3ob2LRijl7Um2KM0CzGc179mzdv1sB+RQ8Pj3JHjx4tc/r06WLM/0u8
fv06/4oVK/IPHDgw944dOzKQ51YUJW1c5ehOIXluWWSJWD6re65EiPnW4r3x
bpyROgxoy0hNBkIxiP9m3De575MnT+bct2+fGXlv5vs+f/58PvLe8Bn5yH0z
5/eFCxeKMt+3g4NDmStXrlRwcnKqjOu+GjUhGPsNu7ouLi4NPT09m2hx397e
3u3gWzrgWJ3gN8h/d8U5fIV5BfeNc6PuxABXV9dhmGcUbMfCj0308fH5lvoV
mGc+sBjnuQRYTP6ba4Ewfh32N6CN64S2oP4r7HZhPub9Zr4I+tvDmOsEIHJ+
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
gPf6j9Sqie1nnypFKmVgwekJxnsTFTJX03WufG5jzLuez6thw4ZGX1MD8gxK
Nrx3j5ztdX3m1Ic/ffq0yb/vEhJ6kBh47225WihtMpgDRWKAwpHQNloU+iLa
RYmCUaJ9dEhf4IvoECXyxwD5BDoahbyRUCR1BqN9nOS9Je8dn9B4b39//yda
rDfg++DBA8F7Ax6PHj3SeG8ntNtT05z6tOi7/uTJk6vkvVFnDJ/gvWFzCu3U
M7dA23GMO4p2ciCM9d6L9t2wIe/9O9p/xf5mnAe1c39GP3nvVegj7828sj+i
vpDa5tjOVmO9yXtPVfPRMo/3hJjw3uR5MP5rxnnjb+/+7Nmzbszl/SXeG+Na
GcN7oz8c7w27iuS9Ge9ta2sreG/Ge5P3PnjwYB7y3tQ6lry3LLIk6mI0702t
c0Xlvcl5a/w3uW/GfVPvHP4gC/XOT548mRP7ueCLcsF3mKHfjDHfjP0m9422
QuS+uXbGzs6uFOxKE/A1ZeC7ylJTgvrnjP3GtpqNjU0tJyen+hjXCP6pKe7f
zenL4IN6oK8P/GI/+MNv0N4XYwfj3IZjrtH0odTMwBwTcQ4z4Uu/w7i5aJ9H
P4xzWO7u7r4WY6nLsRnbX2BDvfPfMdc+5q3AfeEgfOR+tB2GzXFsuQbqJOYV
ub6xPa/m+rZmXgyunyL3DZ98C+B6qjtov4u5XPA3umO8FyB4b+BP8t44vyh5
7/Pnz4vnFP5WbUzB/OHu5alTp1bgy42aY+XKlZGeCZjnWxZZZJHlv1DIye/f
v18pU6ZMjN+b6tSpwxzAcX4ueKYmzy2OwfVHeL4OZV5JU79zSSQd4Hnno7Zm
whikT1c0HOedVHnvuuUd8PfoyxG8YcOGRPHblYREbKE3r3e2tAWV4WXPJQjv
PbrMKSVfxvK6ztMQOXLkYC4Vee3qAN7VP5YrVy7W/4NMqbMok81/SjDe+9si
C5XUKVPrOtexY8fq+q507tzZaP6rW64eyYb3/qnwLCWNzs+8aNGiCp9NTP19
l5AwFomB916SvX6sfbRE/EHy3pL3jk8YxHs/efDgQQB5BUPe+8mTJ+6M94ad
qyHvjf1bjPVGH3lv68DAwIuPHj1iDu8/GN9HzlvN83qMcX/Uv6UOLnN5o30X
c8L6+fntYC5v7G9i/CB5b+yvhi15b2qcL0J9IfoWwG6eHt4bf2Mk3vtL8d74
e9qT90Ybee+2GNNK0zh/9epVU8KA924E2/r47OqT9/bx8alFnXNqDWv5vRmH
aahzbpjfm7w3NY7JexOS95YliRdywykVRYkS8+fPp054KuwL4PufmlAM+GJC
UXNkE7iu0hHkjDX+mHrhuD4Fd4zrN4w/Zuw0Qe1wXk+wy+Hk5CT4ZPi43OST
DbXEXV1dC+AaL4g2EU+NMeYYUwzXawm0lUS9NOYri7Zy6vqVKryucb2LPNq4
vutwzQvqDegLyC/jvJqh3gJ9Iqc29jvSt2DL9TXdsd8bdn3oj7AdjPZh2I7C
scbSj8EHTUbbNPTPwDGEzjj2F2B/EfNro28ltoJ3hn8Tebax/yuwHfs7sd0D
kHM+BLvjzDEBOyuNb0abiLGGD7sFP0lQu0PoimPfGX7RBbiHNvLN3mgj3+wH
+z+xDUBfEGwfYP/ho0/lCfAXwDwZz2BHPIdvfQ5f+AJ4CbxC2ytsXwN/A29U
/KPiLfqJdwZ4T2Aebv+Fzb/YF0D9A/kL6stFvJ/t2rVLPFO3adPGKI7EwsIi
3L28UqVKRo13cHAQ+sOGc9SuXVt59+6dUfPIIosssiS18s8//yibN29WSpUq
FeP3pWzZsilr1qwRseFxXfBMoJQoUUIch7m88ZyRKN6jJZIW9MZ5muXqnyx4
75IFf9T1u1XmzJllHlKJZIHDhw/rjvVuWXCuynnHP+9dIXu7WP/enC9fPuXa
tWsm/8yTMqgnQ62LWP8v0hVWZpfYmiC89xIcp0H2FrrOM1OmTIqXl5fRn9Pg
wYONvq5a52iTbHjvzeaLlFqZquj+fnC9qMxBIJHUIHlvieggeW/Je8cndPDe
dmq89y20h+O9MTYS7422Y7CNxHvDxljeW8R7R6VzjvpE5qaFLXV6R6NtGPqH
om0w89gytzeOPQDz98Uxv0F7L+b3DgkJ6YGxPfC3d0d7V9h1evr0aXuC+b0Z
841jtzbM763l+CbHhfkaYf4G3t7eDVxdXev5+PjURl8NtNfAc6DI8Y0+xl9W
uHHjRjlqFFOr+Pbt20UsLCwK7tq1Ky95ORwvOzFy5MjskveW5T9eYsybKxG4
8y/x5tQcN+TNGXOtcecab65x5xpvTi0GQ978+vXreZ2dnfNhfH74hwKMwdY4
c/ilohpnDt9TEvZlyJfDrjx9gIuLS1Xm30a9OtfHwK4uxtaHf2moxWNzjQ18
h8jDjf5O5Mux3x2+qxe2fWA/ANshmG8EfNUoYAzGjMffMQnjp2KeGdj/Dvtz
sL8A45YAK3A+q7FdB/uN9LmYZy982n74QcGPo595KCyxb4W2P9B3BvULaLfG
/jW03VR5clvGYav3ARds3bD1QLsX+XHU/2SeDPjWQNgLjhzt97F9gLrGkz9G
m+DJYfcU++THn6P/Be5HYTw5+gVHju0b4B/grYp3aH+PcR+iit1bsWKFeKYe
MmSIUTzJ3Llzw93L8U4e47Fv375VqlQJ//7K333xXTLqHGSRRRZZklKBz1UW
LVokfi9PEcP3JMZe9+vXT8H9Il7OaefOneK3WB6LOVnt7OxM/p4lkTQxbtw4
XZxXsSKbkwXvnT2zPv5mwIABieJ3KwmJ2KJx48a6fECeDGUF150QvHfrAt/F
+rdmxpDKe2XcAO/SH1u3bq17vYSGWtmaJRjvPbvoaiV9KuM1aQnmNzf2M5o6
darRn0+NzDUTAe8dmfvWy3vPLzBZ6Nrr/X7wOxYcHGzy77uEREwheW+J6CB5
b8l7xyeM5b2Ze5W8N7mQmPDejPeOiveOKt4b439mfm/yNIY651p+b8Y+4jzJ
e8+APXnvKZhrMnkfHHM8c9OS+0bbcPQPQ9sQzDcI4wZhvoGYpx/mJu/dG+29
QkJCeqKvJ+bsgXP5CmM6Y2zHp0+fdsCcHch9k4fCcVris2rx7Nkzct/NqXsO
+2aYqwlsG1Lv3NnZuQHG1MH4mhhT08vLqwZjQ6l1Tv1hvE+Uv3XrVmlHR8fi
d+7cMbe0tCy0b9++fDdu3MhlyHvny5cvM75LqVPIIossXyoJzo9r+bgN48lx
7X82nlzTJyc3zvwG5MbhU4pjTAnYlGIsObUgGEtOXpxrZRhLzvUzGFcHczbA
fjidcrS3h11n+KQu8DNfcd2OxovDph/X+OA4wzDvaBxjAtqnoH065vgO/mo2
2pdh3tUYuxa2azF+Pfq2wuY3apUz/wT69qLtAMYfg088gfZTKh9O/34Rx7uK
/evU/EC7yMeNfQfAGbgHH+iKfnLi7szNjX1v2PCewphxf2wDsRWcOEPHRdD4
kyeP4JMfP+HOp/hxwYkDL2Hzmjw48Dfqb4C3mPcD6pHuZ5MnTxbP1LNnzzaK
K+nYsWO4e/m6detiPHbSpEmRngV++eUXo44viyyyyJJUypUrVwR3zfyOEX3f
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
l1qoCw4c/Y0xdzNPT89W3t7e7dDfEfMIHXRHR8eBwHDYjcKcI3A+1KqYhL5p
GD+Tuhbo+wHHmY85ltLP4VhrqY0BP7cBY7ZSAx11Q/77MLb/x955gEdRdW9c
qvQivYTelCqIIh0RkSIIUgRBkSooiCJYABGQ3kWK9C6CgkqTToCQRgrp2WQT
s6lgAip+tu8z83/fy87+J+uGZDbZLJvc+zwvM3PbzIa9Z3fnN+ecoxh/DPsn
aWthmxiT4yx0gc8mQZdQfxkSMdFRz5joIjc4fcGxFQwc9YwDYsBcP+JcSXhd
P+H4Ntk3JPy+sf0D52FujgyfZa+//rr4Pr1y5cpscxZvb+8Mn+HMlast9P1+
9tmMsQXJwPE30810ZJFFlvxbbMWEeBBE/zXGS2fccsaowGeSyBf+IJXff/9d
mTZtmrj/xmtu164dY8E7/XevVMETc6/as84eqTjU5bn3o/V22GVjxo8fL59P
kXJ59e7dW/c9eebbHtX4W4dy71ca7FEKPVTYrrU5dOhQuTYfYM2fP99un+9J
tT52OPd+qcpou65tz5492Xrf7d+/367X/3aN6QWGe1Nzqk9Rqher7NDfCvz+
3atXr/STJ086fV1I5U9J7i3lKpLcO2u5or83ufetW7cowb41Egw81czBIfqC
/0X+TX9w+oJTqP9djY1Of3DVJ5wcnEpJSRG+4dDPjJGOttuoZ57w1OTkZBEj
/ea9kkyRhdMvPCkpKR7bOPqFoy7GzMKj0T8KbfQPF77h5ri55OEib7g5t6wP
fQshxkr3YP5ZyN0cj/c8eYzKwrF/IiEh4VhiYuK3OP7GHCf9EPoepH94fHz8
Pmx3YdwO+juiTeQOj42N3YS2z1C3BuNXxcTELDeZTIvRthB9P0H7vOjo6NnQ
TJV/BwUFTYLGBAcHD/f29h504cKFvuHh4d2wtjqSVx06dOjJtWvXtrp48WI9
xkNmXGSyMDIxsjEyMrIyMjOyMzI0sjQytYiIiLKUtY84OZzK5DLzEdfmElek
j7gsstjtK66uI0rLyJk3nMoqZjrXsMrImTsc9kIwcvqJ0wb4+PhUJxeHXa6V
lpZWG3LDHHXIxg0Gg2DjGNPM19e3Bca1wX472KP2OGcH2KJOfn5+vdE2APZu
IGzIC7AngzFmOMaPwjyjmaOB+Rpoq2B3pqJuOsbOwvmZ62E2rms+5mFc9GWw
T6vJw/FayMM3w2Ztw9idmGM37ORutO3D8Zc4/go6jONvmI8Cdd9jzEnMeQY6
r+XiaPdAmw/OEwxF4dwmzJ2MuW+h/jb6/4zxv+Hc/0XfDJ9lasw45qTNbrl0
6VKGz/DHH388Q/sXX3zxr8/5devW5YjxyCKLLPmvMEe3ta3ISzFmoZubm9Kj
Rw9l6tSpytatW0UecTLlB7kw5gafN+JrKFasmPLRRx+lW+ewkJLKK504ccKu
ex21ay50ee5dq8pku2zPzp07JVuTcmnhd8Y/JUqU0P3er1umsxXzzn3u3bzC
C3atS/oS43eg0/+2UpmLv2OZO9ae/9+WZZ5yOPeeW3eVUriQ/mcuhg8fnq3P
hKioqH/43VXv/M9V6F2guDf1mdtspXOZtnnye6JVq1Z8ljc9u377UlLZkeTe
Uq4iyb2zlqtyb9Xn28y+hdD2X7MPeAYWTqGf4OBo+4tbLQs3x0f/HW0U87H+
RxsjXeXhEOPW/oI64ReOdrLwNPqFo17wcBStX3iiOe9rPL4nmpg3nDwc9UbU
M1Z6FGTAPuOlCx4O0TecPDwAY/zMMXa90O8aeTjzhzMvLdoukofjmPlqT2N7
ivlrExISjkOMl/4Njpk7/BDaDpLl4DfSPpPJtBtzMlb6VnIf8h/GSMd8a7Be
VkZHRy+LiYlZiP25RqPxQ/z+eO/GjRvTQkJCxvv7+4++evXqsODg4P4Y24t5
es+ePdt93759HTw8PFowvjHmb0iWxRzAzAWM+dzoB6pl4qirKpm4LLLkerHL
R9yafytWPuJk38xTQKFvSZV/c12qMdLV9ar1Eee6xpjK586dq8Z4EGpsdDVX
OOOj0zec8dG9vb2beHp6PhoUFNQyICBA5AZnTHTYkA6wOz29vLz6Ykw/9O2L
eRh74iXoZdixEbANr5B/43xjMXYK6t7C+d/B+PdgA2cxHjquS+QER/0y9F2J
uWjv1sPubEJ/PhfEWBnMDb6TOSWwvw/75N8HoUPocwR9v8e4E9j/Ae1nzbkq
RJ5wvCZPvJ5AXHckzoGpf0xCfxHzHLoD/Yb6v63z1XXo0EH9HM42czl16tS/
vtuqBfMr1vFOeQ4Z31wWWWSxLrQX5cqVc9h9KDLhWrVqiTzc/fv3F/7RfAbn
+PHjCr77PXA+3Nkp27dvt8SGZ6xkfL45/TeRVMHW+vXr7fI/a1T/sMtz77Kl
2tllm/A71un/b1JSOdGOHTvsWvc9as51KPd+vdERpWihh+1alx988IF8HsUF
tHXrVrvee+TR79VZ6VDuTTUs2VT3tVWrVk3hveXsvP62bfWz3DoP1ylw3PuL
OvOVLdAblYcrZYuUdthvDa3Kly+vTJw4Md3T09Pp60TK9SW5t5SrSHLvrOWK
3JtSfb6x/z+tzPxbiEw8NSMDzxAXXfUJ14hx0UV8dNU3nDxcFeOkM1cr9kWc
dGx/pcjDsWXOcOYOF3HSVR7OOOmovwXRPzwFx8loT8SWYu5w+oibsI1FO33E
BQ9PSkoyQBFoC0tOThY8HPX0DQ9grF20XUeb8A/HfIyVzpy09D28xDi96HPO
7B/O3OEncXzcZDJ9j7YjZOGM9YvjAwkJCXvIeqDtzBluNBo3xcTErEMb84Qv
CQsLWwjNCQ8PnxEUFPQWvkeMx3Yk1tZL9L+8dOnSC999910vb2/vpxm7ODY2
tg3Gt4qOjm7B3L7M8YvjplkxcRxnysTpP5pbTFyRucRlKdglV/zCUVec0sZN
Jxe3FTcd/cpjmyFfuOoLzvXOdU8m7uPj44b1XP/KlStN0N4E40V8dIztADsj
8oCjrjPGdYO96AUb0YccHLarH2zRAH9//5dgh0aizyjYitfRfzz2J6L/m9B0
cnBcH2Oiz2GOB4xdgGtajPFLcbwC25Xovxr7jI++HtrAnBGMlYGx2zF2N7b7
oa9oQ9EmfMEZewM27gyu5ypeh2DfOP4R/RNwDTfRPxXbX3FNf1s/h9ywYUPx
ORwYGJht7nLkyJEMn+E9e/a0tA0cODBDG3Pi4m+YU9Qjiyyy5NOC73TKk08+
qaj+K7QZFStWtKh27doKfXuoli1bit/Szz//PGOR8t6S8t577ynz588XMdMZ
t+LMmTNkSgpspLNfWq4W+qBPmDDBYluHDBmSTn87Z/8WkpKaPn26XQyixaM3
XJp7d26VohQqpP++B2NMOPv/TEoqp3rllVfsinH+auMTDuXeT1eZaBevqlSp
ksL7ts7+u0plLd6Dbd68uV3/zz0rDnI49x5Q6WW7ru3atWvZev0zZ87UvfYK
PVRI+cRtfoHk3tTq2u8rT5Zqadf/iz1iDPQuXbqk8/kg6xxzUlLZleTeUq4i
yb2zlqtyb0rj922Tgada8XDVJzw1ExaeahUjXY2TrvJwrX84Y6WTg9M3nFtz
vPQMvuFoE7nDGS+dsdLJwjG/Nm84/7kJkYcnkYWjj2Dh+Iw2QT9CsSkpKfQP
j4IMaItgvPSkpKRQxko3+4aL3OFo80ObL0Qefo15w6HLEOOlX4qPj7+QkJDA
eOk/MKctc9syxy2Ov6ZPY1xc3EGsmX1Go3EntlugDeHh4esiIiKWMXducHDw
R/7+/u+Ghoa+YTKZXqeP5eXLl0dduHCBcYd7kUuhvgvm6YSxTzN3L3P4ank4
jgUPNxgMj6o8PDo6upHKw+n/qfJw+obSRxz1Im76jRs3qqo8nPzM2kecOYlz
w0dcZeLWPFzJgok/JHm4LK5Rsu0TrmTCvhUbPuHckn3jd2MGn/DvvvuuLLk3
1yqfYVHZN9cy1zTX9tWrV2u6u7u7BQQE1MP4Rljjgn3TTly6dKk9bEwnMm/Y
q46wNV1xrmfQ1gtzPo/5+sIW9MfcA/38/IbB1r2MuRn7/HVoHOzJJBy/hT7T
mcMB/T/AXB8xrwPsy0LsL4KWwAYug1ZgfxVzQUDroPWYYwOuZTP68tmgPRi/
X/UDR/03OP4WdusUbM9lXFsArisCx3T6jqfP9/24t+priXNmm7/s378/w2c4
/Sht1VOffvppLhAfWWSRRZaCW2DbBfOnTeVzAYsWLZI+aVIPjAYMGGAH9y6s
tGv9q0tz7zaNz9p1P3zQoEFy/Uq5vOrUqaP7vV+rdHtlQrPLDuPebzQ9q5Qr
VtOudSk/V11Lu3btsut5qwpFKysLBOvOCff+4r7c+wO3JYIz6722pUuXZus9
eObMGbv4wgsVXyiw3FvVlCovKxWLOC7OlC3Rl3/y5Mnp7u7uTl83Uq4lyb2l
XEWSe2ctV+XetmLRqAxc0/4vH3CVf2fFwTWx0f9OS0uzxEdX84WrPuGos/iF
M2c4GTj6Mj76b6pfeEpKyl01Zzg5ONqZM/wOfcOZNxzHqWTgaBd5wxkrHSUZ
Ehyc/uDYxqlx0pOTk43YFz7hqI9AXZiaNxxtQWgLxL4/5rwO+UDeqPNMSEi4
hjGX0Z8x0i/Ex8efM8fsPQEdM5lM32HNfBMbG3sQbXvj4uJ2RkREbA0PD//c
YDAsx/7CGzduzI6MjHwXfadgrkmenp4TLl68OIqxh8mgMF8vnKcn1IMcPCYm
pgtz9DJXL/b/xcH1+oXL/OGyyOKQkqUfuK0Y6erasM4PTqn5wY8dO1bq9OnT
pbWx0NFeXhsP/fLly1U8PDyq+vv7C/7N519go+phnTdEW6sLFy6InN+Mf47+
T2LNd4SN6Iq6brBv3WG/eqLvcz4+Pi9gfyDOMxT2YjjW+kiMeRXnHAv7MBHn
nIL2qbBP03GO91D3PvrNxvFc2My5mO8T2IkF6LMQWkRfcPJw9FmFvutwvZsY
FwNt21C/A313k4PjHEeCgoLOQl44t8jzDf2IvkmwWbew/QXX8DfOY/m8Yo40
Po9M/f3339lmMNu2bcvwGU6/S/wNlKpVq2aoZ64rPfPKIossssiSsezdu1cp
U6aMsKn0eb906ZLTf/9ISWllj99d8eJ1BPN2Ze7d2G2NXffAlyxZIvmalEsL
v5Xsur/ZqfoMh3Lv/rWX2rUmK1eurMi8vK4l+hupMcv06rUa7ziUey+pv1mp
WVz/cyF9+/bN1mcDXzvfs3rnr1aseoHn3lvqfKJscJutvFC+u1K0UFG73j85
UdOmTRX66wcGBjp9DUk9+JLcW8pVJLl31nJV7p0daf3BtRw81YYfuDUL13Lw
tLQ0su8MvuDYt7BwNTY6/cFVDk5/cE2M9P9oObgaI50+4WbRH/yO6hOekpJC
pSYnJ/9k5uDJqj84Y6OjSviDqxxcjY9On3DUqfHRBQdHPeOjC5/wxMREf/qD
43xeaCcDvwq5o51x0c/TF9xkMp3CuiEDP8J4vlFRUfsNBsMObDdAq4OCgpZE
RkZ+jLlmof+MgICA6deuXZsUERHxSlxc3BD8bhkUGxs7kP6X2O+DOXqj77Po
+wyOu+O4K9o64xwdycKZwxfH7XD8eExMTGv0aYnj5jiXYOFGo7EJ6hrhuCHz
AIeHh9djXmCycOYJZnxkxkjH2GqZxUjHNWZg4eTgWhZODk4fVXJw+quSg6v+
q/eLkW6VH1mycFlcqdiVC1yx4tyKld+3Nu451xPXFcaVwXoqx/XHtcg1ybVJ
qfHOVZ9vqI67u3t98m7GgeD6x/HjFy5ceAo2Szw7g/5P+/v7d0N7D9iKZ2Hb
emEdP4cx/XAdL2L/JdisEVjXIu83ruN12IOJsB9TMGYa6kTub8z9AepmM+Y5
9Als4AK0fYr9JWbevZy+39iuYuxzzLMR/bfyeSDU7ULbXtQzV8RXmOt7vJ4L
ISEhvjh3GI5j0N+E/inob9PfG38H8f2Esf30lE2bNmX4DB85cqSQtq5o0aIK
/hY5hz6yyCKLLAWw/PHHH8r48eMtNnXgwIHpsOlO/10jJaUVf9uWLq0/b2a5
ss+4PPeuWdm+eMr01XP2/5uUVE60Zs0aO3xtCykjGx1xKPduWq6XXWvyo48+
ks+iuKBWrlxpl893qzJPOZx7dy2v/71YoUIF5ujJ1msfOnSoXa99eo13Cjz3
3mrW/BpvKs1K1LfLZuRURYoUUXr06JG+adOmdPnMjVRmktxbylUkuXfWys/c
W1Vm7NvaD9xq3+IHnprRJ1ybG5wsXPBv1Q9cZeDk39a+4OTf6Ev2reYHv4tj
NS462beFfycnJ1Pk3z+pfuBqfnCUJIi+4PH0A4d+hGJVX3CIMdEjGRMd84ZB
jIkekpSURF/wANQzN7gP+pF/e6DvFcg9ISHhYlxc3Dmyb8ZAJ/uOioo6FBkZ
uTc6OnoLtuuDg4NXYH8B+n6EPu8HBATMvHbt2luMK4z+L6N+KHN/Y/9FzPUC
9vuh3/M4fk7rB66Nhx4bG/uU0Whsr/qBo70Vjlvi3M1Rpyseusq/8Vork6nZ
ioeu5d/WfuAq/5bx0GXJh8Xy3rP1vrT267Z6riNDfm91Lag5vvmciJrjW411
rvp5M8750aNHK6jM29vbuxLGVvb396/COOc+Pj7V1Tjnnp6e9Tw8PBoGBgY2
wRptCnvzKH29L1269DSflSHzxvk6o757WFjYs1jbvfhsDdZ2X19f3wFeXl5D
YAOGoX0Utq9iLY+BfRiP48mwC1Ox/w6f18G4WTiejXEfo898zLEQWgQbsARa
Bq3A8Wr0XYv9dZiLz/1sQf8dGMdY5/vQ/iXmOYTxR3CtJ/Ha3CF/7EfgPD+i
fwLG3UJ7Gq79Lv29tflg6TeI/wvx7LGesmvXrgyf4dWrV//X5/qsWbNyif7I
IossshSskpiYqHTo0EHY0uLFi8v4q1IPrEJCQuy6z1G18iSX597ly3TU/br5
TCBj7Tj7/01KKicaPHiw7nvxFR6up4wXzNsx3Htik1NK8cKldK/JUqVKKfht
5fS/qZR+MYYZWbHe//NihYorc+ptcCj3fr36W3bx0OzGwt62bZtd3LtT2U6S
e2fQPOWtKiOU6sX0+8/nlhjTadiwYekHDx6UucClMkhybylXkeTeWSs/cW9b
sc+z0Z5pPnBbdVomnpqRi2tZuIWHp2qYuA0ervULFz7hzBNOHo7tr8wPztjo
5vzgWn/wVGx/uucKfkvkB4eETzhjo+M3vSU2OupiycSZIxz10YyNjn3mBw9L
TEwMwf4N5gZHHz/U+eI7rBd0BfsXsT2H3yKno6Kivo+JiTmE7b6IiIhtqPsc
bfSBXB4SErIkICBgXnR09Iz4+Pi3TCbTZLRNxP44bMfExcW9inX4Cpk49u1i
4rZyhJOJ680RTiau5gjPjInfL0e4ZOKy5IOSJfdWssjtbR3PPDM/b64ZlXvT
35vcm+uNsRgorkP8vqjCdcmYDVhvtZnXAHM25Jpmfm/GfPD09Gx79erVDjim
PeiA9dkJ47thfE/V35t2JDg4uL+fn99gzDmE/t5oG4Uxr2KusTieRH9vjBf+
3ugzA/sixjn9vTF+PuObM9e32d9b5Pqmrzds5Gr0W495GON8K+bcgfrd6LcP
+2Tfh9F2DH+DS5AfzhWO41i8LpHfG0rD/Hfp762Nc/7tt9+K7yfkK3rK4cOH
7/uZ3qRJE+X333/PFf4jiyyyyFKQire3t1Kz5r38pNyePXvW6b9tpKQyk/o9
Qq/q1Frp8ty7aBH9vKVZs2byXqCUy4v5avW+95tXfMmh3Lt3zU/sYk6vvvqq
fK7MhTVhwgS7+O/gKuMcyr3n11urFLEjjvbq1auz9X7k7/ny5cvrnr9k4ZLK
0jpLJffWcG/qizpzlVce6auUK6I/fk1uqmLFisImHT16NJ3x7J29vqScK8m9
pVxFkntnrfzCvbNi3rb6W/uBp6WlZca5/+UHbkNa5m3h3tY5wVXubdbvKvem
D7g5FjqZt4iDzpzgWh9w5gLXcm+VeTMfOP3AUWfNvX80K4bcG9/RyL0jsR+W
nJwciv1gNRc4fcATExPJvT1NJtMVbC9gezY6OvoH6Fuj0fhlTEzMrrCwMPo8
0gdyGcYvDgoKWujr6zub8YMxZlJcXNwEjGMu3dfQZxT2RzDPbl7HQCfvzmkM
dGvebU8MdCWbvFv5f+YtiyyOKNmOaa5kwrsVGzHNtX7eWt7NtcM1BPtSmswb
7SKPN9ef6ufN2OZcn1ynZN6or4s12QBrsjGfZ4F9aYb2Fj4+Pu29vb2fpm2A
veiIuq4Y08NgMIj45rBdz+OcfTF2IOYZAnsyDNckmDfs3Bi0jcfxZD6Xg2uc
TubNPA2wLx9hThHjHPMsJPOGlvB5HvRZSd4NrUXdOsy1gXm9MWYHtntQL5g3
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
5bXXXks/fPhwenJystPXolTuSnJvKVeR5N5ZS3Jv22Nyi3unmtk32kTMc2tp
457T59uKfYt45zi2xDs3S/h8Ywx9vn9Wfb7JvlNSUizs+9a9Itg3xpN70+9b
5P5OSkoi+47F1og+BuxHJiQkRMTHx4dieyMxMdEP+97k3hD9vcm9v5XcW3Jv
WVy2OI17Hz16tILKvVV/b6zbalhX1Znf293d3U3r7801zPzemLM51lxbzCW4
N9QBYy3cG3bCJvfGuGG4jhHYfwXneRXzjcXxRHJv2D9y77exL3y+yb0xfg7m
mQc7OJ+5vlG3mPHOcbyMMc/RvtrMvTfhtdH2bUP9TuzT5/sgfvML7o2/xXVr
7o0xNrm3mheM8XX1FMz5r8/xvn375hwCySKLLLIUkHLnzh3l6afv3UtgDr/v
v//e6b9XpKT0qmXLlrp/95cq2cblufcj5Xrpft0lS5ZUZHxSKVcW37/8vNL7
3u9SfZZDuXf1ks11XxNjYzv77ymVe+rZs6duPlS2SAWHcm+qHM6h97pWrVqV
7WcgQ0JC/ileXP/9d+rFR16U3Dub3Fur96uOVp4s9ZhStFARu/7ujhJt8/Dh
w9OZiyI+Pt7pa1Iq55LcW8pVJLl31sqP3DstLc2yn9fc23xsk3ur+b5tSHDv
mzdvWti31ufbzL2F37ea6xsSPt9a9k3ujbrbycnJgn2jXrBv+n3jOEXr843D
ODXWObpE4diQlJQUkZCQEKbm+MZntk9sbOy1mJiYi1rujePdkntL7i2Lyxa7
+LfKwO8X8/zkyZP/inl++vRpEev8+PHjFcm9uc78/f2rYC1Vhb2qhvE10N/i
7x0cHNyQ6xfrX/h8+/j4tMG4J7B2n+Tax/wdcC4R6xz2q/udO3cE/8Zxb6zr
fljfAzB+MPoORf1w2ICRWOeCfaNuAs45CfVTMPc02IzpaH8P+x/QfmFtz8Gc
H0OfQAtgFz9F3ac491KMFfHOoc9p+8i/MX4ntNdgMHyDaz+Ha/fGfgjOZ0R/
E+a9ifnTbHHvgQMHiu/Su3fv1sVr/vrrL+Xzzz9XRowYIfJNlSpVSsHcOQdB
ssgiiywFoMC2K61atRK/gWhDvby8nP67RUrKHtHX6CGdv/srlOvr8ty75MMN
db/uRx99VN4HlHJpMV6B3vc9Nbj+Todx7/FNTiqFCxXVfU2zZs2S8VXykVau
XGmX3/Pbbp86lHs3L9Va9zVNnjxZ13vzlVdeseu1lyhcQpnv9omDuffSfMe9
d7jNEVpb8x1lSPlnlMpF9T/b4GgxhlTXrl3TFy1alB4cHOz09SllnyT3lnIV
Se6dtfIj91Zli3lb12XCxTMwbS33JtvW5vRO/Xc88wx8W83tbc7vbYltnmrO
663RH/TzTklJscQ3x/5vKuPGPiXyeuP4TnJy8m3m88a4n+6hbYG4ybepZPRJ
ghJRlwCRc5sSExPjkpKSYrAfha0Bx4xtHorjYIg+3gEJCQnX4+PjPaHLcXFx
FwwGwxn6MhqNxv3Y7ggNDd0YHR29Ev3IguYHBQXN9fT0nIW2N0wm0+sY8yrq
X8H+y9gfhjX4EvZfJIvCfj+oD/PxMj4x5uiBvt1iYmK64rgTc/fGxsY+hXO1
xznaRUVFPY621jhuSb9PtD+K46YY0xjtjTCmQURERH3U1SXXRp/akZGRtRg3
mfGT6U+qcm2cqxLGPYIxFqbNnMMq1ybTxt+gNLk2mTb9VVWubc20FUWx+Luq
DFDl2tZMW8mCaz8kmbYszi2ZMnBr/q1Y+YDb4t9cG9Y+4MeOHSu1fft2Eev8
ypUrFbkOuR7JvrHmqnKtnj9/vhZzfIeFhdXlmoa9aBgeHt6E693Pz68VY53z
WRfYjnZY40+ijXm+u/CZGNhCqgds0LM4bx/M3xfnHUj2zedq0Gc49kea/b5f
xznHoX4izjEZ9mCqmX3PgP2bhfkF/0af2Sr/hh2dh74LYUuWYUvbtwZ9P8P+
Rozbgvl34pq/wjWewWvwxHXcwHmimOMbJRnzp2LMrzjOwL27dOkivkvj75Mj
hkO/RVlkkUUWWbIusMdKkyZNxO+fOnXqKPh8cfpvFSkpe8S8kowV/JDO3/1V
Ko13ae7dpfVtpVAh/fc7+vTpIzmblEvr66+/1n0PvmjhEsrYphcdxr1fcFtp
FxfCb0Kn/z2lck/0ey5UqJDu98ELlUc5lHs/W7G/7mui77qe147f//8UKWKf
7/GTZdpL7m0n91a13W228l6VkUr7Uo8qhR/S/x7MCzVt2lSZOXNm+rlz5+zy
yZNyjiT3lnIVSe6dtfIz986ubLFw+nmnWvHvVLNft7W/t4aD/1cb51xl4GZf
7/vm99bGONeyb8Y3T05OtvBvxjdnXm+yb/p2M6c35qBvdyqOf8LYW2TfKCmo
I/tOwjYR2wSU+KSkJJHXG4pOTEwUPt5oC8VxMHQDffxNJpMPth7YukdGRp6P
iIg4ER0d/RW0OywsbAu2a+Pi4pZh7KLAwMAFPj4+H6LuLdWnGxpzH5/uF7Q+
3Tjumds+3eTf0qdbFlmyVfKMe6uxzrkGGetc9ffmOqW/d3BwsBva6tHfGzah
Ef29DQbDo/7+/q39/PzaYU0/wWdiUPcU+nXEuK58boY+37CDPdD2LNZ4Bu6N
tiG0Qdnh3sz1jbYPcG02uTfGLiX3htagzzqMsXBvXM8hcm/YlQzcG3Nnyr1b
t773DPrVq1fzEvvIIossshTIAhuv1K9fX9jdZs2aKfgMcfrvDykpe2Wv72fN
6nNdmns/+ViQXfedp0yZIrm3lEtryZIluu/BVynxqIV5O4J7t688RvdaZDxg
8302qXwke/JutCzzpEO598iq43RfE5+J1PvaX3zxRbt8vgs9VEh5u8Y0Gec8
B9z7nmYrO6FlNaYoL5TrrFQqWt6u7wl5ITc3N2XChAnpR44cSefzi85et1KZ
S3JvKVeR5N5ZKz9x7/s9P5Vd329rpVr5e2cmrR/4/fJ7o00oNZM45+YY53+S
fUOWGOeq7zdzezO+Odk39i15vcm/UWfJ7U3wjXay72S0CfbNkpycbFLZN7bR
9PtGWziOGd88JD4+nuz7OuQFXYmKiroYGRl5CmvpsNFo3BcWFrYddZ+j7wqM
WXrjxo3FPj4+H6PuHZPJNCUuLm4S5hhP32+MV32/R9D3G/svYZ5B1r7fjFGc
le83jm36fpN/38/3m7mDrX2/yb+1vt8BAQEV7PX9vh//lr7fsrhQyZJ/25v7
G/1KbtiwoczOnTsrqP7eaBfcm/7efDYF66sW7Igb1mI95vjmmuba5hpH35a+
vr6Pw1a0xZqlv3d7+nszzzfthcq+YROeQf1zMH29DQZDf7S/yFzf1j7f6DsG
Y8bxOR3mYMC4t9A+Hfvvou09yOL3zbjn0Gycdx7GfortEoxbgbpV2Cf73oD6
rTjvAVzjqcDAQA9cXyBshAHni0WfJPT5CTbvF1xPBu7N39X4myt4/XlMf2SR
RRZZClbB91zBumlzGeMcNtrpv1mkpHKiM2fO2HWPo67bBpfm3q0aHbfrXvOK
FSsk95ZyaY0ZM0b3Pfgm5fs4lHvXK9NJ91qUsRfyp/hskd73wiPFqjiUe0+r
NVv3+5NxVPTmZ3Z3d7fL352qXKyysqzOYsm9c4F7/78+UuZVG6v0KtteKVO4
pF3/L3mhChUqKAMGDEjfsGFDemxsrNPXsFRGSe4t5SqS3DtrFRTund3x2rze
GvYtdD/2bRX7PEOeb03s8wxx0K0YuGDfKSkpKvu25PdGnfD71nBvwb7VvN6p
GvaNvmnJycmpIui5mX3T99uc3lvk9oZEbu+kpCQjtlFoj8Q2nDHP8T0vCPLH
Mbn31aioqEsRERGn8Vn8TXR09IHw8PCdqNuIttXoszwoKGipn5/fJ2ijv+Rb
9KGkLyW5Erb0+34V61CNez5UjXtu9vvuh37P4/g59O2psm8cd9Gyb/p5Yt/i
943jFmTf9AU1s28R9xzHDej3Tfat+n1bxz0nayP3thX3nNzby8vLwr61ft/3
Y99a1ifjnsviYiVP/L0/++wzkd8b/Svz2RM+g0LezbXJ+OYeHh516evN+A1c
z7Blwtc7LCysBfo9HhAQ0J62gEIfxji35Pem7VDze6O+L+r6YTsI630I9pnj
+2XaIJzzNfQZB1s4HmMmoW4K1rXw90bf97D/Pto+JOdG+1yMnYex8+nzDZvz
qa0452TezPGNaz8MO3gW9tAL5wiivzfa/uXvrf0dXa5cOfEZjHPmLQCSRRZZ
ZClA5eeff1batWsn7G3Dhg0V2Gun/16Rksqp9u7da5d/WeMGR12aezeru82u
+8uHDx+WrE3KpdW5c2fda759lUkO5d5li1XTvRYXLlwo12I+1IEDB3S/P+nv
/FG9dQ7j3gvrfSbOofe6rly5ovv1P/vss3Z9JlMdyz4tuXcuc29qF7Sl9ixl
cqUXlVYlGipFHtKfGyavxJzgvXv3Tt+8eXN6XFyc09ezlOTeUq4jyb2zVkHi
3nq4uJZ7W/t/p2p8wFXZin9u7med99vCv1M1Pt9q/m/6fDPmeUpKyp8a7m2J
ea7GOzf7fP+CMYJ9k3tj3O3k5GTh882Y5/ewt/D5Ftw76V5JSExMNOE4FtuY
zLg3+nlrubfRaBTcOzQ0VHBvk8m0Gv2Xh4SELAkICJgnubfk3rK4TMmUdSs2
eLf6Hr4f71bXwsmTJ8XaYF4ArhWumdOnT5emrzd+D1t8vDGmBtZaba5T5vT2
9fVtADvSGGuvKdc11zdjO2C/DWxMe39//6dhbzpC9PHugvbuzJHAXAmwX89h
ffZB/34YPxD7ZN5Dcf6XsX5HQqOwPwZ147GdhDFToLcw/m3YgXdQNwttH8FO
zFVjm0MLcJ2fQosxfjHmXIZ+qzHmM4z9HHWbsL8Vdbuw3QebchSv7QL+Bj54
TSG4PkwZY0JbCuZNw/i7OLZwb1yz5bnwP//8M48pkCyyyCJLwSi0r5063fNH
q1u3rsIclM7+rSIllRtavny5XffYH2vq7dLcu0HNhXbdU8b3Uaf/n0lJ5UTV
q1fX/b7vVWuxw7j3mMZH7FqL+eneo9T/C7/D7fJ5fq3GOw7j3kuhR4pW1n1N
ZPh6X//ly5f/KVq0qF1rghpX9XXJvR3Avf9fHyqf1ZymjKzwrFK/eA27/5/y
QiVLllQGDRqUzucbk5KSnL62C6ok95ZyFUnuXfC+e+bU51udw9rn21qZcW9r
pf5/DPQMsc9TreKgM/c32ffNmzf/VuOdq7m+Ve6txjrXsm/6fGOOOyr7Zs5v
Taxz4faNeuHzjc/NZMY6x1bEOodErHO0GZKTkyPi4+PDoWAoAPKJi4u7FhUV
xRzfZ/Bd9kh0dPSX4eHhu7DdRJ9HjF0ZEhKyzN/ffz7qZmLMNJPJ9CZjB2Ps
RKy/cda5vs3sW+T6jomJEbm+Y2Njn7fO9U22ld1c32Rlaq5vlX2TpeUk17ct
9i1zfcuST0qecm+MEzHOd+zYUcXLy6sa1yHzDzCuOZ9RwRqr7+fn1wjrUfh4
o10wb6zR1sxvgPanAgICOmIdduYzMbQPWMfPoG8vHPeGjXueOb1pTzDmReZT
QLuIa07mzXwLzLsAezEBdZNh78i9p6J+OupnYL73MXY2xn2M+k8whsx7IbaL
oCVm7r0c/dZg+xnGbYA2Y+w2zLkL2/14Pd8GBwdfgD30xesPJfdG/0y5N2Ps
4v9AKV26dJ4yIFlkkUWWglRee+018VuHvADfVZ3+G0VKKrc0a9Ysu7h36xZx
Ls29a1edZtd9ZHwvdPr/mZSUvSL7YPxlve/7IQ32OYx7D6izWvf1kAvqjSEt
5Tpq1KiR7vfE85WGOZR7Ny75qO5rWrlypV0xCcaPH2+3z3fpIqWV+W7zJPd2
IPdWtRtaXn2S8lK5rkrtYlXs+v/KKzEW+tixY9PPnz/v9PVd0CS5t5SrSHLv
rOXq3DstLe2+7fZwcBs+3tbzZRrnPNV2zPN/+XurUuOck3trmbeZd1vinJN5
Qxbejf2fsRWsG+PTzPm9Be+GRIxzOnkzvzeUhF0i7wT8boqDYpOTk40JCQlR
qItA11Ach+A4CPLH7xHh620ymZjb+2xERMT3RqNxv8Fg2BEWFrYxKipqFdrI
hBbcuHFjnq+v7yzUMWaw4NwYO1rr4436wbGxsRYfb3Lu+/l44/hJWz7e5Nxa
H2/UNbTl403Orfp4BwcHV9Nybls+3plxbvp4k91l18dbyYRzK9LHW5YHo9jF
u5Vs5PBW14e6Xrh2uIa4lvbt21fu888/r/Tdd99Vo583YzBgTB1vb+/6WIsN
YFMaY901Rd1jWKMtsW1D3s1c3nzmBWuzU1BQkIhpDjsn4prTfjCmOfb7w4YN
gAZiPb+EaxjGuOYYNwr2YAzGvI7jcfTzRvsUbKfhmpjLewbq+azOB5hrDupF
LHPYScG6MW4ZtAJaBa1kLm/MuQF9NmPcVtRtx/5uMm/McQjXciIkJOQyXksA
+oUztzdeQwLab2HsbZV7q/m9fXx8xHcTNze3vIVAssgiiywFpKxYsUL8zmHs
wNOnTzv994qUVG5q8uTJdt1ff6LNHy7NvatWHKb7NdMG5MZz8VJSzlJAQIDu
e5qFHiqsjG160WHcu1v1d3WvxaZNm8r78flYQ4YM0f251K5sF4dy7yfK6udG
7777rl3cmzmaq1atqvt8quo9XE9ZVXe55N55wL131/7AosXVxiuDynVWahR9
xO7/u7wQ7efcuXPTDQaD09d6QZDk3lKuIsm9s5arc++sZG/sc2vubSvWeaoN
7m0rBzj9vanUzH29/6vl3szxbRXnPEfcG+2JOLTm3tE4Nmi4d7Aa49xkMgnu
jfUjuDc+W78zGo37oqKitltz76CgoI8l95bcW5YHvuQK81Zs+Hira0Pr460y
b64nzFP+iy++qLx3794a6FMbNseNubzRrxHXMdezlnkzrgPXP/afoj2AzemK
NsY1f5Z5vBkbgswbdS8wbgTjmqNtCOYZhvOPwPErsAtjrHN5k3njfO/A1s2A
ZuH6PkDbbIydh7GfYpzg3bCHy6GV0GrYz7XoRz/v9Ri/GdutOP929BPxzVH3
Fa7hCOzHD7A1HrimQJwjkrm9URLR/xbab+M8d9HXwr3JYPD/obRq1SpPOZAs
ssgiS0Eo+G2jFClSRGHMTXz+yFyiUvlOI0aM0H0/rnDhMkr7x//n0ty7Qpku
uu918BlDZ/9/SUnlRMePH9d9T7NU0crK+GZXHMa9Wz8yVPdafOmll+TncT4W
c7frfU/UKdHIody7Z4W+ut+n5F32/g3WrVtnt8831blsJ8m985h7U3uE3lfm
V31N6VP2SaVSkXJ2/x86WnyWj98BpQ+4YyW5t5SrSHLvrJXfuXd2lVk8c2su
rsY+T72Pv7f1sZZ7M9+3Kqu83yLOeUpKyt8q97bl7w39CgnuzXzeqWbmjf1U
Nb45Y5sTe0PJUBKOE1HPvN7xUJya1xvbyISEhHD0CcExmfcNk8nkh60ndBnr
5wJzezOGb3R09J7IyMitYWFhnxsMhuUYt4C5cIOCguZ4e3vPRN0b5ljCr5I7
mZn3MDWfNzSAzBvqk5SU9BwZlsq8Y2JiumrzeRuNxvY4X7uoqKjH0daaMY+Z
7xftgnljjMjnTV9RXFt9Mm/0qWMrn7ca19xWPu/r169buDeZN/5Gpcnpssrn
rSiKzOcti6uVbDNvxYp7641rrvp6cy1xXZF7b9q0qSq2ta5evVqHzBvtDWE3
msAGNcX4x2BHRC5vPutizmnQAXoa61nENUfbs7QbmJsxzfugjTHNBzGmOezQ
EOZQIPPG+h6F41ex9scx1wJs2xs45jM5U3E8HfUzzcz7Q2g2zv8xxi7A2CWM
ZY7+K6BVsJlr0O8z6HPYBcY234hr24rtDjJv9NmDcV+i7mvM+x2u50xwcLAn
XlsQzmGA4si90ecncm/M/ZuWex88eFB8j+7evXuesiBZZJFFlvxeYGMVNQ/q
22+/Le+xS+VL9e/fX/f9uGLFaro89y5Vopnuex3t2rWT9wClXFpbt27Vvd6r
lHjUody7bhn99+NnzpwpP5PzsdTft3pUqkgZh3LvwZVf0f0+7dq1q93vU94r
5meO3nNqNaLycMm9ncS9tVpabawyqFwnpWbRSjn6/3SkWrduraxatSo9MTHR
6es/v0lybylXkeTeWcvVubd1nHMeq8qsT1a6HwO3ZuHW+b1TNdxbu2/L51uN
e67N750V9zb7elu4N5m3yr3R9lNycjLzeqvu3iLGOdrp761yb+b1NqrcGwpD
WzC5d0JCQqDJZLoeHx9/DXLH+jlPP0boaExMzO6oqKgtoaGh66Ojo5eRFZEZ
BQcHz/bx8XlPcm/JvWV5YEumvt7ZZd7a+OZ8/9uKb27NvLmerl69Wnb//v0V
t27dWm3Hjh1umKce1md9xjYPCgpqBlvwKNc3/by55rF+n8RcHdCnI9ZvF9oH
rNmeaH8edX1pQxg3An1fxHmHoO9wnOdl2hzGmcDxGByPRbuIaw679ibaRGxz
Mm+0f4j2j9B3LuzXPD6/g/kWo/8K2KjV6LcW7eswbj20AdqEuo3oswXn3oH+
u3G8FzZzP/aFrzfmP4bx53GN3rCDwThvFM5lQv8ktP2EsXfQV3Bv9TfJ5s2b
xffowYMH5y0QkkUWWWTJ52XEiBHi9w3vO8JWO/13ipSUI9SlSxfd9+NKlnjM
5bl3saL6c3H269dPsjYpl9b8+fN1r/d6Zbs5lHtXLqE/l7OMv5K/5e/vb9e9
94/rb3AY93692pu6ryen8fgvX778T/Hi+u/LqypWqKjybo23Jfd2MvfeW3uW
RYurva4MKtdRqV2sst3/r45UtWrVlDlz5qTHxMQ43Q7kF0nuLeUqktw7a7ky
99abqyu7/e3h3qlWft62fL9txTrX5PwW3JuxzpOTky3cG9Jyb+HrjT4/Y3sH
/W5jXzBvzMP45uTeOLwlfL1xnMT45jhOwL6JMc4TExNjsVVjnIdjPwTtN9Ae
yNzecXFxPpBHfHz8Rayfs2FhYScjIiK+jo6O3mkwGDbjeG1UVBR9I+cxL25w
cPCHvr6+76B9Asa9Rn9L1NPvchhjD2OOQWTe2O9P5o393oxVjHM9g2tlfPOu
RqOxM8Z3JPPGcXvm9WV+X5V541gw78jIyGY4bkLmjWtoSH6mMm/MJ5g3rrWm
NfNWY5yHhoY+EhQUVDEgICBDjPP7MW/6sZLr0a/VOsa5oig5Yt7K/3NvWWRx
RMmz2ObafN6qnzfXlpeXVznM+cjOnTurf/PNN3XPnz/fkLHNuZZhN1owhwFz
GcCOWOKak3fTxxtibPOeWMfPw/YwP8JAPkPDuOboMxR1wr8ba/9VaIzZx3sC
roFxzd/E9U3HvohrDpszC3UfYY6Psf8JczRAn2J/CeZcgWtay1jmKuuG3dwM
bYFt3AbbQD/vnZh7L/ocwJiDaDuE/aOY8xjqf8A1XoKNuY5rCsN1GHEe5vZO
xrhU9LuDMRn8vZcvXy6+R48dOzYvcZAsssgiS74uR48eFb9tSpQooeDzx+m/
U6SkHKU2bdro/s1fpnQHl+fehQs9rPt1jx49WrI2KZfW5MmTdd9/b15xiEO5
d8kiFXSvxTNnzjj9bynlONHX2R7eO93tUx3c+9/s+37c++1as3VfD2MG5fRv
sWDBghzFOy9TpIwyt9YHkns/INz7nmYKrak+URld4RmlSfFavJlr9/+xI1Sm
TBllwoQJ6UFBQU63B64uyb2lXEWSe2ctV+XeKnu29u3Oqn92584st7ca59xa
rEdfCwPXsm8rFm6LeQvubc7vLfy9k5OT/zQz79+x/x9tjHPm9YZuY9/CvLEV
zBt1N5nTm8wbIvOOR7MJ+8zr/SNjnCckJERhPwIKhYIxVyDG+qP+uslk8mKM
c+yfj42NPR0WFnY8PDz8kNFo3BYZGbkhJCRkdVRU1CL0m4s+H+F4lo+Pz9vM
pYtxo7DmRjLmsJl5D2b+XTPz7kvmjf1eZN7o251sC8ed6dtJH8+YmJgnzTGO
2zLmMZlYdHR0C8ZBRrtg3mRmKvNmvGQyb+b1xnyCeeN6a+hl3tZ5va2Zt628
3komzFvLvbPJvCX3liUvitPinO/cubPC2rVrq23btq2uh4dHQ9XXW+XejOug
cm8+/wIb1Ql1gnvDVvTEtjfa+/P5GWvujTU7EhqNfq+hbSy5N+zZRHJv7E+D
3SP7fhdjhK836ucwPwPZN7YLMG4R+i2DTViDunXovx7jN8BmbiT7xvEWjP8C
47eh32702Ye6/Rh7EMdfY87vcN6TGH8BdsYH1x2CumhcXzzahb839K8453we
9yH+zp8+PU+ZkCyyyCJLfi1//fWXyONL20rfOGf/TpGScqTq16+v+zd/+XLP
uzT37tz6ll33gadMmSLtgZRLy577709Wmeww7j2x6RmFPy31XlNISIjT/5ZS
jlW9evV0vy9erzHDYdz7A7dFuq+Hz07m9O/A+8Pdu3fPEfuuWqyKsrjOghxw
76WSezuAe+/TaF2NScqYCs8qLUvUU4oVKmL3/3Vui8+fjBo1Kp0xGJxtE1xV
kntLuYok985arsq9c0O2WHh2fL31cG+tr/f9uLca55zcOykpidxb+Hrj+D/Y
/w26q2XeOE5jPm/GNr91r2hjmzOfdyL6xKMuDnP/iONYMm+I8c0jIMG8sQ1E
fz/09Y2Pj/fGmvGALppMpjNGo/FkaGjot/iNcgD7mwwGw1rsL4uKivoEfT/A
2JmBgYHvenl5vRkZGUnu9HJCQsJQNbY54xEzLjFz8uL4OTIsNbY5jrtYxzZn
bl/6fqK9lXVsc/Ju+nnjGhqgTz36eZN3ZxbbHK+tsq3Y5uTdWuat5d33i22u
8j4Z21yWfFAcwsBVP3AtA+e6Wrp0aXnMWZVxzs+dO9eA65jc28PDowXXOZ9x
wXE7bJ8KDw/vyPgPjANh5t7PkHuHhYX1I/eGzRlIMcY51j3jm5N7j2KsCeZZ
QBufv5nAGOewBVNh20SMc7TNwDzv0+cbx4J9o998zL8Q9UtxTStxvBZtIsY5
7Obn2G6E3dzMLfp9gbHb0S5ye2O7H3N+hbojOPcxXPs5vH4vXJclvzdKIua8
hS25913U/Y2t+JyZPn26+B49d+7cvAVDssgiiyz5tGzZskX8rmnSpImMby6V
71Wpkv58k49UHO7S3PvpFka77v++//77kntLubT69Omj+/57l+rvO4x7j2p4
UPc6LFq0qPxsLgAic9H73nipyliHce/5ddfY9bmB3/o5/ltERET8U6WK/twc
WtV9uI6you4Syb0fUO69r/Z7QvuhnbXeVmZUflF5pnQrpUKR0jn6f88tFStW
TBk6dGj69evXnW4bXE2uyr0bNGigLFu2LF0qd/XVV189sL8lJPfOWgWVe2fl
I34/vp1J3PP/aaXh3DZ9vVOtuLfKvFVfbzP3FvHNVeatxjYn72Yeb2xvMbw5
Ze3jzbjm6PMj5oxFuxHbaPp5a5g383kHYHsdbd7o68n45lgzlxjfHDoRExND
5n0Y2mUwGNZBy7G/IDIykn6TM+Lj498ODAx8y9PTc3x4ePgIjX83eXff2NjY
53Eu+nf3VP27GcPYln83ebfq343xNv27ybtV/27ybpxL+HeHhoZWz8y/W8u7
ybrxt/mXfzd5t17/bsUG75b+3bI8wCXPYp6rvJvrC3VlNm7cWHHDhg3Vt27d
Wv/cuXNNYBOaYlxzDw+PNlz7tAFYjx2wdjvDBlh4N/Z70YagvT/W+Yt8ngZ2
agjahqFuJNa8iG+O9cv45hOx/wbmngK9hfbpaH8Ptm0mxrzP2BTo8zE0H7Zx
IbQI17cEfZdj3tU413r02QhbyRjnX8BObEWf7djuwHYb2nah3z70/xLHX6HP
Ycz1LeqOww6dxutwxzX6YRuGazaiPh71SRgn/L2xvavN7z1u3DjxPXrFihV5
iYVkkUUWWfJl+d///qc0btxY/K7BZ84D+7tUSiq3ZE8s2SqVJ7o0927/aIBd
930XLVokbYKUS6tTp06677/3rLXQYdx7eP2dutdhbsSOlnrwNWTIEN3v1b6V
hjuMey+pv1EpXKiw7vdreHh4rvw99u7dm16okP7YCFq1LNVcWV13qYxz/oBz
73uaIbS39rvK3CrDlX5ln1CqFdWfEyK3xe+MY8aMkfHPdchVubeUY9S3b98H
9reE5N5Zq6Byb1tSY6Zrmbh1Pm/rY40ycG5yb3M+b62/ty3u/TdFf281t7eW
eTO+eVJS0q+o+9ns463GMxe+3RiXSDGHN/qRd8dBP6JPLETeHYW2SGzJu8Og
EPp4o68f5I19T7RfQbu7yWS6GBMTc9ZoNJ7A/pHo6OivgoOD94aEhHyB/WWR
kZHzAwICZoeFhb2DtTUF4ydev359vIeHx6iIiIiBemOZa1l3ZrHMtaw7u7HM
s8O6ZSxzWWTJUDLl4up7PDtcXBsXQY2DPmvWrLJTp06tsnTp0jrHjx+3+Hu7
u7u3VOOcw660x7ruwDjnWKOdGRMC678Hn5lhfm/GOUc/S35v5lFgnHPsv4L9
V1E/BvbudRyPhz0cj7U9mf7esIWWWOeqvzeOZ0PC5xt27xPUL8Y5VuBcq1G/
FmK888/Q/jljnnMf82/Eebagbju0E9qNugOY7xD5N67tNK7xGmxRIOrCce5Y
1MdjzhT0I/v+FTbJEud8+PDh4nv05s2b8xYOySKLLLLkw3Lw4D3fM8bXhM12
+u8JKSlHis/QPWTH/Y0a1Wa6NPdu28TdrntV69evf2DvVUlJZUePPfaY/nu0
bmsdxr0H19uk+3r4bJqz/45SjhdzC+t9b/So2N9h3JsqVVi/762np2eu/U2m
TZuWo3jnVJvSrZQ1dZdJ7u0i3Js6YNG7yopqY5SXy3VWGhWv4dSc4IzhP3Xq
1PSYmBin24oHXZJ7S2klubfk3vlZ1ow7Kz/w1Ez8vbOKc37z5s3/mv29/9b6
e6NO+HtDgn0zpzf9vcm/6e/N2OYU/b2xTYQSoHj0Ff7e6BODYyP26e9tgCLM
7PtGUlKSP+SLdi+0XzOZTFcZ4zw2NvZMXFzccfp7h4aGHgoJCdkdHR293mAw
rAgODl6E/TnoNxNzvYPjab6+vpOioqIYa3hYfHz8S2gbxJjEaO+H/T44x3M4
37NmFk6f766MZayNcY6x7XD8ONpa24hx3oSsDH0aRERE1GeMc7JwNcY5Wbg2
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
e6B9qPsSfQ4zHzeOj8J2kWUfI8+GHTmNvucx70XYQj73cxl29irkAbt5jVv0
80I/X7TRlvqjLhD9g1EXhnNG4nwxmCMB13MT50hF/R3Uk3ffRb//YP9P1P1P
9feuVauW+PzFa8x7SCSLLLLIko+Kp6ensKcyd6hUQdHly5ftur9Rv+5Ol+be
j9bbZde9KnyXdfr/mZSUveL9pkKF9OeAfa3JDw7j3l2qT9d9PUOGDHlg7xlL
5Z42bdqkmxU1K9Xaody7folGut+vBw4ccNj7dcmSJTnO9U3VKl5D+bT2HMm9
8yH3PljrbeUraGeNN5Qx5bspNfLQB7x27drKoUOHCry9ltxbSivJvSX3dkXZ
4tn36SeYdlpa2v+0++qxyrlT/z93939TUlL+NnPuv8i2GbPc7MP9B+rox/07
joU/t+rTjTFkJL9CtxMSEm4lEXQnJ+MwnjFzjdhGJCYmhmAu5un2R9t17Htj
rCfmpK+2B3QFx5fQdgH96Zd4GscnybbJebAmGJv3MPN3x8bG7kYfkb8WbZui
oqI+DwsLWx0ZGbnIaDR+zHzenp6e7167dm1SUFDQUH9//wHY740t/TSfxvin
Tp061X737t2tPDw8GjKWuDWv1ubkxjn+xavJ0LQ5uelvTWat8mo1lrg1r1YU
RfJqWQpKybbftmIVg9wev22uPWu/ba5RrlfybuYBYD4APn/C51C4trnGudaZ
PwD9a9IG8PkV9K8HG9F07969bfH7sRtsh8jbjfEDsD8EtkDEL0f/1zB+HHk3
2qcwRwKu6R3mTED9RzjHPPRbCPvGvNyLMG45+q5BP/LujebcC8KHGzZxJ2OS
QwcZkxx1h6FvYH/Iuum/fZLxLGgbsT2LOfkM0GXaT9jKa6jzgk32hnyh69yS
d6M9EG1BGBcCheJ8tMd83siIeU04XzKfT0LdbdT9At1Fv9+w/R36E23/w7H4
XClXrpz4/MVxnvIhWWSRRZb8VmBbhT2lXYWNdvrvCykpR+vcuXN23d9oUG+f
S3PvZnW32nWv6vz5807/P5OSslf4DWLXeh/T5KzDuHenam/pvh4yBGf/LaUc
r61bt+pmRU1KtXQo925Uspnu9+vu3bsd+n598803c4V9ly9STnmvxtRMuPdS
yb1dnHurOlhrmjKn8iClQ8nGSuGH9D8HZY8GDBiQzrz0zrYpzpLk3lJaSe4t
uberSsu678e9VZ/uVE3M8lQbccxVH2/6duM3CnN1k3mTdzNHt8jTTd6daube
OBbcG8e/kXtjzF3GxDVzb8bJZV7ueJPJJLh3XFyc4N70NST3hizcm7yGObnp
q4j9i2Q55N44/gHHJ7BlHtrvoSNYF4fMXGgXxmxF380410Z8rq0PCQlZZTAY
Po2JiZmjcu+rV6++wfy6AQEBA7HfB/Xdo6OjOzHX9unTp5/av39/Gz8/v0ba
PNrk37mVR1v115Z5tGXJx8WuuOSKVX5txQbfVteMlm9zXWnjknPdafk212Vm
fJvrmeua6xtrU/Btrnuuf9iW+ujHZ2AaQ03Q97Hz58+3/fbbb7t8//33fXDe
F1H/EuYcAXsyhqwb4ybRtxv1082xy2fBHn0E+/Qxc3KjfTHqV2B/DWzfOtiy
9WjbjLpt6LcT/fdCB2DLRN5t2ETBuNFHMG7aQIw7gz6MTX4RNtcdop28Sn9u
tHujvx/6BOD4Btk22oKxDcWWOSEE48ZYA/YZWyMa2xj0/xF18YzBgfYUKBXH
d6BfIdpzxu34g3E8+BwUtv/jvSt+pqjxzX7//fe8xEOyyCKLLPmy1K9/L4bl
0aNHH9jfpFJSuSX+dn/Ijvsbjep/5dLcu2mdjXbdq6J/vLP/z6Sk7BV+v9i1
3sc2veQw7t2t+gzd1/Piiy/Kz+cCIPv8vds4lHs3Lvmo7vfrjh07HPp+5f3l
QYMG5Qr7LlaomDKm8kjJvfMx9/6q1jSLPqv2qtKrdAv8v+c8Xn5WqlGjhsLY
/M62K86Q5N5SWknuLbm3q+p+3NtWDPNUTRxzNVd3qtnHO1UTzxzbv5OSkv5O
SUn5E/V/kHeTcUP07Wau7t9Qfxd975rzdlO/oP/PZN5xcXE/mUymRMzxY3Jy
cgz2o1AXju0Nsm7IOzExkZxb+HZj7AVsLyQkJJxH3Rn6Mprj9x5D3yM4pr8j
fbwPYk3sR/1ObLdAG3A+cqRV2K4wGAxLQ0JCFkRGRn5IX8vQ0NCp9PW+fPny
qLCwsH5eXl69Lly40O369etPYezjOEfrEydOtNy4cWPT06dPu2l9u635Nv1E
tXxb9SVV+bbWt1vl2/RHzYpvW8VzlnxbFlcpDvHhVjl3Zj7cjKeg9eFWY5bf
z4ebcRtUH24+z0LGzXwEqKsPW9KAeQrIuJm3AHbhUdQ1x3FLHLfGfO18fHw6
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
d9gdwbpx/DxZN8a/gDkH4roHY57hISEhr/r4+Ezx9vaehWv5GPXzcR1LcY2r
mWcBfTcw/gS2OzB2D+r2Y76DzNXN53egY6j/AXVnUXcBdpR2zx3n9cC+J/Z9
IQvrhv2jX3cYc3LD9kUyJzfEZ4hErHLUxdGvG2Ju7sTkewW7KcKXm6wbNjkV
/VTOTft8x2yvfzHH5/iVzzGZn2fic01k3n/Sz9uaeZs/Jyzc+9y5c+J7SYsW
LfIWCskiiyyy5OPy999/K4899pj4bfPxxx8/sL9NpaRyKuZafMiO+xtNG59z
ae7drO52u+5VnT171un/Z1JS9or3pwoVKqT7ff9akx8cxr0H1Fmj+3patmwp
uXcB0IwZM3R/Pj1d/lmHcu+axd10v1+///77PP27MYb000/nHuNi3POe5boq
a+p8Krl3AeHeh2u9JbSr+gTlpbLtlYcLFc2195O1Bg8enJ7fnzF+ELj3tkee
UZ4rUQdyy4Zq/0u9s1St++p5m6ppU32y0sM17qu+NlU9G6om1E+H2hQtp/s9
L7m35N6uKmvurebz1oq8glKZNxlGqg0/b5V7k3mQeycmJv6ZlJRE7i38vMm8
GQsXxz+j/8/YkqPcIVvBcZo5bu5P+Py4GRcXlwiRe0ehjr7eoXgv38CxD+Zk
DF93bC/imHHNT2N+5rRlzN/jCQkJ3+H4G/pIYhzZ0V4c70L7TvpRki9FRUVt
MBqNa2JiYpaj/yIyb7R9EhERMTckJGQWttNiY2MnMgevt7f3q1euXBlK7k1/
b+bq1XJvfCdsvnv37ibu7u5ujJdsi32Tx6nsm/mEteyb+YbJ8lS/b2v2rc1b
nBX7VqTftyyOKy7p0401VSs3fLrRp7Pq0w2b8YzWpxtt/cm5sT8YbUOwPxz9
RqJ+NMa8jmuZ7OfnNxOvaT5zKTCeOXN2GwyGzei3FWN24ngv6hnLnDEqjkD0
7z6B7Snybvp24+9xmb7dsGUeGOON+uuoC0DdDeyHwI6FQRH4W0WinrHLY7Af
Cxsr8nJDzMktYpfTrxvzpNzkPykpwp+bzx6pjJv+3LTV5NzmZ5R+NeeloH5j
DA+Vd2P7R2a82yz1c0R8zhw9elR8h+ZvW1lkkUUWWXKv4Dup+G1TpUoVhf4z
zv6dISXlCO3Zs8cu7t2s8SWX5t6P1dtj1/3ZU6dOOf3/TEoqJypeXP89vlGN
jzuMew+ut0n39TRq1Ehy7wKgCRMm6P586lGxv0O5d7XiNVzic4McMbfyfauq
XLSS8na1iZJ7FyDufbjmPW2pNkbpVaq5Uvgh/c9NZUfNmzdXAgMDnW5zHKUH
gXu7WzTIossWvZhBV6oOtNIA5eq/9ILioaoK1d+iaxb1s8hTqG8GeVXpY0PP
K94Z1FvIR6vKzwn5WtQrg64LPZtBfpV7WukZIf8M6iEUYFH3e6rUXQm0qFsG
LSjTVPf7XXJvyb1dVVo/b5V509dbVaoV99ayb5V/Q3+nmuOb34d7C19vs4/g
L+j/szlOLvnKbbJvlXubc3snQSLOOeYQcc5xzDjnfqjzIvvB/Jfp+4gx5zAH
2Tdj/9Ln+7g5zvkRc5zzA+i/l/7e5Etmf+/NMTExn6n+3phHxDmPjIycFxwc
zBjEjHM+hXHOfXx8Xvfy8noZbX19fX174bhbWFhYB8zzBOZpd/HixTZff/11
c7Q1IFujPynzBNO/1JqDM6+wdfzz7HJw6/jniqLI+Oey5FXJca5uRcO7+d7N
Klc31wDXgjZXN9eKda5uLe9Wc3Wjf001VzfXJHN1o64+xqi5uptY5+rmcyw4
fpxr2jpXN9q6Mlc31m+P/2PvPMCjqL42LqG30EvoRYpgoQtIE5CiotIFUUC6
VJHepEgTpYhUKYJ0pUnR0AkJJEBCetlsNu6mkoBYsXyS+d53nNn/sCaQHdhs
Nrn3eV7mzm0zbGbu7szvnnMwn3TGfNEFdd2hVzAPvIZtT9T3Rtt+6DcA+bfQ
9h3UDeX6GfwfJmB+mOXv778Yc8onKF+FPlx7s4VzEiQzb2xl+25sv8UxyLyt
Nt6c76DLmMd8MV/6oowxH27Qvhv5MNp2MyYEPrNo1BuxNdG2W7XrxpxI5i3H
6Vb9mCNZY3UrcbrvqLEnFL8cnK+5Vsnqy1yZz1XefRfbP8i9oQztvNXvDtp7
87vmq6++kn9Dd+3aNUt5kEgiiSRSTk9paWmyTRnn2I8//jjbPp8KCT2K1N8R
9qp+nXOuzb1r7tL1bvbYsWNO/5sJCT2KihQpYvd1P/DJww7j3v1qbrP7fCpV
qiS4dy5Q37597f5+6l6mn0O5d8l8pe2+Xs+dO+eUz49xDXr37v1Y2bfbE25S
R/c20spqiwT3zkXc+5tKY2WtLPem1Khgtcd2PWlVoUIFydPT0+nzjiMkuLfg
3loJ7i24t6tKy71VH7S3bPyca7k3yq223rc0fs5V/+ZqbG/6u6Wfc5V7qz7O
NfbetPO+g33V3pvc5Rbap8bHx99U/JzfF9/bYrGEYJ++fP1o852QkHAJ+xdQ
fxZ9T0Ge5N6oO45xjyrxvb9R4nuTe+/EGF+q3Ns2vjf6WeN7R0dHv28ymcai
zaiAgIB3r1+/PtBgMLyKui6BgYEvRkZGvoDxn8eYzc+fP9/s9OnTz/j5+dWl
LWlEREQNsjbamJK9kcHR9tTFfKCLJFKmbbulTLBurd8CW9vuh7Fu3h8Z2Xbb
sm7MCRmybtTXJ+tG2X2sG/v3sW7k22hYN227Oyu23d0V2+77WDf2B2A7SGXd
KB+O/Cjk38OYE3Ee0zGPLMTc8SnO+3OUb0T/rcjvQjuZdzMuA3k3+p5UePcZ
ZV3PBeS9Uc55j3Ee/DHPBmAbhP1QyBq3GzLh82PMbjPtuxmzm7bd2E/616w7
mf+oMbvvs+9WfZiTc9OmG/OybNet0X9YN228ybvR1hrP29bOW7Ne6h/1u2bD
hg3yb+g+ffpkKQ8SSSSRRMoNaceOHfLzzXPPPSfesQvlSO3bt0+fn/MnPV2a
ez9da7+u97KHDh3Ktu+qhIQyo1KlStl93fettddh3Put2nvsPh/arKu+FoVy
rtq1a2f391OvckMdyr0LuhWy+3oNCAhw2mfId9LDhw9/rOybKpuvtDSy3CDB
vXMZ91Y1vfTLUvm89vt3fpgY83vz5s057neW4N6Ce2sluLfg3q4oLfNW7b1V
PqFKy71vKTG9tVzjlsa/uaK/VO6dlJT0B3RXYSa/Ik97QXIVK/dWbAxl7k0/
uwkJCTL3jouLS1C4d0xiYqLBbDZHYj8U+wHYv6rE+KbN90XkGe/2DNk32nxP
O0kcg/zoSExMDP0F70Pdbvo7t1gsO3BPbDMajZtNJhP506dotxx1SzD2R1FR
UeTes9FvMurHR0ZGjsH+MH9//0Hh4eFvBAcHvwx1joiIaI8xXkCflpcuXXr+
9OnTjfHbsAF9JzNWMGMG06cyYwiTf9PulD6XaQNOH8zp8W+tDbjKv1UGrvJv
1QZcjXtsawOujZWs5d9SOjbgIga4SOkkh7BurtGwh3XzHrCHdat+zMm6VT/m
KuumH/OMWDfuyeZcv6L6Mcd+O8wn97Fu1FtZN/I9ke+jsm7sD0J+MPLvqqwb
/d5Dfjzyk6APcPwZOB/6kfgYWof8FsXvxG6cC+277+PdyJ/hnMb43ZzjkGf8
7quoC4CC8Flp43dHoZ6xIGTbbkj2ZY65VbbtZsxurV236ssc9fSxYfVlrszL
qh/z/3BujWS7blWc7xXZ+jb/Jz3mrfo5/+STT+Tf0EOHDs1SFiSSSCKJlBvS
b7/9JhUrVkx+xrly5YrTnzeEhB63Dh48qOt9eN3ax12aez9T+5Cud7L4rZ5t
31UJCWVG1arZb6v3eo3NDuPew+t9p+texHOg0z9LIceqTp06dl8XgytOchj3
XlJjnRzr2t5zMplMTv8sZ8yYkZYnz+P3UV23UC1plscEwb1zGfem9niMlPoV
by7lz5P3sV5TvE4XLFiQo35rCe4tuLdWgnsL7u2KsmXeqm7ZcG+VfWs4Rrr2
3qrNt+rnnPbe2NLem3Fgf0tKSmJM2F8U/7nUT6j/SYnxLfNv9KHNd0p8fHwy
FJ+QkMC4tDHIRpN9Y0veQ9++1yGyIDIhb4x/EWOcRz39AZ/GWLLPc+gY6g+h
7TfQAYvFsg/j7IqNjf0Sv+W+wP46tFmDNivRb4XBYFgeGhq6CHWzcO9Mod13
WFjYuMDAwJGoGxAUFNQHeo08DON0RpuOjPnt5eX1QkREhBzzm2yNvpPJ2uhL
meyNDI52p7Q/JZvT+kMnu0svLrjWH7o9ccFtWbiICy5SJtIj+zGntOsu0vNj
Tqm8Wxu7m9e0r6+vuzZ2t+rHXGXeaFs+JCRE5t1cP6L6MSfz5j3FdSZcb6Lw
7jq897BP3t0A96s1djf6NmGMAozdQvVjjv22qh9zqBP2u2C/G/2Yo74H9t9A
nrbdfZF/E/m3kKdt9xC0G4Y+I5Efg/w4aCLyk7GdCs1A27k4j4+Cg4NXQZtx
bttR/hX670cd56aj6H8CZZ608UbeGscbugzRztsfdYHYhqB9GON4Ix/JGN4q
80Z9nBK/OxFzYaJi352CfIpq2636Mr/177ojrX33L/TJQT/matxulXVr/Jhb
mTfn+Acw7//Yed/S2HpTCxculH9Djx07NotpkEgiiSRS7kgDBw6Un3E43zr7
eUNI6HHr6NGjut5v1Kl12KW593NPntD1Pnb79u1iHhByaanxO+xRt6qfOox7
UwXcitp9Tt7e3k7/LIUcq+LFi9t9XYyvMt9h3HtutRV2n0/evHkl5b2w07Vt
27Y0PXEOHib6Pn+hWHNpSZUZgnvnIu79TaX3pIPQ+gqDpGcLVnns19WkSZNy
zO8twb0F99ZKcG/BvV1R6dl7p+fnXOXetxR+oTDw+7h3er7Ok5KSZJtvcm+y
FDIV+jpnrFj0JW/5mb51Ve5Nf7tof1v1dZ6AhDx99f4QFxdnQpkB2wiyH4wT
SH+/it9fX/T1wTj0BeyF/fPIn7VYLKfNZjP9BR9D+yPk36j/BuX7Y2Njd5N9
Y38zxl2PPmvJv6OiolZGRkYui4mJmY92s7CdHhERMTk4OHicwWAYirq3wsLC
+qHdG+j3Cm1BQ0NDu/r7+3ek73P6Saa/ZMYIjo6ObpwBB6/zIA6e2bjgZIRa
Dk6GmBkOnp5NuODguT5lyL2ldNi3jf98XbbeWu5tr6034wZwvQjGsdp6M76A
auvNe0y19cZ+A7SRubdq6426Zsi3QH1L1dYb+fYYrwNtvbH/kuLX/GXF1vt1
5HvR1hv5/sgPtLH1HoHtaGgs8hOwfR+agrlnGrazcfyFmCc+DQkJ2UjujWMw
5sI+HJO23vdxb8W3+UXMYZfo1wLyU2J5W7k35rMwcm+URXNdELZmcm/G8IYS
MR+iWdJNyOrTHO2s3JvMW8u91djdXJ/EuVpZq5SRT3Ornbcay1uRlXvbrJNS
vzes3zVcu43rTZo2bVoWkyCRRBJJpNyRNm/eLD/jvPLKK9n2GVVISK/w21LX
+40na37t0ty7ST0vXe9h165dK+YBIZdW27Zt7X7/3rHSfIdy75IF7LdB37t3
r7gXc7DwzK/ru2l2jTUO495Tqiyw+3wYV8DZn6VWXl5e96pWrarr++9hKpAn
v9SheGtpeZVZgnvnIu6t6oNSXaRibgUf6zU1ePDgtOyybuRRJLi34N5aCe4t
uLcrypZ7a6XWq77PbfzVWv2e23Bv2e+5yr6TkpL+UljJHwo/uZucnCzbfqOd
HD+W9t9kL9gn/6b9953ExMQfFbtvGiwm0oaR/Ju234z3jXwUY9pi/FAoGPU3
MIY/xrtGf8DYv4J9b9pM0nYSbegD3RP7jP19AuN8Gxsby9jfB+Li4najzQ60
2YbyL/BbdVN0dPRa1K2wWCxLoIXYnxcVFTUjJiZmIvJjkB9uMpneIfsiAwsL
C+sbHBz8OsbsRt/I5Ga0HWV8YMYJpk2pysPpW5ncTeXh9L38qHbhtnHCM2sX
rsYJd4RduCTihLtieqw23yhP1+Y7M/G8bW2+ue4jIx/nvD8yiufN+4r3F9ed
aH2cc12KNp43bb418bxf5H2MuaIL43nT5ps+zjU23/3Qjz7OVZtvOZ438nI8
b/SVbb4xzmTkp6LPLBx/gcq9kd+G+p1ov49xGBTufZwxGuirgj4rGNMbkrk3
Ph/f9Lg39mXujX3GgvgBor13gmLv/R/urY3lTf/miv7DvdOL420P99Yyb+16
Ke33C9fB4lqT5s2bl6UcSCSRRBIptyR8v8rPOPQN6+znDSGhx61Tp07per9R
u8Yel+bezZ+6oesd7JIlS7Ltuyohoczo1Vdftfv9+wsVP3Ao965cpLG4F4Xu
k6enp93fTfny5JcWyZzbMdx7jMdUu6/T7PjbMSIi4l6LFi10fQdmRoXdCkmv
l+wirao2X3DvXMS9D1YaI22q8LbUpKD965gepF69eqUlJyc7/b55FAnuLbi3
VoJ7C+7tyrKJ730f99boPu6tlZaBa/2e37x5U7b7VlgJuQkl82/FnvB3NfY3
GbjCX36m7/OEhATy79v000t/vUn/JtX+O5Y2jlA02hmwH0EOxJi32AZhK3Nw
2oJDvvQXjPEvYnuBtpS0qbRYLJ64N2hjSTtw+kDfj/K9KNtFe0yz2bwRdWux
XW0ymT5B2RL6K8Z2htFonBIbGzuBcXwZz5ccHL/DBqNuAO1BGQMY9a/TTpT2
4LQb1fDwDowhTPtS2pnS3pQxhrU8HG1kHk47Vdqrkt+h7EnasdKelXat5Hy0
c6W9K/kf7V8fxsO1ccNVG1s1bnh6PJx2upnl4SJuuEsnXbbekhI3/kG23irv
Vm29M/JxrrX1Ju/OyNYbZRV5reOeqaT6OOe9oPo4V229MV493jv0ca7aeqs+
zm1tvZFvq7H17oR79SWuYVFsvXtobL3p47w/2g1E/m36OEf5MNp6o5/V1hv5
9zHGFOSnIz8LbT/E/2FJSEjIGmgLzoe23ntQ/jWOfRSfxXGuyUHb08r8dBFS
fZz7Ym66hv0bqAuGaOfN+Y5+Lwzow3kwlvOi6uNcdm6ekiJvoFTkVR/ndzi3
KjG9f1bWHFFyTG9lTZI2pvcfyrxtjeednn9zrZ33g2J7azVq1Cj5N/SyZcuy
lAOJJJJIIuWW9NNPP8nPOAUKFJDU3/VCQjlFFy5c0PV+o1b1HS7NvVs9bdT1
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
L2a3sN3OVemx+DqX0uHd6rWm5d22vs7pS9/W13lGvJu+ztOz8eZ9o9p4836y
tfFWfZ0zRoCtr3OuR6Gvc9XGm77ObW28GZOAsQl476u+zhm7QGvjzdgGqq9z
rpUxGAxzQ0NDl+H/shbHZayEbej3FY4tM29lbjpG5g3Jvs5RRl/nFzF3eSPv
izKZeWOfc18w8rKtN/LRqq03FK/EfWD8h+R/zb1TUlTercSKuKOsM7LaeaNe
XYv0G31vKNzbyrzVOT09P+c2vPs/fs613y9qvk2bNvJv6O+++y5rQZBIIokk
Ui5JY8aM+ff9gwvaFwgJPUz4HaXr/YZHhRkuz73di7aw+/9dv359sf5FyKWF
50Bd9/zgut87jHuPrn9WKlPQfl+4M2bMEN/LOVBkxfZeC3nz5JPm19zoMO69
tOZ6qUCegnZfoydOnHD652mvaPtNO/VChQrZ/f/Vq2JuRaQu7m2ljypNFtw7
h3JvamW5PlLZvMUe+XrJmzcv/R26zPwvuLfg3loJ7i24t6spPeZtw7itdt0a
Wz6Zc+A3xd8aez+r/3LVtpu+caHfk5KSyLp/1vJtlKXKxocpKbRDTKJNInbj
kadfXoti0x0bHx8fQztG7IehPAT5IJQFQFdRJsfkJt/G/jnUncYY39FXOdkR
fQVj/6DZbP46NjZ2H8q+wv52tN8aFxf3hcVi2WgymT6PiYlZhf3lqF+MYy5E
fn5kZORc2maibhLGoa3m6KioqBEGg2EINCAsLKwP6sm+XqZ/cvo+DgoK6hQQ
ENAOz2O0E73Pdptcm7al5Nq0Nc3IJzltVB/kk9zWdjuzPslV221H+CSX/se2
RcpdKUM2nlk7cG0ccJSnGwc8M3bg2jjgXPvBNSC2duBcK8J7i2tH0rMDRz85
DjjvUa5BUe3AkW/M+AJaO3CuYeFaFsUO/EXsd+Y8wDUvjFtAO3CIa2BUO/A3
MdbbuG9H+vn5Tfb19Z2He3kx6pZjzFWYU9ZjrM2Ya7aibAfyuzDuPmy/Qdlh
1e85xjmFMWXbb8gb8xnjNFhZOLah2I/EVo73jXr6xfgB+xbV5znKONdyzr3J
kN8p/wYBJw/nvMw5Wva5QR6Ofa39N/2dqxxc9neOfavdt/JdcJ+/c0X3fZdo
ube6HvvixYtZyoFEEkkkkXJD+vXXX6UyZcrI86ynp6fTnzmEhByh/Pnz2/3M
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
Mdd50vcF8hdRdhnba+h/A+1DGPcb82k440TQ7znyRsaOQJ8f6GuDMSXIvbFN
YJwJujtn7AnGAqd9ONk353LO6cpapl+UtU0Zcm/1+yKz3JtrXHHNSPgMshYI
iSSSSCLl4ET/5s8++6w8v/bq1SvbPpsKCT0Oqde6PSpWtJXLc+8nq6zU9b7q
woULTv+bCQk9iiZOnGj3O/jqxdo4lHuPrOsp5XOzP37yzJkzxXd0DtKqVat0
+dX+oNpyh3LvZsXtZ0YDBw7Mcdem0Wi8N2HChLTChQs7jRmVz1dG6u7eVppV
cYS0WWbdgnu7Ivem9nsMeyzse/Dgwdn6XhPcW0grwb0F93Y1qdxbZd609U5O
Tv47KSmJ7EL1b0uu8UdiYuJdlJN5MN7rz/RhrsSClTk36slJUrCV8Ul8fHwi
FB8bG/uDxWKh/3LaIAajKJC23OTb6HsF28soY6zaizjeOYx1ln5+ybrNZvMJ
9D+C/Nfov5d23dCXJpNJ5two/wxtVuM3zCf0W47xF6HvApTPw5gy50bdtOjo
6MkoG4cxxqh23fRNHBERMSQsLGwg6um7+A36Mkb9qzdu3Hj52rVrncPDw9th
vNaob0X7bl9f36ZBQUFPX758uT45NzkZeRm5GcoqHzx40OP69etlH8a20/NT
Lti2SDk0PdY44On5T7dl4bb+09V7ML044FyTklEccN7X9N2g+k9n3AL6T7eN
A46xtP7T040DjvJOmFdewf+lv7e397Dg4OCxaDcBY04NDQ2dizYf4nwWof0S
rtlh3G/0/wxl66CNmIe+QNkOjLOX8yF0COd+SFkL9D32zyDvhf5XkL+GOq4j
4noi2f4bc2sY8pGYXw0oj8Z8G4OtCVvGmTCrLFyNAS4HpUhKkmN/Q7c519P2
mzG/yb8Zz4L+Puj3g+uh1FjfWn/o9BNiy74V/i2zb/pPw7VBn5tZjYVEEkkk
kXJk+v3336VOnTrJc2utWrUkfE85/VlDSMiRatu2rd3v4woXauDy3LtBza90
va/avXt3tn1fJSSUGa1fv97ue754/koO5d6j652VKhV5zu77sWXLljnGplZI
ny+CkvnKyMzbkdy7gg42t2DBghz7XUG/J4zDnj9/fqfyo5J53aUOxZpLk8oP
kjZUnSO4dzbl3rZ+zlUdgfZ6DJXqFSj/yNfCunXrsu39Jri3kFaCewvu7Woi
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
Zj90CPljqDuFNvSfcQn/d3Lvy9iSe/unpqYG0Oc55tEQSI79jbk7EmVREO2+
Y7Av+z2HaPdt5d7KXH8f92a8C9p887siI+5NP+dcT2XLvfm9o/4moZ2DSCKJ
JJJI+tIvv/wiTZs2TcqbN6/8LNO6dWsJv12d/nwhJJRVIsd9wu53HHmkZo3+
cGnu3a7RT5KbWyG733d069Yt276vEhLKrOrWrWv3td+k7FCHcu+RdU9JBd2K
2X1enTt3FvdkDlDXrl3t/i7KmyevNLvG5w7l3l1LvW73NVmtWrVc6X8/MDBQ
9n+u+qTLLqqSv4L0qnsbaU6FYdIWwb2zJfemNpV/Uyrh9mix47NjrG/BvYW0
EtxbcG9Xky33hmjvzVjeWu5NvvELyn6Kj4+nb3PZrznNu5VYsPSJa8H+D9g3
0XaQPnTRlnbeYdHR0YG4/nzR5gLKzqGMsbu/w/4x9D2CPodRdhB9DiQkJOzF
dhfa7TSbzV+i3xb6NWecW7T9FPsrsL8U24VKDG/6BmYM7yloM5HMG2VjsD8K
bYbj3IcgPzgyMvItk8nUD2PLzBt93mAc76ioqJdDQkK6YKwOKGtP5s2YvH5+
fq0YyzsiIuIZnH8DlNcn42JM7/Dw8Ornz5+vQu5Nv8iCe4skUobpsbDux23f
bcu6ad9N1k37bi3r5r2enn13Rqyb9t0q60bdC8i35byCua4D8i/hOK96e3v3
9/HxGYrjcY56D/WTcJzpyM9GO8b5XoBxyLyXK34tVmNe+wxl63DMzSj/krwb
+X1cI4T8N8gfRf1JtD+D7UXMbT74HHxTU1P90OY6+t/AXBiIPONNWG29oSjk
o2nrzbmb65YgM8ot9HPOdU3Y51x/C2Nw7md8C9nWW43xjXmZ3PsPlKcb35v2
3mTemvje8vcOPn/5N4m7u3vWQiKRRBJJpByQ7t27J+3YsUOqWLGi/AxD/xkj
RoxIw1zs9GcLIaGs1NSpU3XZ2D33tNnFuffPUpFC9rO/p556KlfyDKGcpX79
+tl931ct1tKh3JuqVbyt3fckbUxzk21tTpTBYLinx1a4VuGnpEW1tjqUe9cv
8rTd5/X6669nW66RFeL9yN8WZcqUcSpfSk+l8rpLnYu3kGaWHyxtrTpbcO9s
xL2PeIyUPi77ulQgj36/+Xyey24xBgT3FtJKcG/BvV1NWu5NW29y74SEhD8g
cu9f0Ea166OtN7n3bXIQJNoAUvEKIzGjTyxtBrGNRnkU2oZbLJaQ6OjoAFx/
l9GGdt7kMp6oYwzvoxjnkOrTnAxHZd6o2x4bG7sN2mQymT5Hn1WoX0EWxNi3
2M5H29kYbwb6TouKivoA2/HkSOg/Cn1GoM+76DMYx38bv0UHoL4P+vRE/zdQ
/xravoJ8t5CQkJfIptC+LY7bGv1bXb9+/fkrV640CQ8Pf5o+jFFej3G9GdtX
5d5Xr16tqHJv9CmD66f0gQMHSgjuLZJI6aZM82/JhoE/yNabsb21tt6853jv
qfwbc5KVgav8+8aNGxnaemNukH2co30ljFMZ93YV2nrTxznmjJq09Ub5k6qt
N31B0CcEyp5Bm+ew3xj7TTGfNEfZ87T1xn4bzjFcY+Pn5/cGznEgjj+Ua3Mw
nhzjG/kpaD+dvs5xTNp8L8B4izH3yL7OafPNON84R/q/2Ir9LzG/cW3QHrQ9
QJ8ZOMZ36HMGdefx//dKTU29xNgSaOeHufwatgGYcwOhYPo7R1kotuGcr2nz
jXIj53A11jfnd+TlEBZQKso4/99Bu58w75N/P9DPeXr23ir3xt9A/k1Cv7wi
iSSSSCJlLv3xxx/Sli1bpIYNG1qfXxo3biydOHHC6c8UQkLO0IoVK3Rx7wb1
fF2ee5d2f8nu/3fRokUF9xZyeS1fvtzu+75gXndpWP0LDuXeHT2m63qPPG/e
vGz7Hlno4Vq8eLGu76FXy77lUO79UY3PpYI6/IIsXLhQXI9QYmLivXXr1qXV
q1fPaYzpQSrmVkRqXfQZaULZ/tKWqrME984G3PuoxwhpeqnOUp4n8uj+u5Yt
W1aijYizr39VgnsLaSW4t+DerqaMuDe2tOP7JTU19WeFb5B534Ho61aO541E
HhJHn7i09UY/2gtGY8t4sRHYhsbFxQUZjcbruP4Y0/usxWI5BX2H/Ldoewh9
v4HIbPbRtzn67cS425HfajKZtjCeLeN5o/5TlC/H/lLsL2I8b9p6o9008qLo
6Oj3sR2HdqMxxgjsD0d+CMZ+OzIyclB4ePibMTExvdH+dZS/ZjabX8W5dcdY
XYKDgzujfXuyKTJv5Ftdu3atxeXLlxuHhYU1JNtCeV2MUQdta5GBoa6yyr1x
vLKCe4skkl0pSxk478dHZeCM8636O9cycJTJDBz1VgaO/f8wcGVe6XDlypXu
UK/Q0NA30eZtlL8bEhIyGm3H4lwnoC3jNUzBcenznLG+P8T8shBajGN9grFX
M+4Dxt2Iso1cH4S+9I+xD/WHUX9CWVt0BnP3OcxPF6BLyPtgDvXFZ3AN+euY
2/3VmN+cq9EmnHbg9H2OrQEyolyO9Y2xEpV1TqnQbbSR/Z3T9huSfZ1DdzHm
XdT9oehPjCHH+Fa5N+29VV/nfn5+8m+S6tWrZyUyEkkkkURyyYS5XZozZ45U
rlw563OLh4eHxPdx/C3v7OcJISFn6auvvtLFG+rUOuTy3LtS2eG63lllp/ep
QkJ6dOrUKV3vNt+osdmh3PvdOkclNx22frVq1ZLwjOT0z1VInxo0aGD339wt
j5s0vfoqh3Lv0R5TdH1HHD9+3OmfaXYSf2cfOHAgjXFC1LhC2U2l8haXOhdv
Ls0q/460Tebdgns7i3tTA4s3faS/5yuvvJJt2KLg3kJaCe4tuLerid/h9IkI
/aPE9v4LukuWcfPmzZ/x+5t2fYzneicuLu5H1MkxvVGWwJSYmGhWbANlO2/G
isU2HNvQ+Pj4IPQJiIqK8sP1d0Fl3oxDCx1CmwPouw9j0F5xF20Xoa3o/4XC
c8i81zKmN9ovR7vFGGdRdHQ0Y9/KzBvtaec9Ce3GM6Y32sl23sgPQX4Qxh+A
478ZGRnZh/G8sf8q+r4Mdcd+l5iYmM549u+AbRuUtaJ/YjIqPz+/ZufPn28U
EhLyFJkW7TvJuIKCgmqirKq3t3clxvb28vIqR1ZGZrZ79+5Su3btcvf09Cz6
IOat9dksmLdIIjmGgau+0DPLwFFuFwOnL3SVgaOsJuahWioDpy90WwaO8ZoG
BAS0wtzxIuaNVwIDA3tijL4op+33ELQfhnlvpDKPjaP/c5R9gPw0zH0zMS/N
wTgLDQaDHPMbY69C+1UoW4fjyv7Psd0L0X/Gt/SpgfmRa4xOof1ZzOXnsH8R
87o3dBlz+BVs/cjBUe6PbSAZuGoLzrVL6MeYFSbMtWTfnO+TkU9VYn3fVmN9
q3G+cQz6CSH7vqv4Ppe5t+rrXGvzfenSJfk3SZ06dbIWHokkkkgiuUjCfCut
WbNGatmy5X3PK3y/unr16jTUO/05QkjI2dLLv6pXXevy3LtWpUW63lkdOXLE
6X83IaFHEe0w9fiVbl5ulEO59xioWtHndd2X5GrO/lyF7BffIev5e9cu3EBh
3o7j3p1LvWr3eTG2tfh9mbEYA3zSpElp2nWo2U0l8xaXXireQvqwwlDBvZ3E
vY94DJeaFqz6SH9Hrut09vVOCe4tpJXg3oJ7u5oU7v0PfdEqtt5/xcfHk3v/
Ql+2qampd9CGMV1/jIuLu406GnonoH082sahj+zbnD5yaedNn7m0HSQ/QV0A
+lyLjo6+jOuPPs6/M5vNxy0Wy2Fsv0E7Mu/daPsVynbQxhvajDLaMa5DGZk3
uc4K5BejfCH6zTcajXNRPh1tPqBtJMom4BhjGdMbbYfRzhtlb+N4A5F/k2wp
KiqqJ8p6oExm3hirC/Y7I/9icHBwe/RtjXYtGZsXdU2vXbvW2MvL69nIyMh6
jOmLz6IW2VZAQED1oKCgKqdOnZK5t8q8GTP48OHDJT/77DPysyIZMW8t95Yk
STBvkUS6P9nNwCWbWOBSOgwcZTIDx7agGgvc1hc65rlitrHA79y5I8cDR9vS
tgwc7SsyFrjqCx1jVYNkO3DOF1wrQz8RjJGAcq6feUZZT9MG80vn8PDwlzkn
ob1s+402AzGPvoP2QyHOY7INOMon4Pwmcb7DcWdhnA9Rtgh9l6LdUsYAx7mu
QfsNqGNsiN049gG0P4jzOIw2x9D+BM73O4xzCjqHuf8c5vYLkBfKvVEmM3CU
0xbcH/kbOJdgZQ0T1zKZMJ4F7WT2ffPfRNtv2e6bvkGgXzHeb+j/O2N+K+xb
tvnWxvhWufeZM2fk3yT01SuSSCKJJJIk3b17V8J3hDRjxgypUaNGcoy3J5Rn
lEKFCsnxFg8dOpRtnzWFhJwh/IbS9Y6jUsVZLs+9G9Tcpeud1bJly8Q8IuTy
atGihd3XfuWizRzOvV+sOFXXfdmuXTtxX7qgevXqpcvnSM9yQx3OvWsUetLu
82rbtq24DjMhrr358ssv07p27ZqWL5/+eM6Olkf+MlKvEu2lFR7vCe6dhdyb
2l3hHalC3uK6/3bVqlXLFmtQBPcW0kpwb8G9XU2Kn3PaesvcOz4+/k/od+QZ
1/vH1NRU2actfdvGxcWlQkmqb3P6wEWe8WANyEeSkSAfgm0Q48hie81isfhG
RUV5mUwm2np/qzDvAxhnD9rsxPG3o89WlG8h70afddBanMNqXLMroY8Z4xbt
56P9XOzPiYmJmUE7SNp5o+041I81GAwy80bZO9Cg2NhYxvPuhzF7k3lHRka+
Rr/m5N1o9xLG74jxOkRERLQPDAxsEx4e3hLjNkN9E9Q18vPze87b27sh6upi
bJl5M6731atXq9Le8/z58xVp600mRvtQcrKTJ0+6L1++vDiZN21MHcW7pf8x
b5FEyg1Jvt4zuhdsebjWHlx6CA9X16WQhas8nOtWVB6u2oPb8vCMbMJRVhHz
hAd5OO3B6Red8wb61PD393/y4sWLTx07dqzJ2bNnWwcEBLTHPNYRY3QNCQl5
FW1ex/F7YU7pg3x/HGsg1+9gLMYBH0ZfFhhvHGM6oH4a6mdirpqJ7TyUL8J2
Oc5zDearjWjPOfVLzNM7OddyzmVMCeQPY779FvPuceyfhL7H//UU5tGzmA/P
o/wi5IVyH5T70l8HjhGM/hEYj2ubYlEWx3VPqE+i/w9sb2HLtVGMiSHzb0W/
MWYGysm+/+Z3jGrvzdgamC/l3ySMSyuSSCKJlNvSX3/9JeF7Rtq9e7c0ZcoU
qXXr1pKt7Rptbjp37py2fv36ND7HOfuZQUgoO4qxU/T4HS1bZojLc+9m9a/p
emc1ZMiQbPvOSkgos5o6dard7+Lz5SkoDa13xqHce3idY1J+tyK67s0LFy44
/XMVyrzwDH8vf/78dv+dC+A6nFNjnUO595xqKyS3J9zsPrc5c+aI7wc7FR4e
fm/BggXZNg44lQeqW7CqNLhUN2ld5UmCe2cB96ZWln0D97t+3/jTpk1z+v0o
uLeQVoJ7C+7talK5d2Ji4v/R1jsuLu5P6Lf4+Hj6r72F+lRuGdcV5TctFktC
UlLSDzdv3qTvW5PGxjsMbYJpJ4i8P9pcRfsrZrP5UmRk5LmYmJiT6HsQ2g/t
xviyT3O034z+G1G2XuXdGOdT7K+IjY1dTuaN7Xz6+EX5DIw3DWUfoGwi2tMW
cjTKRkZHRw9D+Tu4zgeijnFz+9KOkvG8ybyjoqJeRv4lHKsTbbzRpj3atDMa
jS8EBwe3IvNmLF76I6Zd5rVr15729vaux3je9GNMfkXmHRgYWJlsy9PTs7yf
n18Z+kUmC0tNTS1+9OjR4itWrChK5i18moskksOTS8UI9/X1rfLtt9/WxNxR
H8dojDmmBWN+4zmpHcbtSP8TmOe60h8F5sFXyMExdi/kGaOhP8SYDYPRfjjK
x5CBcw4kB0d+msFgmIvjL0Yb2n9z3dDnmF/X49w3I78N+e0Y6yv02Yt5fR/m
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
SXhmcvrnK5S+BgwYoOs7p7BbUWluzY0O5961C9e3+9wKFCgg4Vnf6Z9tblNU
VNS9tWvXptGXNWPn6rmuHKkq+ctJb5fsLG2sNEFw70fk3lTzgtV0/R34Peft
7e2Ua1RwbyFXkeDeD1du5d6qvTdje+M6+Q26bTabk5OSkiypqak/cIt6M8pj
INp6B+J3eADKAhjLG/veiYmJF2njjfzpuLg4T/Q5gTG+jY2NPRQWFrbPYDBs
j4mJWY/9NRiDXGUp+nyEdgvpixfjzEP/OejDWN7TcC4foP1k/PYaT9/mqBuJ
sYfRzhtjDKFvc/QfiH5vYr9/ZGSkbOuN4zAOLuN5d0GfTuRDERER7XEObWg3
Sf/moaGhzaOjoxvj//4sxnw6KCjoafzeIO+ugzGexBi1aIsJVfXy8vKgb3O0
L8cYvX5+fmVw7FLbt28vefTo0eK042TMX+qzzz4rOHLkyPzkYZmM2y2SSCJl
j5Sl3HvPnj0VAgICKqG8yo0bN2pwnQ3tvjFn1cWcVg9zM32gN8ScZLX/Jv/G
XPQ82TfK2qG+A+OBh4eHd8b81w3zUw+M1Rf1g7A/FG2GY47kGqH3OI8iPxHz
52Syb8y50zH3zaQNOOderjdS7MCXoIy+N2T2jXG+wHF2YuyDOM5JxvuGLnHe
R/01+jyHIujvnOui8L0Qp+HeyRiH3yWyr3Nb7s3nO3zmUv/+/Z1AnkQSSSSR
nJswt0odO3a0PoO0atVK8vX1dfpzgZCQK4pxA57Q8Z6jds29Ls+9WzQI1vUO
tUOHDoJ7C+UIPfvss3Zf/wXzFpferXfaodybalt+nG7etGbNGnGPZkOdO3fu
npubm66/aduSL0sLa21zKPeeVm2xlOcJ+9eCMGaAsz/b3K6EhIR7Bw8eTMuO
McHz5ckrtShcT5pRrr+0U3Bv3dx7c/l+UoE8+mz8+/Tp45R7VHBvIVeR4N4P
V27l3vHx8f/ExcWRe9PH+W+xsbFkFfRVa05JSYlVuDeqfjCijtz7Bsr90Yfc
m77NLyUmJl7APrn3KcaDxf5xjHEUfchL9hoMhm0xMTHr0J92hCu03BtjyDbe
2J+tcm8cb3JUVNQHaE9bRZV7Dyf3hmjn/bbCvQegjerjvCe2PWjrrXLv1NTU
9ihrT//m2G/J+Lnk3jinJuTeGOvpsLCwhiEhIU9FRETUVbn3+fPna2i5N2N6
k3tTwcHBMvfetWuXO+287eXeTwi7bpFEyi4pXdYt2cG7kc9ny7pV3s15QfV1
zrkCc4T7pk2byh49erTC2bNnK2PeqYo5pQbjKmBOqkPuTZ8T9D1B7k2bb5TJ
3BtzXWOVe9N3BX1YqNwbbbuq3Bt6C/PYYMyBw1BPu+8x5N6YPydgXHLvqeTe
mD/JvWdhOwdtFuAYVu6N/Cf0yYGxv0DfHdjK3Bvj0te5zL2ha+hn5d4WBsdI
TY3D2IkYI4n23ij/UeHed3Euf6Fc5t5oc2/lypXy7+dBgwZlPXASSSSRRMoG
KS0tjT4lZZtvzof0mUm/h4wF4eznAyEhVxKe2XS956jssdDluXe7Rj9JBfKV
t/v/znlH2JMK5QTNnDlT17qXjpXmOZx7j6x7UiqWr5wuxlGqVCkJz3dO/3yF
/ifOmc2aNdP198yfp4A0vfpqh3PvzqVe1XV+q1evFtw7G4nXGn/bTJgwIa1G
jRq6/qaOUtX85aQRpbpJ2ytPFtzbTu5N9SvWSNfnni9fPsnf3z/Lr0XBvYVc
RYJ7P1y5lXvT3pvcG7qr2HvfMpvNZBc/pKammriNj4+PRSL3Dk9MTCT3vm6x
WPzR1wdj0Nb7PHQmKSnpe2xPovwYxjvM2LD4vb47Ojp6K7k3xl0FfYy+S8hZ
6GOXvnaRn0sGgz4zyGVol0juzbje9G2OuhE47nDU0d57KMrfwf5bKB+I+jcj
IyP7GQyGXjheD/STuTfadML/5UXae9O/Oc6hFcpl7h0WFtYYfZ9RubfW3ht9
al65coUsqgq5N32bk3vTvznalib3po9z2nsfO3ZM5t5kXOTeTZs2zd+3b9+8
gnmLJFK2SRnackvp8G2VbWeGb588ebKgLd+mDwjMTUWCgoKKMg4ChfmpOPqV
OHTokGzrjX5VfHx8qqO8JuqfRNt69HGOeaoBYy5gnnoW48k23piXmnHeor8K
+q3gfEb/5ih7Ce1f4nzHGN+Y/3pjbhqINkNo641+YxgbQvFzPhn5KcjPQF/Z
xhuaz/lXiS9BG+8V2P8U57EKdWtxvI0YeyfOZz+OeQzHOIMyL8gXba6hTSDO
zxrfG0rA9wW/N+grJAXzOuN7/8T43oyhQe6t2nuj/p9ly5bJv5+HDRvmBNok
kkgiiZR9EuZE6e2337Y+jzRp0kTC94nTnxGEhFxF+K2i6z1H2dLv5AjuXca9
m653qMLHhFBOEL8v9Vz/lYs2czj3ptpVGK+bL/Xq1UuwyGykpUuX6lpjQbUu
2VVh3o7j3ktqbZBK5Suri6fR37azP1+hjEU/AxMnTkyrWbOm7vnkccvdrYjU
y721tM7jPcG97eDeX1ccLJXLW0zXZz506NAs/04Q3FvIVSS498OVW7k37b0t
FsvfjO2N6+TX2NhYcu+EpKSk2JSUlBhsyTRMKDdAYYmJif7JycnX6Oc2ISHB
G3ky73MY4zTafkdbb2yPYv8Qxvs6NDSU3HtLTEzM5xC593Jyb9p64/hkLx+q
9t4Y32rvjT6yn3PaK9JfL+29Ve6N+sHo+xbZN8YciN9p/bHthT6vGwyGV9Cm
a3rcm/beISEhzci9kX+WfoRV7k0/wziv2rT3DggIqE7uffXq1YpqTG+0L03u
fefOnZKHDx8uuXXr1vu4N2N7k3sL5i2SSNki6eLdyN/Hux/ku5ysmyLrpj23
lneTdVNo5455pgTXy5w8ebLcwYMHPehLgmtrONdw3kFf+jVvwLjeqm9zxmLA
flPMTS0w/vOYy1qFh4fTvzm5dyeu7cF81YXzHY7zOvb74BhvYb4bgrKR5N6Y
L8dijImo+wDz5RTOr4wngTl3HuNLcA7GOS/mnEwbb+RXYp6lT451ON5mHPsr
9D2A7XEc4yzaXcL+VbS7jvZBtPVGWyNkhujbHEMm3cQYKdAtnPdPKP8N5/EH
dB/3XrRokfz7ecyYMU6gTCKJJJJI2S8dOXJEUv0aMv73ggUL0vg73dnPCkJC
rqAyZcrY/exfrOjzOYJ71/CYrev96fr16wVTE8oRqlu3rt3Xf54n3KQBtQ84
nHuPqvudVCy//T4ZVH355ZfiPs0GwvP6vaJFi+r6G9LWe1qNVQ7n3oMrjtV1
fl27dhXXmAspuzHwAnnySV2LNZE+8xgluHcmuPe3HsOkSSXb6fqs3d3dpfj4
+Cy93gT3FnIVCe79cOVm7m02m//GNfK70Wj8NSYmJhX5+KSkJFNKSoqR/Dsu
Lg7FMQbUh5J5oPwq+pB7X0L9OdSftVgspxjXG+MdQ/kR7B8kMwkODt4dFRW1
Bfo8Ojpa5d6LVe6Nth+izMq9kZ+m2nuTe9PeG2OOIvfGecm+zsm90Z6+zgeh
jNz7TXIfbK0xvjEO4952JCfCubch90Yd/QQ3w7YR7b1pW6n6Oae9N20vaYNJ
P+dHjhyR/ZzjN67s45zcm7G9MXZJ+jkn96Z9p5Z7d+jQIZ8t937if7xbMG+R
RHJs0h2nW3IA6+ZcwTmDcwfnkTNnzsj+zTm/YL82/Utg3qqHvg3Cw8NlO2/6
NUf/JmTeqp034zRgvw19m2OO60TejbLuGLc72r7GNT+o64+6t3H8Ydgfjb5j
US/7NkfdNMyz01E2h/MtY0tg/qNf88XIL0ObTzDmKszJn2H/c5zDRuxvxXh7
MdZBjPk95szzOAcfjHUdbW6gbwjyUWgXg+PQzTl9m8u23tAtjH8b7X7GWFbu
je8NK/eePXu2/Pt50qRJTuFLIokkkkjZMf3000/SyJEjrc8mTZs2FTaZQkKZ
UPPmze1+9s+Xt3SO4N7P1D6k6/3p4MGDBesQyhGaNWuWLjvcRmUGOZx7vwd1
8pimmymVLFlSwrOm0z/j3CzGn9Hr35xqV+oVaWHtbQ7n3rUK19N1fjt27BDf
BS6qCxcu3Js0aVJa9erVdV+fj0uMAd6p6HPS6oojBPd+CPc+7DFUKq/T5nvj
xo1Zer8K7i3kKhLc++HKrdxb9XNusVh+N5lMv+JaoX/aePy+M6WmphqxjY2P
j49R7L1Dk5KSZO6NNir3Ps/Y3mhD7n0S2+PoQ+59CON9TT/nMTExW7XxvdFv
Kdp8hONb2Td97+LYs+nrHG2mGI3GqWg/iTaLGJM236No9636O8exhuA8BpvN
5rcxNmPa9o+MjOxD28fw8PBXyIZo8x0dHd0B59EW5bLN97Vr11rQllK192Yc
Xdv43jdu3LDG90Z9OZV7//TTT6XU+N6M1UvuTQb2IO4tCVtvkURydNLNuzMT
p1vl3aofc/Jusm7MYVbeTdZNX+aYO0pqeTdjJHAOwRxTwdvbu9LVq1erXrp0
qZavr28dzjmYb+6L5U3mTd/mmL+aK8y7Necv7LdDviPmtpfIvNHmFRzjVYzf
E336YH8A8oMha0xv1E/CnDoFdTNwrjMxxlwyb8yhMvOGlmL/Y7RZiXNdQ+aN
svXIf4G+X+I4+9D3MM7RE/kL6H8FYzO+RSAUijYGlJni/gXfyTf/NfhOpa03
sj+Se6Pqd2z/xP+NzPtvlMvce+rUqfLv52nTpjkDLYkkkkgiZet04sQJqVKl
SvLzSaFChaS5c+emiVi8QkIZS897OarxM8kuz71bP2PG/8XN7v97rVq1xDtB
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
I1B+HHvNE9gvx0LjMNck9HkK18w98Wlc52yU5/FZIcyxHPO+ievbhOv7COU9
0EGM+x7zHEOfs8gvYlwQ5jAy5gX2+Fiyb+zT8Tjnz2jTYnzjnH9gz6YvEY17
y2fqd+7c6UwspJJKKqnk1gl7r+jfv7/13obxjumv0NX3G0pKzlK1atUy/BtA
gQIV3IZ716myyKHfmvv27au4t5Lb6PLlyykyBkhGVbRAOTGx/rdO4d7URK9P
cM6ymeZFxYsXF7t371brOAM6d+5ciqenY/xYr/z35Rdjq84VS70+dAr3HlFx
ksPXOmfOHPUZUXJYfE6EMZVKly6d6XWTnsp5lBArKozKU9ybal2oeobfqxYt
WmQ721XcWym3SHHvuysvcm/eE5B9Uyjfkvwb+hvHf0F/ovyXJS4ry2QXvyOX
YhxwsvDrjANOHo78KnSFTByyMnFLPHDyEPrD/Ql5NOY3YgwVQR/paDcwPjj6
B5nN5iDGB0cf2ob7IL+A/Efk53DtZ1A+DZ1C/xMQbcOPxMbGeuOz/k1kZOSe
6Ojo3VFRUdtxvAV6D+V1EO0XV5CDo+9CzM/YtnOh5zBmNupp+/gUY+IGBgaO
DQkJGWkwGIagbqDJZHqEdpQY1zsgIOAhPz+/7vSHTt5EFu7v7/8AWTj9EtM2
E6pHW03yKnIr8ityLNp0kmuRb2HeSukxcrIxPSOXtqOSkev9p0tGLu3D78TI
be3DhWLkKuWNdEff5/bkiC24FNeirU24ZODk3/T7IG3Aud5lDHDuA9wPpC04
Y4GTgVMYXxP9a3NfuXDhQgOMa4hyY+xJmg90jG/N/Yj+z+mrQsb+5r7F/Qvl
AciHkIFjvxwO0Q78cexDY2kHjnM+hb1lCvdCaA7mXIz5luMa1mN/+wDzfgJ9
hfHfYMwh9DmBc5xD+RLEGBeRmJN+PmKxN5swdyLm1WJ8Y17+vdDifJN7P/LI
I9r3548//tiJREgllVRSyf1TamoqbTe1uG/cZ2vVqpUn73GU8qbIb+9z4DeP
lk2j3YJ7t2l4xqHfmQsWLKhsAJXcSjt37nTYhrdVubFO497UsJpviQL5CmWa
F3l4eIj58+en8jc+V7//OV3bt29Ppe1zZt9zqk+5x8USjXlnP/d+qfZaUcyj
hEPXqWy9lbJKUVFRKS+88EKWrSFbFcpXQPyv7CN5intPLdnBoe9uZrM5W/+v
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
RHk0yqNsmTh9pNsw8R6SiTvbV3pGmLitPbhi4iq5OKXh3LYaMWKEZtst7sK5
US6YHufmGrDl3JJtY68sKf0pSM4tY3TfyX+55Nxcr/TlwPUrY3ZzXaNvE651
CuUHcL42ISEhHaQvc/qPwBjNnznG9cM5BqB+KNofx/yM1T0BbZOxr0zB/DPQ
fxb0P7yOZ7H/PI+xL6J+IfKX6dsC/Vbg2rnHrcfYTdB2nPNzzLUf10Df5sex
T53CHD/SvznmCIYiMN6E/ZTMO5Hm3ti/L2Ouq/RxjvwPvGfano8+Gvfu1KmT
9v35wIEDTuU+Kqmkkkp5OdHv+dSp//lR7d+/fyrvEV19H6KklJXCdz6HfG3W
8/zCLbh3txaO+zrnMwP4Dufy/0MlpazU0KFDHfa/W7N4Bwvvdh73frrBd6J5
mUFZyoyo1q1bi/3797v8/8MZOnz4cEq3bt2y3O9y9cJe4sU671uYt3O495hK
MzN1zXv37lXPMyk5XT4+PimdO3fOsjVIH//zyg1wa+79Stk+GX9f8uXL1hgG
insr5RYp7n135WXubU+2NuCWZwRvY+C2SraxCac/9GQdB0dZiw8u/aLb+kaX
tuHSNzptw+kf3Z59OMW44ZDmH50MnMyF/BuiDTj5txEKZxxw5IGQH/pdSExM
PIdxZ6CTOD5OG0boEPp9h5wxwfeZTKY90Gf0hY66Hei3De1bLTbh7yJ/Ky4u
bg3qVuFvzQqss2Woo034AuQvkCuh/CzKZOEzGTuXtuEoT0J5PG0waYuJ45E4
Hq7zj96f/tFR7mPxj95T+kenbWdW+EenbWlW+Ue3tQ9X/tFVysaULtsWdmJ2
Sxtvfu74OZRsW1j4NnKNbyO3a8fNzzuFvaaEZNtXr14tde3atdK//PJLGT43
gvVZDv3LY3+oIHOMrcjnTLDuqmBsVfSpjrVcA2Nror02+Tb2Hi+Mr4f6BhjX
EPWNMa4p6pvz+Rb6fkB7O4ztAHVEn87cB9CnF/cG+pFAeSDqGbN7GH2Zozwa
550YHh4+FfPOtDDu51CexzgNeC0LMf9iXNMSlF9B3WtoW418LfL1aHuPexyO
t2O+T6A9mO8gxDgRp6Af0ccH571Evxq45gg+ZwQlJP2bLqPtCp9NQn4d7fRx
zj1d7vV/o3yrY8eO8u+us3CPSiqppJJKlrRr1y5RokQJbR+uX7++OHfunMvv
O5SUskpr16516HfWyhX/5zbcu3X94w7/tkz7SFf/HyopZaX8/PxSChUq5PCa
6Fp5jpO597/su025UVnCi2zVt2/f1CNHjrj8/yU7dPLkyZRBgwalOmrjfyd5
Fmki5tfZKF62Mu/s594v1HpDFPMo4fA1Dx48WO3nSi4TOcIbb7yRZbbfRfIV
FKsrjnZb7v1ppTH80TvD78vx48ez7f9QcW+l3CLFve8uxb3/k+Tc98q80W7P
B3oaP+jkHfo44DrdlJKxwOkPXR8PHHNrrBv5dWn/LW3A9cwb+tlsNicyxixZ
DLLI+Ph4zeYbuoSyD/qco99zzPsDRJvvIzhm3O9vkWs23xj3BZkP1s3HtPlG
2xaMfR993yUbQt1a2nyTdaOssW7aTNLmG8fPkXOTOZFzo88UxtJF/QQ950Z5
hKNxwHFsl3Nb7L7rMRYwfSSTczNG8L3GAZd233rOLe2+7cUBt2f3rTi3Sk5O
6dp56z5f+WUMb72dt95Xwd38mfPzb8/OW9p2Sz/mMtfzcK41+lmQHJx23lyP
XJe08+Y65Xq12HnX4zqWcbxxnub0a47+mq038g6MjYA12x1z9cSa7k1/Eaiz
xvPG/I8HBQWNx/GTmHuqxf/EbJQ1G29c2zz6qGDMBu5dqHuF/iswzxsWfxbv
QptwHdtRvxvzfYVr+A51R3F8GuPOQT6YM5DsG+ONKJst/jboe+MyY1SgfA3t
vyLXfJzr7b3btm2r/d09fPiws3GPSiqppJJKSNjbRePGjbW9uHjx4mLbtm3q
t1EltxBjVN/nwO8exYo+4DbcmypWuIlDvyv36NFD7QVKbifGd3ZkPVAF8hcW
j3t+5HTuTXWqMFnwVtfRa09P5MIPP/xw6jfffOPy/5us0IEDB1L69OmTLbyb
alSsjXjJc6vGvJ3FvZfV2SjqFGng8DWXKlVKhISEuPz/RknpzJkzKU2aOPad
xFYVPUqKD6tOc0vu/Q1UpUDJDL8n2XkPp7i3Um6R4t53V17k3un5N7fUp+Hc
ZNt27LvTcG70s/o4J+dOtth108c57f1kvG8ybrTRt7kmcm4L69Y4N32cJyQk
0M+5xrgZ95s+zmlDaBHtCa+gnj7OaV/4M0TeHW9Cio2NjUJmMJvNQajzR34B
x2cY4zsmJuYI8u/IuDHkK+R70OdzjNmN+p0ob0O+Gf02YN2sQ/0aHK+Kj49f
jrZl6E9/wC8xxjfy56Rfc/IlciYc06f5Ezh+nGwb5XTZNl6jlW1HRkZ2kmwb
/TPFtsnWyLYDAwMrZSfbphTbVimXpPy2tuD2pPv83ib5Wb9TXHDZrl8jtmxd
z9Wl73R7ccEZdwD3CFo8cK5db2/vivg7pXFznKP26dOnNXtx7gmoa0if6Mhb
+Pr6tjlx4oTmBx37Qk+s+Ye573D/wZ7Xn/EVuCdxb+Iehb1gFPqNwz4yGe2T
UZ7FmA2YawG01N/ff01AQMD7uK4dOAf9X+zBXN/g+CjOfRLlC+gfgj0tHG1G
PnOE/TmGjx+hLRnnoF+OG9zb8Vr/wLn/adWqlfZ3F6/DOYBHJZVUUkml29KN
GzfEsGHDrL+Bz5o1K1X5OFZyB1WuXNkBDuQhWjf/2W24t2fVZQ79psy9QPmA
UHI34f4kxdPT02HWUqFwAzG5wXdO596zoD5VXhAe+TL+++a9ijyKNpm4X3T5
/1NGxOtdvXp1qnyGL7vUsXRfsdjrQyvzdhb37lyqd6aue82aNeoZJqUcI+7B
Tz75ZJb4Pe9brIXbcu82hapn+P1YtGiR4t42Utw770lx77srr3JvvW23zJPv
4Mfcwrc1/+W2Nt22fsxlTG8L875pseXWYnlTZN30Y27Rr4mJidQNi39cspI0
rBvzJpN1o3wZOSXjejOmbHxsbGxcTEzMT1FRUeQvgTj2QX4OOdkMGY032veh
/GVcXNxunOcj+vNF3TbaN6KOvsvfJus2Go2rGO8W36dfxrHVbzntuVE322Aw
zIAmozwe844JDw8fFRERMTwyMnIw/ZRjvOannMxJ+inHcVfaaqKP1X6bvoz1
MbvJuDFPY3IsGbNb+ikPDQ21+imXMbtpv20bs1vvp5zsTM+4ydYk47aN2S39
lB88ePCu9tuSDyrGrVIuSPllfG89u7bHqCl8pgvqbcG5HmyZNdeMLbemPbi0
D8fn3eonnT7SpZ90vY/069evl71x40Y5qPyvv/5aAaqI/pXRV/ONjv7VaQ/O
51swhs+3aIwbe4bGt7HmW2NLbId+HegTAm1d+SwNbcCDgoIG0PYbxyNwjzEK
1zQGc49H30nQk9hbp+BapqHuaexPz6DPXO5zOH4Jx68ydgPyt1C3Aa/3Q8z9
KfdOyBuv6whjQ6DtPHJf+tPA645CfQxkxhzxuP4EPpOEtus4N59n+h3Xymeb
/sSYWy1bttT+7p44ccJFtEcllVRSSSWm1NRUsWzZMpE/f35tX+7Vq1cq/r64
/B5FSSkzGjJkiEO/rdb3+sptuHfHxmEiX74CDv2mPHXqVMVLlNxOe/bsyZQ9
cKPS/V3CvanhNdeIIh6lM82L7qTChQuLAQMGpH744YepuA90+f+XPfG6aNvY
v3//1Mz4rr8X5c/nIQZUmCRe9tphkfO498hKU7V4xo5ee/v27YXexklJKafo
/fffz7Tfc66NZRWGuyX3Hlgs48/xjBkzRnFvGynunfekuPfdlRe5N2Vr523R
bX7MdbnGvWXsbr0f8+R/7b3TxO+Wdt7k3omJiTf13NuiNNybdoHQdbJviL7M
Ne6N/Ipk35f/S7TztnJvk8kUh8+6xr1jY2MDY2JiLiI/Cx03Go1HLHFq96L+
U/T9KCEh4UOz2fwBjjdj2Htk3ozXjeNVmGM5+i6h/3KLX+A55EMoz8JcMyIj
I5+CJqA8mn7Lw8LCRhgMhsHo/6jephvqgTHKplvxbpWyN93R33n37t0LTJky
xWqXLT/nQhfrWx/v29bPuZ5tSz/nZNnS1zl5Ntec3vc5nzvheuS65PrkOuXz
KVy3fF6F61j6O+fzLFznfL6Fz7lw/fO5F/RtjPHa8zAot8R6b4OxHXAtXdCv
G9Z6L+41GNsH/fpj7xiI845AvzG4xkk4fgpt05HPQv4MY31j35vD53jo6xzX
sAj1S6EVjN2A9jXo+y7m3Yi6bdAu7EF7cK6DuAbNvhvno++MCygHYHwIFAmZ
uAejLYnxJhjnG+WrqP8V55HxKzQ/5zi+1bRpU+3v7pkzZ5wLeFRSSSWVVLKb
vv32W1GmTBltb65Tp444e/asy+9RlJQcFW0A73Pgt49KFWa6DfemypV0zF6Q
/nHxHc7l/49KSlmtESNGZMresHuVeS7h3rMafCvGe34oKhaulyledK8iA+dz
cCtXrkylj2JXMVSe9/Tp0ymvvfZaas+ePVN5Xc54/cU9SovxVRfqmLfzuPfT
1ZeIgvkdZ/p8HoD/Z65ea0pK6enw4cMp1apVy9QarVagrPi46ky3495TS3bI
8HuRnYxXcW+l3CLFve+uvMi902PeknMn62y+JfOWsmXe5NzJ//FujXnT1tsi
jXmTfejtvC3xuzXmbfFvrjFv6Bcyb9p7X0HCvBrvZiLsRvYzmTdyMhaKcWXN
uD+P/Rd7R4Ui94No630c+eHIyEgy7z1Go3E349bSlzmGbaCNN/2Zo568e6Ul
1u0S9GG87nkRERHPou/T+ljd4eHhE1BPrvQY5h1CH+YhISGPhoaG9mHMXXJu
zNMF9Z1w3BHHt3FuHGucm3F8Jeembbfk3LTzlJybtt3k3IwPTM596dKlipJz
M46wLec+d+5cyazg3La23ULnD/pOrPs+xblVyt50TzG9dZ9VjXnTjvtOcbxt
bbdtY3nTXlsyba45e0xbX5YxvemXQcb0Jt/m2kadxrctMb3r078D1ngj1DWh
3wf6f2BM76CgoLbYE9pjnvYY0wnrvzvae+Hcfcm56V+C/srRfziOR+G6xmAv
etLPz28Gxv0P9XNQ9wL3MzJubJNLGK8B5eUYx/3uDbS/xZje6LMJ7VtQ3gnt
hr7AeffhfN7Ij6HfaegC3iNfzBGA9jDMQeYdAyWg/meMT8a+ymeUruL4Otp/
R1/u/9rfArT9zfje0h8d9iqnsx2VVFJJJZXsJ/xNETL+Hhk4beNcfa+ipOSI
yEnuc4QXFKztVty7WZ3PHP5NmbzL1f+PSkpZLdxzpZQrV87hdVEgXyExvPZG
l3Bvaka9faJZqUczxYscEb8TMB74vHnzUmlvff78+ZSsjovC+Tgv5587d24q
zyefx3Om6hRpLObUfkcsTsO8ncO959VcLUoWyNxrXrFihdq7lXK8/P39MxV7
ghpbqrPbce8lZTP+vGKVKlUU97aR4t55T4p73115lXtL3+ayrI/jnWzh3qzT
c+/k//ycp8e9/0T5T+nj3GLndxv3lnbeUva4t7T1htL4OP83+9fPudlsTpTc
Ozo62hgVFRWC3Bc6g8/+Mfo3Dw8P3x8REfFZZGTkDhxvQdf3MHZdXFzcWvR5
A21kQMtiYmIW43gB+swl80Y+k7G7ybvRPgHtYzHXE2TetO9GmfFy+yB/ODg4
uCftuulzWNp1G43GNpgnjV03/ZjTrpu8i7xb+jEn75Z+zHE+qx9z2oem58fc
1q6bnM6Wd9v6MbfHu4WNH3Oh7LpVyn3JLg+3Z+8t7mDzLXm4PZtv8vD0bL65
FiUj1/NxPpui5+N8doU8nM+y6G2+ycO5B/DZF/p64N6Avo2wlrVnZDB3cx8f
n9bcV3Cf0Jn23riWntLem7EVaO+N1zTiwoULY8m/UT/FsofNhp6lrTd9mmM+
2novRHkx2l/B2JXI19C3Odo24Nq2oP92aDfO8xX0LcpHUX8Sc5zBuAsoX6K9
N15fBMZY7b1xTZq9Nw41e2/U/W7Z+/9AnWbv3aBBA+3vLvYe50IdlVRSSSWV
7ph+/fVX+jnV9ugCBQqIVatWqd9PlXKdeF9bvnx5h35Hbdbokttw7+4trooi
hbwceh9oi4XvfC7/v1RSympt3749UzbfxQqUF2PrfuYS7j2r/rdiNtS3ygui
UP5imWJGmVXBggVF7dq1RefOnVNHjhyZOmPGjNSFCxemMq701q1bNe3YsSP1
yy+/1HJZx1ji7Mf+HMfxtWrV0uZz5euhX/PuZYeJRV7bxWKvnU7n3otqrxeV
C9bI1Gvo0aNHqvJvrpRbFBISktKoUSOHP++l8hcVH1Wd7lbce1OF4Rl+Hxi/
IzExMVv+jxT3VsotUtz77sqr3FsvCwNPN663jOmNsf8kJSVZuTfjeFPp2XpL
7o29WPo4/+2yDffGnIzrnYZ7Q+Temn9zMm+LrLG9meLj4+nnPCEuLs4cExMT
GxUVZYyIiAhGTj+8JyHaeh8IDQ2lr96PUN6MundiY2PXms3m1bTxpk9zo9G4
hPFtcTyPNpLoNxv96R/4SdSNN5lM9GdOe8rHgoODh0OD8Hf6ERw/xJi6mL8b
WRRtM/UxuzGumS3rRp3dmN161u1ozG6yORWzWyWV/mPgkntv3LgxTQxvfRxv
rg99HG+uG4rrSIrPkFBcZ5Rcd1yD9LHA9SjrZWwBWwZuayNOBs7nWmwZOOMa
kIH7+PjURX/t+RhfX9/GOH8ztLU6e/Zse+wDjJvQDftPN4zvwWdvGGMB9YNx
PY+j3ziMm4TzPoV8OvJZ2B/+x3gNOBf5N+M3zOezPhb2vYp7IuZaj3kY13sr
2nbgmj6H9qPP96j7AXOcxB5zDmU/5IHob4BiMDYOovuNJO7NKF9B/Q2c43fL
3k/u/Se5d/369bW/u3h9LiI7KqmkkkoqpZdu3bolZs+ebb1HmjZtWmpW23Up
KWW3Bg4c6BDbqlF1hRtx72vCq+orDv+m/O6776rnXpTcUo78lq9X+cL1xJP1
D7iMe1OTPHeImkVbOfwalP5TpYI1xZTqr1p4906nc+8ldTaKukWaZOo1lC1b
VgQHB7t8bSkpZUSBgYEplStXdvhzP6FUV7fi3l9VmaDFL8/o+xAaGpot/z+K
eyvlFinufXflde5tsfVOw72vXLmSxt5bz72lvTdtvfX23sn/xff+U8e/rX7O
0WaN7Y2ylX+jfFt8b/LvZDvxvfV234wlSxvDuLi4+JiYmDij0RgVHh4egvwi
pHFv5N+EhITsMRgMOyMjIzdB69H/DcxPG2/GtSXzWQzNR/l55M+gz9NhYWHT
IiIiGCN3HOqfYBxvnIP+hIcGBQUNoK9h+hymX3OUu/j5+T2Ic7TNTNzujNp3
O+rPXCj7bpXyRuLn08q9hc7eW9zB5ts21jfK6cb71vtDl+22XFzybz6zkl7c
bz7rwvXPZ1/4DAz3BfSvjfWqPSNz/vz5+ufOnWuMe4PmKLfx8fHpwFgKjKmA
/aQr+vfgczg49wC0azG+ce3jMfZJtE2l3Tf2ylkUxjxL9k0f6GhfiGtYCr2G
tlXo9zZjfKN+M8Z/iGv8FPN/jbrv8BqOYs/9AfvnGbRdxHVeor9z6CfUmbgP
oz0R7wf9cCRj/uuo+w17rbbnk3tjzK169f6NTefr6+tkmqOSSiqppNK9pg0b
Nmg239yv6W8Ue7rL712UlO5V69evd4hrlSjexa24d+em0cIjfxGHfk/mc4r8
fcDV/5dKSlkt3Mek1KiROdvaWsU7iqkND7mMe8+ufxA6IHpWetrltt+5VQXy
3S+6lhkqFnhus2HezuPeSz03iabF2mbqddDekzb1rl5XSkqO6MiRIylFijj2
PaWMRzGrzbc7cG+qZP7CGX4fTp06lS3/N7mVe9OH/uuvv56q5Boxpoyz9xHF
ve8uxb1v597JuvjeSUlJGvdGnZV7I0/DvaVQ/6eeeyO/jXsj/01Kcm+0M873
Deh6QkKCxr3Rdi3ZDvtmIvtGv8tms/lnk8mUQF+7ERER5N7BkZGRF1A+Dn0P
7QsODv4sLCzsA5QZx1aL5R0fH/8q8qW471mM+vmofx5lxsSdiTmmWpj3GMz1
eFxc3HCcYwjj6RqNxkcxV1/M2Yu+hsmeQkJCOvj5+TEWb0vG50Vdk3ux8Wbc
38zaeEvWnRkbb3GPsbvFf7xbJZVyS8oP2eXe4g7sG+W7sm/p91yyb9s44enZ
fqfHvvnMC/cCafvt6+tb68KFC9ozMufOnat3/PjxRuTeZ8+ebYX56VuiE2Mr
YExXnINxFh5Ge3/sBRr3xn40AXWTkU/D3jMT1zebsnDv5zH+RbS/hHMvY6wH
7KWvo+5tnO89cm/GhUD9p9DXjPNN7o3XdhxzkHv7YA4tzjfKP2GslXtja05E
2cq9LbEtrNy7bt262t9d7GtOZTgqqaSSSiplLB06dEjI+JotW7YUrriPVVJy
RPys5s+f3wF+4CFaNUtwG+5NX+dVyo5xmKfs3LlTsRQlt9S+fftSPDw8MsUb
G5V+RExrcNiF3PtfTfbaJRqW7JGp15LX5FW0uZhZc41Y5PURZMu8ncO9l3lu
ES2LZ5zp2Io+4129npSUMqPVq1c77INjZpmH3Ip71yhQOsPvwd69e7NlD8it
3FvJtTp8+LDT9xDFve8uxb3/494yxneyLr635N56e2/kfydb2HdyWltvq79z
yb4TEhIY6/smfd3iWPo7l9LYN9rJRzSbb/S/gTpyb9p8X7OI7NvKwCn0Szab
zZfj4uISo6OjzZGRkdFhYWGheu4dHh6+Lygo6LOQkJCtOH4HbW/ExsYux1gy
7yXkPqh/gSwI5Vn0CWwwGJ4iM0L5Cfo2N5lMQ9F3MOPnou2R0NDQ3pizB8pd
MN+DZFABAQGtcdxCb+N9pxjejtp4qxjeKqmUocTPqwc+1/zcW6VbFxni4Xey
Bdf7TZf+0tmH69MRW/Bz585VOnXqVFU+E+Pt7V1j3759ddBe98SJE43Pnz/f
gr4lMGdr7EVtMbYjxnS+cOHCQ0ePHh3o6+s7HHvKSMw92sK/n0TfpyjsO9Ow
b84gA0efOXzuB2OXoG0Z+r2Oa34Tc7+DfCOucQf0GZ8fos03+hzCuB9QPot9
7iIUiH6RmC+aNt/Yv+P+DUERn4S2a6ijDw9tj0efmxj7j+LeKqmkkkq5J+F7
qqhZs6a2b9Nfh7+/v8vvYZSU7kWtW7d26Pcar9o73IR7X9XUpv5xh3+7atWq
lVDxYpXcVfPnz8+Uv3OqeZlhLufe1P/qHxDDqq8UFQt5ufw375yscgWriseq
PGvh3R+5jHuTebcp0TXTr4fx0bMrtq+SkrNEFtGxo2N8s0Whmm7FvZsUrJTh
92Dr1q2KeyvlGCnurbh3TpKeeduz+db7OSfzltxbxvtOtnBv+jy/cuXKX1LJ
Ov6t596o1+K8SiXr/J7TFy75CO2+0V+z/Ub7LzpdS7Zh4PiOd4X+dOnrHJ/z
+MjIyJ/IvY1G4wVI49443hcYGPhpSEjIlvDw8HXQ6tjY2FdxjiWMbYsxC1E3
F2XN1js6OnoqxjxpMBjGoX4U6kbQ1hv1g9CnP/r3w9wP0dYbZcbY7UDu5O/v
/4DF1rsxxjWy59ccdWn8mjOuL+orM86vLfNmPOCs8mtO3SvzTo9736eYt0q5
M2nce8qUKffr14M92cb91kvGALcXB1yuP7nG9HPK8XKM7HsvtuH4vlDuxIkT
Fbgf4Loq79+/vxptwPfs2VOf7BtzNMOe0sLPz6+lj49Pa+wz7c+cOdPN29u7
X0BAwCDsJcPIvjHnGOwn47DnTYiLi5tA3+fIp0DT0T6b+x/6LET7IrQtJ/tG
/7X0d04/GZhnF/rtQb8DuN5v0XYE13cK+Xn090e/cMxlhGIwhwl7dxz6JeB1
XkUf+vDgc0y/Yp/+A/veP/Q7hP8TgdftMo6jkkoqqaTSvSfs6aJ58+ba3l2p
UiVx/Phxl9/DKCndTS+++KJDTKtcmcfdintTZUs4bgu6fft2ZUuo5Jbib1+9
e/fONPtuXW5MjuDe/+ob0bfKXFHy/oyzE3dWiQJlxKMVJ4sFXjvEorofuZR7
L/XcLFpnAfOuWrWqwL26y9eRklJW6Ny5cykyvlJGlP++fGJzlSfdhns/WLhW
ht8D+pbOjv8Txb2VHJHi3op75yTZs/lG/S0pm/jerPtH8m+ppKQkq+23lJ5/
U4mJiRr/Rpnsm3bfVuGY/PsP+kGnP1zoN/TXbL/JSiAyEzLw68j1+iUhIeEX
s9l8lTbf+JwnRkREmPDdL9xoNPpFRkaeho4YDIYDQUFBX4SEhHxoz885Y3vT
3hHj5+j8nE+x9XOO9qHSzzna+tj6OQ8MDGyj/JyrpFKOS3a5950Yt55z2zJu
vQ23tOPmGqSy2t4b4ysfOXKkGveG/fv31/zmm288sVfUQ31TzPkA5muDedth
THvsPw9iXDcfH58+GDME53mctt6M8U3/FcinYb+cQTtvlGdjT3uGMb6590Ev
Y+wKtK1EG3n3O2h7H+UPMHY39rU9mOsA6g/hnEdxzhNoO499zhcKxr6mMW/U
x+Ec8dibrfbeqPvV1t5bcW+VVFJJpdyXrl69Kjp16qTt36VLlxb4m+Ty+xgl
pTvphx9+cOg3kAIeZUXblr+7Ffdu6bXP4d+vGjRoIPBdzuX/n0pK2aHIyMiU
WrUyzhls1brc2BzCvf/V0/W+Er0qPZ3n+XepAuVFnwrjxYte28RLdT/W5Eru
vbjORtGkWJtMv66CBQsKb29vl68fJaWs1MiRIx16Dmliqa5uw737Fm2Q4dc/
b948xb2VcowU91bcOyfJlnlLe2+03bpy5cpt/Fvv/zzZhoEnp+Xe1jJtwcm9
cb+cJvZ3soWBJ1s4uPSDTv6dkJDwh/R/jvZfKQsDZ/mGZOGY93p8fPwvcXFx
V6Kjo3/GfYvZYDBERkVF+aN8FnVHcfxtcHDwHmhHeHj4+6h/KyYmZhXGrIiN
jX0FfV6OiIhYgHUyF+VnkD/NeLj0C4y+4+jrHH0fwxj6DR4SGho6AHP2CwkJ
oc13d9R3JnPy9/dvh+NWtL8k+0a5CeaSdt/1MbYu+nqGhYXVod032TftviX7
pt23Lfs2mUxWu29ysYsXL6Zh34wtbI9929p9ZyX7vk/ZfauUuxI/qwVGjBiR
xm+5XrYxvUU6fsz1sb1Rb43vzdgDlJ5xc01ybcr435Jxcw3LON9c21zj2F/K
yRjf3AO4F9AXxKlTp2qePXtWe07m9OnTXocOHWrEOAonT55sff78+Y64js7Y
w7qSd+NcvTC2N+YffPz48ScCAgImoi9593TsZ7Mx33PYW+dgb+XzPS9i3AKc
ezHql2H+VdBatK3D8SbybrTtQHk35tgLHUT7EdQfxzlP4XrPoc0PfQKRG1Af
g7o4s9mcgNfL+N5J6KfF90Yf+vCQ8b0V91ZJJZVUysXp999/F4888oi2hxcp
UkR8/vnnyg5UKUerevXqDv1mU9/rK7fi3lSpYu0c/g1r/fr1aq0rua2OHDmS
Urhw4Uz/1tuk9AAxrcH3OYJ70+77GWh2va9F78rPivKFarv8t3BnqmLBGmJg
pWligddOK+92Nfd+qc4G4VWkcaZfW758+cSmTZvUnqzkdqLNt4eHR4bXRIOC
VdyGe48s3iLDr3/KlCmKeyvlGCnurbh3TpI9e29p863n3pTk3pKBo87q89ym
/LetkpKSqNtif+tjgEM3LSL3vqmPAY45yL/TcHCK/tDj4+Ov0+Y7JibmstFo
jDcYDMiMAdC5qKioH8LDw78LDAzcq+feWBOv3yv3xrHi3op7q5S7kvYZ5eeV
n+PWrVvfjzxdzq1n3ELHuSXjpmwZN/aiEhT2Sc1e++rVq6XS81cuGbfelptr
nPENUKcxbsY94H5APxDYW2oxLgK+99fDnFq8hNOnTzeFWmJs21OnTnXGWu6B
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
DkUegTmMKP+ENhP2nHj6NoeuoHiNMSewd9/A3nzD4ouDe7SMZ/EXuTeOFfdW
SSWVVHKTdOvWLavP86JFi4r9+/e7/N5GSclWgwcPdohjlS7Zz+24d/cWl0Xx
Is0c/i1r9OjR6vkWJbcW7lVSunTpkiXs+/78RUW/aktzNPeWeg6aXe8LMaTa
YtG27FBRrUjjHMPBeR01ijQUHcoMFCOrzhfzvHaIBXU/sWh3juTeL3ttFd3K
DMgye3p+JskDXb0+lJScoQEDBmR4D25ZuKZbcO//leqc4f2B71d2/D8o7q3k
iBT3Vtw7J8ke95bS10sWnvxfrG9r2R4Dt6N0faFfuXLlb4r+0KXoF52cJPlf
Fv6nPaHtJuOAx8XFkX3/hs/59aioqOTw8PA45OHR0dGXkP8YGRl5IjQ09Hvo
S6PRuBN1W+jf12QyraMtJNrfQP0KlJcwBi7KtPueg/H/Q9+Z5Er4jjkJ/SbQ
jzDqR0ZERAwPCwsbFBIS8ijm6o0xvQIDA7sbDIbOZFaYux3q2+gZOI41Bo7r
a2SPgdMmVM/AGfOXfI2czZaBS9/nWcHAqXtl4Mr3uUpZlDLNsyn9Z1h+ruXn
XH7uuQ7WrVtXEv3T+CWnsE7KYw+pkJiYWBF7jmarLWNtk2WjT3Ws/RroVxOq
hTarzTbaNYaNeo1hc32nx7O5F0iejbZOKHfh8zKYvwfUC+d4GG19UfcIxg+g
/3KMG4Y1z2dtxvC5G+wTE7H+pzIOA3ItZjeu+yWMWYIxSyHGbViN+vXYl7ag
3w60fQx9RntunGcf+n+D6z2A830HHULdUeTHodPo9yPeg4to94cCoWAoDH0i
kUejj8lMyJ2UFI95ElF3GdJ4N95DjXPT/wbaGYfiD8aqwPFfkPXZJj7/hPpb
tWrV0v7u4v/LyYRGJZVUUkmlrE569k37jJMnT7r8/kZJSa+dO3c6xLDy5Ssg
WjWLcyvu3aPFFdGszscO/5aVP39+4e3t7fL/UyWl7BR/P23VqlWW/P5L7tmq
7ONiWv3vcjz3/ldfW/VM3S/FEzVeFw9XnCEeKP2oqFm0uSjmUTpbfy/n/LWL
NBNtSvcT/SpOEeOrLxcveO0S8+t+Cn2iaUEa5TzuPbf226JOkUZZ9p60b99e
4D7f5etCSclZWr58eYa/t5XIX8QtuPec0l0zvEcwJnp2/D8o7q3kiBT3Vtw7
J+luvFtf1tuBJ1uYd7JN/O/kdDh4UlIS29KNAW6RxkbIvekTnXmyjS90i6zs
m7aEZrP5pp57GwyGNNwbxydCQkK+DwsL+yIyMnIHtBnfG981mUxvY8yb6PM6
9GpMTMzLOF5oNBpfgJ7DMe0np6PtKfSfiHnGo/4JHD+GfGhAQMAg1PXD8cOY
sweOuyF/kP6J6aeY/oojIiIeSCfed707xfsme7ON901Op4/3LZm3Pt639ON8
t3jf9pi3ivetkhOT4t73yL2hseTeWOOTyL0xdhZe5/OoX4BrX4SxfF5nGca8
ZuHe72C/24o6zaYb+hxzfoXz7MfrPIDrPYgx3tBhjCf3tvozx7EvdAl9gmjf
jdyAcUbkP0GafTfmSICS0O+y9G1O7o2636DfsXdTWkxvxb1VUkkllfJGIvse
NGiQtrfXqFFD+UJWylGi/WaZMo7FVq1dY53bcW+qVLGMx4+UatmypbA8A6+k
5LbCPVtKkyZNsux34CpFmohxXrtyFfeeU4/6ykZ7xTN1PxUTa60Xw6stFn0q
PS26lB8j2pUZLJqVfEg0KP6g8CzWWtQq2lxTtcINrGUv1Dco3lE0L9lLtC8z
UHQrP1r0qzRdPFZtoXiq5lviea+PxIt1P7PqX9atV87n3hOrviBKZOGzAXz+
Avf5Ll8PSkrO1KFDhxxiWDuqTsn13PuFMt0z/Lp79OihuLdSjpHi3op75yTZ
8m19nl5fW/Zty73tCffGmpLvwL0ZA1z6QreU09iAJ9th4ImJiX+aTKY/6es8
JibmRlRU1JWIiAiz0WiMRDkQ3xEv4p7lVEhIyGGDwbAH9R+hbmtsbOwGs9m8
HmPeQt0ajHkN9UuxVhbR3znGPm+x936aPoTpTxj5RPQbi7EjLXG+B4eGhvbH
cR9l763Yt0rW5HAsbv0zGDqf/HaZNp/p4Oebn3N+5rEXFJP+y/Wxuumz/ODB
gxV+/PHHythHqpBnY++oduXKleqQxrS5/si0uR7RrsXfxprX4m8nJCRoTBv1
djk2/ZFjPXZGXVfkZNpdJdPG8UOYvzf69IPoG2IgpDFttD2G8uPoOxrlcXy2
BuXJKE/F2Okoz0I/Pn8zD+V5mPcl7A/LGJuBexaO1+Ha3sP89GG+GdfyIXL6
s/gce8p+lL/Fa/he2nTj/TmFffUM8rMYo9l2o+yHOQJo241+BhxHoByFup9Q
joXiEv5NSahPRn4Fc1xFvRbHmz7NIfJujXNzP0b+py5ehca6dXs8n4FKqVmz
pvZ3F/uyk8mMSiqppJJK2ZX++OMP0a7dvyyNXAx/h1x+n6OkJDVu3DiHbL5L
FO/kltz7Aa99mfpN680331T+zpXcXnyGq27duln2W3Bhj5LikWpLcz33fv42
7RFz0+hLTfPS6AurXtD0eRq9WPfzNMw7t3HvRZ6bRafSfbPMrzn1wAMPCD5/
4ep1oKTkbCUmJqYULlw4w2tmdcXHcz33XlSmV4Zfd6dOnRT3VsoxUtxbce+c
pvRsvG3bbcfYs/1OT3fygZ5sYSLSFzqZN5V851jg9I1OW8K/4uLiyL3/MJlM
5N5X8d0wPjo62ojPfRBy34iIiDOhoaFHcd/yNdp2o8+HMTExmzDmvdjY2PVG
o5G+zl9HWbP5RvkljHuBzAn5bNSTQT2FeZ5EG22+RyEfiTmHYs6BtNMMDw9/
ODg4uCftOMnByMPIxRivF+PSxPvGsRbvm2yN7BvHXmRuZG+0+Sb7Jptj7OCM
xvvG+1bcln1Lm+9jx46peN8qOTvls5Www8H1kp87KdRZP5uM1c3PK+oLUgcP
HixEbdu2Tft8o07zcbB///6i3t7exaivv/66xHvvvVdm165d5X19fStwHWF9
2I3TLeNycx1indVGvzpYZ54+Pj51/fz86uG4AY4bYp7GKDdFuVlQUFALf3//
B1BujT4tcX2t0N4Gde3QpwPO8yDO0xnn6Yo5u+NcPVF+GOU+9BeB9v7cR1A3
BP0YP+ExtI3C8Vgc07f5U+j3FOZ/GvM+h/oXoJcgzcab/iqw/6zGuLdx/e/S
1hvn3YXy53gde9FnH17Tt9jbvrfE7z6C/eYH7DEnUD6N/e08jn2QXzKbzUGo
DyUDp39z1EXjGFmsGXkC3ZzjHuRnMnC0X4V+Qd0NiLG8f2c8b/Jv7EMaA8ex
FtPb8tzS3yj/Q5sr2gLisyDw2lyBZlRSSSWVVMqmhH1fyD2eseaUTahSThG+
Dzr0ewi/urZoHOR23JsqWyLjv61KlSxZUuA7rMv/X5WUslu4B0vx9PTM0t+E
G5bqLSbX26O4t5tw7ynVl4iKBatl6WeE8bz5O76rP/9KSq5SgwYNMrxu5pZ7
JNdz75cc4N7cL7Lj/yAncO8tZXuKhwvXuCf1Llz9HlTtPxVKqz7pquo9qW8a
Vcmw+mmqfE96JI0q3YMqptGj96QKolg+jwx/HhX3Vtw7p+lujPtObfb8pF+5
cuWWVLLO3lvahafHv6U9uOTflIz9rVeyjn3Th25cXNxfZrP5j9jY2F/xWSf3
ToiKiopGOSQ6Oto/IiLiXFhY2DGDwbDfaDR+hrad6LsF4zYyzjf6r2OMb5QZ
H5csaTHGLEC/uTExMc8wni7qp9HfOW2+GeOb7BtzDg8JCRmM8qPo3wflhzC2
G20/yb5NJlN7jGuL49Y4tvo7x7Hm71yyb/pMluxb+jsneyOHk+xb7+/cln37
+fmlYd/k3rR9tefvXLJvssK7se+M+jsX/7FvlVS6U7pn/+YiHXtwflZt/Zvz
M83PNj/jentwsu+1a9eWPnnypNXHufRvzjXFtWXr3zxZZw/ONclnUujfXNqD
Y476XL9cx1zPWHfNub5Z5hpnmWuea597APcCxkCQduE4N+3Be2Lfeoj+ItBX
82+O8iD0HYryCItfiTGM641zTcQ5pmHtP83ncbD+56P8Ml7HK5hnBdpXou8a
jCP73oT3YyfqPsFcX0BfoXwQuTf2hUMyrjeu4QfoJI7PQhdR54/jQJRDGNcb
Zc32G8cxUBzKtPtmaO+fLT7Or6DM2N7Xkf9KH+cWu+8/yL2ln3PafEvuzeeZ
+Oyu4t4qqaSSSu6b8L1UFC9eXNvn582bp2xClXKE+AxGtWqOcYkqFf/nlty7
XYOTWgxzR94Tqnfv3mp9K7lEuA9x6vlo9928efMs5ZrFCpQX/asvV9w7F3Pv
hZ6bRLcyA4WHA1zgTurXr1+qsz/jSko5TfyOkdG1M75U51zPvR3xc96zZ0+3
5d7HrRpi1QmrBqfRyYqDbDRQnLpNA8RpqQpUf6vOWPWoVWc1PZJG5yr0s6O+
4nwa9dH0o17le2u6YNXDaXRR00Np5FO+l416avJNox6a/Kzq/q/KdRf+VnVL
o0vlutqoiwi4TZ1FTY+M+11Q3Ftx75yo9Nj33Ti4bVzwZBs7b8m+78UXuo6B
S3/naWSPfdOWUM+9o6OjrxqNxgR85qMk9w4PDz8vuXdERAS59w4L934fetfC
vVejbnlMTMxSlOnr/EWMn0Nf58hnot9UjJ2MuSYwxjfqae89jHaa6N8P5d60
90Z7V2XvrVIeTU7l2dK/OT/vev/mXA98FoTrg+sE/cp/+eWXVTDOas+NdVWL
9twYU4frj8+e4Lg+4w8wDoE+RjeOW0qGjbnb4hra47gjfZpjz9DidCckJHTH
XtQT5e56no3jfujXH2PIs4dYeDZ9mz+BfoyZMAHlJ1E/BceMpzATx7NRfhZl
xlqYz9gLqFuMa3kV17QKY95E+R20bcR5t2Kd07/5DvTbjXGfYa6vcZ3eqDuC
tmPQSdRrvs2xP1yw8W8eBDGOdzjOp/k3h2LRJw5iLO9EMm6IPs41/+aY4xf6
Nyfrpo9z1Ft9nKONfs41H+co/22RdT+Xfs4V91ZJJZVUcu/09ddfi3z58gkP
Dw+xf/9+l9/nKClRM2fOdMjXeYEC5UTbFtfdjntT1cs/lSk+s2HDBsW+lZwq
xjquX7++WLlypVM/ezwvbeoys17sqUHJXmKi1yeKe+cy7j26yhxR9v6KWfpZ
oMiZ+Jy4q9eZkpKrNXny5Azvt4NLtM713HtO6a4Z3jf69u2ruLfi3op7O/A3
V3HvvCMbdu3Q2PSUrOPeeltwW5twvd9z8hG03ca+dUw8Dfemn3PJvSMiIhKQ
R0EhUVFR/gaDgfbeR8PDw8mDdkdGRlr9nGNtrEd/+jlfhfIrqCdfWoBj2npr
8b0xzzTG3aXdJeYaS+aNtuEBAQGDQ0JCGLO3N30X47gb8k7kYuRjmKM15rba
eaOs2XnL2N5kbbQhJXuTdt7kcrTzpu0pbVD1dt60U6W9qm1sb72dNzmgPTvv
e4nt7aid932Kd2c0pRv/WtyBEwsbVizSiYetZ8b6mNj2uDGfjbDHju3xY372
+MwFn73g51FvKy19hWOu6oGBgTXQvybZMp/lYPx6yZb5uUe/Bnzug89/cE1g
zmaSL3O9cN3weRFL/Oz2qOuIuk6o68zY2fSpQL6MNdKT8bOhh8mY+fwJ7abR
rz/6MY72IBwPQXk4rnkkn1dBeSxjaUPjsZ4moM8krm3GMeCzLWTPqJth4c+z
yKCh/6HuWbQ9h/x5HM9FO2Nuv4i6+dBC6CVoEd7PhdBLCQkJi6CXoSXQUuxn
r0CvYr9agfw1aGVSUtLr0Gq0r0H+JtregtZB63H8Luo3oLwJ+QfIybe345wf
Y+xulD+nHTf2wn3QfrR/g7rvaM+N/sdwLadQPoc2sm4fzOcPBaAcaFEIFIp2
A+ojoSgoBscmyIy2eCgR+hn1yYzpjfpr0C/QdegG6n5F/htyzb6bzBvHf2Jf
/kunvyXz5n5u8euRUr16de3vLj4LzsQwKqmkkkoqOTHNmTNH2+tpY4u/vy6/
11FS+uGHHxz0dX6f8Kr1gVty7y5NI8X9Bco5zGjKli3L73Mu/79VyjsaMmSI
9Xd4lnFf57Rz0wa3f//+Wc6+C+YvJrpUnC5m1D+ouHcO597P1lorGhdrk6X/
/xSfFZw7d26qo7/JKim5m+bPn5/hvbZf8ea5nnv/r1TnDO8fjC2VHf8Hinsr
7q24t+Le7qLMcG9789izAb+bzbc9n+fpSdp904euLfeWfs6RQpFfMhgMmr13
eHg449x+GhERsQP3R5sxZgPWxjuoewttr1u4N+N7L4TmYfyzGD8L+XTc40zG
uEnk3vQ/TO4dGBg4RHJv9FfcW6W8npS9t8Xemywe/friWPNfjvJgnf/ye7L3
Jl/HeRbwWRzUS3vv16W9N9o2of4D9N2OPozdoNl7M563xd77KPatHyz23udw
jWTgF5H7oM7fYu8djDwU80RY7L1jUGfCazHT1BtKsth7az7Nsd/S1vu63t7b
4tv8jvbelj3bau8t/Yxir3Mqg1FJJZVUUsl56a+//hKtWrXS9vtJkyYpm1Cl
HCFH4kVSJYo9mAu59+3s25Z792iRLBpUfzNTvIa+SBWrUXKG1q5de9tv8LT9
xn2e066B9zIzZszIcvZNlS/kKYbUWK24dw7k3i/WeV90Lt1fFMiX8d+a76bC
hQuLzZs3q+9JSko6vfrqqxneZ3sWbZzrufeMUh0zvIcMHz5ccW/FvRX3duDv
r+LeeUvZdb/KeWnjl2yHdevtvZPt2H2Tleilj/1NJSQk/CO5t8lkuiHtvaOQ
6Oec9t44Pmtr701mRHtvtNPe+020rcTYpbGxsS+FhoYuwDF9DM8m8yaTol2o
wWAYj/on0H8E7UgvXbpEH+d90d4LY7r7+Ph0CQkJ6aCP541rambr25zxgaVv
c7I3e77NMxrPW+/bPLPxvJVvc5WyMFk/I/Y+P/LzJZm4/jNI2bNnR72Vh1P8
jFP8zFOSh0smjj4l33nnnXLINRv1wMDASowdIG3U+ZwJ1x72g+pms1mL5811
qbdTJxNHv4Zk4nZs1FuhrS3mbI/61ixzH+AzMCh3QXs3rMXuWLO9MOZh7hko
P4L6AdAgzDGUewrqNZt0lMeiPAH5k2ibBs3C8SzM/zzjeqPPYuTLodW45jdx
7W9zH0Of95FvwXk/RtsX9HeOPeYAcm+c/yj2MI2BUxhzBjpvievth3Ig+pF/
h6NsRF00+sXE/ZviUZ+EYy2md1JS0hXkjOv9C3QDZfo6/53+zqGb0vYb/f7E
seaTQ9p8o3yLftuUvbdKKqmkUt5I+G6s+TrPnz+/+P77711+r6OktGzZMod5
VbOGF92Se3dv8bMoWfSBTHGbFStWKGajlK06ffp0SpEiRex+/ooVKyY2btzo
1M8gz0demZl1k55qYD2OrP2u4t45gHsv8twm+leYKIp5lMyW/+tKlSoJb29v
l68vJaWcpjVr1mT4+1qnIvVyPfeeUrJ9hveRUaNGKe6tuLfi3g78DVbcO+/J
Ebtve/1t7b7JvfXs29bHub5Mm0Bp7303X+fSz7nJZPoDn3Ny7+Tw8PB45JE4
DoqMjPQ1GAynQ0JCDiP/0mg07oyIiNiC/L2YmJh16PNmWFjY6xizLCoq6iWM
ewH95uCYzHsa6iYjn4C+Y1A3Kjg4eAR9KGPcoyj3hciyugYGBj549uzZ9jh+
gLbd6N/kXlg3mVtmWbetbbcjrFvco223+I91q6RSRpL+GYm7MnDKloGjzvrZ
3bhx4/33wsH3799fFPeRxVauXFkK/cqeP3++nPTV7uvrWwHrJw0HR11Vf3//
alyXtA2X/tqlbTj6eqGuLvrUp792HDdCuQnWaDOMbcHyuXPnmmO9tuRegPrW
QUFBbXGeDtwjUNcFc3XD3N3pIwJr+iGs+9443yOo74/2QSgPwdzDcd6ROB4D
TYAmYu6pOMcs9HsO5Rcx92LsJ9y3yMBfg97AHvUW6jfh/Dsx/2600f57L+oP
IP/ObDZ/Hxsb+73k4Ng7T2KOs9BF1PnHx8dr/Bv7iQHtkVA0FItjM5SA/knY
c3/GPMkoX4Guof46xv2akJCg8e+kpCT6PddswFH/J0T7bxmXgs8q3apZs6b2
dxev0fkQRiWVVFJJJaem2bNna3t+t27dFBdTcrnwHSylUKFCjvGJCtPckntT
bep9h5u8/A6zG76nx48fd/n/r5J7CvccKQ0bNrzr5/DJJ59MpS9yZ10Xf0Os
WDHrYzxT+XDL3KBkTzHOc5vi3i7g3gs9P9B4d+kC5bPl/5dq3bq1uHTpksvX
l5JSTtSGDRsyzFzbFK6T67n3+BKtM7yXjB8/XnFvxb0V93bg77Di3nlbV65c
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
e967Re6KSd5bli9fLnlvyXtL3tuKz2XJe0skBpYxwRPy97b0+9b7eattcfp5
37lzx8x3R+t475CQkKfAI1zn5L3/CAgICFN1zj1V3vsKeW/UM87tT8CWwMDA
dRizGum3Pj4+S7y9vedRPxhjZjB+LqDonNPnmzrnSAd6eHi8DbxB/0z6aWJM
p5s3b7YzGAytnJycmp8/f/4lLy+vejieEtObvJfm802+mz7f5Mq0mN7k0RLy
+b5x40Ysn2/8v/leFNNb47tlTG9p6chSVAOdawPj8//www8F+QwJ1xW5bq4x
rjWuOS3mN9ch16M+5jfXKtcsuW4+s8J1zPXMeN/kt7nG+XwL1z3XPNc+437z
+RfsE4r/N9Z9Y9yTvYSyWf+cz8ugrS15brR3VPXPu0ZGRnan/zf69cHcA3CM
d9H3Xcb5xnmOpuY5zusjHH8mxn0GzEb/Oeg3H2O+xnmsxPE3oW4r5t6BdBfq
99HvG/MfIVD/K0C/7zPh4eHnMcdllJ2wv7gyxjfqvJH6oT4QeYXzjvjX6PBN
0vs2+v5Bzht56p2bOW/6fZPzZoxvct70+Sbvjf37KeN7A/9Ur15d+dzFe5Ga
tIs0adKkSbOj8fde7v1r166Vv0lK2B1ff/21VVrnRM0qP2VY3psoW2xIsrid
7NmziwMHDtj9PZZI36APtfa5kRy8+uqrJtxDpdp5e3p6xnTo0MHq/SUpyONQ
WDQr+rYYXHmD5L2TwHtPqbJGdC0+WJTJVSXF3yMiZ86cYtasWan6DEZmQFhY
WEz79u1jrTV+/pw4ccLu5yaRfEyZMiXJ+2iXfPXTPe9dL2epJO8xW7dulby3
5L0l723F57PkvSUSA0vOW5/X+3oTOm77Oeg5b9WvO5aft4boePy9Q0JC7gcH
B98JCgqKwDVvBPzUGN83/P39LwQEBBwPDAzcj/Rno9G4Ff03o+8G3Aet9vPz
W4oyeaPP0f8zb2/vGch/iPYJGPM+5hqp8k7vMhYv2vp6eHj0dHd374Zy++vX
r7e7fPlyK7Q3pd4xdY9xnHrUQVb9vhUenFrJ5Ms0Hpx+3y/iwel/qvl9J4UH
t/T7tiUPnkX6fUtLvpmvo7iuMb1ft8Z56zX6Ce0aJjZs2JBD79+t1z1HOc+a
NWvyU+scfZV1RM4ba6Uoee9r164Vw7jiLi4uJbCWSl69erUU1nNp1JVBXVk3
N7dyXKNcq+S9sTdUwhyV0bcK+lRzdnaujj41ka+N+hqor4VxdZHWx3EaUAMC
7U2Qb4rjNUd9C+wdrZBvg/2iHdqpGdERe1RnrN2u9PFGvieO0xdjBqD/u9Sa
wNzDgNE4j3Gom4w2xmX4lDoVjNOAOecz5jfSFTin7/h8D853O5/1wfi93Puw
Tx7CfnII+WPASeRPY/xZ4CL2nmtod8E+6M5nhrCf+CAN4F6KFNUh4SS+cb+u
+Hojext1d9DvHvL36e8NKNw3+ijcd3h4+P+AJygr/t7o9wzlf6hBhveez7un
PvEiTZo0adLsYqtXr1b2/pYtWwp737tISOB7T4wWdz6pyJ+vWTrhve9axXu3
rR8kcucsnyyehz6v9NW19/sskX4xYcIEm3HH5cuXT1UujL9/ffPNN6YCBQrY
5PwTgxK5qok2JUaKEVW3St47Dt57WtWNom+p8aJa3kZKzPTUel/q1q0rzp8/
b/f1lNEQHBwc07p16zj3CKl3njEwaNCgJH8GDCjQPN3z3hWzF07yPpNSzxpK
3lvy3pL3lry3xH9ct6XfN6Fpmb+I97b0935RbG+V+1Y4b6Y63vsx8ADff+4G
BQVFkaRB3oC8r8FgcEd6NTAw8DT5noCAgANGo/FndPkR9dt8fX03+fn5rUZ5
CcYs8vf3nwfQh1KJ940xHyId7+PjMxZ9hyM/kPF3qXl+8+bNPoz37erq2tnF
xaUd+tCPsxnGNkW/JhoHzhjA5MD1vuCWHLj0BZeWCc0qX++kxPvWeG/6e+u1
zfk8iV7bnLrmmr93XDG/uT65Tqlrfu/evUpYb1W4hjUfb65t6poz5TMvXPco
N4yKimqEeejr/TLmbIH+rTF/G2qaR0ZGKprmmLML+vIZmh64R+uFvn1R7kdf
b8w1CP0HY52P9Pb2HodjTsReMA3H+RTjZ6Pf55jrCxzvK4xfwr0M/Taj3za0
/YC56O+9H+XDONYRjKG/9wngNON8A+eRv4Lj0t/bTfP3BvxRH4Q0GP87Y3wz
yPetqH+Jb8b4jmaMb7Tfp783qh8Cir83Y3xr/t4YZvb3Rv3f1DmvXbu28rnr
5OSUqpyLNGnSpEmzn+FzQBQsWFDZ/3ft2iV9viXsDmt+U9VQt8ZvGZb37tDo
D/FS9cMiazK5oUaNGgl8l7T7+yyR/vDzzz+bqFOenOvPEvS5TW0Nfj770a5d
u1Tx/dbAOOClc9cWLYsPFu9VWpmpee+JlVeKriWGiSp566cq161db9OmTTNR
h9ve6ymjwWg0xjRv3vyFr//48ePl98x0jviea3gRRhd+Ld3z3gWzJZ1nTKln
ayTvLXlvyXtL3ttWuHPnTrL6xzU+qXMm9/wtOW8NGh9uGc87Wo3zbVHW65rH
0jjXEK3z9759+/azqKgoauk+xnfKB8DdsLAwxp0NvXXrViDyfiEhIR6AE/Ln
gJO4/z6MfnvQvgspue+twcHB61H+FvMsJfeNNfMl2j7D3DMYPxdtkzDHePQd
jbohwHsGg+GdwMDAN9Heg9y3n59fR4x5FefYAufWHP/zy8BLOMfGjOl79+7d
+miri7baqK+F+hp//vlnNbRVvXfvXmXGCEZ7BaA82ssCZdCn9MOHD0sCJR48
eFAcKHb//v2iGFeEMYnJ4ZHL0+IWo7/Cfwsh8jL+N/lv5JXY30gVHhCpwgsi
zaFC4Q31sb+FyoELHf+tIl6OMovkv6XZ3pKtgU5fcPTJjVRZE1wfBNcKoY/5
TR10PS9OTlzPizPed3y8OH3B6RtOv3D6g/OZFg8Pj2por+bj41MTe1Itap+T
D6f2OcY31mJ843xewTH02uftUG6PuRhPoQfqe2COfsi/jfZBWL8jyIHjfCag
7yS0T8Zc09D2Kdrm4zyW4dxWMpYDjrmBexzKP+B/2Ilj/Yi63Wjbh3M6hPHH
UD6F9nNovwRcQ/0NHN8dfby5h2p652gLwWvGvTUciEDdbbTdwR6m6J0D9zXN
c8b45r4M/I97NF7jJ3xOCXP8U6dOHeVz99q1aylPtEiTJk2atDRjCxcuVPb/
WrVqSV8cCbvj9OnTVv1GQhQp9HqG5r2JKqWmJ5v76datm9T2lUgSrl+/bnVM
78SgX79+JvqKptb/w9/BVq5caSpWrFiK/U8vQv7sxUWDQt3E62VmitFVt2do
3nta1c1iQJmponnhbqJkzgp2eb0JPuvA69jeaykjwmAwxDRp0iTB98DBwUEc
O3bM7ucrYT1KlUq63vfMYj3SNe+9p/Rgq/YcxtdIifdA8t6S95a8t+S90zPI
VWtgOT7eOinj4ovtbenvrff71vLkuTWuW6dpHov3jlb5bvp6a/7eERERT+jv
HRoa+pCau7iP+QNpOOp+Rz7QaDT6AG6ou4T0XGBgIDke+jweQLrXz8/vZ39/
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
eZPX1nPdep5bD9ZFq3rmBHluct5RUVFPUSaeIP8E9wUK533r1i2F80ZZ8fMm
B0POmz6JSEM1zjs4OJgxa2+i7ArcMBqNjPF9HnW/0ccb+SNYM/tVffMfVW7o
+6CgoO8CAwPp370c45Ygv8hgMJBbmu3n5/eJj4/PFH18b2DYC3y6e+l9uunb
aWufbtSVlz7d0jKgJSn2N8rZNd5bu3aJhLTOX+T7Tb9vrh/N9xtrpeT58+eV
50no733p0qVKXIuavzfqa6nrlb7eDTG2iRrruxm1zenvTZ6b61+L9Q109Pf3
74Hj98ba7Ysxb1HfHPWDMecItI3FuPHAB+S7UTcF5zUD63sO1vVXmGcxgbpv
0LYWfdaj70YCx9qC4/+AuX5Cn19QPoDyEbQpOudIFZ1zjHXhXglQ59wfrw19
voMYMwKvUTB1ztEnCnV/oM7MeWNfNuucA49R/h91zvmMEnXOW7RooXzunjhx
InWJFWnSpEmTlmYNnxuiZ8+e5nuzl19+WeCz1e73RxKZB/TzzGLFbyZE0cJ9
MgXv3QloVHmbou9u7WulIXv27IJxne39vkukPnCvElOuXLlkX0NFclURXSos
E3mzl7D577b0uaY/ur1fqyNHjsT07t3bxPVi6/9RIm5UqVJFzJ4924R7dbu/
/5kN5EtS8nkYzn316lW7/58ScYPPvVrzvvbI3zjd896Li/VI8v/NZzlCQ0NT
7P2QvLeENZC8t+S90xLi0jFP7Jj4NM6jVT9upuS8tbLKb2u8d6x43XquW/Pl
1vy6McdTAv2pZa4A9U9Q/h/5FOro0qdQi+uN8j2Vg7kdFhZ2C58DDO/9OxCA
vG9ISAj9vMnn3ACuYn1cwHda+jcypvcho9G4PygoaBfm2E5dYOoDA+vo341+
yxgzl76UAQEBXxgMhs/o4+3r6zsZ92+Mrzvc0qc7Lv1yvU/3i7huf39/M9ed
mj7d1nLd0qdbWipaonTPeS2S+6bWOa9dtCmw5L+J+PTPNf4b+47CgVvG+aaf
Nz7bS2n8t6OjYwWuSazBSoztzfVK7ht7Ul1y3/TzxjxNqN2A/aAZ9rGW2Hta
45ht9FrnmL8b9oCeGNuLOudY1+9gzSu+3ljPo9FnLDAO7dx7JiGdiuN9hjU+
jzoU3KvQfyn6r0S6GvOvRT33sk3ou5V7HLUscB6/aP7eOP5Jvb83UleUPenv
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
QiJubN++3ZQzZ9J/u7c1mjdvLuR3SPth3rx5VnOrrfPUVDjv9M57zyrSyar/
n37yKfneSN5bwhpI3lvy3mkV1nDeBJ8t1eJ6q7y3FrPbHL+bIO9N327y3KqG
+RO0W/p2Kz7d5Eno102fbgL1D9H3IeoeAPdR/hP1BLV07+r0zSOQkoP5HXME
hYaGGkJCQvxQpo+iC+N64zvN5eDg4DNYF78Bx/39/Q/6+vruQt1W9N+I/Hpg
BcqL0D4P6VyDwfAZ6mYAkzHHuLCwsDHIj/T29h6C8ttOTk79L1++3BN1HYKC
ghi7uzV9N+nDGRgY2AzjzbG7Gds3ICCgHsp1UK5F325yYvQHpV8o6irRt5uc
Gf1F6duNeUpb+nbjXItijNmvm1y3PnY34xGT6yY3p4/dbenXLYTIkZBvt1B5
bpGAb3cWyXNLS5um6J3rruc4YcmF63lw8QIu/PDhw3kXLVpU6NixYwW3bdtW
jM+k0N+b3Df1GajXwPWNfasW1z25by3GN/alJtjbqHWu+Huj3Iqa5+S/6e+N
Yyj+3tSS0Pt7Yz8YFBkZOYQ+36gbivJI9BuLPenDmzdvzkDdJ5hnBs7hU8xB
7vsLzD8f9fPRbxH6L0Ve0T7X4n0jv52a5yj/AhzGmN8w/hz6XUR6DefohOO5
AO7Ye2+irx/mCcKe/DvONxTt4ZEM9k3yOyrqNua7C3DPfkiNDpzP/1D+u2fP
nsr35x07dqQmXSJNmjRp0jKI4XNFzJ07VxQtWtR8L0cuvHfv3qa9e/fKOMES
ycasWbOs/q0vu0Nh0axBWKbhvRXuu16AKJS3qc1+M8udO7cgZ2fv60AieeDz
CyVKlLDJNVEsdy0xqNZJC847ft6bGAW8VmaWyJ4tt81/123atGm60iZgbPWN
Gzeaxo8fb6JvZXLiOaQlULecvOXYsWOVON3Xr1+3+2stkTB4LTJ2TXLff/rI
FnIolOx5XnrpJcE4J/Z+XTIbyMMkx9//qxJvZQje+418DZL8v1PHIqXfH8l7
S1gDyXtL3julEZdGeWLA34hU/jpJ0Pl6azrnsXhvrazx3ppvN3lvTdOcZY37
Rl7RMrfkvQk974257+l5b7obUt+cvt5ACOZlXO9ANbY349K6hYSEOAcFBV1D
eh44i7Vxys/P76i/v//e4ODgH8LCwrbg+84mX1/ftdQCxljyQwsCAwM/J/eN
ftPR70PMNwH59z09PUehPPjGjRsDr1y50g/3E901bXPG6bXUNkfZzH+jTwNL
bXPUVde0zRkXOKna5vT11mubk//Wa5vr+W9LX2+pbS4tA1tW9VqNBVvx4FxL
M2bMKEC/b8xX9OjRo4rOOfYpReucz7JwTet1zsl70+cb+0Vj7FvNsDZfod83
dc417pt7CfUj1DjfvTw8PPph/JtY/4zzPRB9BwGDsa8MQZ/hmGMU+n2AflMx
53T0nYK2mYzPgHOYTd9v1M9Vn+f5ir7fyHOfW4G2dUg3M9438juR7sO4X9F+
GnnF7xtjr2JfvY7UGXuvK+q9MG8AnzHCuQYj5b7LeN/0/b6FMXdwHO7ZD7h/
43iPMebvvn37Kt+fN2/enHokiTRp0qRJy3D28OFD8f3334vWrVvHuq+rWrWq
IG/JeLL2vi+TSJ/A95Vk8XWli4/JVLx354a3RPt6/qJQ3iY2/e1swIABJr4X
9r4eJJKOPXv2mPLnz2+T66BAznLinRqHxfDnOO+EeW+if9UfROFclW3+2y51
IXbt2pUun8/gb3/0hcb9mGny5MkmPjdWr1495ZkTW79OtgD9gmvXrq083zZ1
6lQT9ebPnz+vaE/a+7WUSBo2bNhgyp49e7KvCXLe/Yv2EZ+X+0Tky5Yv2fNV
rlxZXL161e6vT2aBi4tLsr5nNctd1cx5p3feu2aOpL8O/H6U0u/R0KFDTXy2
SEIiKTh37lyq7yeS904YGYn3thZ6f+8X8eOW4/T+3sgrvLfGdaOOmub08WZZ
4bxVf28lbjd5b1XXXNE01+J3U88cZfLc9PNWNM1VXfP7wJ8Ye5dA+x3V1/t2
REQEY8vS1zs4MjLSiH7kvAPCwsJ86O8NKP7eQUFBV4xG4zmsizNIT/j5+R32
8fGhf+M29N/k7++/HnUr0U5OaAH6f4m62QEBATOBjzDHBMz5PvqM9vLyGk7+
6cqVK29funSpj7e3d2fqE6NPG83nG+XmKL+MvDmWN8r16fOJeTWf7xr0+Ua5
Kn1DyZOR79Z8vsmh0efbw8OjlLu7e0mN77b0+SbfTW1zjfPWx/Im561pNMcX
y5vQa5sL6fMtLWNYnLy3JV7Eg1usi1g8OJ8dmTZtWr7NmzcXWLt2bRHy3nxG
RYvxree9NX9vrNGGfP7lr7/+aqTx3lp8b+yzRCv6e1PrXOO9Mdcb6PcmytQ6
H4g98D2Cz94AQ9E2En3G37x58yPMMwVrn/oU07DWP0H/T9SY37PQ93Ny38gv
ZLxvct/UPbfQPN+NPegI90jUnyH3jT31InAF45xw3Bvow9gRfqgzYB7uub/j
f6Hfdxg1zzEmGnPdV3nvB9g3Fd6b39Hxnoj169enHjkiTZo0adIytOHzT8yc
OVOUKlXKfH/HeOD0A1uwYIGJ8WXtfa8lkb6QHO3NrFkdROPa1+3Me99NVd5b
474L5m1sU76rRo0agvyWva8HicRj1apVNvHlJHJnLyLerLZLDK9z2Wree1Tt
82JozV9FVRvGov9vrWcVEydONFnjP5IWwd8DqZ27b98+08qVK00zZswwkfvo
2rWrqWHDhoqGuK3jMTNuOn0XGzRoIDp16mQaMmSI6eOPPzbhvtp08OBBRStf
8tsZA9Se53ez5F4z2bJkEwOLvSVWVlqsYHyp0UpdcueljtCRI0fs/jpldNC3
PjnxF7JlySqWlXwvQ/DejO3tYMW1y7Vk7/dRQiKtQPLeCUPy3tbH97bw9Y7l
733nzp1n6EO+28x7R0ZGKv7eqDfz3vgeq8TzJv+tapz/pfp3K7w3OROAnPd9
jKevd3y8t+LrjT5mnXPAT/P3DgsLcw4ODmas2vNYF+eCgoJ+w2fuMX9//30h
ISE/AlsDAwM3+/r6rjMajd8wHi7ShdQIps8kuW/MMRnjJyI/3sfHZwzj7OK7
+KBLly71ZyxeHKuT6vPN+LxtMfZVvea53uebPp8oJ1vz3NLnO7Ga55rPt8Z/
J8bnWySS/xb/ceDSpNnbsupj0ROM+a3F/Y4L6JOd0NYA491r4PpAn5wE1wy+
c+ahvzfKhXbu3Fn85MmTZbFHlfPw8KigajZUx/5WHeuwPnUe+PyLt7f3S1i7
zbBXNb979y51zdugvh32tXb37t1j2h77Qnes4d6o74N0ANb5u5hjoObfjTkZ
33sUxlJ3Yizje2POKTinj1H/KeaeiT3tM+pV0NebOueon4dz+Ar5JRi3jL7e
6LMG7eS8t6D+B+An5A9g3Ak+H4Q9zRHzX8ZY+ns7oexKf2/U+aCPgdoafN5I
i/NNrXPkozCHWeccr8dDTef83XffVX5HXrVqlZ3YEWnSpEmTllHt2bNnYv/+
/aJXr15Cz7s4ODiItm3bKvE+pZalRGKA7y0xFStWtPp32UIF2mc63pt4rZ6v
zf2+6T/yzTffyN940zjITY4bN85muqg5s+UXfapsVznv5PHe/8JRtCj5gciW
Nfm+ppZo3769yd/f3+7vQWqB+yPuTWOuXbsWg3vfGMYYIbZs2WKiDzlB3nzF
ihVKfuvWrUo7+XRqoF66dEnRXk/rcdIlbIdFixaZ+JxIctca+e0hxQeKlZWW
mHlv4r1iAxQf8GTvOzlzitWrV8vPmxQCY6nzmdTkvEcd89UTu8tNyhC895TC
7ax6DaQ2gYTEf5C8d8KQvHe0xl0naYymja7x3vr43qq/t+LzrZaZKvG99by3
qnOu570V7lvVOH+oapwr3Lfm7019c9Xnm7z3ncjIyNsMKwuE0+cbKTV3fw8N
DaX+bgD6KD7fKLtjPTiHhIRcARiz9izuT04FBAQcRtsv6LczMDBwB+qo97sG
dd+i/zLUUe98HrWCUfcxMB1jpqDfxODg4DHu7u4jr1+/Poj+mCj3JF+F8V01
DhznQx9whQM3GAyt6NuJcrwcOOaprXHgmu65xoHTDzwpHLil7nlCHHhSdM+F
5MClpQ977nrUXa+J8v229PfWa55jnrwTJ04suH///sIYUwJrqDzWfXmuV65b
rMma2Ktq3r17tyH2uEZYZwrn7e3treiaYz9ryz0CY9pjX+wAdER9J+4l6NcX
87yJ9B2MU2J6ozyCmubY08ag31ikY7HXjOfzOIzFgHk/w1yzsdY/wd4xG/vD
l5iL8b0XoG4B8l9j/1mKcUp8b/Rdg7rvGOeB8R6An1Xe+yTy5L3Po58l7+1G
3htzB2q8N329yXujzBjfUfr43tE63nvw4MHK72HLly9PNR5EmjRp0qRlPrtz
547YtGmT6Ny5s9BrapIP79Chg+nbb7814fux3e/BJNIuyOFkseJ3FA01K23J
dLw30aG+QRQrYN1vuS8CfUFxj2v360LieXAvbd26tc04b8bk7l5pjY7ztgXv
fV6MBnpXWi3yZS9u8+uTPssnTpyw+3shIZHW8MUXX9hkb3DI6iBGlBisct6x
ee9VQK/CXW22nqlRFxoaavfXLiOBz50ylnpy3pdiDvnFljJjMwzv/WruKkl+
DYoXLy6Syt1ISGRkSN47YWQk3tuW8b3j0jjXa6EztfT31nPfeg6c0OJ7k+9m
fG+CHLiqdW7mvql1rvl94xhm7pt6uZGRkYzvTd6b8b3vRkRE3AH+oIsh48qS
+6bfIfLBYWFhvwOB4eHh/ujjjbwH1gPjfDsBV4ELRqPxTFBQ0K/4TnMAfX5B
eRe5b7RtAhjzdlVwcPA31D1nrG/MNRf1s6kbrMX7xv33BBcXl5Eo0xezP8a8
QR9N8lbIx+LA44r9bcmB0yeUHLiM/S1Nmk0sXo47Lm3zuPhtQq+LoMUK4HpZ
s2ZN/q+++qrIvn37ilHj/Pjx45W5TrlesS5rcC0ztgHW2cuMe8A1j/X5Ktrb
ke8mx809gs/LoPw60AP7V0+sZ8XHG+kgrN3hjK3AGAvoq3Dc6DMJe+CHqPsI
mIo9ZgbW/2zsQ/PIb+N481C/kHsXtSuoZ06uG3mF60Z+PcZsBL5H2w7U/Yy2
PcAB4Fec51nUXUD7FRzPCefpjHNzR9kT83vhPALQh9rmIegXrvLdt9TnkKIx
5k/gL1W/4xHGPSHvPWLECOW+9+uvv05lBkSaNGnSpGVWIwe+bds20bNnz1gc
OPU2GzVqJKZPn27C92C738dJpD20a9fO6t/rc2QvJprVD850vHfnhpGiU4MQ
UbpwX5tziwULFhTLli0zyd980w5Onz4dQ87XVu8xOe+uFVdZcN62471H13YU
g2scEuXzNbP59cnPl9mzZ0tfUQkJFdSst8nayppdjC45XMd5P897r6r0tWhX
oLXN1nPdunUFNQ3s/RpmBDB+QnK0zQn6888p3k/lvNM/772/9DCRN2vSY4L0
6dNHfsZISOggee+EkZF47+TAmvtHzU9cRSzuG+2W3Lfi8426pxrIg5P71vy+
dfG+yXvT71vz/SZ/Qu1zxvom902/7z8jIiLuRUZG0udb476psRuBNmqeK/G+
gSDU+6PsGxoa6hUWFkbNcxfgGtbHJfI7qD+B8lHkDwF7Ud4JbA8JCfmevpCo
W4v0W9QtwTz0/15A/WDqCPv6+s5wd3efbDAYxqI8nDrE6Pce8u8g/xaO8Sby
fYHeyPcgv4Vz6oI2cuHtNU10LSa4pomO+ZoGBASY/cGRN2uiY0yNF2miazHB
9Vw4jvVcTPDEaqJbxgQXQsiY4NLSuinXVVy+3Ynlu3mdW3LdGt/NtcE1snLl
yoLLly8veuzYsRKHDx8uh7Qan1Ph8yp8bgXrsRG1zbG2WmANtkRZ0TRHqvh1
Y6/qzmdksFZ7o08f7A19Uc9Y3gN9fHyG0r/b399/LI47AXvcB+g7GX2moM80
lGcQmFfz7Z6Hvl+jbgmwiPsVn9vB8bh3rcTetRp9+TzPd8hvpo83wOd8fkLd
Hvp5o/8RpKeQnkfbZeA690ucmxt1MzDOG+fsg/ZAzBvCeN6qn7fCeSPhXnwH
893HuL/UffwxupD3/uf9999X7n3nz5+f2rSHNGnSpEmTJvAZRQ1L0bFjR2EZ
g7ZWrVpi8uTJJuq2Sl5NgnB0dIyhTn4WK35PIUoUfTdT8t5dgM4Nw0WFYsNs
zi0S1Gzg7+j2vj4yM7hHUruYusC2el+zZ8sjulVaI4bVuZKivDcxqvZZ0aTY
YJHFBtrIlujXr58J90p2f48kJOwJfp+yxXrKkTWHGFdqlFgRi/OOm/deWWmR
aJqvsc3Wcv78+cXSpUvls1bJwLFjx2LKli2b7Pfi9fyNxS4z553+ee95Ra3T
J1izZo3kvSUkdJC8d8KQvHfi4ntbtul1zlF+TueceUCJ762mis656u/9XHxv
TeOc/oHUOCfPrWmck+vW4nvTz5sa50ijyXdHREQoOufoH0atXfp6I09fbyNg
QLsv6sl3e+D+wzU0NPQ6cEXv7438QfSjryP9vX9AmVrn67F+1qB9BbAUfb/C
uC+AOSh/xnjf6PORl5fXB87OzmOoQ0yeG+1vYtwb5LlxTDPPndTY33qeOzmx
vzWeO63E/s4ieW5pKWfxaponh+vmetBz3Vwv1Eng2tmyZUvhlStXlvjtt99K
Yf6Kx48fr4W22lh3db29vevz+RX6ejOGN9c+1nR7PvNCH2/qQZDrRtqPWhHY
p/pjX3sLeBvtw7B+x2Cdj8O6nojjf4Q9ZBr6zsQ+8inGfQbMwl43mzrm6D8f
/RbjfL9B/QpgObluPrODY/K5nQ2oU/hu9N2K89nB2A6Yaxf67UV6EOlR4Ffk
zzCmNzlv9OEzQu44Nw/qZqDsh/PzR7/f0SeMOhsq7W3mvHFOdzHmAcD9/DE+
H8h7P0X5n4kTJyr3v3Pnzk1dokOaNGnSpEmzsLt374offviBepbKb5tZdPeH
ZcqUEUOHDjWhXWpdZnLwOshixe8pGupWO5gpeW8N1Ut/nCLcYu7cucWMGTNM
+H5p92sks8HT0zOGMa1t+X7+y3mvVTjv1OC9NXQtv0jkciho8+uTz1FJHRGJ
zAj+Tjx+/Hib7A+5suUSH5R+X6yovCRRvDexotJX4uV8TWy6ntu0aWNydXW1
+2ubnsDrYM6cOSa9zpK1KJ+9qPih7IQMxXt3z1s7ya8Dn8OkXry931sJibQE
yXsnDMl7x4altvmLYMGX/6P5fFuCnLiOD6fP97Pof2N/P9P7fqtc+BOkmvb5
/9D2WNVAf6T6fSu8OMCY38SfqLuH9A4QTe4FZXLhUZH8ExVFbiYkIiLi9/Dw
8CDqntP3m3q95HOAG2i/jH7U9HUMDg4+jfRX9D9CLgjYGxISsgv4EdNtBTbT
XxL96De5Ep87y729vRcZjcbPyUeRl0LfadQfRn4S8hOoT4z8aORHID8UYwfT
nxPlt1Huj3XaD/k+anzw11Vt9M6aNjr9Q/Xa6EFBQc0DAwNfZqxg+pKi3NBg
MNQn16ZpowM1NG101MXSRsf8ija6l5dX6fi00TWfcI0nx+sdSxud3J8lT67n
yuPjyUUcXLnURpeWBIvzGhEqxy0stMxRZ+a2hcpvCx23jbzCbyNV/LiR5ia3
jTQPr3M+G0Lw+sdeVAD7YkHi7t27he7du1f4/PnzJQ4ePFgW81Z0dHSscfXq
VSWON/o3wTp7Geu4NfKvoq4z5iPX/Tp9u7nmsQf2wzzvon4Q9wWUh2Lu4eg/
EuM+0Lhu+nMzvgL2ns+pX04dc/T5CnN+DSxG/TLUf4s+5Lg3Yo5NONfvUP89
6rch3Yb0R/TdibG7UN6D8fuQPwQcQflXpL+h7gzgiH5X0N8VdTepaY52X3Ld
qDcwnjfOk/rm4eS7cZzbqI/ms0jch6nDweeU0P4I0PbwJ+pzT/9MmTJFuQf+
9NNPU4fUkCZNmjRp0hJhT548EadOnRKTJk0Sln4puXLlEm3btjUtWLBA+phm
QvA3xiJFilj/u33OiuKVhlGZlvcmmlTeLrI7FLA5t0hwvUr/p9TD5s2bTclZ
D3HhX857tZnzTk3ee3Ttc2Jgtd2iZJ46Nr828+XLJ7777jt5bUpkGvB3YS2u
WXKRO1tu8WGZD8SKykuTxHtr3HeL/C/bfD1T4yIqKsrur3Nah5+fX0ynTp1s
ch3kyZpTLCn5nsJ5ZxTee2/pYSJ/tlxJfi1atGgh7P3eSkikNUjeO2FkJN7b
2vje1h4vObw3Ycl7q/G+zZrnGuet0z3/S4v3rfLe9ANXfMDJvWicN0DOm7q7
dEQk7x0cHh6uxPsG/AGN93Zj7Fry3hERERdQPkfeG/njyB9RfSAV3hvpD6jf
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
bvLd9AcMDw+/D9wjl4I2NN3+Q8dz05+QOrnhSENVDoZxZIkggPrkAWFhYeRr
vFD2wHj6KLqjzhljrqP+Ivkf8kDAGeqVk+tGn6NoP4C1sNdgMOwKCAjYQd/J
wMDA9T4+Piu9vLyWoI1+lrP9/Pw+dXd3nx4UFPSB0WgcS64bdUPQbyDG9Q8J
CemLOXv5+/v3QF1XzNPh9OnTbY8ePfoKxtXXc9uaxrjktqVlUIvTb1vEw3fr
uW6h47v1+gLa9RtXrG1e99Qr0PhuTctA47upc0C9g7j4buojUCeBegnUTaB+
Avlu6imQ76a+Avlu6i1Qd4H6C9RhoB6Dxndjvmbo+wrGt6R+A/JtGX8AaSdn
Z+eemO8NFxeXdz08PEaoMQ2oB/EBfbqxd83A3jSX/tzUkEDdEoylTvm3qF+L
+g0Ysxn5LcA21O9AHXUo9tGPG6nCd+P/pw/3GXWPc8Q+eAG4iP6X0aZokgOu
aHNDvRvmuqnG51b4buy7vqouBp8bCkTeyL0WqaJXzmeNuBerWuWM130Xc3HP
Jt+tcN7U6OC+rmp3mDlvansQGu9Nzlt7Lkr7vODnx5IlS5T74uHDh6cqLyFN
mjRp0qSltOGzTuC7jhg8eLAoVCg2n1e4cGGzHjq+X9j9PlDCOuA7YEzJkiWT
9Xtu7So7Je/dMFxB29pXReG8L6UID2EJPpuydetWE/Xq7H0dpVUwPnr37t1T
jO8mahZ5QwypfUnhvNMy7z1WwRnRsuR4kS2r7XmdDh06mHBfaff3XELCWoSF
hcXwOrbFeiiavaiYXf5TlfNOGd6b+LTMh6JY9iIp+llTpUoVRffHx8fH7u+R
rUEOYf/+/SbGE0kJvpvolr+x+CkW551xeO99pYeLotnyJvk1oZ6Uh4eH3d9/
CYm0CMl7J4yMxHu/SJ9cH4c7WvXh1qDTKo+X80b5b/045qlbi3tHRdecHAj5
bvIiSB+inX6B9yMiIqiFS877LkAfwlvoTz9uNQR3JP0LQ9AvRPU7DKQvN1I/
9PFjLFlql1OHF+036deN8Tcw/3XUXaN2L+oc6dON9pPI/4r+5ImOhISEMG7t
L+jzE+PbGgyGrcCGwMDANcByX1/fRfg+8jk1zNFvKsqT3d3dx6M8IigoaDDS
d8l3+/n59UW+B+P1or4z+e6bN2+2Q9rq9OnTzX/88cfGzs7O1eOLo/0ijjuh
ONpaLONUjKMtTZpmCcX1fmEcb4sY3ubY3UKN2y0sYnbzekc+rxar2zJO9717
95Q43VqMbqC4Fp9bH5sb/cszJjfmM8fjxjjG466B9lrYO2qjvS7mrI+2hqhv
jPqXgJfR1hxtLYBWqG+DunaY4zWM74i6zqjrhnGvo74X+vbBvjEAa3ow9pjh
WMfj8Zk7FfUz0O8TYBYwH/gKYxmTm3G419GnG/nvUbcV8+xEfhewB/n9wEHg
MM7rBPqeJseNfo5IL2LeK8A1wAnnwD2Qe6EbUu6Lnujjwz0TZX8CbQYgCHVG
pL+jLhhpKNIwIBz5SID7cRTwR/S/dgdZ6nHcBx6g/FCNS8FnmR6j/Bjp/zTf
bpTJdT9DqoD+3fyssPwsUT9PYr799lvl3njQoEEpzj9IkyZNmjRp9rKnT5+a
9dD5G2gW3b1nzpw5Rbt27UyLFi2SOszpEN9//32yfufPnr2oaFbPX/LeGhoE
iyolxuFG1PYatHGhfPnyYurUqSYnJye7X0tpAfx+Tg3/rl27pijf7ZA1p2hV
5lMxtM41M+ed9nnvf9Gn0kqRL3vxFLkWT5w4YfdrQEIiqQgJCYlp06aNTTjv
4jmKi7nlZ+k475TjvddU+kosqTBHNMyTMvEb9KDeSI8ePUz8zhAaGmr39yw5
8Pf3j/niiy9M1DFKyddsQMGW4udyky18vTMO7z25cFurXhdqCdj7GpCQSKuQ
vHfCyKi8d7QF52AJS96bvtsaV6Hx3BqHocvrufG/w8PD/1b9vJ8gfcQ43eS4
6SOI9rvoeycsLOwePufvArcBOnWHoI08TDDGE/Q5NKAf4RcREUHdck/6KmJe
d/otkutGvxtov0b+B6BftyOu73PBwcHku39F/4Posx9996BtNzWCGQvXaDRu
Q/1GlNcbDIZVfn5+y7y9vRfjs/tLT0/PWR4eHtNQ/wHmHovy6Bs3bgz19fV9
C3VvMGY3+jNWb6eAgIDX6ONJX0+Mb+Hq6kr/z8ZHjhypv3r16prHjh0rn1hu
+0Uxt1OJ25b8trQXWZL9uJOjW67347ZWt5xaCnzehM+doF9lai1QcwHzU7u8
Jv24Ua7LuAOoa8A4BIxHwLgEuG9rhvYWKLdC+VWU26LPa9gTOmDv6MTnXVDu
jraejG2A/BvIU//hbcw5CPvGKMbtBj7C+TBGwhyMo575fPp24/9bDqyjXzfK
36N9O/Aj9refsG/tRV8+n3MI+aPAcdTTt/sM6h2pX446xuS+zjgO1C7nnog9
jnsj4ztwr/RGuy/SAPW5IXLd1MkwYi7Fnxv5UDVmBONHRAK3ov41Rc+cMbs1
/27qmaPuIdK/VN0O7u2Kprkav+KJ5ttNzptQY11ouuZ/WzwzZY6Rgb1SuT9+
++23U5V/kCZNmjRp0uxp+C4jFixYoMT/ttRDr1+/vpg2bVqmjg+Z3vD6668n
6/f+QvlfFa0a3U9B3vtuuuG9u6loUf2AyJcrZX9Tt0SjRo3EsmXLTPzNzN7X
VGqD+sTUn0ip+N165M1eUrxe+XuV805/vDf9vofW2C8q5LNOn/ZFoM8kfUPt
fT1ISCQWRqMxhvoZtrj+S+YoKb6oMNeC805Z3ptYXWmheKPI68Ihq0OqfNbk
yZNH0fzZvHmzia+fvd/DxID+xYsXLzbxOU1y+Cn5+mTNklWMKNxe5bwzLu9d
OUdRq16f7777Tn5GSEjEA8l7J4yMxHvruWxLvXJL6HkJct7A36rP9986nz2m
mh8f01g8eEhIyDPcM1Hn9hH9usmbICWHcps+hORWyHeHhYXdCg4ODgWMjC2r
+SWGh4f7os0bx75JX26UXanVi/I1aveiD3GRer6YxxE4Q04IdceBo4GBgfTp
3o8xv1AbmBrB6LuF8XGDgoI24TvFeqyBVWhfhmMvDggIWOjj4zPX29t7lr+/
/zR8lk9yc3Mbg75DcGxqFL995cqVfgaDobvq190efdu6urq28vLyao4+Tch1
Ozs7N7x69WpdzFVzw4YN1T7//PPyu3fvLpoQp03Ex2kTktOWZieTft0J+HUD
/VA3AG1vo24gyoOBYdhXGA9hIs5hCvaiT4F5GLcAfb7GMZcBq5Ffh7FbkN+O
/3kn0t3AXoynf/cR5I8DJzH3KdSdxvgzqKd++VWk1wHG63ZFSq7bE328kFd0
y5H3QxqA1KD6dQdjHj5bRISiTL/uCM23G3X07b6NPnTxvkND3V0kio838vTz
juXjTa5b5+P9BH2eqtD8vM2fC5jnOV9vfhapz2LFYL9Ufifu169fypMM0qRJ
kyZNWho06qFv27ZNDBgwQOTPnz/WfWmFChXE6NGjTUeOHIkVk0oibcHT0zOm
YMGCyfqdt3LZeZL31vHe3RqGic71A0Sl4iNTzfdbQ65cuUSXLl1My5cvN+He
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
BtbdvXt3bXJ0y5Yt85gwYUKFJUuWlHDkuw3O24E7zJDvzojzLiA65mLZt0x5
b0fu25H3Vg7ct/GeduS+HXlvI86bvDfjvMl9G7y3wX07aptjrIIj9437zAN9
mrY57vPq5L2jo6NrkffGGk+TyVQP/fWxh6ZtjnYT7NMUfc3Rbok5rbG2Ldrt
8Dru5z2M9dQ272xomwM9cB/3wlgf9PXF+kdRfwz1wagP1bXNR2HeWNSfRH0C
+ieiPhl1apu/gLFp2ONl/SzNa1g/F6+V52wW43orUDLOey3+Busx/0uUW5mX
gXHe6PdizgbgEHM5kPem1gX6vXkeCD7NF/DT80CQ9w5DydwQUYa+Oeo/6ueK
yHtbyX2T9wYSSXpflzn/idrmmr45cJHcN3DZUd+ccd5Z5b0N7vtWeW9D29zx
84q/1eH9qDp27JizpIGYmJiYmFgeMXzXUi+88MJ/tNAZg8p4T9FEzHmMGjUq
m9y3m2rs+YUTee//ct+5nfd+pEWc6tPcrJpUe1MVLVzR5b/h3w4Yh12zZk3F
HLmtWrVSDzzwAM+Cpnbr1i11wIABGvr06aPFbHfo0EGbw7MtrozfzgxuboVU
04qj1YjGR9XYpufyJe89GRjm+alyL1rTaX9X5plnXgtX+zZB/gW/S9BfOeP9
3KREE/VenffVUs+luYL31lB7vnqq0nBVvlBZl/vZ3I66RaqotyqPVJtrvJSG
887bvPe3VZ9UVQqVua2/Wdu2bZWrfYBAkBsgvHfmyIz3dtQXz46uOdcauFP/
3475u28FDvrm9vzehs55sq51bmjd/vxvntc/bTYbefHfdZ1cxhJS61wLN8Rc
au1qAYiJiYkXMJdx4D9SpxdjJvLiGIoCIlEPw1gY6iGoBwB+mOOr4xxALXTm
vj2JsaNoHwYOJSQkHKRmMHXQUVID/VuMbwG+wvU2AxsxZ52uObwSWGGxWJbi
vliEsflWq/UNtF/F+MtYM5W8VmxsLPP3ku96gvl94+Pjh2HuYPRpWujoe4Tc
GXk0zO3q7+//gJ+fXzvGneI1NabuMvWXqcN85cqVevh31b18+XKdS5cu1aZe
M+bUwJzq1HC+du2ax9WrV6sAlanxTK1naj5T+5ka0NSCpiY09aEJakUzjpbQ
NaS1GFtyjspBY12JzrrYjZYh963SifvOiPtW6cR9G9w389lnxH3zfZuW+w4K
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
Q1re2wB5b8Z8p8nv/afBe+vQYgD1eHCN97ZYLL8lJCT8YuT3TkxMtMXHx1tt
NpsF86jHa8acWMDMuG8gEHN88Fq0uEbM9ca6k8AxzCEOY+0P5L7JC6F/N+rf
MT9uTEwM83t/Re1g7LGO+b2jo6PXxMbGriTHhP73sGYB9cvJfet5d98AZuG6
07H3CyifDw0NfRZ4ivm9UQ4LDg4ebDab+2PNI2j38fPz60FdZPQ/gPb9YWFh
bSMjI1thfTNy31jXiPHf+/btq+vj41Nr27Zt1RYtWlTFy8urLONayeuR42O8
K/k+8n4GD2jwgsohB7gjB64kB7iYa+ym/LdKo4XvyH8rnQNXOv/N97bS48BR
FtW194vpWvyaDrqu0V+S9wv5b0PHn5r+1Panxj+1/qn5T+1/5gBgLgD4DA/M
r8ocAcwVwLwBQC3sVwdrPDFeD+vqM88A8w2gvwnGm2LP5hhrif7W6G8LtIMP
uh99HYFO6O+Mvq5AN6zvgb6H0deHeQ2AR9F+DPMHo28o2iPQHo32WOBJ+JyJ
5L5RTod/mA3Mx7x3Med9XH8J/MrHWPMJ+phvYQP+zZtRbgW2Yf0OYDfqe4H9
qB/E3MN4vYfxuk8wtwPahva5H9qBQDDmhWA8FGU4QG0NaqBrMeCo/4gxC4Ex
q86B23D9xOTruScMHXRqoF9EcQn9jAFnngot/pt5K8h9A1rsN8850e/r0PJd
6DD0Q+z5vh3OVPHzxl4an1cnT57UvpM0aNAgJ376FxMTExMTy9eGZxX17LPP
qnLlytmffYsXL66GDBmS+t1332V0jlpwm+AZvwcffDDb3HeVCiN0vlt476zw
3gYeaR6pWtZYqMoUb+jy3//zEooVKq/aeLx4A98tvPd/ee8x9b5UxQpmTwt5
3rx5wncIXALqsrm7uzvFZ3Qo01F9oHHdy/Ic730db2uYXfU51bX0/apEweIu
99OuRL2iVdXT5XtrfPeXNadryM+898zyPW7/3unQQfJ6CwS3AOG9M0du5L3T
asg64Ka8d7ID/52W97bZbH8nJSX9bXDfBu8N2OO7HWL/7Lw31mm8N0qD96be
OfPOUoc3Bk3y3jF4L0bExcVRt5ccDrV8fRjTyJhvlMcxdtxqtR5OSEjYj/Ze
1Pcw7hvzmRd3B9Z/izlfU/Mc7S/wutZGR0d/in7y3ssxtgjlu+ifj+u+hWvO
M5vNb0RGRr5K3pt5eXXee1JwcPAEjI2OiooaZjKZmNf3UezbD2OP+Pv790J/
15CQkE6BgYEdMLcd5rTG+haM+/bz82saHh7e8NChQ/VPnTpVh3rnn376qceR
I0fcGb/KWNaM+O+bxYErPf/27fLfSvJvi2XfnKqDnl4MeFoddMcYcCP+2zEG
3FEHHXMrZaSDzhhw6qAzBhz3q6aDzhhwajSgremgw0fYY8Cxti3a7Rx10NHu
bOigMw842g+jzTzg/fQ84JoOOsaGGjro2Hs8/MGzuN4Uxn3zrA3652HOfKx5
D/OW0j/hta9hzm/0bcD4l4z9hp/6Br6Ceha7mesBvu4HtPcDB1E/gnXM/X2K
ub9R+qBk3m8t/hv+MwjrQ4BQtMOZAxyIZq4J+l7d/zIG3MoYcKaiYPw3ykTG
f6OeRA10xn+T/zbiv3X981/RNrTPfzNiv/XzT1rcN89GOcR8Z5rz2/i8Yq4w
vMeUp6dnzv7wLyYmJiYmlo+NOuj4zqZ69uyp5f8uYPxWWa+eeuedd1Lx3cTl
z7d5Bfhe6JS8qLU8ZmSD976UL3nvfi1+1NC/Raxq77lBVSnTHe/329MZFRRQ
pYpUVW09pqrhjU+q0U3PqzEahPdOj/ee2HCv8ijeJFt/706dOqWKtq3AFdiz
Z09KmTJlnOI3HizbWS22c955m/c2sLzW6+qJioNUg2Keyq2Am1P+jnc7irsV
Vd1LtVLzPcaqL2u+rGN6vue9N+LvUT4buVe8vLxc7g8EgtwE4b0zR27lvY18
qY79jKtLi+Qs8OCJiYmEpndOLsMA832jn/HfGv/NUocWA26xWH6Pj4+/Sq4E
pcZ9o7xgY+Wnn8i1WDEnPiYmxhobG2tGGUm9XvQHkLvB3IC4uLjzVqvVB/PO
4v16irHfzP2N9iHUD2LOfpR7sXYP839j7jfo+5o5c6OiojZGR0d/gXWfYZ8V
WENtYWoML2Leb7PZvCAsLOwt1F/H2EzMnREUFDQtICDgefQ/HRoa+mRwcPAY
9A/H+BD0Dw4MDHwU+z6MeT2Bruh7MDw8vCNjvyMiItqdO3euzfnz51seO3as
yYkTJxriO2K91atX1z548KCHr69vpbNnz1Y8ffp0BWo2+/v7uzOXsbe3d1ly
eidPnixz5MiR0gYnThi66Gk58a1bt9o5cexfJD1O3ODFHXXRRRtd7A5Ytvlw
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
uDjGSDJW8itgU2xs7HrGgaN/JePAMcZ84O9j3bvMw0stdJSzMW8W+Sm0X2S8
JuY9i/nPmEym8egfGxISMjIqKmpIWFjYY0A/9D2MOd1xzYcwvwvmPkg9ZIML
R/te5g9mvCjmtCAXjvUaF858w+i7h1w45tRljDjjT8m5ob+GESPOONWbxYg7
cuHk+xy5cPKBEiMudpeZU7TSlUPu8LR8ON/rt8KH817KSCud96CjVjrvUexZ
f9euXc3Onj3bCtfq4OPj0xX+R8sDjjl9MHcgrj0I1x3NGHC0n8J1JlIHHXP+
h/4Xcc9Tc2ImfNiraM8mFw5f8hb2fxdji+ijyIMDH2HeKoyvAT5jfnD40HUY
34D9NlPzAnUtPzj88w6eAeJZIIz9YPDh1EhH31G0TwCnmVMCvtTOg+s+Npw6
HDyHpJ9H0uLA9XNKScxjwXNMPM+kx3/Tv9PfU/+c2h9/YPxPPff3X/hc+Qv9
5L3/wb9J+07Cs+ViYmJiYmJid6ddvXpVrV69WjVp0sT+zFyxYkU1Y8aMVH6W
u/r5NzeBWjeOudRvF4ULuas2DY9mkff+L/ctvHdGvPd17tvAo81Nqmv971RT
jxmqculOqlBB52gAuxLUMK9epou6r/ocNajhQTWyaQDgr+HWeG/ROTfwdCMv
VaV442z9vxQsWFAxt7KrfZQgf4Ga+sxpkl2/Qn52UMUhDpy38N63ynsb+Iyo
RbyhVtWcrd6qOlk9X2mYGu7eS/Uu01E9UKqlalH8HlWnaFVVvlAZVQqfSyUy
iC0u6lZYG6+AeVULV1ANi9VS7Us2xT73qxHuPdSkigPUG1XGqVXVp6n1NWdp
2KBh5g0Q3jvrvPfjpVtn61768ssv5XNAILhNCO+dOXIr752ezvntzje4cCNn
uKGH7sh/p1O38986yHFQ41bjwHUenCW58N/1mMCrjAMHtHyxes7Yy9TQpZau
zoknOfDhjAuPB6i9yzy0scxLi3YU1kYmJCQwX22ort1LPvw8+XDsTz78DGMc
bTbbMXI9qB9AfR/zg8fFxZEP2gZsxR6bdW10LT+4xWJZjb6PMO9DtBejXIjx
+eShUH8zJibmdYMTZ+wmMDk6Opr5fJ/E+BhqHKM+HPsMQX0w6gNR7496X9R7
o97L4MeZHzgtP27EiptMJnusuCM/bsSK3yl+PD0N9fRixZXw42J31jKNEc/p
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
eVPXHP1X4uPjL6H8mfHd5DVIblDTFvMsMTEx5DwiMTeEMd7o9kf/OdTPoO8k
ph4HjpI7wdz91DJHexuwFXPJr3yJ/i8iIyPXhIWFfYz6YowtAOZTj9disZDn
nsN4RcYtMn7RbDa/iLH/MX9tdHT0RPSNZ2w3+kehPRz9j+Paj6FvYERExICg
oKC+GOtJLomcko+PT1c/P7+OGGuH19Casd3UHybXHRAQ0AzzGzO+m3m7z5w5
48kcvczVi3Etb7e3t7cH+e7169dXPHDgQDnGe6bHb3t5eWU5H7fKYjy3+pff
FhMTu253JL6b92/a+G7y3TzPQr6b51sI+gDsV4E+AXOrAjWZ/wA+pQ58ST36
Euqck/eGz2lpxHvDn7RzjPeGb7lB5xzrmde7N8/qUOecZ3eoc446ee+RBucN
nzaOPpB5vXGtySaTibHeWj5v+OIZ9J30oeS8MXcu2gswdxHKpZj/Ma6xmnkk
UK43NM5R3wX8wFhvct4YP4E9Gevtw7ze6A9HacKYmZ8DpL1RJuL1JKFMRvsK
yqv4rCHvfY1gvLehcz5ixAjteXrVqlU5+RO7mJiYmJiY2F1m+B6lWrdubX8u
r1WrlsZ/65pm+RLkvuvUqeM07pvwKD9MdW2RILy38N7Ce2fAe/evvUQVKVjS
Kfdb27ZtFZ7PXO5LBIJbBfmDe++91yn3QWG3wmp05bHCewvvnat47y3VnlFd
SzR0yj3Qu3fvVPI2rr6vBYK8DOG98y7vzfOjKG/QN0++Cc+dFskO8d7kvfHd
/C9yE6hfA36Ff2bM3iXgZz2+O0HXsqWm7Y8ozTExMSar1RqC1+GPcV/MPcsc
sBg/hr7DKA9i3wMWi2Wf2WzeA2zH/M1YuxFYzxhDk8m0Kjw8/MPg4GDq7r6F
f9dsgDz3TIy/wphurHmBXDf2ZjzjM+gfj9c3FmPMbTsCcxnTPSgqKmoA5vbF
3n2Ah7F3r8DAwO7klKhjzthub2/vDr6+vsyv2wLzm6GvCeY2xt+kIfN2k+8m
Z3Xy5Ektd3doaGhVvJ4qBPaqsnXrVi3Ge/Xq1eS7SpMPIzcmuuViYnfcXBLT
zZwF5Lip6cBcBtR3gP8oh7nuzHNAfXP6CfiWmjwrw3wIzIsAv9YQ9SbwT015
vga+pk1kZCS5bsZ4d2R+BfieBxnnDf/VDdfpgb5eWKvx3biWPa83fNIw+jr6
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
zDVhjJ8H1Dy3wi9quudAMtqX4Pev8HME5W/4rNGAz4ffqXvOzxnqlHz44Yfa
M/Po0aNz9gdzMTExMTExsVxvBw4cUG3b/qtRfM8996i1a9emuvr5PKewcePG
1NKlSzud+y5epIZqVXez8N7Ce+c53vupRodViwojFB8tnXW/8NyNaJsL8hP4
u/GMGTOcrjtSr3g9NbvGq8J7C+99x3nvjdWeVr1KNnWarjlRq1Yt5ePj4/L7
UyDIrxDeO+/y3uQP9Pzdds47OWNNczvfbcCR97Zarf9ER0cz3vsqcMngvVHa
YmNjNZ1z8t4Y03TOGd+HsYCIiAhfvMdO4fUcIVeCOuO9vVAyt/cOlNvQT07l
q6ioqI0mk+lztFdh7Qr0LQ8JCfng3Llz7xw+fPi1gwcPvuDv7/8k1o9gLm/y
39h/SGRk5CCsHYC1/bDmEazpbTabe+Lfr+mco78L2g8GBQV1DAwMbI96O8Z7
U+c8NDS09fHjx6kN3ITx3szH6+3t3eDEiRPkpWoz5huvpYahee7r61uNOsTk
ssh/nz17tiK5LnJe5MGpW7xp06ay1DJevXq1lt+bPNrWrVuLGtyaUqqwwbnp
vJs957djTLhy4Mpvxpcr4c3FxNKzTOOzVSa5wgnjvs2IF3fMFZ6WFze0IOgb
yIeTC6f/4JkaapjTtxi5wXnuhly4Eb+NtsaH84wO5tn1y+m/GL9N7XIjRzh1
LTC3B+Y+jP0eYc4H+LhH0X5Mj+Meir6RGBuH/Z9GeyL83WSUU7DPNCM3OObP
RnsuXvMC9C1C/UPs/zHGVqO+Dnt8ifY3qO8EfsAcnmc6ir1O4uNA0zXHHoHU
+0A9En+PaOBH1DHNmojXRI2Qi6j/gv5f8Zlz1QDG/kD/3zwrDt+pPS8PHjw4
J38mFxMTExMTE8sjlpKSor788ktVp04d+zP9gw8+mHro0CGXP6fnBMi31a1b
1+ncN1G1/BDVpVlkPuK9zcJ7Z5n39s11vPfw+ltVlRLNnHqPeHh4KDwjutwP
CASuwPLly1OLFCni1HuqWMFianCFQQ6x38J7C+/tXN77zYoDVaVCzj0z2Lhx
YxUSEuLye1IgyM8Q3jvv8t4XLlz4Jzv5vdPw3ikxMTF/pc3vbYPFxcXZ83sD
kQbvzXhvs9l8zjG/N+r7UGr5vbF0m5HfG+Um7P8FsAb1j9C3DO/NJfiMeI/x
3vv27Xt57969E4ODg4dh7UCM98d4X/LcsbGxvRkDSZ6b/E9kZGRnxnmTFyI/
RJ6I2ubkuMPDw1uQS0K7MV5TI4PnDgwMrMvcueSfjh07VovxmUaMN/atzLhN
ahCT56a+OeM7yXFT15wcF2O9yXmR+yLfTU6Mub0d472V5PcWE7sbzClx4pnx
4Y5x4uTC6SvoM3hOhnoRRkw4fQx1JahnzrM1mFuTZ24w7snYcMythzn3MI83
9mxMjQr4pKbwQczP0CosLKwtyvv0+PAH6P/oBx1jw+Eze/NcEOYOwt5DGReO
OaNRPgG/N4G5vMmDo+95rJ+Oa7+K/d9A/3zMWYixxaivANYAX+A1fI3x7Ty/
RA0PjB+ADzyMax3D6/VBvxb7rWt/RGFOLHVBeE4K7Z9QXkJ5BZ8/V+CHfyEw
9zes/Zv5wTZs2KDx3n379s3pn8nFxMTExMTE8pD9+eefatmyZcrd3V17rndz
c1MDBgxI9ff3d/nz+p0GvrM5PeeqgaKFK6nmdT4V3lt471zNe/esMV8VdTLP
wfMmfn5+Lr//BQJXYvv27anlypVz+mdPveJ11YzqLwnvLby303jvDVWfUb1L
NXdqjDfRrl07xe9hrr4XBYL8DuG98y7vnZSU9E928ns77hcXF5cSGxvL3KvX
rFbrFfIWRn5vjCWgtCQmJprJfaMegfFQIMhsNp/H+Bnm90Y/83sfRP9eap3b
bLbvUG5Dv8Z9Y+4m5otF/yfkvjH3Q8Z7+/j4vI3/g5n79++fFBgYOIK8N2MZ
saYf89Mynzfm9iTPg+tr8d3kf9C2894Yv5fxkhERES2ZA5exlOS+ySWdOHGi
YVBQUD3y3sydi+vZeW+D+zZ47yNHjmh5vY3Ybi8vr7JGrl5yWwTjPw2dc+b1
vVkct7p57LaYmNids0z5b5VBPLhKRycdZYb8d1rum/6DGhHwc5omOn0L8ykw
Dpz8N3xcdfivmvBzWj5v9HtSGx0+vT58+j3wpw3pv3iGBz6qOX0b8zjA/93H
8z6od8J450uXLnXGXHLgzOndi9x3ZGTkY7jG4+gbhnIUrjsOY+PxWp7Bmmex
9gXMexljr2GvN/Fa3sZ13kN9KWO/Ua5FyXNK3/D8EtZ5Yf0+vI6DuP4RtM9g
vh/qgUAo9uRZKDN1zxOuGzXPL2L+Zbw28t5X8BlD7fPfsN9f1CnZsmWL9htt
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
89r13ITZx8L72cQu5/1u+G36gcDAQJ2323Db3Cdj+G2M1bpuE7uc/DaOK2Ju
Je67QVtV+iHmYsC8GszNgL66VhzzO0NCQu7F3PvQ3gTX8TDGNWcsc/imVqg/
Tq6bOSHCwsK641p6o94fcwdhzhBgBPAi1h2DcROw3pvwc2+j7X3Mn4V15mL8
QsY1R7kC5Tq0b7ZidOyCP/yBPhy+fD+OD2N8JK45mnue8Prj0e8CGAfkGM5x
gnul0P7z8ePHDX7B3FOYx5gi+nPrOuvz9/Tp0zn6nFtMTExMTExMzNiPP/6o
xo0bp3P58ntJkSJF1NSpU938ne3r3/uXG8xP+cQTT7ivy4HnK4UL1lN3Vvki
l/Dekt/7Sua9O1dfpqoUbqb4Ey+73q8FChRQM2fOFG2fQJBN+Oabb9wVKlTI
sWf81IA3KdxYjSozRM2q/Jbw3rmQ915S7nk1ssTjqnb+cjnynmEsQua+OX78
uM/vF4FAcOEQ3vv8yK28t0G6jcu+GA4c9UwD8t4pKSl/o/yTmm/gd/ze/+3I
kSMe7hvn+pEaPtQzUlNTj1P3nZSUpHXfaE8g/52cnOw0/DfGaf6b+m/0B6Pv
ALAXa+5G/y6Xy7U9Ojp6a0hIyJotW7Ys3bFjxwcRERET8J59CX0jgeex/hDq
vw3/jfWo/daxz1En//0E+tujn3F9H8e6LXEOHf8c/eS/Pbm/nU7nPajfFRMT
cyc1k4wZjHm3Y04tjK+J13dbeHj4beSeyEExBjo5KWovyVGRqzLxz735b2o5
ma/3Qjlw6kOFAxcTu+yWrbw371+MLch7+my8t9F1n433tuu6z8Z7c0+O4b1R
r099N3lv5nFAW1Os2QztLRjrgjEvUG+DvvZo7wLf1gNzGSfjaYfDMRjrPY/6
C/SrGD8Ofa9hjWnwoe8CHwKz0T4f7YtR/wrjvwO+x3g/YDv6dsM/BsI/7oOv
DML5QtEehdftwHU7USZYeS/4WUCt9wmUJ2289y+G98ZczXvzM8w8Xz558mSO
Pt8WExMTExMTE/M2fDdSLVu29DwfYOxzPz8/n//mzw588cUXORJ7lihSsIG6
o9I81bK+S3jvq4L3PpBjvHenaktVtSKt1PXX3ZCt79FatWqpgIAAn9+XAsHV
DsZ8Gz58uPuGG7L3nvZGsTxFVbPCD6oXyzynPtY8t/DeVzLv/d6tfVSHwner
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
s2pzcyNVNm9xn/2vq1Wrpr799lvZ9yQQXCUQ3vv8yO28t5fWW+NSeG/qvYHT
gIf7Ju/NXN9G841zMn6t5r5TU1MZ71xrvmFH0v4x6v809828r8z5jboTc6kT
jMZxJPkT9DHm+UGn07n/8OHDO/39/dfv3LlzYVRU1Dsul+s1/P6egPHjUR+L
9/BoKz8tNd+DExMTqfkeQM03vif1pu6RvA/j/mLeE+SDMK8N2lsz9y3zfaPv
ERw/TA2lPd83rr0R451j/B3kvqm/JPdNPSZzfmNMDeo0Tbxzct/UcZK/Yrxz
ct+Md84Yx8zjS+7Lm/smR2bnvi9G823nvtVZNN8S71zsGrPLksOb9xbazuC6
zf2YFdcdEBDg4bqZz8DEODf5uw3Xzb0w9Av0D9wfY3J403eYOOf0KfQtWKM2
45wb3Tf8TEMcN8K8e3B8r7VHpynWegTrtKJPs/J4d0b5JPf8oNSab5TPYJ3B
OPdIrEOfOR6YZPHdb2Hsu8BMtH2C9T7DtSzG8TLGOMe6Wu+NcX7kvKn3hv/z
6L2tXBVa703O2673RvsRfgZYnwXcD/Wz0Xvjs+U3L723h/euV6+e/vwNDAzM
4afYYmJiYmJiYmIXZpmZmWrevHnK5GcpUKCAGjNmjNt8n7masGvXrkxy+9fl
8LOYwgXqqNrlJqvmdQ5Jfu9rhPfuVP0bVbt4N5U3B/O3Mp7t+++/L1yHQHAF
Ijg4OLNjx445lnvjfCiSp7BqdFM99WTxdmpC2efVJ5XeEN77InnvJRVGqWml
+6ieRR9S9W6spPJdn3N76872GfDqq69eld/fBIJrGcJ7nx9XE++dFdIvML+3
nfdmrHOszxzfmvcmh2HFOv+Vub4tboMxbU+gPI6xR48w0SsMY1LQ70Kp450z
3zf6YzBW5/tGezj6db7v2NjYoNDQ0F1+fn7fb9++nbz39MTERK33Rr9H7x0f
H6/13i6XayCOdZxzjNN6b5RPMs8tdY9G723inHvrvXE+j94bfVnqvRl/2K73
Zp5v8lVG743xFdBX3uT5JtdF3vt8em/8eS5I762Uyne+PN9K9N5iV6+dlde+
0Pzdhte27qF/abl53zGeuZ3Xtuu4ef8S5LZ5X+OevwX+pKSd16Z+m37AHs+c
+2NMPHP4vBr0I9xDw/wJ9C/2mObktrH+/Tjng2hvyn05mNcM52qOY81x4xra
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
mvd+7733cvw5tZiYmJiYmJjY5TBv7XeVKlXUmjVrfP6sILvw7bffuhs1auTz
5zdEnhsKqJI3N1W1y4xXTW5bp9rUjxfeO9t57//nu3vdvle1rDxX1S7R3We6
bjuqV68uMc0FgqscUVFRmZMmTXJXq1bN5z4nO1Dg+vyqRJ4iqkK+W1XNGyur
hgVrqgcK3aEevrmRalW4sWpT5AGNjkUeUl2LNvegmw1t9Zj71eOF71PNbr5T
Nb6pjmpQ8DZV+8ZKqkr+Mqpk3qIq//X5fP5aLxduuukm1b9/f3dwcLDP358C
gSDnIbz3+XG18d7e/Rep9/ZovqnbM5pvxjunro/cd1pa2u/emm+swTzfP1If
SB7E4kOOoY3y7zSsQ64kBccuHFP3zbjncU6nM+YwbMuWLbu2bdv2TXh4+KzE
xMS3mOMb/ZNRTsR7+JX4+PixaH/B5XI9j7ahqA+29JIDUO9DzTfateYbYzpj
bkdqvpnjG2NaU/NNTabRfOO4SXJy8v3UblLDaTTfjHdODsrk+abuk7HOyX1T
803um9pQar7JZ5HXCgwMrLB58+ZyEudcTCzb7ZK5bvveEfLdH3300Rn5vXk/
Eobr5v1Krtvk9eY9DZ9xC3lu3uvUjtu5buY8YAwIxoKgf2BsCDvPzXwJ8Bc6
tzf8ZB3GleBeG/iLu5hvgbm96ZMwhntyHsZajzB2OTXkOG4fGhraGeO64bp6
of40+gfRD6JtGNZ6gbkg8DrGY+wUXONbaJuBtllom4tzfoqxi7DWUtS/YSxz
lBtwrs04rz+wE8eB6A9C/TDKCJQ6rzfzU+D1MFeFi3uY0HYEOM49Tnj9GXj9
9Ps/Me8F819gPPdGcY+UzuuNkp8dzJWheW/useJnDvNh4n+p8D/L2QfUYmJi
YmJiYmKX2Xbv3q1q1aqlny1c7dpvYsmSJe66dev6/DmOHfnzFFdli7ZR9cpP
VY/U2i5xzrOB9+5c43v1QPnXVTX8nfPnKeLz/zlRunRp7qN1m721AoHg2oCf
n18mP2sLFCjgcz8kyHlwn+HEiRPdMTExPn8vCgQC34G5NBlPVHB2BAUF+fz/
dLHIAd6b8WkZr/YvK9a5N/dNbkPn+Ubfzxj7kxUP90dyIWjPQHkcpdZ943yU
fqeamOcoE8mnxMbGOg8fPhyG7yy7/f39V0RERFCXOJ05vtHPGL/M8f2K0+kc
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
ws55M44HY3oQaNNxzcl345i8t4fzps6b4OdFuhfvbeXQ8Oi99+zZo3nvqlWr
5ujzZjExMTExMTExXxq+E6m2bdt6ngn369fvmnwOzOcPK1ascHfr1s3N5+LX
+eB5vMB3KFKkiOL/nu8BiWUuEAiuRKSkpGSuXbs2c8KECe4OHTq4K1eu7HPf
eaWjdOnSqnXr1u4pU6a4N2zYoDX1vv4/CgQCgSD3ITt5by+c9sJfFr/xp6Xz
I+99CuUpw33bdN9n5Py2tN/ME0teJSMuLu54aGhosr+/f/iOHTu2hoeHk7/5
xOVyfYj+9xnLF/XpDofjTafTOcnivccmJye/BLyA+dRDDkF9EL6TPEPuCOhr
Yp0zdjBjCKP+BMZ68nwz1jk1mOS9qfs2vDfGNGVsYsYpxjnJfd9NPSfjnRvu
m7l8Ge8cr7k2XkutlStX1ly4cGGVbdu2lbHHOLfz3obzNry3XfNNTo78XFa8
99nyeyvRfIvlfrskrfeFcN/ME5AV9817Dm0e3hv1ktyrAj92K3lvjCtP3tvo
vMl7G503+uvExsbWQ/sdzONNvxAWFsYYETquOY61/2D+bviWRwBy3o9yn43R
eKNN5/Im780cDPAXTwF9uF8H7QO4fwd+YzDWGQa/MRLnG43jcfR93PvDPUC4
3vdxfXMY1xzrLEDb55i3BNfwNY5XolyP+VvQtg3HAVg7EGsfAA4ynzeOI9Ae
Q503OW+USehLBpjTm/kn0oETGPsToHN5W3HNdS5var0Z58Nw3ij5GfCnBe6H
On023tuu9z58+LDmvUuVKpWzD5vFxMTExMTExHxsbrdbzZw5U+XPn18/J77r
rrsUc476+vmCr0Cd7wcffOB+9NFH3eZvIrj6wDj//B8vWLDATT7J1+87gUAg
uFg4nc7MlStXal63c+fObsarMDlMrjWUK1dOPfbYY+4xY8a4lyxZ4g4LC/P5
/0cgEAgEVwcuJ+/NtchHGK4bbX97ab9Pm5zfJuY5OQ7mczW8N+Pekvu28r6S
I/nV0gkyRq7mvVH/CXXy3j+SW0lMTDyOz8aUrVu3Rvj7+/+L90b5LsZMj4iI
eNPSe4/DOUczxzd5bysO8BCMGWjXezPeOX5Lab031mGO7yfQ3g5rP04Oinpv
w3tbeu8Hmdub/DfrjFeMdp3jm7pOK8+3h/dGv87zTc33V199VXPOnDlV1q9f
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
1Jw3Su3Xjb6bIOdNnjvdxntbMPuh9GdERkbGGSDf7a33btSokX6utmPHjhx/
niwmJiYmJiYmdiXbzz//rNq2bau/KzGX9aeffur29TOD3A7mM121alXm9OnT
dW5UxpIvVaqUzzlmX4PaeH4vZ8xy7hPAb6pMiVsuEAgEAoFAIBAIrgacjfc+
m/6b8WwN752RkfGnTfdt57892m/Dfxv9N/PHJiUl/RIZGXli9+7dSXv37j0Q
HR39fWJiInPXLkP/F6mpqZ/j9+lnGDOfOW5TUlLeTUtLY7zzt6iNjI2NfR3t
jA38MvN9k//G3BexBrXfQzGOOb8HYg3GPO9LLSb6u2NsN8Y8j4+PfwJj22N+
G3LeaG/LOuOfM28vuW+0Mff3Q3gdTfCaHwQeMBw4+u5duHDhPePGjau7fPny
8hLnXEzs7Hy3ykLnbee71Xl03mZviF3nbY9pzvvLnsvbxDXn/cj7kvcnxt26
du3a8mvWrKnKfN4YWwu+ohbzee/bt68hxt9Fzhs+4EHUH0apc3jTJ8AfkO9u
j/oT9B+oP0l/gvP3xPX0w7hnUA5izAn6H/iH57kXh3kY0MYc3i/RTzGuOY5f
dTgcrwPT0cZYFjOAmfAJs6jzBhZgrUU4XgIf9TVey3eYswbn2GRx3rswjzrv
PTjXfiAYx4cxNhLjdGxzzHVpwhtGzhuFJ5c3/NBP8MOa8/aObU7Om/HMqfOm
f7f2NmmYHN7pFu+d/g/3/a9c3ulee6X4GWJgPnOaNm3qxntFrV+/PkefI4uJ
iYmJiYmJ5Qb7+++/1XPPPae5yeuvv15NmjRJuO9sAL7bZ+I3eObMmTN1vvBH
H33UXaNGDVWwYEGfc9KXE4wd0LBhQ9WxY0f3iBEj3HPmzHHv3r1b70319f9A
IBAIBAKBQCAQCLIDhvc29bPBcODU9aWlpf1t1wKaHLDpXvy3Pee30X6TY0lK
SvotKirqpz179qTs37//oMPh2JKYmLga7Suw9tfJycnLcLwkMjLy87i4uHmY
8yG5IfTNAN7F+LfR/qbL5ZqE9leB8Rg/LiEhYTTjCDOesKX/fg7jBjqdzgHo
72PxVIxJTP6bcc87Muc32p/AuTsyfnF0dHQb5v6m9hvX/AjO14wcODXgaG+K
sVoHvmjRovvHjRvXYNmyZRVjYmJK2blvxlX21n0b/tuu+yb/bfITn033Tdh1
sOocuu+z8d/Xie5bLPvtiua9AwMDS2/dulXz3qjXwL1eC/NrY1x9rNXo4MGD
92Ds/WhvGhoa2ow679jY2NYo26KtA9ZlHu8uRuPNvTTM4Q2fMADjNOdNn0Pf
Q77bikMxCm1j0DaWnDfwCuZPwlpTsda75Lzh22ai/yOMn80YF3h9OrY5fSB8
1Lc4Xo011qO+BefdybjmR48e3Y22fagHA4ewThjOH402J/N522hv5vM+jpLx
zXVsc+byxnwd25x7kFBqzhvlH1ZOb/LeHt+ekZHxlz2mOY41DM9t4psbzpsa
7/Tz8N6tW7fWvPfXX3+d04+RxcTExMTExMRyjeG7s4e7JC9r/90uyF7g+3rm
jh07MpcuXep+55133CNHjnR369bNff/99+t818WLF9d7Eq7zAY9tB2MClC1b
VtWtW1c1a9bMzfjkEyZMcDPnuZ+fn+b2ff23FAgEAoFAIBAIBIKcxtl+P2fF
h1sxa3Wsc/Ig5ETQr/kRU1p1Dw8OGA5cl9QUulyu3/Fb8peDBw8ePXz4cFR8
fDxz1Pozby3W35Camroex2vwO+27xMTEr3C8OC0tbSHmfgowBvDchISEj9H+
Psa9Ry24FS+YXPhktE0EJmAc9ZUvkQvHOsOpxUT7YKw7EG0DUCcX3ouacMzr
7XQ6e0ZHRz+FsgvmPcF84OhrZ+nCH8dY5gRvybzgy5cvbz5t2rT7169fXxPj
K+H1VMDc8riGsli7TFxcXGmc51Zy4ljjFsw/gw9n/uEL0YN78+FKqQvmw9V5
9ODXCR8udvnsgjlvdRE5vRkH4UJzehvOm/EWGN8cY0oGBweXotZ73759ZbBG
he+++656SEhITdynt+N+rBMWFtYAY+4OCgq6D3ObYI1mERERmvOOjIxsx7wI
zI9An2DpvHtgHnN594Pf6U+dN9qH0r8wljm5buq7yXVbfPd48t3ABBy/hvnU
er+DOZrvxvXPwvhP4CPmMcYF1liMNb/C8Teor0Lbepx/E0p/XBP95F6MJ+cd
RM4ba4QBWuuNcczpTbl3GvN5G503yhMoNeeN8/1i5ZvQnDdjm9tzehudt+G5
08+MaX7aznF719OziHNuPjfsvHeXLl007/3ZZ5/l6LNjMTExMTExMbHcZgsX
LlT58uXTHGfXrl3dzF/t6+cHgv8HfiNk4rdE5tatWzNXrlzpxvdb9/vvv++m
Rp9c+fDhwzUYS7xv374anTp1cnfo0EGjefPm7scee8xzbMYMHDjQM3fixInu
KVOmuD/++GP3l19+qeOR47dLJn4r+Pz1CwQCgUAgEAgEAsGViHPtG88qzzd5
77S0tNMWr635bBt+99Z4G503Y5ybOOdxcXG/hoaGnti+fXvCrl27AsPDw1cn
JCQsTUpKWpSSkqLze2PM/EOHDs1xOBzkh6YzxjnKt1BOjYyMnBodHT0Zc17F
HGoox+M358uxsbFjyHNTawm8gOMRWGdYTEzMkPj4+MFY91nUiWfQ158acPRr
zSbQH+v2j4iI6Iv+XoxjjDkEc4M/ifW6UeuJknl9u+J3becFCxa09vf3b4zr
b0j+LCoq6g68rjuoIcU69dBeF6iDttsJtNfGa6rFvMLor8Ecw2ivTqCvGvqq
Hjx4sAr6KqOv0oEDByqhryLaK4SEhJTH+uXwu7oc2suivwz6SpPTI8jvUddK
ro/5jKl1Jfdn4q4Thmtn/mPyhMyFTM6QuZHJIRrePatY7PZc5PaY7My/bNem
K1ts9qxyk3vz8uoC9OpZ4Trh668UO28+b3UWvlvZOG/7e8hb521iIhi+267z
NrEUDOfNfSXcX0KdN+8J7j3hHhTeN1u3bq3MfSrM6Y32emi/A/daI3LeWLcJ
YzpQ5431WuN+1nHNMYb3+5Ood0dfL9T70l/Ql+A6BsEHDUM745m/hLaxzL0A
H0euewKB49fgLycDr6P9TcyfTs4bmI3+OcB8YAH8CnM7MLb5VyhXwNetQn09
sBl9W7H+LlzLPrQHYXwwykNYOxx9UUAMoOOboy+VnLel89axzZnPG+XPJrY5
/PFvaDtD522Pb25yeRvem7DrurOKa34xvDef5eE9oz766KMcemIsJiYmJiYm
JpZ7bc2aNToXM78/cf+gcN8CgUAgEAgEAoFAIBCcHRcaL81ovvk72+i9jQbQ
6L4NvHXfdu03dYXJycm/O53OX4ODg9PDwsJiExIS9lt5a7ehfyt13y6XayPG
rEPfSpxr2dGjR5cCXwCL0L4wMTFxPsZ9bGkmZyYlJc3A2HewzjQcv4H2KfHx
8ZPQRl58LPPsMv4w1h0eExMzDOMGYdzTGDcA7c+i/2ly4ejrTY6L/DbGdqHW
kzHQjfYb10jtd5ulS5c+Nnny5CarV6+uJXpvsWvUfKLxziquOfd12GObk/Pm
vhDei7wnuXdk3bp11b799tvagYGBd+D+bID2OzH+Xhw3YU5vK7b54xjLfAed
mA+Be18sfXdv1PvjOpjLezDmMo83Oe8Xud8GbeNxn7+KtonwUa/Bp7xOoG0q
ymncu8N83pj3PjlvzNF8N8YuRDvzeXPfz9fM9YBzrcG89ahvRp1xMHagfw/O
EYzyMPN5W5x3NDlvrBOHMsmivY9g/HGAGu8fMfYkfIvWeeNYa7ytfBNa523x
3jq2ucldYXhv+Osz4pp7xzRP9+K8yW0brts7R4b9c2bIkCGa9546dWqOPjMW
ExMTExMTE8uttmXLFlWoUCHNfbdp08aN73U+f44gEAgEAoFAIBAIBALBlYiL
yRNmcRieOOfpNo47IyPjTwMb1+2Jb84Sx5prSUxMPBUdHf3z/v3704KDg8Ni
Y2O3JyUlbUxOTl6LtVehJPfzTWRk5DJy3Giby1jAwMfArKioqA/j4uLetTil
19H2GvPmkuO24guPxpwX4+PjR5CfwvrkqZ5lXGLqNcltU8+N466Y3wWl1nOj
vSs1ng6Hg7HNH8eYx9DfirHNce0tgOZYtznGP/LRRx89PGDAgEZz5swp753P
285n23XU5+KzLyaftxI+W8x3dkl5vFU267vtuby514ScNzXeWKM87u0KjKOw
efPmGqtWraoPv3Mn5tyF+/sejHuA+bwxVnPeWLtDWFhYl4iIiO7WHph+8B1P
w98wRsRgzBmKuiemOcpxaGdOBeZX0Jpu+LtpzL0AP/Q2xrzHPN7ATOBDzJ+N
62Y8C8a2WILxX2KsjmuOa/0OWEdfaO392Yb1A1Dfg7YgXEcoxkVgnQhy3ihj
qfNGv+a8UR6hzhttOpc31j4J36XzeVPnjT7NdzMWhxXX3Oi8PbHNDdL/iW/u
4bkN553uFf8j3cZ7W8jyc8P+OTNmzBjNe48bNy6HnxiLiYmJiYmJieVe27Vr
lypSpIjmvlu0aOHGdz+fP0sQCAQCgUAgEAgEAoHgSoI3H3Eh4+28N3Xe9hzf
dg48/R999784cHt+76CgoGMmvzfaqGvcnJaWtsHSOq5xOBwrExISvqQmEvM+
AxYA82NjY+cCszBuBvklxkDH+KnMnYs1JmHMq4w1jHXHYv4o8t/M7Y11GOt8
IDks5ufFvJ4Y1x1lH7T3Yn5v5vDF2lrjjT7qu9tS4w08jjGtTY7vuXPnthgw
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
sBJ1f6wDgVx7cI7rUCSOo7FOOHy7Udf8u5W+DVLQP41xLRi3HMeavg0KQBU/
b9gm+nnjulupc4NKxjCnnzeurfl6o9yDcq8xljn1bmPebis/74rDft1Vjrmf
qT56tlnbrk1eSfyeNN37hBNOsP/zzz9N+p2wmJiYmJiYmNixaiNGjNC07zZt
2jD+udu/TxAEQRAEQRAEQRBaJjXpBHU5b67X1x/PFdRHlPZdYdJPnOWENecB
p++h7vO9D+y02Wxb9Xi+5bg+RR8bdXD6geNcPtroB54FGAeduW7TMY4+kgkY
F4v+61FG4Zix0BlrOARtwegXyDjEwAd44nWXMk5xYWHhIsYtpg4OpgHmBZ9a
VFREzWsizv/KeOi45k/gB5wbjWt+x/zgjI2O/8MXy5Yt+2zixIlDwsPDH6RP
Kcb2x7ibCwoKbsTxdfQ7Nerh9EulHk4/VaWH0z9c6eH0a1V6uDFPOP1gk5OT
Oys93JwnnLrjunXrTquvHi55wo85q5cebm9k/26zHs7nmvs9zP7d3Bdi5d9N
PZzzx6iHK/9upYfjHH28+1MPxzkt3jnu8V7UH0D94aSkpKdxv1oOb4x7E+1D
Uf8fGMlY58zbjX5j8Zq/MGc3cyRg/HTM+1noPxt15k9grPMlWJeWY93wRJsf
znGd0Xy7sT6E6vkYIujbTS2csSr0WOfM2RDPvN2MZ4FzjljnuG4O9/uAAhXr
nCm86efNZRFtFahvp/7NWOdgpyHWuebrTf2bsc51/Vvz8zbq30oDd7ZfyQj9
vI/Ev7umvy3UvPGc2nft2tXE3wiLiYmJiYmJiR2bxv2EgwYN0t5jnXPOOXa8
93b7dx2CIAiCIAiCIAiC0NTUVddQmrcr3duV3zc1mPLycofuXVJSspOajkH3
LsVr2Kj72Gy2QmpB1L1xvY0gE2RQ96Z2hHP0qVwPoqkxoQxD3zWoh+Cc5v9d
Wlrqi75eKJfjnAf9N+n/jePZuuY9BdecgrF/ot+koqIixjX+Gcc/of9o3PP3
4Fscf4N+muaN48+WLFnyyS+//PJGWFjYPbjmTRh7g1HvxvGVOHbo3Xi9i9HW
C22a/zde93zqe2g/F+O70w+W+p/Su3G+M/4PnXC+I8ZZ6t24l3b0u1Xx0Guj
d9vtdof/t133Abc78f+263q3Xfy/m5MddXHLuY/jSOKWc15xPwn3lXB/iYpd
Du7AsZbLm9o2zj+E+qOoP4HXehrXZjzzF9HvZVzzv7i/obiv4biXT9D2Oebd
V6jT1/tnlL+h72SMn4m+c7k3hj7eYAX6eRNq3PhZ+DO2BPN5Y/6twRwNxznm
8Y7hesR4FIxNgfm4gaAtFf1S0ZYOMnC8kbEsQD5jW6CtCBRzzQOl5YdtM+pb
UG5lPHNq3SqnN0pN51Y5val1o80R21zFNXeV09tqj5LSqZ3th6qrrl3T+TPO
OEP7ThY/h6b7MlhMTExMTExM7Bi3ffv22a+77jrtfda1117L91pu/75BEARB
EISWw9atW4U64u7fmSAIwrFAfXz4jOj5vQ+ZNJOa9G+H37fy9y4vL2es8/1g
T1lZ2Q7mrQWM6VvB+L7UwW02WzlKG8YUgUJAnSi/qKgoH+Oy9Zy4qejPHLmJ
qDOucAxYB6IwPpw+mOgbjDpz7q5ijGKM99b9NRczFziuuRDtC4qLi+ei78yC
goJpOJ6E154IfkOfX8F4jB8HxoAfvb29R0+dOvXDqKiogdTdcL27qMNRj6Mu
R79T+p/SD5X+qGb/77rGQ6d+SP9Y6onmeOhmPfxI4qEb/b/tEg/dHVZvXdvo
t1+Trs3Y5UrX5jNi1LX5DFnp2tx/wX0YKna5K10bYy5gPAOla6PfJejTB8d9
uR9E6do4vpb5uF3p2kafbRxrujb6PoX6MzinadvM1Y36axgzGPUhuOY76Pc/
tH2I8x+j/hnu51v8/8bQnxvzdQJgbIepuO4c9Of8ZzwIL7T56jkTHD7cKMOw
BtCHm3ts1gPGMk/g2kPfbZzPABvpu432HJCr4phT39bXL+ZxKMGaounbmw6b
pnGjfwXjmaN06Nz06WbubozTYppT56bGraPp3DincGjdOk5jcNTVd7sx6N69
u/Z9LNawJv42WExMTExMTEzs2DbuK6S/N99rPfPMM5LrWxAEQRAEQRAEQTim
qI1+UV/9u8IUz7yiFjq48j9UPt9gH6D/ImP27tT9GkmlroVXoI3aEAv6g5fb
bLYywDjAhfSbRF/GCM4GmXrs4FTUGQc9iVo4fTH13LuR9M9kTvCSkpIQHAdQ
C8c1V6F9Jdp8ioqKPBnHGMeLcG4+xjG28RzGOjbERZ8SHBw8afHixaPi4uKG
FBcXP19QUDAIY58uLCx8EvXHUX8E9QeZb5h5h5l/mHmImY+YcZiZn5h5ipUu
zvzFzGOclZXl0MWZ55i6OPMeUz9kHmTmQ87IyOjB/MjUGeknzrzJzJ9MLdJZ
nvDExMQqujg1TrMuTi2UmijzOtc2T7gpb7To4kdmLT5GuVHz5l4S7ilB2/3K
lxv1x1EfqGveg9DvBdRfpuaNdmreb6Echr7v4TWGo/0j9PkEbV/gNb7HvY7V
8xhMBH+i/3S87jz0p3/3cn0NWIVyNX26Me/Xcs0g3EuDkjkVYnXfbu61ScF9
putrTxbXIurdgDHLtdzdqBfSrxvrXzFK5vDGqbJNBr9uat6OPN7oU4m+O/Q1
cTd1b5XHW/l2G3Vvo4+3Qft2mneiwkL7Nub3PtK/KbW5xmWXXaZ9F7tu3bqm
/SJYTExMTExMTKwFWGRkpP2kk07S3m+NHz9etG9BEARBEARBEAThqKMuWkRD
+HzX5OPtSvemvzcpLS09CPbpOWp3lZeX79T9HCupe+OcQ/c+LH1r4rdR9y4A
eeibjeMs1DPRn3lzU1Ayhy51qThA/8wo5t1Fe2hJSckanAtC3R+X9COo+9IP
XNe+PNB/ATVvnJsDNM0b46ehrsVEDwgI+GPBggXfxcbGUmt7BmMG0g+V/qjU
6OifSj9V+qsa/cCNecDp50p/V+UHTj9Y+sPSL5b+sXXJA640b1dx0Y2at9kP
XGnekge8WVqT+4Cb9fCG8AHnM9zQPuCca8oHnHOQcxFtz+O1XmFsc/p/g7fQ
fxj+Hx/i//MF+n6DfqPQ9iN9v3FPk3AfU9E+B+0LMW4prsHc3b5YFxjbPIDx
IkAwcygo32+sB9xHE4N2+n1zj00KSsafSAeMaZ6JNvp/Z+m5GqiJ53G/Ds5p
Grge27yM7t9KB9fjXmi+39wDhFLz+zbEON+LuqaDW2ngxhjnzuJvNIYPeF18
xG+88Ubte1iso039NbCYmJiYmJiYWIuwKVOmaO+32rRpQx3c7d9XCIIgCIIg
CIIgCMKRUNc4teb+R6KTV9Tg9618vnX9+6Cem5bsw/m9um/jHqWHo416+E76
QAL6gTs0cWpFek5cakdaXnD6VqKktpQPcqg9UYPCWPpl0hecuXcTccxYxTGE
sdHRrmKj08eT/uCrlU849S/08QXewDM6OnpZYGDgzLS0tFH0J6VfaVFR0XDU
30f9HdTfRv1N1F9H/VXUXyosLHyBPqr0C8expV+4Hi+9Rr9wq3jpZr9wao1G
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
sc/xOlrub5Y6B3BPDqhxo6wC7tWRH7xCzw1uxMq/G2NqjI2u/t6sXbtW070v
vvjipv2iV0xMTExMTExMzP7cc89pPt/33HOP+HwLgiAIgiAIgiAIRwVNpXub
fbxVvcIQ09xK99b9CR26N3UZc35vY5xzlNV0b+b3pu7NfLiGOOc2oOnezKGr
dG/UmV83EyVjCqcyxjBjnOv6UwzKdczVS39MEErNCn2U7h0AVqGNmrcv8Bbd
W3TvGsyp7uwKK03abpG320qjttKqjf7ZRh9ts5+2MXa58te28tlWfttG320+
N0b/beXDjTnSWcU0N8Y1py+3MbY52s6jTzfGnx8bG3sBY5zHx8f3RNtF9O3G
ffRW/t2MdU4fb8Y7T0lJuVzFPEfb1Yx7jrZrMP76sLCwm3G9/tS/8X8dgGf5
dtzjvWh/BNd+HMcD8ew/jdd7Af3+i3IwXu89zI8RuMZI8GVWVtY3mEffYT5+
j/Jb8D3mGnOC/4T6WMynn3HtiZhLf2LOTEf7LMyzOeg/FyXjoc/FPFmAeTMP
83oBWIhzizF2KViBYy/08UVfTTPHudUgmPnDsRatxblI9FvHHAzoG49+STi/
gesX6hmA+vhG9M3GveTjuAjYMG4TjivQdxvXSPSpxDzWYJ5w6uN6rvCdWPt2
Ml+4njdci6ehcoer/OEo9xrYZ1if9xnWbE1b19dxR2x1Kz9y/g3A7+AvzA/7
WWed1RRf7YqJiYmJiYmJiRkM7xntp556qqZ9L126VLRvQRAEQRAEQRAEodnT
ELp3hZM83uY2s393xb8+gdXi5CrNW+ne9D2sje5t5e9NTaesrIxxfjcz9i9K
TfemfySq9PdmjOBc5vamPoSx9PVOR1sKSFa+3rhX+l9SX4piXl7q3nps4mDd
f1PTvXVfb033joqKWhEQEDBLdG/RvRvJaqWR2y10cfXztht0cf4+iP670eDv
C6UGf4coNR9ulJoPN+HvnOCZPxXtp/J5wJxtR7Zu3ar5cm/btu307du3a/7c
lZWVZ+7YsaP9zp07O2BcR8yzTrt27SKdMYe6YPxZGHs26Ip5dw6u0Q10xzXO
xTXOQ/8eeK3z0fcCcCH69wQXoX8v0BtjLgaXYMyloA/69kW/y8EV6Hcl0Hy/
s7KyrsccuBHtN6PtFtAfz/odeMbv43zDtR7C2Ecwh57Ez+E5zOMX0T4YY4bi
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
1v32lA/fXj3WrSMPN7UOPR6u0rZ36jFzd+g6t6ZxUzehfkIdhb6FSuMmuuZC
/aUMY2z0U9QpLiwsLMqHFRQUZKK+oaSkJK64uHgdygj6PmJ8CHPh4lwA2nxt
Nhtjky+n3ySOPTBuIco5aJsKJqN9Esb9gX6/0fcSr0l9+yfm5MX/YxT4DvVv
8LP4CuWX4HMPD49Px48f/9batWvvU7HIMfb6oqKia3HcD8dX5eXlXZGbm9sX
x31wfImKRZ6Tk9NTxSJHn/NULHLmIM7MzNRikaO9i7NY5IzpbNS4qW/Tp5sa
t9K3zbHIqRHWFIvcrG/ba69xi4m5snr5f9v1fRd1zf0dEBBw6rx5806jzzfn
DOaDFvvc39//7GXLlp0XGxt7Aecf95qsW7fu0tWrV18VHBx8NebVzZhPt2OO
3Yk5dx/m5wNYEx7G3HoY68WDrGNteBTXe5xaONaIgej3Iq71Kl57MPoPQZ+h
6PMOzr+Hec846O9j/Ltoex/9PwDDMf5jrBOfovwCfTT/b+YD534a5v8GP+P4
V4ydhHuchvEz0DYbY+aDxagvwTkvjFuJcz7ouwr1IJxbi2tGYkw8zqeinoFz
G9Eni3ExQA7IBXlA08Gpget5IYq4thr9wekLjuMq/uAqVro5TrryBddjpasY
6TvU3wGVq4Il/16Qhx566G88F/bZs2c35Ve7YmJiYmJiYmJiJhs+fLimez/+
+OMS61wQBEEQBEEQBEGoM7XRuytq0LYrKqrn3K5w4ctdYYhVbvDh1vRuU+5V
p37cRq27Fn7cRq27Uo+Nq/wDt+maieZDSC2FfoW6tkIro95dethK9Bi91GYY
s7eAlp+fn4MiDSSUlJRomjfz3zIPLsYEFhcXMxawL8oV1IkwTotljvPzMIa+
3TOodRt9utFGvWkM+AHH34Nvcf5rat3o+wX+758yhjEYuWTJkhFjx479b2Bg
4N306cbrVPPpxrHm082YylY+3dS8m7tPtzPNu5X4dIvVzxo9Bjr6tpk4cWLb
yZMnn875wnkTFRXVPiAgQPP5xphzOfe47yQ8PLwXrndZUFDQ5ZhH14P+GzZs
GMCY55hzd2E+3Qvuw/y6G9yDdYD7XKiBPwQewfx9GvPwObzGS3ht5gD/L9YH
LQ84+g1G+1toewPj3gJDwFBc7136hWP8cJwfSQ2c6wvjoGPct+hPHfwH3PvP
uP5vWH8mov1P3O909J2F83MwbhGOl+KcB2NXoO6LtgC8ZgjGRKMezz1BOJeK
a6eBdOaDAJmgihaO41yQBzQtHNcs0NdaSy1czxmuBd8w6eAVepyObUoLVxq4
ioeOUsVD3z1o0KC/8CzYf/nllyb+ZldMTExMTExMTMxoeN9pP/744+0nnnii
PTU11e3flwiCIAiCIAiCIAjND3dq28b45BW11LWZf9ugaTt0beWnp/vsabFr
df3CoWnrbNdRmrama+N4i66LqNyxmratayelup6iaduMu0u9hbF4bTZbAchH
nZoMtRlqNFnUbOjnnZOTk8qYvnl5eeE4Di4qKtJ0bvRnHOBlxcXFHvn5+QvQ
Phtt08AU+nXj+A/0/w3lz7jeKGpM1LdRfoMxX2LsZ6iPRN8RYDj4AOffx//3
XZTvoBwK3p4xY8Zbn3/++VPe3t431FXbRrto22It1ZpM96bPN3Pdcz5R916+
fHlnLy+vrjExMd0ZY4HzkzHPw8LCLg0ICLgsMTHxWvp8x8fH98d1bsN8vIP5
C6h5Y+476pjD92Eduh88wNjn1L7R9hzKlzDHX0HfVzH2dbS9Ru2bWjjWlcFK
/8b8HYr2d9H2PnOC4xojce5THH+ua9/fgO+xdozBNX/BmAk4nogxk3H9aegz
E+PmM/c3XouxK+j/7Qn86PeNMRG4Zgz6JzL/A8ZvQL8UkGrUv7G2Zeprara+
xmr6tykmuiMeuhP9u1pecD1+h+YHTv9v/n0w+IA7coG//fbbB/As2L/88sum
/WJXTExMTExMTEysmt1///2az/dHH30kPt+CIAiCIAiCIAiCU2rSvytc6N1W
51zFMK9wEr/cFLe8ivata94Of25nurchXm01X26D7k2dg35+Dt1b10K2GDVv
5dPNfLIm3btIj7vL+Lv5el7aXN0vMcuoe+fm5qZQ96bGg+MQ3deR/t2eVro3
xk4Bfyrdm77dOB6t/Lqpe9tsti9xXtO9UR8BPmRsYsYoBu8xfjHahoG3582b
9+Z33333tK+v700qlnl2dvalKpY5Xt8RyzwjI6NHQ8QyV/q3xDIXOwbMqf5t
1r7tptjnxrzfxn0e6tnnfBgzZsypXl5e7bC2taP2zfnk4+PTEdc4C/PmHO5D
Qd9zw8PDLwgJCemNMRcnJSVdhXnIPN830u8bc2sA5v9tWB/+D6Wjjvl/J/Vv
rHN34zoPZ2VlPY65/BRzfqP9OfACzr2INeEFzOFXMO5F8DKgJk4t/A2sP5r/
N/VvrBH0/f4QfMRYEtx7Q/9vrA3fgx9xrTHM/a2vWxNxffp+z8BrzsW52VgL
5qO+BH29UK7CPa0BUegTi2vG41oJuG4iSALJYAPaUmryA2dMdK7DjInOOBvO
fMAZCx2UY+0vN2rg+r6nrfrfhCox0LlvauTIkfvxDNjfeeedpv1SV0xMTExM
TExMrJqtXLlS0727detmr8V3GIIgCIIgCIIgCEILwtXnRCs/b7PWbeXfbda4
N2/eXC12uYEq/t26X7dD59apkp9bR9O4MU7FK3fELKdOUV5evkP33avRt1uP
gevQuFGnPmJTOrfuQ0hfQmop1Lg1nVv3OcxGPQtsBJkgA6TrOk1qXl5eSlZW
VkJOTk5kdnZ2CLUe4FVYWLi0pKRkEXUgMEePC/wntSK8xq+47/Goj6MfJdpH
UVuijyV9Lal1Y8xHaB9OP0zGIqbGrccmfgv3/gagz+br1K7mzp37ytdff/2I
l5fXNRs3bnSatxvX6qa0bvp516R1x8XF1Slvt9L6ROsWO8rMLbo32rpERER0
5Zyk9h0dHd0jKCioF+OdJyQkXIF5d01SUtJ1KSkpN6FPf8z3W6l5o+yP+Uft
ewDm9O30/8Z6cCfWoQfQ71HM9cex/gzE+vEMzmn6N9aBQZjvL7COvs8r/Rvt
/+U6Qv9v1IdiPtP3W4t7zjUI7R/j+FNc82tq3xjzA9rHoN8vKCegH32/p+B4
Js7NQN/Z6LsQLAO+uJ9g3Fc4zjP/Qwz6xII4EI/7SFD6N/3AqX/j9dL09ZXr
bBX92xwDXeUD13NPcL+S0r4d+rfBB3wLjjXtW+2JMvp///DDD/vwDNhffPHF
pv1SV0xMTExMTExMrJodOnTI3rVrV0379vPzc/t3KoIgCIIgCIIgCELzoSl1
b7Nvd4XBv9sUz7xaTHOld9OvG20Ov24dlYtV882jTlFeXl6p++xtM2jeFbrW
7fDpLisrc+TpVrHM6R9IP0HqJbpu4vDr1nWV3NLSUvoYVtO7dV0mVY/Xm5yf
n5+UlZUVl5OTE44yKC8vj7ltlxcWFnoozbuoqGgm2qeinGiz2SZg/Hi8/lic
+wl9f0A7fbzp2/0JdSZcewQ1b+bd1f26h4IhqL9ZUlLyBl73dT1376tof2Xu
3Lkvfvvttw/7+vr2E91bTKzW1iRxzufMmXMq45xzLjFuQnh4+Jk43ykoKKhL
QkJCV8ylczg3Q0NDz6fuTdavX38F5mM/6t4ob8R6cjP1bvp9Y827BWvDrQbd
W/P7xrXvp883dW/MbereT+PcM7j+IPp/4xrPm3VvnHsNaDnAMUbTvdFH6d4j
jLo3rs39OT/g3Bhcazx1b+7j0de2GXit6dS9seZoujfafbgmoh6G/lE4tx7j
Y9CP2rfm+417STTp3qn6OltF99bjnzvVvfU13RH3XF/zuf5z3xPRdG/+nTD6
fOvxQXb8+eefe/Es2B966KEm/U5XTExMTExMTEzM2oYOHarp3oMHD5ZY54Ig
CIIgCIIgCEIVjkT7NureKqZ5hUU88wqDr7cxl7ezeOZGP2+z7m2MZ46xDh9v
XfeuVH7eRs1b1zQqdL++zbqD92GHv8O+f5qPtx4TlxSZNW/6eOsxdTUfb2ou
SvO22Wz0QaQmk6I0b/oq5ufnJ+bk5MTk5uaGZmdnB1LrKSgoWFZYWLgIfecy
tjk1IfRjPtzf0fYL+JnxgouLi39Ev1HMoatr3iNx7Y8YZxhtH4D3lJ83+r9J
n0xq3vTxpuZN3Qp9Xlq8ePHzo0aNetjb2/tavLaW2xvXvojaN65/QWZmpkP7
pl8ptW+V29uofeNaHTCuSm7v2mrf5tzedru9Wm7v+mrfrSS3t1jjWK01b7sT
P2+7heZNOBe4H4Tzg/m9/fz8TuNc4n4Szi36eyvdW/l7G3Xv+Pj4y9PT069O
SUm5BvPtBszRm7AWaNo3ypswb/tT+6bfN9ZILeY5+tyXlZX1IK7/CHN9Y314
EjxF7Zu+32h7DmOfxZjnMNdfwDzXcoAz/zeuOxhrwhBc4x09j8L/0E+Ld46+
n2DsVzj3Ha41Cm0/Ytw4tDPf929c2xjPgjkc0DaLOR0Y6xxjvHE/gRi3Fv0j
0DcKrMNatp7aN8o4QL/vRKD8vrXc3yANpJtinqt453nO4p3ra7zD31uP9WHp
703tGz87Ld75okWL9uB5sN9yyy1N+n2umJiYmJiYmJiYtYWHh2u6d5cuXex4
3+b271QEQRAEQRAEQRCE5kNNObGstO+K6jp4FV/vilrk8q741997f211b2re
OlXim+t+3iqHtyO2uTl/t1nzNvt56/FwLf28jZq30c+bmjegnzc1mWRqNLpW
k1BQUBCfm5u7Ljs7ey0IyM/PZ17bpfR5LCkpoa/3LGpCaGc+79/o643XGoux
PxUWFv6Avt+j/BrXHan7ejOPN329Gd/c4evN2ObUptBP8/PGz4I5el9C+wtL
lix5bty4cQ8GBQVdi2tdmpWVpWnfuK+LcJ0LcXwBXr8HtW/m9abGhvauSvtO
SUnpYvb5NmrfSvdW2jd1b9zLKUr7pu5tpX0b4z4bdW+7hfatdEbRvsWayGqM
bW7l622vRWxzNQ+oe/v4+JyidG/OJcJ4CrhWp5UrV56Vnp5+Nucite/IyMjz
MKZnYGDgRbGxsZcxxzfm2tX0+cb1NO2bft+Yt5r/N7VvtA/QY57fhvo9uI7m
843rPkbtG2vQk2h7BjyNuU2/72cY85zaN8a/iOOXUTLP9+sY9xb6DKPPN3gf
7cNRjsB1RqL9C1zzW4zlevUD+o5FO/N8T8D6MglrwzS0T0X/GajPQ38P9PfE
2hKAeghePxx9I3E/0YAxz9fjHpjzOw71BJCI42SUG0AK2lNxnAYycJwJNqKe
DXJALshDWz4oAIXFh60E2EApfqZloBznyCawGe0VKMlW1LeB7QT9KvF72o3n
wd6nT58m/05XTExMTExMTEysuv3zzz/2c889V9O+vb293f6diiAIgiAIgiAI
gtB8aGrdu8IQ31xp3ub45q40b5XTW49trsU3N/h6b9dzs1bz81axzZWPt1Hz
dqV36/FzXcU113y8bTZbMuqJIIFxeumzmJ+fH5OTkxPF3N4o/XJzc1egbXFh
YeE8+j4WFxdPZ/7bvLy8iajT13ssrvMTxo4uKir6vqCg4Bu0f8HY5vTzpp8l
eB9jmNP7bVzjLfR7k3o3jl9Dv1eod6MPc/UybvGg5cuXPzN+/PgH1qxZc43o
3mJidbbjasnxTvgPGThwoMZtt912gqJfv34n9ujR42S0t/n555/b4Pk+Zfjw
4ae++uqr7QYNGnQmjtv//vvvHcgnn3zSBfP4bLR1nTp16vnz58+/aPbs2b0W
LVp0ibe3dx9/f/8+vr6+l2HeXOrn53cp5j3rfZcuXXo5+lwxZ86ca8D1Cxcu
vGnx4sU3L1mypP+yZctuRZ8Bs2bNunXmzJm3sZwxY8YAgte4Dfzfn3/+eQe4
67fffrvn119/vR99HsD5B9H2CMG9PTZu3Lincf+Dpk+f/tyUKVNeAC//8ccf
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
MTExsSo2d+5cTffu2rVrJN5T3itUpbi4WKgH+FwjNBD4eTKGV7W4XsKRUdwE
cdEER3y4BwT3UVhY+GBjUOIk7p/gHHfv5ROE5oi792oKRY8IdcO4L7Ue4x8l
cXFxj4aEhDwQEBDwf76+vjeFhYVdvXr16r5RUVEX5+Tk9KSPNzVv+kPi74em
cW/ZsqUrwfiumZmZXek7ife0Wj7enTt3dlSUmmINO+Ptt9/u0L59+9Naie4t
JtYcrZrubde1b5QOVNxz5v3GunESfb4J1ow2Rn2bx1Yo33D6fhv9w4lqM/uK
GzH7lRv1cNzbGeHh4VXioWM90+Khqxjo9AWnDo57PmfVqlU9vLy8ei9atOgK
Hx+f62JiYm7Cengz3ivcjPXWLeBe+1uBdfhW8sADD3yB35UWR1NMTExMTExM
TKz5GN6Larr3aaedllmi71l0Bd7btijwf75DqDv42QkNjDvje7U08Bn3LqHh
wM+03pSWlt4tCMcKRTXEShSaFnfvrRRkj2lTUlBQcJ8Vxfr+SqFhYB5aVxTr
ewITExPvDw4OvjsgIOBW6jthYWGXr169+pLQ0NCLMC+0OOZpaWnnJicnd6PG
vXnz5rMU1LtTUlK60G9yx44d7c3g+rXirbfeOrNTp05tW4nuLSbWHE3Tvc1Q
9zZq39S9qXnTD5y5vunzTbBOnIzzJxfr+jbqJxG2G+E5s384+mlx0FVbqRNf
ccI+eL22Km66EeYYx7WrxEMvLCysEgO9VPcD9/f3PxvrYfcVK1ZcuGDBgj5+
fn5XxcTEXLtx48br0L/RKSsrs6SkpOQGK7Ce30iefvrpofhd2W+88UZ3fq0r
JiYmJiYmJiZmMnxe1nTvE088sULtWRSEIwWfHQYIDYsbY3u1OLZs2SI0IPiZ
3ia4Fcv4fELTU5v9hULLxt37Pd1BSTPYr9mSsdlsdx7LNNX+1Drck7YncMOG
DXcGBQXdTl9vHx+fq0NCQvqsXLmyV2ho6Pn4fK7FMd+4ceM59IekL+SuXbs6
KfD3pFNCQkIn/P46bN++/Yz68t57753RpUuXU1u1avUfN+t7YmJi1e04u93u
QOnedoPft4Lat17Xcn0T+n7bda1bp7WC5xTUvpV/OPXvUpOPONsw5mRnWI1T
UA+PiIhw+H8bc4mrGOjKFzwgIKCzl5dX14ULF/bA/6M31kPGv7gqPT396oKC
ArdRVFR0jSuGDRv2LH5X9l69ejX1V7liYmJiYmJiYmIubP/+/fbjjjuO2veh
mJiYW9W+ReEwJSUlQj3Az+6mxsJmswnCEcN4ac6wuSmO2rEKfqa31JfS0lLh
CCkqKuovNBvcvi9NEIT6gzX1qMXd+zdbImUu9lgmJCQM8Pf37+/t7X3t0qVL
Lw8JCekdFBR0QURExLl41rriM8/Z1LwZCxi/v47UuI2kpaW1p9/k1q1bT6sv
w4YNO61r166ntBLdW0ysOVoV3dtuoX3bTfq3yvVN6PttN2jdPLbCqH8r/2+F
arNX1c+rYNTNzVAPN/qCMx66yiWuYqArX3Csfx28vLy6LFy4sPuiRYsu9PX1
vSQ2Nvay3NzcvrhWrcjLy7u8JtCvTmC9vcIK3POV5Pvvv78Hvyt7hw4dmvy7
XDExMTExMTExMdfWqVMnat9/jxs37v6iGvYztjTwPvvaIwXXEYQjprgJ4nsJ
ruOcCfUDP9PrBfeRn59/Q2NQ4iTun+Acd+/lE4TmiLv3arYUCmQ/qdv3VRr3
VsbGxt7s5+d3g5eX11Wenp6X+vv791y5cuV5wcHB56SlpWlxzJOTkzszFjD+
lmsatxHqRPSbNOfUJdSVrGIOmxkyZEjbbt26tWnVqtXx7hb4xMTEqtlxrZxo
33aLnN9sV7m+FTjnwNhuxKx/2w16tqGttTPM4+wmPdzHx6dKTHTGTTfGQFe+
4L6+vmfi/9Fp4cKFms83xl2E8xdnZWVdgr9Vl2B8ncFaeWkD0McVWLOvxu/J
fvzxx9v//vvvpvsSV0xMTExMTKzB7J9//iE12SHwl0sOHTqA9wP7nHHo7793
o6x0yV9/bQXlLig+eOBAXg1kgg01ELt/374IFwTv37/f1xUH9u9femDfvjmu
2LNr15S9e/eOdwbOf79nz55PXLF7x453KysrX3PFrsrKp/Ee834jZWVlD+A9
5xMs1Z5FQThSSkpKhAYCn/OuIjabTWgiCtwYS+1YpLS0tN4UFhb2E5on+P0I
daSoGeznE4RmiNv3FgpCQ1HbPZaxsbHXBQQE9PP09Oy7fPnyXqtWrerh5+fX
jTlumet248aNHTMyMjowFjA+W51Bn0gF9W7qRNSLVD7e+jB8+HDGOD+5leje
YmLN0Sx1b7vB79vo/62XWsxzgrpZAz/BCrP+bbfwEbcb9HMzVuMUzDPu4eFR
zQe81BAD3a7nEl+9evXps2fP7rBgwYIuM2bM6L5s2bILQkNDL8J6dxHGsezl
DvLy8nrbbDaXHH/88Xvxu7JjTW6Kr+bFxMTExBrYaqF5Hvrn0KG/XHHo0KED
YG8N7KpB76wAZa7468CB4oMHD+bWQMbBAweSXRBzcP/+sBpYfWD/fm8XeBzY
t2+WK/bv2zdp7+7d41yxb8+eb3bv3PmRM/bu2jV0586dL7liV2XlE5WVlXcZ
2bp1691G8F6ib0172YRjj5ycnMsE5xQVFQlCs6C4lvG9hCOnvLxcaECK6xhP
TmhY8vLyrmgMSpzE/ROEowV37xEUZK9kU6L2UQpNi7P9lHFxcVf7+/tfsXz5
8ksY0zcgIKA7/RyZ45Z6N+OYb9iw4UzGAlYat9Gfm3oR+rQttcipS+x2e5ua
eP/99+nrfVIr0b3FxJqjOdW97U40cPp9o03DqH/r/McKs0Zut/ARtzvRzJ2N
sxs0ceYatxt8wPP1WOrUv+n/rfzAvby82q1YseKMGTNmdJo+fXrXZcuWnbd+
/frzs7KyLigsLHQbRUVFF1qRk5PTU3HCCSfY8LuyY21uFD1GTEys8axWPp6H
DrnUPGuld/79966///qrsgZca54HDxaBHFf8dfBgOkh0xcEDB9Yf3L8/1Cn7
9gUeOHDA0yX79i0CM1yxd8+eiXv37v3JGfv27Ply986dw12xq7Lyrd27dz/n
jD07dz5SWVn5f67Ytm1b382bN190NILPcL2E6nBPmlCVmvbotVTwvvNiQWho
8PlFaGAKCgouEZqG0nrEURMaPcac0Pxw+949QTgS3L23UpA9ps0B5k4VGo7a
7rGMi4vr6+3t3Wfp0qUX6TF9z6GfI8qO1LsTExPPYAxgxgKmvm321VZ6kd1u
P7m+vPzyy/T1bt1KdG8xseZotdK97f/GPmfdke/bbtK3jXnAjditNXINQ5ul
Zu5qrF3XxJlr3G4RE13FQOdaRB08ICDg1Hnz5p02bdq09lOnTuVaeE5ERMS5
6enp5+Xl5bmN/Pz8HjXRunXrVPyu7LjfhhXkxBrdatQ8a9A766R5/v33dqf8
9dcWlKUuOXiwEGQ74+CBA9Q7E1yBPuv279+/1hUH9u/3R7nCGfv27l24f9++
aa7Yu2fPb+g32hV79uz5fO/u3e87Y8/Ona9v27btWVfs3Lbtwc2bN9/qioKC
gvOPJfAe8Jil0I17nI4FNm3a1GJwtidNEMwY9ykK1cF7cEFwK4ztpeJ7CcLR
yJHElnP3PsJjAXfvOxTcj7v3WDZX3L1HUBCaA+7ea9icacx9qvHx8ZesWrWq
N2P5Lly4sPvKlSvPYm5b0J56N3286dfNWMBK4zZSrMcMttvt1fLqEqUvuWLY
sGH09T5R19fExMSan9VK97ZX1b8dOb9N+na1vOB2Fzq5rmU71bvtBi3d6pzS
w42+4MaY6IyBTrhe4W/RydTAp0+f3m7mzJmaz/fcuXPPjoqKOmfjxo3nYK2r
Atavbk0FPktp5OTkdHfG6aefvviafv32REZG7j90OFatU30T55mzs9QlBw8W
HKSO6QLdZzPBGTgfg34hrtDych44sMwV6DPFFXv37v1t354937ti9+7dI/bu
2vWOC4bt2rVroCu2bd5836ZNm25yhf79ttPfU3MHn00EC3Jzc88V/gXvAYUW
RF4d9mmhv9CCya/FPj1BMJOZmXn+keLu/WCCcKS4e9+f7CVsubh7H+GxgLv3
1wlCc8XdeysF2WPalKh9lIJ7UXsC161bd5Gfn9+F8+fPP4/xzVHXNG/G+aXe
TR9vat6MBazr2w4/7Xw9VjCxW+TUrS1fffUVfb1PaCW6t5hYc7Vaa97sa875
XResNOyaNHPjWCtN3OwLboyJboiBrvmBMw/4nDlzTp0wYcJpv//+e4fly5d3
xtiz0tPTzyYFBQVuBetyV7x3FAShidmyZcsxg3kPjyDURH32aQktE3fs1xKO
fty9t00Q3LGH0ExpM9jnJhy91GWPotDwlMp+QkEQmjHu3tsnCI0N89Mq1L6+
8PDwC1asWNHDw8NDi2++fPnyDvRzZJxf5d9NzZuxgPMP69vVfLl1/doyr25t
GDx4MH29RfcWEzt6rErsc6u6inlu1MANcdBd+ojXhdpo7GYt3aiDG2KgOzTw
yZMnn/Ljjz9qPt9YFzuGhYV1wnrYOScnx23gs1QXQWgKNm3aJFiA90BnCYIz
Nm/efExT4OY9X8LRA/fnCdVx994tQRBcw9heVvG9BOFooSFiywnCsYC79/IJ
QnPE3fsLWwru3kMpVN1LGhcXd66np2d3xvJlTN/58+efSc3bw8OjrdK7CeMA
GzRuDUOs4BPtFjl1a8tXX31Fzfs/rUT3FhM72k2bw7X1DXemf5s17Jo0c2fa
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
L67Kyq4=
             "], {{0, 597}, {1982, 0}}, {0, 255}, ColorFunction -> 
             RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True, 
             MetaInformation -> 
             Association[
              "Comments" -> Association["Software" -> "www.inkscape.org"]]], 
            Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSizeRaw -> {1982, 597}, PlotRange -> {{0, 1982}, {0, 597}}], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[5], Selectable -> False], 
          StyleBox[
           TemplateBox[{"\"Section \"", 
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {"CounterValue", "CodeSealNavigation"}],
                StandardForm]], "\" of \"", 
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {
                "MaxCounterValue", "CodeSealNavigation"}], StandardForm]]}, 
            "RowDefault"], "InterfaceText", StripOnInput -> False], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[5], Selectable -> False], 
          TemplateBox[{
            ButtonBox["\"\[LeftArrowBar]\"", ButtonFunction :> If[
               StringMatchQ[
                ToString[
                 CurrentValue[
                  ButtonNotebook[], ScreenStyleEnvironment]], 
                StringExpression["Pagewise", 
                 BlankSequence[]]], FrontEndTokenExecute["ScrollPageFirst"]; 
               Null, SelectionMove[
                 ButtonNotebook[], Before, Notebook]; NotebookFind[
                 ButtonNotebook[], "CodeSealNavigation", Next, CellTags, 
                 AutoScroll -> True]; SelectionMove[
                 ButtonNotebook[], After, Cell]; Null], Appearance -> 
             Automatic, Evaluator -> Automatic, Method -> "Preemptive"], 
            ButtonBox["\"\[LeftArrow]\"", ButtonFunction :> If[
               StringMatchQ[
                ToString[
                 CurrentValue[
                  ButtonNotebook[], ScreenStyleEnvironment]], 
                StringExpression["Pagewise", 
                 BlankSequence[]]], 
               FrontEndTokenExecute["ScrollPagePrevious"]; Null, 
               NotebookFind[
                 ButtonNotebook[], "CodeSealNavigation", Previous, CellTags, 
                 AutoScroll -> True]; NotebookFind[
                 ButtonNotebook[], "CodeSealNavigation", Previous, CellTags, 
                 AutoScroll -> True]; SelectionMove[
                 ButtonNotebook[], After, Cell]; Null], Appearance -> 
             Automatic, Evaluator -> Automatic, Method -> "Preemptive"], 
            ButtonBox["\"\[RightArrow]\"", ButtonFunction :> (If[
                StringMatchQ[
                 ToString[
                  CurrentValue[
                   ButtonNotebook[], ScreenStyleEnvironment]], 
                 StringExpression["Pagewise", 
                  BlankSequence[]]], FrontEndTokenExecute["ScrollPageNext"]; 
                Null, NotebookFind[
                  ButtonNotebook[], "CodeSealNavigation", Next, CellTags, 
                  AutoScroll -> True]; SelectionMove[
                  ButtonNotebook[], After, Cell]; Null]; Null), Appearance -> 
             Automatic, Evaluator -> Automatic, Method -> "Preemptive"], 
            ButtonBox["\"\[RightArrowBar]\"", ButtonFunction :> (If[
                StringMatchQ[
                 ToString[
                  CurrentValue[
                   ButtonNotebook[], ScreenStyleEnvironment]], 
                 StringExpression["Pagewise", 
                  BlankSequence[]]], FrontEndTokenExecute["ScrollPageLast"]; 
                Null, SelectionMove[
                  ButtonNotebook[], After, Notebook]; NotebookFind[
                  ButtonNotebook[], "CodeSealNavigation", Previous, CellTags, 
                  AutoScroll -> True]; SelectionMove[
                  ButtonNotebook[], After, Cell]; Null]; Null), Appearance -> 
             Automatic, Evaluator -> Automatic, Method -> "Preemptive"]}, 
           "RowDefault"], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[5], Selectable -> False], 
          ActionMenuBox["\"Change View\"", {"\"Plain\"" :> {
              SetOptions[
               ButtonNotebook[], ScreenStyleEnvironment -> "Plain"]}, 
            "\"Colorful\"" :> {
              SetOptions[
               ButtonNotebook[], ScreenStyleEnvironment -> "Colorful"]}, 
            "\"PagewisePlain\"" :> {
              SetOptions[
               ButtonNotebook[], ScreenStyleEnvironment -> "PagewisePlain"]}, 
            "\"PagewiseColorful\"" :> {
              SetOptions[
               ButtonNotebook[], ScreenStyleEnvironment -> 
               "PagewiseColorful"]}}, Method -> "Queued"], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[5], Selectable -> False], 
          ActionMenuBox["\"CodeSeal Operations\"", {"\"Preferences\"" :> {
              CodeSeal`Data`Private`openPreferencesDialog[
               ButtonNotebook[]]}, Delimiter, 
            "\"Generate Table of Contents\"" :> {
              CodeSeal`Data`Private`generateTableOfContents[
               ButtonNotebook[], "Progress" -> False]}, 
            "\"Generate Progress Report\"" :> {
              CodeSeal`Data`Private`generateTableOfContents[
               ButtonNotebook[], "Progress" -> True]}, Delimiter, 
            "\"View initialization cells\"" :> {
              Module[{CodeSeal`Authoring`Private`cells = {}}, Map[
                 
                 Function[{CodeSeal`Authoring`Private`cell}, 
                  SelectionMove[
                   CodeSeal`Authoring`Private`cell, All, CellGroup]; 
                  AppendTo[CodeSeal`Authoring`Private`cells, 
                    Map[NotebookRead, 
                    SelectedCells[
                    ButtonNotebook[]]]]; Null], 
                 Cells[
                  ButtonNotebook[], CellStyle -> "Initialization"]]; 
               NotebookPut[
                 Notebook[
                  Flatten[CodeSeal`Authoring`Private`cells]]]]}, 
            "\"Evaluate initialization cells\"" :> {
              FrontEndTokenExecute["EvaluateInitialization"]}, Delimiter, 
            "\"View credits\"" :> {
              MessageDialog[
               CodeSeal`Data`Private`creditsAvailable[
                ButtonNotebook[]], WindowSize -> Small]}, 
            "\"Create scratch notebook\"" :> {
              NotebookPut[]}, "\"Log special interaction\"" :> {
              CodeSeal`Data`Private`logSpecialDialog[]}, 
            "\"Restore stylesheet\"" :> 
            Module[{CodeSeal`Authoring`Private`stylesheet}, 
              CodeSeal`Authoring`Private`stylesheet = Uncompress[
                 CurrentValue[
                  EvaluationNotebook[], {
                  TaggingRules, "CodeSeal", "CoSet", "Stylesheet"}]]; 
              SetOptions[
                EvaluationNotebook[], StyleDefinitions -> 
                CodeSeal`Authoring`Private`stylesheet]], Delimiter, 
            "\"Get personal analytics template (internet required)\"" :> {
              Module[{CodeSeal`Authoring`Private`nbExpr}, 
               If[
                StringFreeQ[
                 CurrentValue[
                 CodeSeal`Authoring`Private`nb, {
                  TaggingRules, "CodeSeal", "Data", "studentUUID"}], "_"], 
                CodeSeal`Authoring`Private`nbExpr = 
                 CloudGet["https://wolfr.am/ovGHWanN"]; NotebookPut[
                  ReplaceAll[
                  CodeSeal`Authoring`Private`nbExpr, {
                   "\"super-duper-unique-placeholder-for-authorUUID\"" -> 
                    StringJoin["\"", 
                    ToString[
                    CurrentValue[
                    CodeSeal`Authoring`Private`nb, {
                    TaggingRules, "CodeSeal", "Data", "authorUUID"}]], "\""], 
                    "\"super-duper-unique-placeholder-for-moduleUUID\"" -> 
                    StringJoin["\"", 
                    ToString[
                    CurrentValue[
                    CodeSeal`Authoring`Private`nb, {
                    TaggingRules, "CodeSeal", "Data", "moduleUUID"}]], "\""], 
                    "\"super-duper-unique-placeholder-for-fileUUID\"" -> 
                    StringJoin["\"", 
                    ToString[
                    CurrentValue[
                    CodeSeal`Authoring`Private`nb, {
                    TaggingRules, "CodeSeal", "Data", "fileUUID"}]], "\""]}]]; 
                Null, 
                MessageDialog[
                "You must opt into the Personal Analytics Program to qualify \
for this feature"]]]}, "\"Current number of local data caches\"" :> {
              MessageDialog[
               Row[{"As of ", 
                 DateString[], " there are ", 
                 Length[
                  LocalObjects[
                   URLBuild[{"CodeSeal", "Data"}]]], 
                 " caches on this computer waiting to be sent to the server.",
                  "\n\nLeaving this notebook open for a few minutes should \
clear those if you are connected to the internet.", 
                 "\nAlternatively, you can use the menu to delete these local \
data caches (they will be lost forever and not included in your personal \
analytics).", 
                 "\n\nRelaunch this window using the menu to refresh the \
current count."}], WindowSize -> Medium]}, "\"Delete all local data caches\"" :> {
              Map[DeleteFile, 
               LocalObjects[
                URLBuild[{"CodeSeal", "Data"}]]]}, Delimiter, 
            "\"Disconnect from Wolfram Cloud\"" :> {
              CloudDisconnect[]}, "\"Connect to Wolfram Cloud\"" :> {
              CloudConnect[]}, Delimiter, "\"Check status of data logging\"" :> {
              CreateDialog[
               Column[{
                 Row[{"Package loaded: ", 
                   Dynamic[CodeSeal`Data`Private`activatedQ]}], 
                 Row[{"Dynamic update counter: ", 
                   Dynamic[CodeSeal`Data`Private`dynamicCounter]}], 
                 DefaultButton[]}]]}, 
            "\"Reload data logging package (takes a few seconds)\"" :> {
              CodeSeal`Data`Private`killDataLogging[]}, 
            "\"Send local cache to server\"" :> {
              CodeSeal`Data`Private`sendLocalDataToServer[]}, 
            "\"Purge data from memory onto disk\"" :> {
              CodeSeal`Data`Private`purgeDataFromMemory[
              "CacheTrigger-DebuggingButton"]}}, Method -> "Queued"]}, 
         "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
      DefaultBaseStyle -> "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]]},
TaggingRules->{
 "CodeSeal" -> {
   "Data" -> {
     "Solutions" -> 
      "1:eJzsvAk4Vd3bwH2KokiaVaoTJUlCGoi1EqlIZCqSTMeUKTORIRylJEMhmTM7hmSKvcwpQ\
+Z5ah40qiR59O2jzn7y1NO///Re3/d+b9fVufa99xrvda9h2/\
fvXq1vpWI0jUQi2bLhP9K2tlYGpnp2plaWRtPpN5nxHxV7c4opPYkRF+PWflNbuz8TyFDMzb+WwYr/\
qFGc7GT17PSMmH5MTX+uaudsTtll5aRqiAumQmQyWUbP3MDeXM+\
OQrYzoZBdNhpYWVhbWVIs7chWRpO3LPSMLSl2pgZkI1OKuSFZz46sZ+lMtrYyxZPomVtZGn/\
LqOdkaos/MiRbm1vZkU3tyA62QmSXqT2xnY1fyFlZ2h2imBqb2KnS7++yMjdUHcIvtIVFROn/1W2/\
tkVfjl7hEfJRspG9pQFdLYwm2dnbWdmY6pmT7azIBlPaP9lGW3o6fSs7E7KNqaXx10bhDy3JeoaTFx\
Z4PmMKfmFDL0DP0taRfoXnPmFPsaXXgzdchYIXjFdggvfX0spx8jFep7Ep0QgDKysbQ1NLes22zrZ2\
eKl4/y3xruM5Jp/jOsTL/ZZ6siVCjC7+ZEBmfNMA+Tc1xk7PbGVuT28vfdR/\
ZhEsk4mdJg1i8sZMeqlWjvi9vxjIX5/O+P6pKr1ofgFVeiLyD0nZpiSl90nxm8V8zTDZs8mh/\
CbTS7My+ibQm4Hr57uk6tbWFJtv8qQWcM19l1NgvSq9cm0Juc3Sm39ozLxf9mr6P9Fn+lPLb/\
XSf6W+a7CosPCktGOyReQfdfJPqG9qUvoDS3sLfUIDU5RFT2tnb2Np+9v6+PUoM0+\
pm24tBvY2Nrjdft/jX5c5mWbz5K/AP0hJb63IV8Xp/Eah/L8evsk0G7+rfv13g7Xjb5rO/EOD/\
nZcWH6pm6+6N2UYCP2xngVutxTb71oh/RsD9GuTnNpe+lO9KSZJfyQsJLLlW6eZJq3xP9ht+oXNn/\
OPns5Gz9DU3vZnSqD/WvzbXf5xFhpO6fKf13rfej3ra6+//vt3puJUG/zWd0bt9HXYlmKtZzO5Qf/\
2BPxnxpe+kn7d9P5cA/9uEs6ckpOugn34dmOMt+7rWnrkV41i+ScaRe+A4a6vZf5aub8xp0/+2yXo/\
dbMpueTsbL9pgm6ZG1iOikdnfwV/I/WpPptCvyrNX01sU2Tv6KTv26/nfcfaHQyzdc1V/\
CHa5df1jW1nB8XwMkl/7e3iH9r5H97J/ifG7P/kB1+NyZuP9z/D+\
h1Sp1TLOA3dCo6OfmVTb83k18tKz+\
uZvgrjb2F9eSRmpFxi6job6mObnC7zSkWDIP7cfH5URku39pIV4EKRc/c9ptK/\
2zzdzre8bWF9nYmVjb7LK3t//E71dQGFuMXB6wm3zu+nfhtrextDCjK9Dcjwckb1la2pt+/t1C+\
9ocufptLgvSXBvorFdkQL1PP0oBCNtwkStbTt3L49kJGsbH62zeOyVpsKEZWNj++\
veHlbqAXZWqJp9QzpJdBL0uCTLyDMDE6SLyDrKff+bMTZCnySbxluAEfwU3oqCB+jU+bb9e/+\
Z7yl1SzvqWSsTK3svmqYvqtPTZ6zvspDhRzU1wg/aRl9Dt4b/4DdRJlq+zZNXln8u16st6/q3zykO/\
23+uv6pzJZQIfWmMZKwu6hfyveZnbb+X4r7/M/Wtnpz+r/L+z0//qs9Nvnwr+33m++vXL97fz1f+\
drP7vZPWfPlnRn/L/j5/B6L/fr/b/1kls6kjcJP33TmL6FPNvf/39d05iG392EvvFQYyf9PsHsf/\
Rcxhd8RvJ/3tPYl+X3t86j/3i1YB+oUb/GvHjn/kX4YKdlZ2e+V+/q/zmn/\
230LVjSzY2daBYkvWdv1q7vcXkF48//3R05Ch5A/m74xAu/6QtX5eA/499bpj6B0qmr5r+\
7sQ5qdxvMn2AGWo2/i6N0V8OsL8+hs76ZdP/mb9m/nlIVfuulb86qv5d/u8/ktB/N3y7/tkx+O/+\
GP73SlfloD+yx6vA100r0//gHzyn1sk+VR8u/4ZC/qpQoX9jn2f5Ic33pzry39wR+W4z/w98f/\
j1hJnajanvXX/uwhsnZwCxE/3G6P24jimbW/3d5j818U8H8985bs38IY3Lbx+\
wNk72VWjLlFH67hbjSPgbB4/vV7XJz4v0PPi2ge++BrY/jtRUifQLaTqjF2p6xj+\
o88fd0cb6UtCjNSEd0Ebk0rPLftsGoc0t7zCF1LzH8GtD6Y2T1relL9IUNbxxxy0ptrY2EeH0f5/\
gn51RstYzMLVztiFN/\
nvz3ZP9ppb0jYFCb1kufndSYXDx8y9fBpBBfAIpQkwSWH3i9fs0NoD4nD1KQqQlQdZ1Eb53HwbQ4zR\
N5csHJIEov6L+46EBVDeyYW6uiSTYNs+\
7u65jAGUZnArZf1US7Hzw9k545gA6UHbvyQSLFFCh1qdtPjaAEpHLvOAHUsDxrreFMdaPSOpbd/\
TnQtDayva8TK8PaYUNKwgu3gVWlFot3Mbdi6rOLZ3mEyAL6uZvsZNY0otyXWv65oTLAhfKWIvU/\
F5U9u4cdjVeFrTP9gmWZe1FR8nP4poLZEGgesR8lfc96ILMwksXH8gCpqFKTou6HrT4U6qwqcRu8Gz\
Rsjnxrj1o0+KSa8kvd4MbxytnzO3rRoMcnyKrj+\
8B28mWIokd3UhNqdBVyXkPKGpdclSquRvd4tU6ed93DyiVOp57/FY3OksJ/\
sQXtwfcmTvfoCa7G9WdlBkT6NoDBq8fK/X07UbBg5pC6/btBbPHx1zeb+\
pG61Nfm2wW2Qd0z4m86fLqQhMcCjdaeRWAS26Qb71bF+JM0xpftlkBhPa+4y5z6kJ2/\
koq5rsUwB3BvH3Jll2ouo75oLCeAthcLxHvoNWFDiTrJYJoBTCTQ1ZjgWgXom0+v8VtxX6QfkGjeP+\
9TnR+z/4vt3gUwWjQST8EO9Gy7Gn3H6kogSfcZc/\
lJDoR30ZzzlojJdCeOFOxQawThSguNCx1UQLXiy7O61vficLu9xT0xCkBy/\
tJEWMLOpGc8uy69ndK4IFIa/qWpx2I44bDVof9yqChUbApLbADnRt37GAaVQbxHP1Lw+\
61owQ144sPzVRA0BHIIt7bjsimeh0PHVSAV3LM+672dhSy9yLTay8VoL/\
L4O7yunZUlegutvqKCuBxeOodndeOdJTFmCdqVUBc3/DrRP92NP341s7YTaogJp2l+\
saWdjSPS1mxc0IVRMqL2LScaUOWC9W7VJA6WMMmf6fRuw29BFn3Vtarg7RafZ4G9zZk0+/\
X96FbHRTtD2musW9DFJJiR+WIOug68FEU02tDr7x1nj8R0gCLVUveJYu3IQ9RbmOFWA1w4cg++\
1PPWlF1/gbrxoBDwMtcz2n9vlZklvL26vYLmqA/\
QCeySKYV1eZYqXrFagKJ7COlCqAVOU0c2Nh7XRMMf1BntdzciuoeU8+\
XdmoCPXf5sJwVrahjwXlMkVcL7AzaXLBjuAVpT2eb7XdTC0zkzxhVvNKC3rxYlPxm9Ag4yZTqaPOyG\
c3NkS8xSdMBluE6M3WfNqMz0iI5xaU6QH/TglDFB80IQdVQnnYdIH/ENYe/qxnpqJcZrZl2DHBdP/\
Cyv7IZ3U6RH592+BjI1X+nrxDZjD54Zl0LZ9YFr8okD6xRaEbz5y0ZelusC/\
Q87q5pT25C62tmrePfrw80uqJBX3wTenzVuJdTUx/Ii1offhjVhG6quCsyG+\
kDsYec54ZDmtCLVZ982Tz0AetelXccnk1ozZXp6pG5+\
oA2t61sj2YT2lkWcfTuKgPwOapbp3BWE8qyF+\
MrnjAAoSWPwiLNGtEywa7oW4MUoOMUcWobpRGJDJsGMg1TAP9mJcPmY42oebRu5ACTEShKLtjEqt6I\
PgcZHF7IZwT6g/2rbWEjkpUYb9cyNwLrzETeyy/E89+/wH7/\
sxGw2TgWNXzyLgq6L7hSbJ0JKBrgZ0/naUD7DBS2YdlmwFVyWkYEVwMqN7p3o67KDEiFdyme4WhA+\
tsNnYa6zECpytkLRmP1SDey5a3m9OPgVtXQ/NXN9cggwLvps+\
px0JpGW3rJsx59UONn1R47Dl45iq3zGKxD1+tS+\
5pVLQAv585dalG1KHLuXpmGFdYgQPiei1lwLerh8mWZvcEajCp7Xffwq0VmZctTlbdbg7qLlWsybGr\
R8MU5kRMq1sBuwT6WmXtqUdnlael9ftagerFKXf7rO6jlyzrO9BFrYLbCUGO59B0k42H2Oa77BMgR8\
DO7/6AGyRRWPHertAUDVdnkrVur0Tw74f0arE7gkWCoKMqrQIN6KyyK/VzBvFMpW4WmlSHQ3a4v1+\
MBBLe+Frz2rhg59I5bMIucBkZC7u6FfcXIcOv9xECJ0yCab25z/\
a1itN5XUWqx7Gkwf8kmx5ErxYgmYyI459Bp8PGjZdke2WI0qn3iZpLraVBe+\
Er9echNND3ZYIVb9WlwWOrVqU1bi9BlNbB8mZo3CNpyqkmGXISmvSp/lKLtDWo3cqw5PLsIPZ91/\
6wwxRuAlUK3PfoLkd+L3St4HLwB7xeLBc2+hagSHnQIuewNXpW+\
TLLrKEDVZuYCSZ3e4LTsy8ZCp3wkNs4iw6XqA8r3vlASM8hHn2Ce1C4tH0BSHGqgKeaj266K4Xp6Ps\
BV/VldPE8+Sk04stfDygc4GD2qOV+Xh+Boj5Gkvw8w8esr1SPnoW1MRTZJpT4g8Vwv7J2dhy7s8h/\
mueUDHgb2YBofbqCF8coywfU+QC+8q1jhzg0UMaYsqdLtA7RS2wq22N1AX8Kju/e+8wH76+\
qzZtXkooOzdRct5PUFZxvrNnnn5KJhpXcjXfy+oKa1ljYRmYtkfYc0Q4R8we6+2+nvTuQioGoQ/\
ljcF4BXVcl9y3OR/R+PyknKvkCYE4vJtrqO6hxNq2e7+IJFarRAzSU5aN2o5puTVb4gh8+/\
aDdTDmJ/wt5Ave0LlD8ZPxR5nY2cbOKaz9Tj9Uet3j77VjZiv0Y1sG7zBRNPQwaKHLKRonGiWM1DX/\
DY7aQQd3sW0mRlLkyaRgWnlQ8fZi3PQpcubEvimkEFZN4tXu8zstADz7qVHqxUoFXzqq3OJwslbJS8\
LTqXChrm67u5bclCykfmv17HTQWWShfDStZnohv7tm/\
SFKOC5PfyL0KnZaJjTX03tm6jgvvhzDstu2ho+\
4SJBpsEFWg8dHyy8gwNLXrCOTcCUgF01tnq8TQD6XtonzsgTwWc8RtadyWlI2kOoZgVOlQgv/\
fRuuXu6ei2uPj4CV0q8H4ZdfKdRjpKdgsXwPSpYHTbfN6Emelo2EFMBBhTwb260RMzjNKQlGeCcr8V\
FeSMVM2tWZOKFjE5XEh1p4KA1Lhy8CkFjb1iS0rxpILjOu72N+\
pTkDPXmdUxp6lgTfX2njiHFKSi0upnS6WCS6FpiW41ycjXykcgL4AKbPb5ab6PTEYxy+\
T0bQKpQOkPQ/bjJ5JR6rylwXxBVMBKWWlzeFkyKrafsdExlApcxC5KbTZPQloLdPVvXsH7/\
9TiTcrOJLTkvbGX+FUq2BwpH09elIRuvmndlhVFBS+YmGdxYIloUMw2hxpLBTotDq1P5yYiVum1S+\
4lUoEEVZV67OE1NO/Ljvl8yVSwZIewRHvBNSRsriRjmEIFjXHPoiv0rqFTIkFhdWlUsMtG+\
3jU9QRkXCu6TymLClbyia9c5JeAQjoubtTNpoLPXYua/LUTkF1o/\
3OzHCrIlb671XlGAjq6adouy1wq4Ju3a7raoXgk+\
exqlFABFUyvWnnjzoZ49I7L35ezkAoGnD4bS5PiUatYxfMXuBw2mFsvlBKHLEOdnENvUsHsrHXhsz7\
HIkHuL0+SMCp4bMC83+NuLOpitXx+\
DFFBxZJ7EyPxseiRGSvbglIqcHWPMHy4PxaVmrWPmJVRwasDc4RRVAyqc1qV+KCCCu5Mf35/\
i20Msp579pZDJRUk5VWHpu+JQeybr12bUUUFpZKkj5vvRaN2+dpHi6up4FrPo/\
PPvKPQHR9S0KwaKuh2XRx9dXMUkpwfvskelzlW7sk6eP8q0ljtGNGHyw66yc2F8CqaI/\
d04bXbVJA6reuBxatIVLchfxfzHSroj5v1YfXVSJQ1c5eLLi7LPTJbcnbsCvKazbKLsxYfb98r/\
CDlCuJILH9tgMu0dXXiw4euIPLHHfdzcXmJ2UZtrRsRaIJH/e6BOip4+\
up1jIB1OLLbXaNpWE8F3IHknP6V4Sgh+FZJPC4rixysCKoPQ+l1YR2DuFxgm/NoTCAM7d/\
BZaDWgNvLwgcjtK7LSN044/\
VZXCbnLWA18LuMbAzvGSNcPjNqJ1D76BKqP3FZiecuFWDh13a4h1xCZpGkLmVcHpZo379Z5hLa39Tm\
6YbLWm7brK7EhKIEV7JhEy4HrDTxUFIKRYLOFnmjuFyOwi4yTYQg3shWzZWNVCAwfez68SMhKNt3aa\
UhLuvEC1Stmh2CjHZmxfngcpDskfaWgmBEIzdPu4bLY77FozsWB6PFVwKsBnBZiP/\
lrDeVQahL5UbIGC7r316xPME2COWGnDJe2EQFtWzuUuxNF1FAlIG0LC6TMjIPlLpfRDZiTUe1cFnsw\
OAxO6GLSGCtt4oVLkcGSnv1+\
geipyjqZSguN4rYBAdKBKK4bfOSk3CZNXH3vjPNF1DIkz79AlzuFGAN0DwfgAoX1X1px+XkzDvN6/\
eeR/aKe+cO47Kz2PklY9PPIcm5J7tmNePrUaGS9p2Ss0ijoDZ+JS4vA/\
NjI5zOIGGl9ixhXC7ec1lgxytfdMpJ44IiLh89yJ3bY+CN7hgFKuvjskcrf+vyio0odTR0jg8uF84+\
2VZufxrec96z3QSX1S49qHVY7wuVoqyuquHym9X7ywX6/KAJlmq+HZcxY48S5m1n4cTQIWs+\
XPbPyC3oD/SHz0dmOc/D5cPvnl4veH4O1iQMbfuEt59PfEVmkGwA1J4dqNWHy+za+enubwNg49KLI/\
W4/O7UwVTzqAvwvhTJvwSXXzZ+\
aElfGwjL9YPZ03FZ9365Cq9rIJRPum0Vjsut7y40hTcHQo7OoWQfXN4z46gy5/\
qLsOYFe7p1E308Pyr+0XYRCrucH9iFy3HilXW2gkHQVXb2x/\
W4vEjhosJzryDoFFuWOBeXxy027OvYFAx9VR5EtOPjb+U+ekvRNxj2LmqqzMfl+\
4FVcpW9wTDQZJrKZVy+ff2YbPaZELjIf96xg7gsWSVYsW4wBJrUvCjfgMtZ7Z+\
ko7aGQrGY6SrMuHzpUzD0fxAKXRru5mfi9jubTQ+bJnEJTlycc8ILl924haScAi/\
BHLaQZaq4bAhrJChSl6Hr1qhpr/\
D506kcWtgTfBnutthDLsBlBX397SrPL8MFBT5v3XFZ1Gd8C7wcBgvToDkrLn+\
5Iyyy9G049Dmg8ccYPr9tev/IvLAnAjq3uL7IwuXHL+\
8IzYyKgCLrt7EZ4nIdJ0XwnfwVqHOJHFyGrw87eUTTTGOvwK3GbV3Hcfn65i/\
rBz9egZRxAbYFuByhEb6uPiESzs1Xf3IIX384TIwSZT5HQk3BVMsP+\
Hrl6bx5bdHBq3BrSHT4BVw2iaznSZq4CrlKVgUV4uvblvvTVnoejoYR10Xm3MfXR6GiQ2+\
FU6Jhu7OG6nFc5gvKqBz8FA0njo4LvsXXU7bY9C0xijGw/PSJo8P4ejuufLj3y6sYSGp5N+12Ob7/\
SjJVH1oSCwWzgzdvweX3/LTMTBgLmR8bu17F1+8XJObTxwJjYa/syYX6+\
Prel5W5HonEQY3lZrGFJfh6HKm1YIlWHHSs5GtkxuV2vxl/\
WHrFwb3dEZcUivHzhu6RxpUtcbCjUyq1tgi3f04Wx1N28fCk/iL+\
kHwqKBrP1m2PjIc8ZpbKRXlUkPdUW16oKh6C4wsu9NzA19/SnBX9ixJg5dKdHHPx/\
SzaWqdSKj8B8qm17t+O74eR2rNooQMJkPmjqu6WTHz/2pt7+SXLNchRPJd1I40KAsmzj189fA1y+\
Sm0sKXj87fxxrw/Pl2Dw048wT5J+H5VrPtZjScReppXeKnj+7NTMtujdPlEeCRzh8+\
qa1Rg7aFXoH0lEY5ePekVG0cFesJzjhVLJkGtD2VRR/\
D9X4e7YO9CShL8uNmWMoafD7RYDUTNzyfBE6uCUVAEFagMFszg7k+Cl0zlX2dexvfzQMP0k+\
7JUOPJW2rERSrgfXPzk0R5ClxYs2cTrzfennoZ7/cvU+\
B47qIaQS9cn6m1HLSlqXB1nd2NjR5UcJbSw7v6RCqkLhmRWeSKry/\
dY4os5DTovfupiLMtvr4VeHWWKqRB2CZnveMEFSSEzjZwcUyDkhZPbN5bUsEh5WVOLxvSIJd4oLu8G\
T4eVeJxLW7pMEplqMsbP59xxZcJnk9Jhx+H8rQ/\
H8Xt32NfvlxbOuS4e2CFyREqWLtDs65QMAMG2L1bskaDCs5lOY1E92TAwgVvpdYo4P2/ki9vLp4J2+\
pO7N2+GT+POMG2tZRMCLb7B7IJ4/\
aucevYQGAmXDEndmOrIBWUcXbYqTzNhOumTRPbzUcFC2VOKkUqZEE37u3Lr3FRwcmCCGevsSzIP9Jp\
ovLZF/An9YNjnNmwbqOZv/1HX9AaysMsyZcNhzcWq55/5wuEbFMDPhzMhlKtETkRQ77g/\
saieJOUbNjE11i+\
occX7Ivvqj9wOAdynFvcQy7wBW98aEZVFjnwyBMTjZjrviDM5PSXHadzoH96mePCTF/\
wdONGkfW0HJjCNnil+5ov8CvwCGFivg5nDX1m6g/C3w/q1x0pyLwOOUecmJCZL9gzav90NcsN+\
KZeFT6a5wtedct7hnHfgBu3F1qOsPmCSyWrls0VvQHtgzJ2js/Az/NetxXGtW/\
AAsXIvkeffIDvnBWZ7Tk3oLbKudMi93xANU+lvb9OHvyybPxSZoYP2K04n+\
nDjXxoukEg2RX4gAC9WW8/\
3c6H9dew4xnbfECnPWlgoi8f7p9VvrFN2AeYRb0qYp1ZAD9vmtE6ixdP//qODbdGATxi87GclQVPf/\
H0fZmRAjgYwutkVO8NzNrflwVtLYKu8irS71S9wYVjHR7C+cWQU1JbeZ/\
CaXDrwIo5yvPL4MfpfSvv3fEAL1cvOtUcUQErFj3rlSpxBfZ2G/QuLK6GBzs8I1KAE+\
jo5VQxqqmBmZrXGz69sAXy/pROu+YaGPSH/J7V/\
bagWLxI53RvDbwQrmGoctcWxFwyOB7zpgY2Bo5faMq2BSbKed7dXLfh4sDcKhlHWzBWcST/\
gOltyHq1hjzKZAu40xK5t82+A/\
mZwluj19gAXWfJJyz7a2Ens2Vzopc1EDCsaXulUQt9l6oKrrO3Bu8OqFW26eHPuW455BhbA9815rHx\
jrXwj+ioumf7rUH63StHYHwtlJ9GZepZYg0+\
rf1812GsFrJy1qpRj1mBoObCgkfJdTChRIpryV0LULFh29mKGQ0wneVOk8eQGdDZpBb/\
dm4DfCWyU29ZhxkYFT1RvGpZA3wi8TyistwMCEqkvTop1ADfpN+\
6Lx9hBkL2rlIVO9QAj3q9jFwhbwaMKCzc15Ib4LNUZ/\
PmdFPAGt2R4atwFw6MS4sKnTIBfLOKnybsbYSPSTHTFQ8YgeFbQmZxio3QZYXB5rnACGC+\
sUPRKo2wLzWwoX+\
jEdBgpr6K0G6EVQ6myxPnGAGfLwffB1o3wly9vcMt9RTw8MOTL65hjdBErT4vXpkC4u4vWKL+\
tBE2bOiQqz9mCFYUH989w68JSixc/mB1nD5YuHRszPJ8E7xva/\
u4OVgfsDv4ZXUGNUGe9MDmQB99ML7p2vL0q02Q7e7mrZtN9UF3fP9bletN8M2r4w85RfTBJf+\
DUTH9TTCuQButrdADHEe2fdyxpRluGrOdb/RGF5DGpqfY3G+GOmDNMOrSAboPut65P2mGfNT6m+\
aVOqC0Lgucf9EMO/OXq2zI1AEe0TqtSSO4LCF2rc9bB3yRLfrSO7sFOn94tGGRiA6YuHBCY8/\
mFvjKXZir/NxRML52kInbuwW+0GXvSFbWBh8PluhUrW2FRSH2464sWsCrK7MPbGiFuz3nzr/\
xXhNw6MVpFwi3woWbDrf+cU8T8FlTtdJ2tMIt661WlBVrArWAgxoXD7ZC4GU+\
xm6rCbLuPFI86tYKndq4OtPuHwamMhxSH1pbYTWXPHN4/SHQI3Zs+\
VrvNjj4YLfzaIM6MPq0Za7PmTZou3a3gUCpOnhTws70KKANrnGp7jXJVgfMe4qeJ4S3wceKvYpsIep\
ASHNR0ZrMNii9tbHjoaY68HCrPbymuw0+\
f1y0cfCJGuCr3naJV7gdppYLayexqwHrQ5zzeHrb4ULz3RJcjipAP3lTxNp77XBi9ePpD4+\
rAPVPB3jXP26HLbdZDAt0VYDElfNbhN+\
0w5gc2OQirwJmDMzWAswd0NJY7DRlpQqIMJoRryXYAfXXKBbV3joIKu3HxIJdO+\
D4IqOAZPJBsDTk4WHmFZ1QX3Sv+O5mJbD99KrFdjydkCyaULUeUwIaNlotD9Z1Qu7hSp+\
VqUogSLlRsUK0ExbFzzbc7qUE2OcU7/La2wlJs7heb9isBCZ8ggVJdp3QunQZ34ywA+Ch4y7S+\
J1OaFYQZrXMQhHQjsQkvXPqgrcHPSuapRWAWAfv2MxTXVC488pLc1EFcFMlaf+\
y011weTZVdj6vAqjZR3u783wXVNFVVznFrAAebCveERDbBV31le9335IHXAs77/\
Lf6YJ88m9CryrLA6+6uaNHl3fD5OQA4Vlm+\
8AhKfe9NSXdUGxmoGBI0R6QrWPBIzHeAw9lTbgGNcuC0dkyTIXqfTC3q9bx5oZdQKVpx9YVYf1QX4h\
03n/hTjB7B1tZ8dV+yFL8xfot205QltCtoB3fD2X9NQ8fZdoJhJ2c9a7Q+\
iFZ55B4wEMIOFbln1ta1Q+5j8f1VMRAcNtc9MGi4X4oFrjxmu5yCHayrg/\
k2D8AZ45YK3IvBWD0xOgy2sEBqN1F61CfBUBmz61riocGoNcMJrGIT1JgZabRzXP6A1DnQCWQ6ZYC4\
+oJj2c7D8Bth61iF0VKgfz4VVIsiQPwTeK9vuurpYDlnNe3EtMGoFXLGZ1L86UAnyOmIpc9ABOvUNe\
cZpICIfJHTXyKByD0dNE5+\
UgS2LyNCGZqGYBmm6quPkqRBAJHzFbGdw7AtXeNtZdekQT3KsVTdvUPwMY08opD5ySBclgn5vlsAJ5\
VaTj9xlISsE5P3rf69QCknFFdul9XEqDjjq2l7wdgRtXcwOyDksChTe6Y7tgAfPC0f4AsIwm+fS+\
DjO9lfzqLyH2jWL9++KM7WkhbWlrZfQV+pzE+/qmaW9lNOsKoctM/\
Q5ro2diZWhrrKtuYOujZUXTV9IzXiG7bIrKdV+Qff1wkvDq+eoxZUwzsVOjV/fnp8YCMnoEJ5atM/\
7SuTPca+PqF08rckGI5mdz0C/7PRunZpm2vqx/AvxRNv5B2othO/\
Qg7eaFmY08hLn7ijkPPtl9Pn2L+k7wHrCwpxMVPfFToeZUmedypmfdNfpz/+\
vuXbHPxC1lTW2tzPWfGUEyOyz68n3amds5/ST7p6WyjZ0H5i0vD1LZOptIzt6X8efXPpPjT54Ze00+\
U8fuq+W3VTValZmpw3PaXVc36+mncygI3AYOv9rn0e4tUNdAzpxj+\
XWFTNPs3av4fqoawtz02pob0T9w/s9VfKY3j+7yT3lN/+o/Jmtrgs8rU4VueKS5l376wD8JvH+G7/\
jp36C4T+yz0jCnKeoZ0bzNb+kd/\
aXPzvySjT1RFip2JleFffASmJFNdSG8OxUjP3txul5W9paGejfNkY/+i4qmZOP/MpEixNfmud9+\
7E0x6IaqaulBM6W35SRH0UcI7QMyrv1Gl6mL60BLOk7ZqVlbmSl+9WP/OFiez/WTq/\
t26OsVl5ieJiDuEofy49P5ZkjJuhT9JYEoU/l+rYfqPil4wqTxrU4qhhp65PeX/\
v5qYtGi6Y5KKnqUxZdJdhfH/25RDjKnHuMP48+hfCpr3fUEy5qbW1vRp+Dd7Fuf3ib9N2V8toX/\
6KX1dxGxOLqTtuecSAv/+wa/zf11GUn7MTzz4cQv72aI5ZUGYKk26cX31iFKyt/vBJUq1ivRXX+t/\
HDKE7lhtbmFla0c2wCe6nR49cIgNfYUiu5ClyMKCZEcKmeJEP51M5jakTJ518DWVUd73VdhZkfW/\
OWPjDZgsQIisaWVPdjQ1NyfjhxmD43gevEp952+hPUy/hShhRPcg85uarhf6F5x8p8JR9Iu/\
ieXhTjdbenQVmSnBSX7dsZ/qTnBqNBXByVgmBkSppna2ZAf6WkDoQnCSguf/Xa9wph+7/L2/\
23TGDTkrGwvC0+77vn69Q9cMvkVPznri5qTLsL2+rYGNqbUdw3v7Gw7l8lX4a3gY1m/\
NnNxq6NNt8tCmRo85QC9az5zejn/J/Zu+h+\
92srah2NriBamr75NVXYPfMtgsJm4oYrh9o5HYdpGNYvqGWzbq6YuLbNQ3MqRsFjEUFRbeaviTAV6C\
C7i2IZmud7KLlPD6ydAtf5rDb/\
lxMwLdEOFtZOnBbn6IaTPVbH7SmuX01mhLiAqLyHzngKk1eUf2dwGByQuyPeNwOqWCyQgL9JVvMhjP\
7xX31dGdYb5CuF3STffn5dMthbxJyOUrxCL8u1Xwf62CQp8BP1EWsTzQh+XfdmCf6uz6++69/\
8D1la5aYpX4LVfg35hb9N9N/8BL9uv8m0wq8S2MzW/4B3NOaco/5/\
s9VTv0QTUytbG1k6WP2Pee379B3Ml+475+Zxh+5Zf8nb4YKNI3VXwHKv22u/TfDPiPIVUIn+r/1Fh/\
P5pfh9HB9m8q+NFXmmEEf2b+r/mI/2TQ/3NA3r/lIf4T3/ApcWV+0yD+1Wgz/8Bo/nurxI+\
Wo2f3w9z4cUr+qE/hf3Yp+WeIIM4pdiNtp4Uf/34DFplqQ38xPnoLNwn9FtH4F8BS+Luq/zYE2M+\
Wht8mW/Ft8rsR+adb+UPyBX8zXORJxN+Ggr9YG0wJXfW9Qeg7/8C9/CXy01T+hK5nCnHU+\
i49ESeAflzk+ctQTDGW/+My/\
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\
qISCetVe3W9TgcRIaLDp+5XIn8brtjzY+\
mgObNM4nRDJXJMLd1Am5sBZB4P1PonVqK7RwQiarZngDWq3K8iNSrR/hnyKry+GaB00GB+\
9P5KVE5DcWoXMoC2ZdrW2F2VKDa6acA0LAOEnJFwvyZUiU52P/gIUjMAc+\
lhTtrMSqQ9FnPavy6D4IwWBz95b85GAwKnrr16mlaBgi5UPtJYQAOWd2+kzo/F5aXblJctp4HRE+\
08Rv4VKLO6dJGgAA3Mzl+\
yYI5uBdr54Mz0E3I0oMTKf3eregW6GDHjGLciDYRobvfXla9A914sh1GqNLBi/DBTrlgFOmTgMm+\
NLg0IS0e805pVgbDTvCUbHWnAPig103uiHEWbX33n5UoDRQ+KjtPelSPObbfL0jxpQMa358G0/\
nL0IPn9dQd/GvDrGIre0FKOTtssJnMF0kAd//gR9ZpyRHm0Ndc/\
hAY0arlbk3PKUaOP5dMnkTQQwb0xsDmpHEluOdFyN4YGBiyk9o9HliMRQxVXvwQaWIMUWfmCypH34J\
kz85JpwIRTp1KJWo7OlU/EmqXRQIaepYezazni/\
chmEUyjgeGcU5LxJ8qRQIt3kH82DZxUj84dOVKO8s67BjzNo4HSxExr8sFyRKpem7+/\
kAaYR5GgvFw5WlEc1n/qJg3s29f41HZHOcq5ujfzVAkNBEQMJlwVLkc166RaFRANNA+90b21Fu+\
P3ZJPj0ppYInUtBVvl5Ujz7uL7+\
wvpwHtgHldyzjLkUbwivfuFTQQM7A6VHZGOcLY8ta4V9LAI2HRg5ZjZchJd8ls+\
Sp8fL12zQl7XYZIvgKqg7hs2aJyu+xhGeoRu5ApXU0D19cY+\
Ax1laH2xzF3LXB51N5WetHdMmTZfdLQEJclb53+\
A1SWoejl08lrcdmTK6TQpLAM8QQN5mbi5VWbJtgH0cpQy8KQdiZcZruZK1IcX4aKPS3FV+\
PtUWavevkorAy9774SxIK3N+RoW8rcgDKkZbwuLK+\
MBrpojyjip8tQYgdpmhDe35WkkdUGTmXonuU0HwuMBvQPzuw/Z1GGDgm97bUrpoGkuMURefplyI/\
5XLlMEQ28eMenMXioDDVM+L7pysfta/e2+\
bMVy5C3WyjPthu4fV3a07B5VxlaYWa56EgObl9PDp09uq0MLbNq8t2dSQMT203kqIJlSFvk3JYRfLx\
lzjpNz15dhszPut8zx+3Br8cP615chmgVCQopuL0wuLzNgUyGNrh9+ebx13B+LEVKQS66+\
8NoYOxVkua7F6Vohmp9/XAwDdw/\
luha0FmKnjUelU44i9tn2FqOKw2laJnF0pc0Hxq405gQ7VZZiu48vq7m40EDOdLx5buySpGg/\
syMEHsa4HPhUVubWIq8Ej/I11vh9pwT+4glshTdjxL/\
0mhKA168Maz11FLkGKbGKX6UBlRmXD1w6FgpajhW2U6VxsdHintQXL0UGa7cxrNIggYkHK6c4FYoRX\
FpT8zMRWmA50l4yL2tpUjuja2rEw8NvKu51H2coxSdi6dEMpFowHjaYvMDzKWo+8bS6r6RDJBnK/\
BZ7z1Chz38uT1fZgBf9XXSL2oR+nLDboKnOwOsW7q6nnQSoelSQwlNWRmA8+\
yqN1VGCD1JcJd4dy0DjI6tWOCvghCfa8nJvogMUNO7THORAEJCm5K62LwzgEnMwkfruzAkNqNY4q5q\
BlCet4D1dSWGwra2HdmyJwNs95q3ITcLQ+y5B/4wkMgAsww5TgA/DI1JnqpeRs4AqetY/\
1DZhqG8h48ev3qaDoLCZpK5eDHkuZbXIbw7HbjMmiHTx4GhnUIseex16UB+\
aNoZ48clyFVxi6siLR0M0T4vdA0tQQ+XNT0Wt04nuMsh2jTbpmdpBHfJbZS8Iqg9jeAuF7+\
0uragIo3gLosjizm1rqQR3KVW16Do2N40grtks4//\
XBKWSnCXdQN6e06xpxDcZYhdxrWHb5MJ7vL94F6txR3JBHfZmzcvoy8mmeAuA/\
tpZbNEkwnuMu2zwMh+\
hSSCu7Q6G2YVevQawV0qRy8vmguuEdzlhmqYaLryGsFdzjaRWYr6EwjuciznYA6TTgLBXWreqt0XdC\
ie4CZXTpvn/WFHLME5DgatmWswFE5wjgkqQkH+6eEE58jqf+\
5sk0U4wTlGaPD2FL0JIzhHXVpb5trRywTn+Km+v9Wc4xLBKca8krR+\
rBtEcIrKEnKvZvEHEZyikSZmbvX6IsEpAlcOXWb3iwSnuGEeRfREbCDBKe7c9NhW/\
ul5gjMMvP8mxyfjT85wZdK74Po9f3KGj12rbr2470twhgnSmU/ylvsSnGGyWdhw9GVvghs04/\
o40VjoSXCD1Qn7t6zR9yS4wbxrMS26bJ4EN8hzQlo+\
XNeD4AaddvmZbxY8RXCANSoXdwYecSY4wLBDDzSf3XYiOED+\
LXfn80o4ERxgWIEAtp3sSHCATumCvs+n2xMcYPIqxWo5DzuCA/SzfjzP64stwQGW+\
vUcCmayJThAk0D2yNk8JwgOkMu5uWkfzZrgAA/\
PSHupK2lNcIDWK2PleYstCQ4wyyuYlGx5nOD6SjfMjYx0pxBcXyOP8cBoryHB9XFefi17SMqQ4PqUS\
1bGzGIxILi9N263JGpKdAluz1pogKVIVJfg9nYOKYfPVz9GcHsesc+\
ph3YfJbi9nYFmf7SZaBLc3k72mnpj98MEt+fBsmrO0SuHCG6vNMJ+\
6a4H6gSXF6OiNxCZrUJweSTLAwuG3x4kuDyy4BxWuW0HCS6vVDz2qEmsEsHdkWaNvt7nIk9wdzunNa\
zq3rOP4O5KOc33+\
K7cS3B3Oy22s998vJvg7kqpustYOmUJ7q40toh5pEmG4O52xjsWwwFpgrsjkY4ZHxneSXB3pXKs6Vf\
m7CS4O49SzgrOAkmCqyONxVq/\
TNkKdlqYZpU9P488dGP4dihsITg7ksijpOKxzQRn5yF6bnz3aRFw3+\
GVuL6uPyJF35pefkSY4O5IpQWncr2ECO6OJK9c400RAF4ethXT2/0QaUvj/hmu/\
GCovPWR2WZctl2Q7Z7KR3B5pIiLeUsVecGas6P74xVwWXnGrAWlq8G5Ok0rthQfRCouSy7cSya4PdJ\
hlzwbkeX4eeGDuH3lafw8JJuF3eYCrpfuIo61uLy4oXAbdTFgF0/\
ZnezjhUjNtC3IZCGI7PGqlX7siUhmh2S3WMwHgqe0D/\
bI4fJDpQanYE5wk7y1wy7JA5GSR7nv5s4BubXNVUpNpxApkOellT8LaOX0bfIKcsP1fWFp9F1m8E5d\
vO+GqisiJYyFjCtMB/OvvHj6dOFJRBrN9rYZ/yIlOhj9fnm7M57+\
kTxrzWepg2tVSUqXnRCJbPl64chHKWuzmexehx0RSXeTy2vP91KBmYVLbix1QCS/luwho7dSme/\
NeZ922yHS4C7/3J0vpRrEyZuWR9oiUkzZq3mqT/HdpkXiwFEbXA496/\
P5gdScSl85z5Un8PLm8ccID0odnm+XYIKs8Po+6Pc0dUldjuy+2SBtgbfHnn1oS6tUO590i1ilGT5+\
FpJD7xukFmYnPY+QM0EkD2f5d1y3pFR3cEyfdpuCpz+zti+7VCqoym6psYIB/vxxyKLN+\
VKNSj3C9fW6+POhM/JJNKmVuacDjWK0cdlOg2k4TupKjTISvXYIlyufVmqFSnH1rXg1kaKCy+\
91Naf5SG140CZ+6agCLrOejTtvLcXHbn1ZyFia7ngUVcRyUIrBZeKyxiWFRVKCc/vMZmxcSHdI8jh+\
5k5x+1uvaM7R7bjsQebjEy95o7Ru2MpGDpeVv4Tv1i85GSx357iYMi4nx/\
K6nyyZOOV8JXqTOj19dl1BQImHWbp5i4AWLr/q//\
AmsoRJY0CKhe8YLgdrdxsnl1SQz1CvcupDksfVVamzr5d4X+Kx3hZgiMuKPI/\
Yi0vk2IsPN7EZ47LqC7eKihIWL3Xp42dMcfnhjCv375TUfHy1fgaLOSTptpW9qWwqOWvhNz/\
a2xKXNUoyXreXJL4NdOP2tMbrQxxezH0lvul9J56hE5AUmB4hwna/xNhYwChvwgaSsl6PrOR+\
XLKXx1HrtJQdJAnPrHLBnpfw91UcUHa1hyRloYTsz69LZoVxyqy46QBJhyfMQl8NlzxXObrt+\
SdHSLLe+oF360jJnTmpG/\
K3O0MSF8tW0a5PJWk1I6u8HV0gKWxNtVnvHyXnTsssPJh3EpLq3tpK8EzDzEEg68oPrpA0WCI0dpYJ\
U/zUO/588ym8flp0pcBMTCh3/\
dt8G3dIUtv77AnTLMxv202b8sMekMQcuSmLix0bDbn3gn8Ul1nPnDY+PhczGWYxvnDZE5IusTwRcJ+\
HdSoJ3fuw1QuS5rceHTRdgDG4W1Lpwwr/\
pCVYzMZFLZk83pA0zFLJJ7IM81XObIy8i8sefkv3PeHGLGz3NZxx9cH1MzB6tHYVxuB0SSt2aRpbrc\
Z2FLrdNmjH5X1tBz3n8WI8vUtuKZ+mQlKXX3Bm3RqMwfGSKsTtOC7yYx2yj9GSs2dw/\
SPe6CsCGIPrJYlaCzGXC2IMrpeUQ3N3zxHGbBoP5NVKnYMe0jfv2r8VwRicLwm1rMqAmzEG50u6oX5\
TiG0rxuB8PfZ91lt1ZhvG4HxJiwfzry4Rxxhcr4dsQ7KfsSTG4Ho9LixZemk9wBhcr8cWUq/\
NHxBjcL2l79+8e/ZSGmNwvaS8hVTnd7swBte788qRq/\
7TZTEG10taEt1WLyWHMbjdnfxSvY2CChiD29057pbt5rUfY3C7Hn84Lr97XxFjcLseSeHC7/\
WUMQaXG7Ot7natjyrG4HJjEnZTWY6qYQwul7SyfRWXhDrG4HJJiouo72ccwhhcbsxamprYYy2MweWW\
WufX57w8gjG4XPLMM2lOn7UxBpdLTjK9xSFwDGNwtzFJH9foPdfDGBwtWUxWgmeLMcbgaLO4CxZY3D\
PGGBwtZ5/tKAo0wRgcbaPBdC//UVOMwdFm1eTunP/\
SHGNwsawfWJevyjuBMbjY5HFTKLLWBmNwsVwPlkb1hNpgDC52cJbB0OeTthiDi91pNVv75BF7jMG5e\
pwUOlZp7IwxOFeP2bdCAt44YwzO1dqYddEHFxeMwbnGxCnkhoacxBica6CA8jhXjxvG4FZHFs6IldP\
yxBjcaczGTfOcanwxBnfaK97XdWEjFWNwp9MFvLd4BlMxBnc6ttbn6nM9P4zBnb5ICU9IYz2LMTjS6\
g2LeHVdz2MMDtRKnn3tRscgjMFdYrVb8i3zIzAGd3lx+\
qr7Cz5HYAzuMt2plK0FXMEY3OWpo3LLw6uvYAzukq1vdBNXRyTG4C6TlaWj3ceiMAZ3yRcV6fA4OhZ\
jcJdVX8o4GstiMQZ3ybnqtGLGg1iMwV32Nt2Og+\
viMAZ3Kd9fOoeWEYcxuEuVdSqnWfLjMQZ3mXsvvPJ83jWMwV0KMKMG45ZrGIO7bL0ZtoL3zTWMwV0q\
rQxw3rE+EWNwl4d2dH95GJ6IMbjLys9iy2l2SdjqRJfGvbML4Viq+ia9C0mYWdEJTHFlIeTZ+\
qL3ZUoSNn7/WMQhuUKYuvjd3qB+PL2YpMrxS4XQ8O1o8OfdyRiD29QS/bhzhD0Fu/\
58KPOyfBFkO4JG5q1NwcYn7l+N1CmCcreVpk+TSsEC1jU5J/\
oWQY5Vrdghczy9U4ZIUXsRRLbDMf01ePplRrH3HG7C93sr6uc4p2K7Nx298PjsTXi9dtth8YBULEBG\
zW0o6iaMs57hvjk+FVttvkvzQ/\
VNeBt1pwbVpWJyJSvnzVpSDDnSSItGuNMwBkdqyZa3nTc3DfN9IQkf1xVDoYOdCrG30rBTznF/\
XLlfDO2vx4be607DLIMtXFg4SmA6rWhhMikdO3CLya7fsAQC8zlCe/\
elY3JqpqIhLiWw7byMWotWOgbuNbzZF1gCh9UqHFeZp2NCn8Mtbtwsgfocc3eNnU/HODYJG5+\
bj0H2gY51+Q3p2Mzi0LW7+DH4RjPWYk9/Ojax9/ODj1IYJO9b8Mfll+nYK/\
1qXQNTDFbKRFc5s2VgDZe0tSRKMVgwP5YZymZgARN+ik8tEOQPWVzTkJKB+fq/\
Yos6jWAUr1yy3o0M7BSX2h3VcASVdBQe5JZmYJaiq/agSgQrK47QItszsHXXtci1c0oheWFEp+\
2XDCze+fyXa1ylcKYUZwXbLBq2amdpvwdvKcwzjSwxnE/\
DltSvvbpVvBTmbh3V1lpDw1ievFkaZ1gK08yGhg/tpmGnM3g/\
uVqVQux2C2l8Pw37YqvRecilFEbKbNyhr0bDPpKKL80JLIWsWP+\
AvT4Ns731yv5pRCls3boqnteUhr0+\
v1q94lopHD91WTbEioY9WUZd4HyzFKpwKjzATtIwg3uFw6rVpdDmrK2ssycNG0h60STUVAqtm+\
MVPvrSsA4xlcCHj0uhWZ02D7xIw1Q/\
e1uht6Vw9y4R3VmXaNjdsvwDEeOlUCAwghwWQcMYHDGzscwC5ngatlDo3mIb7jI4PDhyMzaRhunOuU\
YO4SuD73sVj7Cn0rCMFyYCecJl0OuYxhrZDBo2Viso1ilRBns+j8jvy6JhcmlvpMZky+\
CbxUNM3NdpWPDZ3D3cSmVwjQDyLr5BwwZNnQ4CzTKoyFLPtKGAhgnukzyia1AGq7i3FxgX0TAnfhLF\
ywKvr+hZl00xDatiqbRMcCyDRVrnY/djNGz+\
E6pTtWcZ9H10bu8HRMN0qhW8nvqXwYEJ9lkWZTQs9drcc7MvlcEkpWcrcstxfXu3hArGlMGUlqzyOx\
U0TNbwcvSB1DJIXh+3ObuShgXKHEmxzi2DfveTMoyraFgvz6rrQVgZNOxRs3yFy+\
unPyjOrSmDJy4MXt9dTcMc7iVWtzeXwQ92vCUWuFxeatY42lsGv2gG3zbC5bkxQt3LnpRBuSq4VASX\
td2HH0i+LYNCWg0v6vDyknXyXup8xvW309FHApc/SLl89JhRDiUDp611wduzawWYFj+\
3HNaVojnn8PYGjE9jq1paDh9wn/OyxvvT01O18AlvOTwiUVW9Du8v/80zK2cJlUNXB/mVObg+7CIU+\
TdsL4cvHJzq5+L6KnOeJ6q4qxxKZa5dKo3rk0OzbYfV/nLoNRQlJ4frW2t7+O6LGnj+gfgrq/\
DxSFxyVOm6bjk0u2mgU4+\
P17sRsmabWTlMrnJuU8LH89yNZPOl7uXwecaKP1rw8e8KMXfYcaYcnt4xKNmO2wefnbDH0eByOJJ1R\
ImWRMOQaEFwbFI5XKA1xHEvhoaxz3e9WpFdDkuy5x6QvErDDr+\
FSY9ulsOh8pneluE0bDjzVtH6xnJ4XJRp/DBuv2s2dtzLHi2HKb3LpA+\
40zBr9itDLdMrYDWrh6apCw0rGdL58IG9AtYp9GJH7WmYRupjVonVFVC/giWmxYyG+a0b2VS+\
rwI2yp1ZMK5Kw1pnFok/\
VK2AOqbOz54p0rDVj91kZupUwIHtM6yv76FhRQkzDsnbVMANhZ4V3RI0jMHV51HiPnmtomHbT8aeKE\
uogLlnvOVOctEwr9aNlCxaBdx7QZWkOo+GLabK7Q8ox5/\
rBg3ETqdh4IXjMvnnFdCoNkSp6kEGdiGvO69MvBJeFs2ZaRCTgXXPNU7NkqmEy4ZJtnaXM7A1pu+\
uRitWwqzVq/pNAzKwguXsPm56lTDbQbllmmsGNughpSp+phJ29+1c+\
0o9AxNRiHmd1VkJvR7c1PzInIG5Jgg+\
iL5fCYPX33UzG0vHqv8oaA94UQkrJvyWV79Ox7SymkrMSVWQ6dVA77budMxrEdM5fv4qeMlh27I5tH\
SsZYDCH+NYBZ3dhQeKDqZjjDgC8+\
xmuX86m4Ytnv26WGN1NSx43LPgoWsaVhCdw7VSsBq6klBlsWUaNn5HvDFduho+\
db58Q1wlDfNavRfeMa+GB+fraphxpWEBDYYrZlRUQ3fah7XPYlOxRP6oLherW/\
ChprPO4bQUjBGnwMRIZMeWxCSMEUcg8HlaYUhHPMbg/IOKVG9f4YjBGJy/H+uXee7TYjAG52/\
Csndr29NojMH5H2Nxn34jNxpjcP4BUZ8FJBWjMQbn/4IvRdfKMwpjcP61/\
O8mAkciMQbnH3B8SHXXwgiMwfmPzyRrF0yEYwzOX+\
Dx5WLwLBxjcP4S3CxOrlg4xuD8V1lAy5um4RiD87d8qJAgUxGGMTj/mpRFIlpelzEG5++\
UJjl756ZQjMH5f4raw8XLHYoxOP+\
jVmpeS2aFYgzOf92Ja1DsQQjG4PxPRoULS4aFYAzO38JWQcl1RgjG4Pz9GoLdLF8EYQzOn+dWWqT/\
s0CMwfnP2brL0aInEGNw/vJX9z89Uh+IMTh/cgzNSCc7EGNw/h7v7CtGnQMxBud/PjfZ0WVOIMbg/\
DmsSsZ7XAIw7bn5B9afaYFx7+/kROsFYMWj58O3BrTAdN6gDS57AzDX2h2bDoa1wD/\
2GS21XRyAfba+rOWb3gJX+Gi02lw/j43dPJD9prUFLjpUoRz+\
9hzGiBvQsLlKiXTKH2PEDZjzxPTUJYo/xogboA41abKK/hgjboB5ZX/eU25/\
jBE3wFXqxav9JWcxRtwAVsk8BZvpZzFG3IAR24VCl676Ye/vkIotu1thtcc53Wl+\
fpiHyjuJpwOtsGJ+RZunjR8Wpte5ved5K9zKSRUr3+OHVbvHiZWR2iDvm+\
CT4B0V4yneKnhesA3aXL+2ZsEBKsaIQ5A7yF4XPd8XY8Qh8Bn0znv4xQdjxCGIrcq/seOlD8aIQ/\
AaOqSuqvHBGHEItnnmOZec8sEYcQgm7E7LSL/2xhhxCGwXsG1/23saY8QhoDIn9+g+\
8cQYcQiqP6TFxXd5Yow4BHwoM2641hNjxCHQP7F91Y0sT4wRh6CjgefWHRdPjBGHQDOFo0donifGiE\
PQx7fF5pycB8aIQ/B2tURbbJwbxohDMON+\
81PsrBvGiEMgkLkuYtjGDWPEIbBIB05XZdwwRhyCLlWWyxOPXDFGHAIh1d3q3UKuGCMOAf/\
d6KPajS4YIw7BEsFcjk+\
KThgjDsE5PwExNUknjBGHQOUuCMQEnDBGHAIB25vZpSxOGCMOwdazQUzO5Y4YIw6Bp2uWToaEI8aIQ\
zCmwlVUscUBY8QhSMsPS7itaof1fng8t7y8G07vWR1+d7cdpk870HHzVjeUph6be2+bHWa+\
aqVRZlM3DBIX0ODjtsO8/h/\
27jyeqrbtAz5RiTKUSklJJWWOkDiXQopESBEyTwmhMmYIu9KAkDlkJjMhrRXJrMx7G5MhQzPN47tU5\
3nVfQ1P1/3c9/s+n/dz/XN9Oi7b3mutvfa51u7o9z3ob56KGO3BztJnr9ky6ozn3HmPmy/\
oxe4YKUccd3PGGfcc30xv2Iu9nHujYF6mEw6dA0m3p9EnNhzFTYuf8yTQ92GR3p6OXDxHcc75Lsvmz\
O3DDE7Nml3NfhQ/XubO3sbRh7WKmypsfeuIy3Ke/\
myzvg9b4zVES691xKvqk3qitPqw0VEvtxPWjniHJC30XXofZrZl7idpMwccOgo1Bh19g4QdvvApa1i\
Vfj+2j2KmJH/NDhds7VnbdKgfK367TTM92g43uuy0475NP3beeDZv5jE7/PaapDOzT/\
Zjz85sEjsoZIdfkKNn10rtx/jL2KusYg/j6+\
yJFY9e92NhfaXlbYG2OHQa6F5Mje73s8ah05DDejVG8qg1Dp2GXXM+\
ja4ytsah0yAivuvLamCNQ6dh6OBkcdt7Kxw6DfO8N093H7fCodNgozV9i9fNEodOw401m4yKbSxx6D\
QcYIt4oKtviUOnwSLmhvWtrZY4dBqOL3i7QuiLBQ6dBgbxJruDpy1w6DQka9NnlrpZ4NBpULnNzcJ3\
2AKHTkNShxTzsj0WOHQa3ktsvx7BaYFDp8Ft2v+\
u9hwLHDoNSx4bXVvx1hyHTsMFvdiw1l5zHDoNNit9Am82m+PQaeBM+LCwmDDHodNwTuSJSGm+\
OQ6dhu//fhb/7zgN0uL/OA3/OA3/OA3/OA2/xfj/cRp+eob/qh2Anvwfp+H/gyPxN5wG+NdI8J///\
eM0/K+chj/QC36OjM0QBTucHI58m45HHqyvCoODqbOF0/\
EfcIdfIgu2C1vakHs34zxAlwHCDLyKX0EGGxfeEzYu1l8f/c0r+OMk+8yt1Lcg+7+m/\
b6F2X8xGH6FfiaSh1L05JbZf31pF2sbJ3NecgG0+G2Qn7nFt2nL5LbCgXw/+xZft+THA/\
GVs3B24LW0M/kNsiA3UYR3G/kTXicLZ3KR/lfUwtnCzIF83O+P58zBm0EyfnQtfsAxfsG2+\
NG1sNkgAvdC5/sby+ts7XBiZsOOmLjaHDl25GsOn6xs7L9W3zfjd3v51283ucU/\
btkPXoGD88y0RfIy9GdbSW7m8f8uv+E2sxp99TdmVoG/Pvz/s17yHd74H+UNkf8L8MZf5nS/\
VTN3Sdozs91+iwXP/Jb5L2R8v0VAN/1JuHjmZ9+zxX/6Sj+kjf9Vyvh/\
3f6QNDEzNzEX3ywsI2WyRVhSSkZC2NR8s7iwuLmljNQmc5lNmy3F/uDsWkj3R/bH/wfsx8ztN++/\
rpb/OfTjW1b5155mxfcr7vcd+Y5+CEHy44+2fubM/fvkhwjd78mP33+2v30k/\
0Pwx98ZxPcnAsTPYfY/CPN/jT5/249fYhtmDs9v+/tD8v6vI/ccf7krf0fvYEHb+5/nO2b/blf/\
0An5c8Jj5j35dbLhbwT1f38F+k3y+PqbLtY/bNSfvbd/9O79ih/wnfT49cmWP87T/JXTg/HPd+9/\
GF//F+fD/13f438tvfxbsMdP02R/aS34w/PlP0V1kGfEb6/6H5A6OH4+EX6Z6viV5eU/\
JXb86gfuD1byWb970P8e55j3u4f/J3COfzyNX/M05Bh+9jTucvWeHmq+\
hDyN9ZGGbN59l5Cn4TjgvE7g0SXkaVzGaGIJTGHI05Adu7Z8g1IY8jT4tdctybgZhjwN8ZBc+\
Rvl4eDStt5dwvr3CcEQ/g2zGsNBx4fxMf599wkBSelt+\
3vDga4j49rlavcJllcmIkIfw8FBva2xdNL3idse+X5+IAKYC2aca2a9T2QbLXJ6cicC+\
RybFmW48w1eRj6H6Na959umLyOfw+2LoXP43Ejkc4Dl4/N0RCORz/EyOuxyiXck8jmyGzGZNWujkM/\
BdXb8nKhnNJCzL1+cxDxABIZ8zjANjQZ7z2Z7i84eIBYYLVLNSo8GnlXB2qrv+\
wlP6XIHr85o0LZJ74P3SD9RdlJ1YL1YDPBaNKn6qLSf4Jhbw5w5EYO8j8BX9w+w2cch70OhI/\
zCiYA45H1Mn3gn9So2Dnkf5mcCpcSb4pD3IXJwUidHMB55Hy7XWb1ansYj70MttcB2o2IC8j7uJ6n4\
dn9JRN7HEr7nd/ewJiHvY2x9hVnriiTkfaQqjFz+vCUJeR/\
zJo4nvndJQt6H61u6VQFPkpD3gZeatitPXAWR1vftUk+QPw+\
wazz57irYcSO5KcOpl6DfmXa3Zl4ySDIWPZdn3Uvkus+R8N+YDAyylFhwnV7i7VY+\
nhK7ZHBPwWFet1Av8WHhxjcML5ORH7LQKpfuOmsq8kN6/LaPefClIj/\
k6ZULAzpSqcgP0RFM0FU0SkV+iHfUsw7O3FTkh+zhOhAdp5OG/\
BCmbr9bY7np4HxecmrQxh7Caad8s35NOmC32NPGt66HiI9QbB/\
pSweL7yZu2Lu8h6jLaRMBzBmAN2En7RpjDxF2/\
8sQk2UG2KwUsdmqu5toOZt6npMvE3kkx8s92yqys5BHQrUUdz9XnYU8Eld/\
ztnOfVnII9ngoc4bMD8beSRbTpx+SRzJRh7JkN/J6GTJa8gjcd1526+tIwd5JG05y7Ozn+Ugj2Rh/\
qbKBOZc5JF8XOG1mKqQizySpbUaW71zcpFHMrFQQspWJQ95JDZHO5TXb8pHHsmbvA2rQ7fnI4/\
ElDpPglU7H3kk8tQVirIu+cgjaXLp4TS/no88knKtgCLWbQXII9kfbnlHybQQeSRba/\
XuvXcpRB6JqsVi52pKIfJIqBRNWui1QuSR7E1h0Fz5vhB5JB9SBbroLxchj6RSQBCcHyxGHglf4uNm\
91fFyCMJmBaq82IuQR5JBk7bUy1ZgjwSw1qByX1nS5BHkr29LC1uy3XkkZS+E+zRzigFwe+\
sC3XFuoipB3jI0spS4LOjIeHNxi4i9v5yw2laKTAePOexhbeLMPLPDJxmKgOrOBeK32TuIh4/\
XBDEZVsG4j1WxFbf7yRmUffHMomXI99EaEroLXfbDeSb2DNsvyj36AbyTUT2M/\
u6MFYg34SufNHNjdIVyDfBPlqEFMRVIN+kLbf/BOZwE/\
kmsxaNPm5cSyCPxP6LRlqVfSXySKasjzTQvCuRR7JeS2vTl+BK5JHcG7zyxrOwEnkk24oIS/\
l3lcgjKXIoWNBDqUIeiW7b/hYi/\
zbySCL6dGObttQgj8R0rpHJHfUa5JGsurDyZrNJDfJIFE9j8gvO1iCPZKHUrWMqvTXII1lSVvog3ac\
WeSRrb106uIRahzwSrk1acSH5jcgLWdKpE6//\
ogV5HlPKpl4HvTrQXFyFzoQSmbMdaC7uux0bRlgvd6C5uBv8dm5JyetAc3HLFD4fcx7uQHNxvcXv+\
pqodKK5uPmLWw5VzOkCeR3z6+y7mohHZhbaYGEXOCo+\
am3Y1EQEJ1g8yuPpAi8nwzNlS5sIg2XrWi0lu8AHwzfCry42EYcOtNXMN+\
kCTErlkrZYE9E8zBbyrqQLNCSEdh7Y3ETc3kepP1TZBc59sj2uIthEGBXXOOc3dgG269yla5c2EWpn\
X5QsHuwCSzZ6bb3/tJGQvnvnM3UuFfklLE0GO19oUdGc3hibw6xJBlQ0p7djo2mKhCUVzemN0u2Xf+\
NKRXN6VzxwvfoilgoGJCaxFXKNhEcc4RedQgU7dYJcN4k3Ei5up+\
fw5lABT3jzhBF3I7GycqQFx6loru+u2pXz5AaoQEx6mvHuSAOx6ZVJdvkoFUTvD5Mf6W4g1AJi/\
DieUIFDZFcOe3UDkbOmyF35AxVwLT8YYhPZQEimdCmULKYBP9mP9d7nGwi744UbH3LTwGP9uFkRfg1\
EEqESMrGaBipj7jtX2TUQ/sZ7LayFaWiO8Bwn+2HJ7TTQIT/7orhUA6F/\
8rXLsx00AIxSa1UEG4hiv+gzrmo0sOjKuIzL4gaieuNg1rQ2DZwkzhw9y9xAZHK32o/sp4Hx+\
xszE77UE9Y071WJB2mggvcId/NEPeF//laGhykN8G9j1RkeIH++\
rFAs0oIGgk1yz71rrydYnQXoTlrTwHtfzTts9fXEXQMLO6HDNGCR9OLTOpx8fFB5XdIRGmipCpWSK6\
wnXvcHWg060IDssISDVno9YZC9JXrkKA0kM3SmWcfVE7jgvvwcZxpgXXt88GRoPcEx6fhR/\
hgNuCotXRZOqSf2G8s1hByngSHz0r1ZnvXElVhf64wTNLA7QO9s5dF6wptBYK2/\
Kw1cT3lfRbWsJzo3SO9a7UYDfDUxH54crCfCa7r5fMj63EM5Sca99UTRTeMPV8j69ZwBu+\
U7yO1X3LFi5ufG671TxLbWE6rc4ndXkXWDCu/ADrF6Qv3RmwMnyeeXtK5cYriungjKS2aIIV8//\
rSphvPyeiJ6pyvnMXL75mUwnD7DVk9ULX3awkJuv0t98q0rjPUEaCC8jMj9G5hQflf8ro6wE5swsiP\
3fyfzmHjT0zqiVyr7uiR5fKDH4/s+rKHEjoY8nuqCky5fbGjI46kZzHw7y4oG3vIs3I/\
friOatKcSb5nRkM/zmDG8XNqYBtpsb7/UzKkjdmiBc1YG5PnBEasYfbWOoOrMM9Y4QEN+\
zwmlclElDRrwZ+\
QXO36KfHyQ8A0NVRp4kfn5JOFaR6SkPrRiVyaPx5vcFVpmdUSLw3OQs4UGpONPH445UEesVZz76owE\
+X4qmZSPqJPbG/B+eCl5vkIPqBM/762yigYmpR+l3hKuI1ZktxaNLaUB3YHbr+\
atqSNMNylLSrPTgJjgsUuxC+oI0Y++\
qx58oYLYVvWh0Vl1hHSrD4fsGyqY58ovLvq2lnAJ5dfHnlLBUDX1buVQLeF0V++\
dWi8VaBzO42Gh1RKXTh3t2NtKBRUcZ+x0mmuJoTt72ehrqSDcSJZ57HotAUL5sw/\
kU5FPpCWpX0z1pSKfyJV9uGrRMSryiRL8hbFpKyryiZqNU85F7aYin+\
j9gtFKew4q4G6TZUkQqiUKHOOD8ump4LTrIv2J1bWESJRAb8iLLmByp/qNx/\
xaomV0I49ASxfyjLbpTN6KON0FfGfT+U121RBsUjdV8491gadZtBaJphrC+\
eWBs2amXaD27Rn7mpIaoptRa8852S7gHvo441FQDfHEjMrSO9qJPKS6MkHT1vWdyEOyeuzxqo2tE3l\
IQzfW7nB804E8pPl2pgyedzqQh8TSMmJZb9CBPCSbOrMrjSfakYcENL2kduu1Iw8JH/\
yUaSzbjjwk6dZMS8UPbchDyhDYunrkRBvykJ5bK1vLGLQiD2njB02bO1KtyEMy15tkGmRvRR7Sh+\
03+iputyAPqbrro838tS3IQ+\
pvmdN9Ma4ZeUaBVvxibRG1yDMqlDXaGbuuFnlGbLpqmeqFNcgz2nYldsKy8Q7yjNb5dL11e3ob+\
UTSAWXWHnS3kO8TbDHF4GJ+Dfk+7JEv5t9bmoV8HzHuYkXJ2nTk+Qziz+1klicjn8dH23/\
W6Jpw5OUI6HjIepiE4tCT0ZwlxDERW4ZDTyZM6+Hz80PlOPRkZCLFuww2VODQk1mRM+\
BoUo7j0Is5YBnHkPuyEof+S5UOpbNJthaHHkv2/BcclNmtOPRY3srQJzAYtuLQY+GonDgcUtSKQ4/\
FeI7CJppZGw49Fj5ls+TOqnYc+\
irHchnwaJ8uHPooN2dzrmqZ7MWhj7K0Q2gLj0ofDn0UtkXeK9dd7cOhj5Kps1f8gH4/\
Dn0UcyYR7Fn1AA59FP7Fn65+vD2If8w/mf755A2isyeeSeLZIL45k/XDQpsbxD17KSC0/\
AGeHi2SsFX+BnFrY9JhY4cH+HkP+8lzo+VECd8StsQlQzj0VYxPjlay7R/Goa+yPmG6IctrGIe+\
Skdg4dbnV4dx6KuMYyoTh58N49BXsX7T9YnebwSHvsqzspcO6mGj+Poyr/enK0uJoqVb9YqKRnHj/\
AXqcVmlhIt679qsjlG8PVF46o53KWHUUJG7fdFDvNTviNxSgVIi6I5D4NTZhzj0WVIFUso2mo3h0Gd\
5yK/C7+ExhkOfJd3tvZ3apTEc+\
ixO1kayVpVjOPRZ7k5qttkvHceLbEdUmK6XEL5StpMJguP4lP1wjV9iCcHEXFWnio3jDiceVJ84XkJ\
QvxhJzbIYx6HnMp0lnjOWMY6nnuvD+phLCGw1UyZRNo6PBPfiuq+\
KiZD5I5VM9eO4SVR3hVpDMUEZMjF/NDqOJ8TRttYUFRNjorIXTk2P4wOJ1HKFK8VE+mTKwrN0E7h+\
ZmfpZpdiAldvyiO/+uGROR3SeUbFxPL2pjjhtRN4V0F7ycZdxUTnZuZzYyITOOf1ts0pEsWEyKeRV/\
O3TODaN1qLVq0sJmgcZwzitk/\
goUSLRDRTMRHz8b1KpNoE3nL7XgHndBHRmLlW5ZP2BA49GiY5lvsMZhP42ZYmUf+\
CImKY61Rpss0EXtfRmPM5tohQbgLrcxwm8DndDcJulCLiFb63f9WxCVy5vz57+mgR0bXwzaV3bhO4/\
4M6QXuDIkL9aTTL1pMTeNVobeb4jiIiX3GYZcR3AqebrNlgJl5ElC8qNXvpP4GDp3fS+\
7mLCL6NahOHKRO451T1+gNzighd7VXuqmcm8PLXt1PbnhcStsxsHy6enSA/\
f1Xr1HsLCTxe64Bc0AQu/\
aUyufZOIbGjJSBAg6yPM1Su2Z5XSCwZyvaqJx9fNPdWUkV0ISHJt0Uxk3y+KRZitXRAIXHp4fzBF+\
TribHjCfkOhYT/55MWCQETuD3nzVVC+oXEvkjDx8V+\
E3g2V0V8qlIhsSf6edgm7wl8csUNntWi5O87fAhc4jGBb1hdHhuzrJAYV8FfmByfwK3XlXEvYSwkah\
tesyw+OoGnbiiNDn5aQGDyg4vEDk/\
gI8LXl7F0FxDPlktoFJpP4HybSiIDbhcQFavXslwxnMCNpYqX0uUUEK9bTGOn903gV2SLItwjC4jQg\
0sP5atP4CsUC8IcjhQQRfx3WW23kueLSv6iyf0FxNN1pt0W4uT5opYXar69gKg6Twlu4p/\
AoS90y0GktY9tAoe+0Mc3Xx4eYpzAoS/kaWCw0uztOA59oS1Gkm8fDYzj649+\
NnldkE88YC7Icmodx6sVe4OG4vOJMLHCJI/b4zj0h7ZOaZQtSR3HY24cnZdmmk+\
UfDixODNiHJe5sEfi0p584sxKEZGqwHHcSYKJcpg/n/B/tGXXKfLzBL0irbxzMoY84/\
gpzQMHmKryiF03d1luZB7Hedds9nt5LY9oq3NQ8Hs9huvXPe1sCsgjlmkZa3c2j+\
F3F5p6eW3OIxg6GjxWnxjDoXf0Xvnu+Lrihzj0jqpHLprPj3mIQ++oMuUuz3mfhzj0jrRN1BtNVB/\
i0DtStj9xzrV7FIfeER/7Nhe7hyM49I70q1IW5VYP4dA76inpK1KIG8Khd5RjEql4/\
tgQDr2jtWmtL4zWDeHQO/rQzpLI7fcAh94Rl5zf4XLxQRx6RaYHPwjVP+\
vBoVeUPGawyPNyDw69IqGbq/PXYz049IqSiuvz3C5049Ar2qEdWuYpTMOhP/\
TAjdn5smMnDv2gpE76cfH1LTj0gywVjlBsS+7h0A/\
ayDr9UGHVPRz6QbydLpIu08049IPYIyKaL6c24tADSugym1ctV4tDD+\
jhwk01R4tqcOgBRfqu1NspXINDD2j5s/\
ZYf747OPSA9riNT9Zw38ah78MlFz1hFIPj0PeZv9jquGPRTRz6Po99XvYfbqnAoe8zqOijtJ3jBg79\
Hv927m6d69dx6Pf0lWq7x42X4NDveWu4gcbOU4JDv0en8sxA+MUiHPo94x8KKSMx+Tj0e+\
gqug9pjOXh0O/x4eJr4JHKw6HfE/xRLeTzjWs49HnymEQN5uSm49DneW7P4e/\
slYYjn8fftJhJOxWHPg97S+\
K5rkXJOPR3FIS22ir0XMGRv0O1pXN8FYdDf4c3Zdfddytjcejt8MYVKhjGReLQ21Gw4ZLUnYrAobeT\
ULv949i+cBx6O7zqBe9Zd4Xi0NtJWE9nSNCCcejt3DqGUb2eXsCRrzNod6C08gwOfZ1bU6vw1QcoOP\
R1bqXxeQfMD8Chp+MzGnfx3D0fHHo6Pu9s32VWeOHQ0/HZs/dL7RJ3HHk6pZvPBl87jiNPp+NxF5+\
vMw49HZ89arNjQhxx5OnIK4vy44dx5OkMXhxRbrfEkaejrFpyy9QUR55OicaoR7cBjjydNhbtyqF9O\
PJ0FNbnrrytgSNPJ1tNUCpbGUeeTumsW0qztuLI03FMU8phEsaRp+Pz4ZOK51IceTo+9Nw8Qi9u/\
ubpWD+aF0Lc/M3TOeCuIMSEI09HLM9r+Zk1OPJ0aHSPzQ0kceTpjHfkHbDchiNPZ+\
TJUbezqjjydDxPPV7drIUjT0fo1KwsVT0ceTo1Dsr3jIxx5OlQfNT6Q81x5Olc9DbU32aDI0+\
HxXMuj609jjwdibVNHnOccOTpiKzn6OM8hkM/x+fRpdVzxz1w6Of47M2wC8/\
2xqGf48Nk1XO3yxeHXo6PkyLjjk2BOPRyFIL7Di48fxqHXs6thdq6d2cH/ebjGFzkNxIIRj6Oz+\
mDsYdCQpCP47NarX3DvEu/eTizV5cOr41A3g1vdPoNI5Y45N0oyKenqS+8grybwSWuFObwBOTbsF+\
8tmXyThLya3wMfNhunU1Dfo3mHp3Ne1vSkV/zPCUs7jFPJvJrEtSuxTK3ZiOfpqWu/\
2SKaj7yacYzVPmb5hcgn0aGq238RlsB8mlGCgfOdNoUIX9G6NOpc19uX0eeDLtcp+\
wyXgJ5MulzjePVFtxCnkzyA7PDa87dQp5MhKhpJeVCJfJkaKKrUigpt5EPA+4XxakurUO+y8JdfG/\
qnrYg36V6eQ79ha2tyHe5vOxLUdbpVuS7yDCZLRtd04Z8l2PA+ct7w3bku8hclLL70t+\
JfBYjofiw1W96kM8SsH9v1sTOXuSziNu92psc3Yt8FkUHLZYR+T7ks/\
RcC1YSO9WPfBaeyZcXmBkGkc9yMnaLGfPhIeSzyKUpX/\
0QOoR8lrcp28rSyoeQz1IY6nBJYN4w8llCJTjGI5KGkc9if/Vlu8+dEZzraqXQ+YxszB2PwreOj+\
BOPruu7+jMxkAUXcsl5lF83Va9pjKha1jN4ffnOPeM4ufyXF9f6b2GGRY7nd3QMop8l3IfOs+\
txEO8yBXrXGeRi01dGbo/u/chzqpbe+h+cC7WWr/\
WXOf1Q7ySneqiNZ6LMTDW7nMVHMM5FT00YtXysCJWrXclF8fwSnGC080kD7u+SnSvVxp5/\
8PL0LPvRB7Gwf3O5yY+htd9OmvOdjUP66E/\
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\
lRoO1ibWVe9tPYOxrn50OuIOR0Aei3drIlnj/\
d0AOi1iGx3uom96gDQa2E1Y718ia0TQK9Fql92rH97J4Bei7dK2TBbcidYe50lJuREDfZodubGbTc6\
wZ3d914f8KvBti88EzSrrRMwuermjF2uwarS2Q/\
LfO4E0HfZ419w2n9vFxAzF3Braq7BDFzST6padIHWd486LtFqMKZHH3akunYBznXO5/\
ie1mAxfImyfPFdINrD9wO2rBZbMtqorDDSBeQ4lPfPXVuL8SqImNS/\
7AL9qUyFd0VqsYsBF6SeMlIBb9tFW0OlWmyrSMl81rVUAD2ZghQr6xuGVLATN9m83b0Ws69X1ZI+\
TAUT2utC5gXUYrfohN7puFKBkHf2zsho8vEdiadcQ6jgLqdj8qGUWuwM/\
f5J7zgqcMiUoFufV4v5ndzKKZRBBQWd5deL79RiCRd1So8RVKBz+\
OQir5ZarCt5sJizgQpe0W13UOqtxQbk5LwOdlCBjFA9f/tzcvvNdjoMj1EB7kcNf85dhy2QfUk/\
xUwDxlwxL67z12Hhs/McRhbSAH2Okbq3eB1WJeWX47+\
cBpS6RxlZVeqw1IKj8a0CNPDQPsO4c28d5qGmcNdblAYojEcqYg3qsBsbPJsGNtNAg+\
hLZ0GnOmwvp59wwTYasLtz/\
d6UZx0Wf22YRUCFBhYc9BAsp9RhwoNduXt300DOc0DxDa3DgmoZukT30oBm4KzhnXF12JKgMNnb+\
2hgirsGsKfXYZpmYlHz9WkgLP9MNLWgDmOteJ0934gGoNfzTupmv4QFDagGWdBc2uqwSv1F7gLWNFC\
xpdzoVF8d9l5pvPq+LQ2IjLOOhjysw07PGtXWP0IDCRFmhxOe12GDNdIVkQ40sFC59EXO+\
zrMZ1ZIaMxRGvCfnu96k7EeEw7iPWzmTAOvE00+\
N7LWY5Gdod3PXWjAWrPEv4erHktRYD2qdJwGej4zs0zw1WPhR8WqjWb61dcOhbwRqsc2VbJYKLjSAH\
6waOkc6Xrsddna0QmyFmeeF8+5rR7zTHXoPOhGA8mlhmvXqNVjjWJ7aiLIeolVQab4vnpMl+\
O8SgxZn148V1zhUD1mc9dk3Ias398+eH2PTT22J8hamoGs7Zzy5A2d6zHescQqK/L5B3hnVx/\
2qseWPnJcGkluj+Y9PVV3Sj22gCmqKozc3iqvnJbTIfXYvjVymkbHaEBSiGH/5Zh6TLKApvaK3N/\
Unv39KSn1mMmIioK+Ew1wnck2K8qtx6733bh+3pEGgqTpJ6vK6rGktze3BtvTwOfRfY6tt+uxM+\
uE95na0YBjWObr+83k9ijJnWMkj//Q9i+eT6n1WFWUo/\
UJKxrQeaHN8OlBPSaokeB4w5wGaq6kn2F5XI89+/h8Y6sJDcjs+cS2/\
HU91qTUtaKMfL9XZKWukGZuwCTUs8roD9DABb0PScqcDVhEzMfDZjo0QMekuUFnZQP2XOiqeZQmDYy\
Yv9t8dFMDxr2wVdR/Jw3oLtpT4S3XgPGeecsgq0QDdZVJ2y/\
saMBoJwrJVYoGrq3crZGl34D1zlu02UyKBnibEzrLzBuwZ0rH+I+\
J00Cox6uDdfYNmPXRkQOHhGjgOC3eetSvATN7JeSIr6YBEPrCd1VWA0bd/\
76uiPx85SnsYBIpbsBMckMFIhhpgO9Z9AU5ogFbrj4/TPszFczZrRSj196AXd4cZGH+\
ggruzb5cdOlDA9ao25822UkF0J+Kzx+\
pfRxJBRvN6zqf6jZinVdnxS8KpoLpPTrVnSaNmNLKT25cFCoIXGuXePVEI8Y5z+\
8g7kIF2fdiDmJXGzFTD1uxM3uo4N26D/eOv2/Eynp435/\
92AVC28pKR9ObsO307byByl3A4KZyWlNhE6bK4yRmuKULrEtvDS/\
EmzCNQjr61cJdoNRrwsm3owk7JLTnhCNnFxgQWCbMQ9eMKZ0R8Nsy1Ak2ersm6uxvxj5Y7hKude8E0\
Mva4WapJ5PUAaCXxctdOKIY3gGgl1UrK8C883QHgF7W1S7r+\
VvtOwD0srpDjTa0bekA0Mu6drEu9uW9dgC9LKWx1Za279oA9LLeqJ2y26/\
aCqBn5ebqdPjA7iYAPSvV7dYX0jc1AehZsSrQOzMtawLQs1r+\
dk3bm9FGAD0r8ZseDJd9GgH0rPytat0fljYA6FnxSzCWCknVA+hZyb5RfCZqUQOgZ/\
XwfrnSlr01AHpWIwanObTkawD0rKyOjLIULK4B0LOii1iiK1h7B0DPSmXOZl164TsAela+\
dqJBaxmrAfSn1rgJrtx8vxJAf2rniGdZUnMlgP7UhYnB2asrKgH0p1ymEs5qRFUC6E+\
ljuwVdtapBNCf2iW+7VFj8y0A/an7jVNTLyIJAP0pUQ0m3lY3AkB/KgXnZbynTwDoT0U16EXw8xAA+\
lNvTt033X4VB9CfOvR0yJmr+CaA/\
lTLqzadmKc3APSnCj7Nsk1uvwGgP3XrdplaXekNAP0pf18jbuNTNwD0p9JmfXFrXnYDQH+\
qXmA4K0itHEB/6kASp/\
D7ylKQd5b17KnNXdiL4o054pmlQFZj1GtYtgs7ltO32Te0FGjQQi2uKndhPCzF9NZmpcB18onkmoNd\
2E1rzQ1ac0pBI2tyO19gF9ZyVKs6QPM6gJ7VdMYXp45XxQB6Vr3yGWdUh4oB9KzatEpl2u8WA+\
hZtTCt4VmRXgygZ6XF80To7MFiAD2r1tOvX9bdKQLQs4rKX0w5lFYISmqW4RG+\
VCxEbtMbpohCkLF0i0p0IBUTyXryvsq/EFwoO6GXGEzFBN/s8bY2LQR6n1565SZTsdwNdk0nVhaCp/\
7PahqbqBindwRvdFQBgD4W19y7ggEx+QD6WF4PW6JoZ/MB9LGSByT2ybvnA+\
hjcSYstZPVywfQxxqvjVtHz5UPoI+lALh18iPzAPSxDkqUq+\
3cnQtmWXndPNxCw55WWXz5LJILeHVL3Xs7aZjS8am5HRy5wFBS5FX5IA2LeTIRQaPmgK7nyybdXtOw\
AnNf4Z0WOaDe5kX7m9XdWEKSaEZKwDUAvS13NlvNU71ZAHpbIL1uttftLAC9Lc38VX3ns7IA9LbY33\
ZfeOmRBaC3teOUMKWdJwtAb6vCa+\
P92xaZAHpbjObrTdtnZwDoban6G9xY7pcKoLel7X5yOsQhFUBv69iA1JHlhqkAelu3aHWDRjKpAHpb\
T2TzHhU+SwHQ29JasfKBt0kKgN4Wb3DfeuG9yeDsnIGP7016MZtE36BshWTARihXv7TsxZ4tuLdxq1\
gyWC62WHvckfz5sZr7AWzJQHRhkeM9/17MzlDs5L27V4F+14usuOxerOK6eQS/5lUA/S7G8yJ+\
3oZJAPpdO6aju8+qJwHod61bvIkxVT4JQL+rcnnxBZaVSQD6XfJtb66E3E8E0O/iXuO+3sMiEUC/i/\
4K/SptzwQA/\
S67K5lOl1LiAPS7vsjuWrbzQhyAfpfavdoWjhNxAPpduspnV47sjAPQ79qxceqp75NYAP2uz3TnXIN\
lYwH0uxLnCG20H44G0O/a7ZwTv9guEkC/K7Bvml59fySAfpcxK91g5PZIAP2um+\
drC44siwTQ79JtUlKeV3cZQL8rtu41wyuBywD6XZO2HFtY3oUD6HfNXS5knf4wHEC/y7AtwWV/\
RziAflem73raZG44gH7XnkfeeSNW4QD6XfPCG9Zx9oYB6HdJZh1UrqkPA9DveuRNWXKmNAxAv4txZU\
GAQkQYgH7XQdk3V120wgD0u06uszfI3BYGoN9VvChR5rlYGIB+l8/a1iXZbGEA+l3nb6u9Xv3lEoB+\
1zIRr6K0p5cA9Lt0V+gqyA9cAtDvgnmd/4rfJSUh9o/f9Y/f9Y/f9Y/f9Rvv9I/f9dMzzPz8/\
1dq1T9+10+f5l/zu+A/E4Txhn/8rv+u3+VF9y9+14w3ZWZiz+ts8YNd9XfYIwhR/\
YXiZfkD4PUHpAsPHdS7ficA/C2+awZ5+WOy6zeuC26myFe169/QpOb+dDhn/vAnmlQ+\
WRwX4d1GHuGZw/p1751nNsZ9Zhv+pp31L7bUbyiXg9NvJhfGS+6Eo4kT5LS+vyQS1GZIpGPO8Cm/\
6lomX98o8c28R74dkF880nu/7/YMSbTDxt5c/dvWzDA+M3TP1//1bZsO/\
oFQ9HW7BJw3fDsYluQunLC2MbP+g2PIRfenVNGvyj8RM0uU858cMRHemT0wceZ1dvl2OwMJsh/\
fLTO7mYNJ7sXMtts5kPvyE4mGnmqGNZv5JFlZuPz8Btg5OBz+erBdfvvU/THNtITu947d3/oIzKwo/\
x5f9HewjpnKnTwG4r8AdPwRavEn/sXPL/L1Dybff+fPzJ/f8x8/nI5/ItD8/Dt/4AT9b+gZxj/\
Y3b96zj8CaGZeR0xE8id05tt//wJb+aN3yMb+/+w79O1D83/wHfqLo/\
83MZRfeasXfX0xcYktEps3S24Rk5KRFheX3Gz8S1f5H17r33we7XDyiZSOocXN2Y28Bro4uf3rpR1d\
gmxcjpl/XxZnPv5f17+vpxnvt6sO+RTk90ARJGIqkl8cbMy/QY5fby7+5TpkYWJm/\
e1C9HWJhtciIbTUfnXu0DXwd4vu/6RQ/nBvYuLo6ORAPgF5EbJz+36TcpJX2OQb0DjzZ5N/\
gThNyNsHFxc7C15TE6fvF2Der6bO94X8twX+\
62Xiq2g5I3c62VjYm307GnYmTlYW5JaR1zizGSlUQMuCvHzYfTsWO8jXNN/uLmruLjRzw/\
V1V2VEJEXEN4jw/tqNyV+dbT9/E/230CK2333af2DLZj4m5C5+r2Z/\
rZwsYD1zzwqdQkgQzbyKjf0f/vrXzSHPnF9aQ75+xbWxOuYEAbtfWAv+h5Xi5635bU0Q/msK7+\
tuonu1H3bTwfJPj9LXE/KHn9q4OP/0UyfnH4+wCcK8fqd7zaxGv53xPx7knwmn/\
xTc9hM39Qur6u9X3jk/PWZmaTLdMXM0dBxcTOzgIvznq/1fYHFe/6fJuN8/\
x89b9NO35R8JsplH7DhGrtO/vnfwuXSsLY789Fwzx5VPycLFZIZc5vv3rmhfD9LM7+hYHHGcuZ3/\
Eyr2rwUw+p+qnw783/LAfn7hr6/x89/4oe3/nej138PDfiTCiuh/\
JsLMribTRUvKISKM383nZtg2OUSEPczS07y8Rw4RYU2vBdmKrOUQEZZndjJsd5wcIsL2VD4Y+\
zxXHhFhqYQ7x6VheUR60e2T2jpQhCEiSz9ySk1oyXZEWN05t4w+\
4IISIqyKPOv6F0QpIcKqcvocHndVCRFWhrwTSW2lSoiwuqjIGREyrIQIqyXvMsVsZJURYSW65GZK+\
hNlRE4Nsr6LrTmsgsgpHY0yTw03FURO1a7R9xgKVEHk1FmLS+/4k1QQOdXkofh+Y7cKIqcuDeqJrN+\
1E5FTGzKfWUuI70JE1GdWteKONWqIiGLP0v+\
4XEINEVEuQRpadtvVEBFV08S4V8xEDRFRe9JNUsEVNURE5Uic3+zFsxsRUedVdn+\
p5VNHpNPyfPqhUS0NRDrxC9uxN1pqINIpTJ3T/\
Ja7BiKdIod6S3uTNBDptEOTualrWgORTqzFx6WO79ZEpNO5jyeoDG81EcGUrGMVMmKrhQgmXhsT6sh\
xLUQwhe0MYXjmp4UIpjup3pKrY7QQwWSkKcn4uVELEUyzDkvREkW1EcHEwaWpTvusjcgke8593VrEP\
kQmPQF5D1Y270NkktPA6f5XPfsQmWRBp06tfr0PkUlP/Y0mx0R0EZnks2mFlVqiLiKTaq4LOrZc2I/\
IJNuMF3EyF/UQmdRY4KDtl6iHyCTXz3uE+wr1EJnU9JBy/hZND5FJ1EXncfU1+\
ohMMpjFwnz6hj4ik54/Xpz+/O1BRCaxFajetM4yQmTSmW3iBRW3jBCZRGDa4XxdRohMMtpXabmW/\
hAik+ozVD/SHziEyKRXvnkpUYzGiExayLH00YsKY0Qmbaibt15gtynQ7b4C+q+2Eg/\
jrPrY9UyB6ibHAyPxrcQNLW91RktTIDnCfm4qrJV4vOpdIIuPKWDaqTXN6ttKrI2ZtS+\
2yBTksHVWqui1EgqV0Yb3VpmBD/E9RmXzWom8Y5L8FZ/NEMm0XKj7Su2gBTByjT4pbdFCiE/\
ZBDNMWQABCQ3ztkMtRNvbptd7GCxBeXqpKNO+\
FuJDqNkBTn5LMHApqMYZayGUZD926dtZgvW24i9VOcnfH7o4f+iDJXASfh8/\
5XGPCB0SWim53hqRT7vM1KTxfFtEPlVZPihuumOLyCdTGXPXR922iHwyjm1/\
oTfrMCKfzC74t37QPozIp1c6AkwG7w8j8qmwKbO/\
TfsIIpZi2XYq3uVxRMRSL1fgXGZBR0Qs2VZyZ2rKOCJiaSpkQexnLUdELFVeps/uP+2IyKT2L+\
vZs187IsJI0cf2Q1LPUUTeKJbdnvSqdkaECYeL2G5dJldEegya8BypOO0JIJEBerpMd/T6AEhOHO/\
7eIRR/BSA5IS51FBqsOwpAMmJDYHq8kuUTgFITuQoWgst2H8KQHLircHRG2mepwAkJ2alm/\
F41ZwCkIy4rAO4l+v4A0hG0D+tGs0w8AeQjJicN3RWzMIfQDLi9GNlHr7j/gCSEdXY3uNhl/\
0BJCNqbO02ptH8ASQfJD/OVeTSDgCQfHiHlchv1w8AkHyo91SPMjEJAJB8yEw+\
uNPHIQBA8gF722spFxQAIOEgzVDulHYrAEDC4eL2oCm+\
2gAACQfOq5qKl5oDACQcot9rymn1BABINHyJutKzczoAQEJhL7PxYs41gQASClMa06+\
7BQIBJBSUAh/phYkEAkgmAG2zqIdbAgEkEI59Gq2i0wwEkCRoOmFTw+weCGCEf/\
1bvecedwIBjPDPH5t/l1IfCGCE39Upqe1MM/\
n63yP881MoZo6dgQBG9NWtUiXrRgIBjNzrMTGWpdFTAIzcR1yUTuOaTQEwcj/s27TSh4kCYOQ+\
WViufhMbBcDIvebBhc/\
Wr6AAGLkv3iUjqidJATByf6i1v1hKmgJg5F7ms7UuiywFwMj94jF2tmiMAmDk3tTH4NweVQqAkfttr\
CIJPEYUoLpzdD23dzZRv2XLx6PGFOD/\
JN5jWjebSPeK2oibUsBb6YVrkudkE1PHJcWBFQU8aHp7dLZlFiHvm6w54EABMLK/mOH4xUxvCoCR/\
fdPWdIyfCkARvbduM6sTjhFATCyr6XVcdqZQgEwsh/oELCx5AIFOO06rfcyNp1IWL7D1CmYAjQ+\
mc8/fDSdyORYdok/lAKYLFY6HVieTlQcmy18IpwCYMRff5Gx6Y0Ycv/\
HjzzPUEgjlr608tsSRwESsapXeRenETeed0jnxVPAYwbGeax4KjEo6VxASaQAo/\
bjHeNsqQTTtnVLH6RSgCxFm3JoJIXg+\
LJ1IX86BSzdKibbVZpCiNlpKJpnUEBL0sSV2yYpxEnx0MimLAqApIBV46ZdGnkUAEmBMGqIsHE+\
BUBSwCV8YNK2gAIgKWAoSr/dvogCICkgNxEXL1JKAbPurCxuELxKTHMFBbKXUcB91w9W2+\
iuEh2Stycfk3XkYFGzSEYSYR/u6hZ+gwIgQSC04stYGk4BD80Yd/vcSyS6mewnDxEUcHvpg8+\
vryYSo7ZMLItuUYCnd7T5yO5E4pZt12vbSgp4umeBGBGfQDS5rkodvk0BDbMmhzY7JxCObGdrj1dTQ\
FpJTXi2SgIxXyIlZfYdCrglR/\
dG4sEVoku1cXRJDQVA8qAhgC50Xh0FQPJAbmGU6DGyhuSB7uoT0f1kDcmDBTvGOVPqKSCTvnv4yNNY\
oknw+nbGBgoYSJr3anVcLJE3Z7u7MVlDEsGPee529kby/Q6MEQAZMQRratUzM7LOWd+0ZWp/\
DMH7ZutQEVkvtRU20C+OJj7z7bu3p4kCIKHgolynZ95MAZBQSL5Ue/\
MqWUNCIbspkjpI1pBQ2L2Vy0znLnm+cA6/zum+\
TOyzuvbsLFnzlixiMjt9mXAyf2BFkDUkFpqPXtbgu0cBeFTKVu+\
wCMI2lq5bk6ynZLt2SyhGELtbO329yFrfS9ohJiGcSPbkNW8l6wsrrX00NMIJIbcjJW/\
JuoqIDGH4HEasie3QW9lCAZBsyA9cVm1O1pBssFTISwoga0g25PC20aeQNSQblsRccLhP1iICT+\
Y9rw4lurWKw96TtWk9D3eycyhRFHbSirOVAiDpcCHebJsSWUPSwUmy1VCfrCHpsHGdv5YDWUPSYZyI\
fxJO1i3iTpeCZYOJJGmO9DSyZkpV3nWm7SIRNtZvWkrWkHwoW9z0pYusIfFwTH0n2xRZQ+\
JBjs2je14buR6VaRg03DxL6JY2Xl1J1pB8ENPoyhMja0g6nHTVvahO1pB0aLAM1jQla0gEZL4NXxBA\
1jCi/sBNRcaarGEEXSPeIU6HrGEE3RrPtJMhaxg5//xovyM/WcPI+\
eTreW4cZH1gerywdPIcVpf8SPoduf0wgm7AHKzfT9Ywgt6yLOR1M1nDCPqQPF3QTbJ+\
0vKqPXtdMFZleml+NlnDSLpqWr1DFFl3TF9sjWoLxlhpj9IDyFpltqEm+4YQrO7x/\
GzH1pn381tkXcz9/P3tZJ20pbrJWSgU81RifrOBrBerhahN+oViromVqWxk/\
fGI4C6q6CUsUGs4uot8/x2839aqB17C+ha3Vl8n66HgOzuq+\
y5hwdb0WpfJGkbgFwdxHNpL1jACb133uEqQrGEEXjJhlhYjWcMIvPvde9dzyfOXmcUEp5eNwD6HLDj\
qR9ZeK0TkXYMjsAKWsOXaZA0j8p5S8fRPyc8PTTO8rPfSZUz5iApvKVmrmZrKaE1exhaVBrzwJutNA\
R83Y5cjsbIszI6JrGGkPmCP7qf35Ofbqe9T7kWVaMyt3fNxHlk/fNIgMic+\
GhPfIM1iTtZN7BZC06oxmFEE76VKcn1Q4NuUZZMYg0lZdXYfJutCiS8bBt/\
EYBYfN7IsIuto3aj1zcmxGNv1fWP7yfWH1doyVfFDLKYnlGn/\
ilyvfN0k1pXvjcOkwq5EXSRr69hmvrTPcRjXzVWhZeT6BiP+0YXiC4bI9RFG/LvcdLUPkzWM+H82/\
Cj0glxPYcS/6tRRwylyvYURf7r2afr6KvL6K8dQs39pIiaUf0liM1m/\
FMjJzcUSMcaHVp5x5Pr9mI7x1KHgRKxPyYPTlFzfIQmgy22bWHaTXI9j9Rct1U/\
CTlTztzCSddfp2Z/s/ZKwnT3REWoV5P2G8cGWle1JGJUmn9lYTp7/7HNPnHS5inmYLhYIu04B5R/\
zjbtir2J8tvaa5SUUUDJuoCpy5yoGDi+62FtMrr+\
3CngGFidj1csUWNnI6xkkCPh1OnbLkNdDSBAwvtE23pxLXr++\
EwSsFWxMwjkUAAkCrtNq7SzZ5Of3O0Ew5cp3KSCNvF5VGH/Q4UvFfO1u++0jr8+\
u6Syj2aqp2MHcrQGrUijA0cek1CAmFXsb5+GXmEQBkCzQf1UZf5C8/hutKN3JaZGGvZFwtnhP3h/\
oM5ltsjufhh1ddYkIjaYArcHS2SsG0rAIG9VnuZfJ63mwebaHdzqmO/\
aCEh1CAZA84KxTEV3jT27Pd/LgY9HiOiE/8nh+Jw9WN7kUC/tQACQPKEtfKy72JNeX7+SBv/\
K4uJszub6V+tFuqWVhWOcOx61HKSA5nNnM/UQWJndkzOmlPQXs11zu+\
uRuFsa1Jdhb1ZZ8P74TCfFaj7r9yfszSCS8eVRi8MGQPP+/Ewms9/bwWB+\
kAEgkXHCZXrpWlwIgkVC26IX8WjVy/78TCZ1NR3fKSJD3I9+\
JBCATFMwiRp7v34kEngWJwh1CFACJhPX09JLK/\
BQAiQSvFTLcKVwUAMkDgdc0a60PgQCSB03CtkHH3gQCSB5MCVdon58OBJA8kO+ILoh+\
FAggadDK31Il2BsIIEHAem5JL29pIIAEwcExa92EwkAACYKg7MoTnLmBAJIDGSyDMT0pgQASAvMefW\
AYCCW/H3yP9LO/dmUgbAMBjLw/b9bGRjkCAYy8C8uU2b9mCQQw8n4s9JrCx9nk/fz3yHupemz/\
6LsAACPtBlrnTok/CAAwov5l+ceI3GsBAEbGbQQ3pnuCAAAj480p+OFr0gEARsZ3z6sS7hQLADAy/\
kF0dse8NeTjv0fGDzq9qWKaSz7+e2R8MGyNq2WzP4CRb09VrW3T2v4ARrTZ5Qw0d6mdAjDy/GZW/\
8oHDT4oQnx78USf/E1PFIndS/\
WNzgCuKLKYq1d4991jZxRZDP2kqrJ6wBlFFi9G6Zpr3XNGEcWW4I8XW/\
OdUeRwSXDRHcUTzigCyBRXx/uWwRlF5AQYojqurHVCETIao31bqp8jipAFLtMWWn/\
MEUXIaFy1xwusHFGE7NOV+KaJ3Y4oQqZKT2HoXeqIImRM7I06lEMOKEKWfFOea+\
m9IyjylT23odXnkS2KfD0VVzBZTrVFka8x2cno6ipbFPl6nl07pBptiyJfhn5PYnlUbVHkayLTza4t\
2wZFvu5/3LZJ5KQ1inw9pEuYpb7HEkzVitgmqbdg7jxmEmzAEuCBiY+uaLVg/ZnBdweELYEuI+\
VptEELdue4DXfqAksQ8GXvy2DHFqzIZOdUe7MFGHk19sUzsgWz1mkuuappAZKGFi3dN96C3RWk7mg+\
ZI4iZbKc3MOrk0xRpGzI2flh2yVTFCnjyw5uCw4wRZEylnsSUhI2pihS9vzp4RF2cVMUKUsqNSDW3T\
ZBkTLR984LLZ8bo0iZEVg7RXQboUgZP6X5hl21EYqU0a5zawnmGqFIGU1WMqXf3whFytxejQouFjdC\
kbKn3mJcVecMUaTssfF8arqmAYqUlYcd++\
g5Vx9FypR92RYWv9RDkTJO0QMdnx7ooUjZ5g0OPJUVeihSBvzs3s931kORMtdOLlrW0AEUKavhUmWM\
at6PImCDw8pub+/uQxEw53XKZhtv7UMRsLXuNX3W+ftQBOyhep86S9g+FAHbJtVCHdHbhyJgkw/\
LhQfHdFAELLNKzCBtvg6KbHHaKctyndBCka3Pqx/\
OGjmshSJb7fVzzUuNtVBkK6EAa3VX1UKRLXsryVMWK7VQZMt0rXp5Y+\
1eFNn6uNjyQjrvXhSxMt20c4tymwaKWPFuSr6zAddAEasVU9UBKzM1UMSq/\
CqzuYyfBopY0c3jeiYooYEiVo63lvPPjtyDIla2pZEOy4+oo0hU/\
aDv7bZtaigSJUaLeWK3SQ1ForjzKUoL16ihSJSW8T6tk4xqKBLlaao51FOriiJR/KrPw+\
M0VVEkKj39gtg8210oEiU5J1gorFwFRYz25332DG1TQhGgou7GEzcEt6OIjqkI3fkgTgUU0Zlb8cXx\
BYsCiugoBekdMGRQQBEdXqP9Wy6MYCiis+JwUu/\
tBAxFdCSDhVOMuTEU0Znz2lF9xTKAIjoG3TnUffMAiuj4zWaQjH4njyI6RnuqgWKPPIroSB9wSFwcK\
48iOs9TH/QXrpZHER2H9jNGEQvlUUQnNYay9hSDPIroYL7uRh6jciiiYyt6J240Qw5FdNbdszJYFiO\
HIjotWbw8+8/JoYjOWa27p57by6GIjsUZ7WW7jeVQROfaHbbg/L1yKKIzPD5wn1dRDkV0YL/\
svxLRkRaTWSP+3+0p7q4+OHZf5DHm9NnjeU/K+WHMqTA6Z325SNX/\
oqdYPOvnnmI0O3av5qo56inerm+6vzXPHPUUi1fUrS6vMEc9xfm21/\
TaOs1RT7FqrbWrE5MF6il63S73d3WwQD3FdfLSi7qULFFPkXG3kGY1qzUaEzS2327hglXWaEzQa56V\
imai1mhM0P6BHWtkNK3RmKDqSnxXQKg1GhNUs+\
FicekyGzQm6LDeUsHhTbaoZxkc1qN99JIdGusTOMuKWzTVDo31qWisavxQaofG+\
lRKxvNUDdihsT5XukfmMgoeQWN9xqj1kjY1R9BYn8jCzZ088xxQT9RptC2ketAR9UQ9jyma0T92RD1\
RBVlWOZU3jqgnujD94dqnC46inuhW3uGbGVuPop6of12R+/3Io6gnmllWq+Wn74R6ovmelQ+\
yPzqjnqj9trsNcSwuqCd6dTbBFbvcBfVENTXxZZUyLqgnumTlRbGcYy6oJ6pnnzHKO+WCeqJ+\
N3W3NL86hnqiIEROPE7QFfVERaijUdzyrqgnqq/\
ty56xxxX1RCcsfExeHHVFPdHmHmvBLWWuqCe6JvfsvgJVN9QTDe8Vv1fs5o7G5nhqFfBKnHdHY3PMW\
k3tKhPc0dgcweYpCY46dzQ250DAdS3vpR5obM50Pr9ncpkH6rE+\
jucyCGLxQj1WwctSTdxrvFCPFT9wvaJK1gv1WF8nHPDSsfVCPdYe1o6lZxu8UI9VIWxHj9bFk6jHOq\
XfGuy/2AeNzTnH0ZHQxOeDxuZc3Hj41GoxHzQ2Z77KytcvVH3Q2BwX+\
UULRH190NgcpRVVzPzPfVDPtn2NhJstzRf1bM8sP9CxeswX9Wy3zO9THHvli3q27XdyomIX+\
aGe7eaNu68XaPihni335+r4qAY/1LMtu6S9saLxFOrZMtZuWdLxOQD1bEd9lH13sgeini2rs25e0+\
pA1LN1qhIMZ1QORD1byq3IJZLnAlHPlotPcfYVHgrq2bLxNKqwqZ8GS1aYNnuMdBD8WxY4RhmfBvF9\
7uvc7ncQOcKTOza7nAY5htmdzp0dRAJHvkJSzGnQdIhNyqayg7A39BTQfnQaMJl3vtaO6iC68Zb5qy\
6cQT1gj9Rc5/YHZ1EPmPk4Jfncu7OoB2zHenWxIUcQ6gGv+\
yzGobQtCPWA2zfp9wklBaEecHV4qamX9TnUA65wE8gtm3sB9YD3C3E8GGgIRj1gUbn8kI+\
0YNQD5mKoe84/Fox6wE1OIw8SGUJQD5iytDpZXD4E9YCZ7onvqywIQT3g4/s1Ah+\
mhaIesIWpO4ttRRjqAXfHsuamNYehHrDri/626YEw1AOOf9RQcZ0+\
HPWAJ3O4GZ6phKMesIuwoR8fNRz1gEGeungH3WXUA857fOnSuF8U6gH3Mp1iaIqKQj3gFumFblV5Ua\
gHTF1Md2Z8IAr1gNvd8vBlctGoB2wi85aJ83006gEnXFNOcfePRT3gkfEDqZNtV1CPtmf+\
FoVRo6uohyrnxnNmh2caGhuydYWLW8K5NDQ25OULTt+\
3sWloTIhjaRh30s00NAbktb33zq7PaWhsR45/u/Jln3Q0JiOr9p0mk08GGpNxkJctofJiBhqTcd/\
ujaLTlQw0JoMvoCO4FM9AYzLMKxj2tn3MQGMvNDd5GdGfyEQ93/oNN24cNslCYyviHKY1o+\
2z0NiK8WdLGss8stDYijDNfKeG8Cw0tiLI+UmsYH0WGluRtmNrZZFQNhpbUSQpE9Auk43GVjQwP+K+\
r5SNxlZ4t/oU3DDIRmMrkpXi558KykZjK1ybR/sXjGajsRViJjV+3c+\
y0diKICeuxPPvs9HYihOZtwRz2K6hsRX3Dm6MrpO5hsZW7J6tqrUm8Bq4NWi28MruaqIqh0jSuXgNG\
NhnSSVuryYSr7Tet4m8BsLOyHqniFQTHj3Db0DmNcB46wB7zpxqwuB9wqmgpmuoR77k0thLO5YcNPY\
i9GL1qO6iHDT2InSZtOZy7hw09iK35tZioY05aOyFwvCZWUd35AANJoF7UvtuEyHRsw+\
tUM8BYXoyQcaqt4kHj7mxeO0cwPPxAEOR5G1iv5k7x1rjHDQmAz+15qbwiRxwLDQz1/\
9zFXHFLm7azzMHlA+\
XH86ZriLYpesrs3xzgGJg7zD9QBUxnP6y8HhQDjhNfXRFsL2KOOW0hJcrOAc0CXw8uK+\
uirAYlSoKCssBuo0rOtILqoiWAPvxsdgcEL1COLgtrYqQ23y0/V5CDrh/RH73x9gqQtxcy/\
N0cg5YS6gz8YdWEf6DZ85wpOcAa3ajag1KFXGu6nOibVYOuGZi7+\
PmWUWsecNy5FJODpgqOCl39WgVsbHdPzQoPweN+\
Sg573lhvCQHjfmgq1l3fXdZDhrzwVMROXDyRg7Ytatl3HlrFVEQtzP35M0cNPajbr18hxqRA/\
6f9s4EHKut//\
u3oRAppXkgopKEQpS9ZY6Uojky3aFMGcqYIUVSSUiGQsh4Z06Gtd1mksxuQ1HmNGpOw7vprNXcc85z\
nud93//1P+e6Tpd972mttdda+7f3/nx/\
34bhpwYVQmR97Ge97SuiYbPkmRY8m1tMeN6eWb2xmIbtPcPTNndqMbH9/\
IIX7iU0ZBMCOHMWu5fSsD5xyS1W7+iEo8GsSRpl5PX1Upwc+oROUE6I6HSTy1aNW6vovXSiY/XZa+\
vLaVjmYuPjw210oqU/\
6rYlufzGwW79jNt0wqrdxcSEXF5XcewDVkonLs9j5hcilz1nB90wu0EnBAK7s66Rx4O2JI28QS0s5D\
JnfpZEwRU6UeBpJbuILI82V9mjvlA68aI9PJCNLG+QXnPilDN0YrfpktAcOg1ro/VRZY/\
RifhWCpMYWd+FlFeLjB3pxD0rpuOWgIYZbZl419+STuwQe9ZpX0DDrsbMDMsxohO+\
rP7FSnk07OFz4e3dO+hE7ccTT9uuk/1LRWbaJC064e0WLCCTTfavELXaVYp0YsEBqxl7Msj+\
NbDDT0+GTsy1rj+hco2GfVxjpuojSif2SvhLvSKvt5KfI3P6Ijph4ed+\
z4LsD74dvqB9Jp2glcRqJpL9BTIlqwJYTGzJ/\
gVtVzYHOhtsDKVh0HZlgs6tWyPnaRi0XRmq01sf60f2z1Ah7vDaImKu5ZxHtOM0rLou9rJbaRFR3Z+\
pe9yDhkFbFlGjialBDjRM2FlAVyi+\
iPCKf6lxy5rszxnRfWwRRcT9S7Kf6sxpmJdgFPstnyLiSKjuVFk9GgZtXGr3lbb4rCevj/\
z8btltRYTJQhmBGXI0TO5w+\
KH5mkVETPLAAQtJGiYwcDHonnQRofrUztVRgIY9rwxpP8hdRPhfoUawUGiYKdNMi02sRUR79pzyO69\
SsRw7kVHDFwSx0+PUfM9HqdiJbUvWP7xJEJ+\
y7T8KtKdi0DaGWX44tj4tFYO2MQOx7nLP41IxaBsj7FrocicsFYO2MWIrr7Zxeqdi0DZm9YQCuds6q\
Zg2z3T2J6WACJVu3iOlloqt8eJZnpUGCK6sTR+M5VIxDhPuQ5gvIN6tO1o+lz8VgzYzOb19/\
Y8HU7DA0In8swUB4SkkePhiewrmzDFB6Q43IBTE2HK4alIwjWGmk6b9hYSrlpSrFi0FG6aN8roGFxK\
9c+v7ZW1SEDM0TGOyqx9KRszQ/\
P0JCwJbkhEzNPORddz0kmTEDBVEFEzdHZ6MmKHdbd2S79STETPE6XBltDA0CTFDNV2Gake5EhEzFGS\
fGtf7LAExQy+61XfPbE1AzFBnDk/\
qnagExAwF3KXROSQTEDOUPCryaqPmVcQMWfuFWgfrxSFmSPvyvLwpWBxihpaX4/HmC+\
MQMzTJTGkOcTcWMUPvMrZksOjHImZoV8XNDYE7riDmZyETj/\
fLtdGI0ekOXDzFePgiYnRit4oFnkq5iBgd9lP+\
fvWWFxGjE7ZdsCPvaShidAxozdeE3lxAjM7bW3ebLLhDEGMT9XidTb9BIGJstOVUH3MsDUSMzf5dwM\
L6yTnE2GCu3Aas7ucQY7Ochyp5KDoAMTYKK/vtNAZPI0Ym4P7TjOOpXxiZhVefn7+\
l9oWR6Xctq3h4/wRiZGLXXxvImXcCMTIJB0JHLl/\
wRszLgdmvP9bd8ETMS3nsRqnFRp6IecmJi2o04PREzIvAofUaFw08EPPiqOhrsUr0KGJYKreeUwjY4\
4QYltAdPbuGqhwRw7JU6vY0QTlHxLCE5oqANfxHEMPimCJ64gGzA2JYEvi0ylU97BHD4mvTz+\
P1yQ4xLEW+\
HTvOs9ghhsUsgCtiksAhxLDMdmqo30CzQQzLzgnJjwzW2SCGxWZhtIZggRViWNK8zlMSrA4iJqVo+\
ZSICHcqYlLqBEy73nSaICZl6oUnyjvkTRCTol24MIqDzRgxJ0/\
dKuQqCw0Qc2Ij1sWWJ2mAmBOFYe2L07btQ8yJR/QDnx0qeog5UQg48KHZbBdiThS4Km+\
Zuu9EzIkHG99kvfAdiDkpCnOYo9izDTElUVsNuyLStyKmhGK1afrIsy2IKeEXncyuKrMFMSVFstF6Z\
tGbETNC4XjzZIOzBmJGFJhq+drVNiBmpGiqhdqJheqIGVGwXMOV36+\
CmJEiH4O5bAxlxIwUReexvqpXQsyIwpUjBXjXesSMUCj7TPeMKCBmpEiVPSV8sgJiRjyKppZMzV2Hm\
BDKu2ibR4nSGLQB8TCIEl6rKYUYEYpE39WCd6sQI+Ih6f9e5ZgEdv/wY1kjg1ME5XIFc/\
EeccSMUIpyj2Z5iSFmhKKhXelNFcGgTQhFqm7jBNelGLIJsZue7p4kjJgSSti5nDlagthivzcbr2iS\
y9oTOKYXLcL8a3ZZcyYeJygF9IQb6vyIOaHsdM6xlZiHIRuRE8ppoGo2Bm1EKDNrb8j4zMS4ZBNVEo\
57EZQGmhRhxotBWxHKgR3KUpbTMGgrQundXOt4fioGbUUoCW/\
m386ajEFbEUqAwCPrU2wYtBWhUM7OuXybFYO2IpTYd0HvNZmxaeEPBwd5XQjKm3Rv2/\
ef5JHNCKVPg71yVB7ajFD4rZ7wvnotD21GKAYrnZ94vpAPuHZjVvacwwTFtzF9eP8zeWg7QulWPJWl\
8Ege2o5QouiPeXQG5aHtCCUq2O/4aI88sh0x4FkaJd4tj2xH+\
F8addS3yUPbEQrFgWtYqkke2Y4UWa4bflErj2xHPJw0ns+ukEe2I5STQnfSi+\
SR7YhHf9CMVdflke0IZfikxlWaPLIdodhvZxmJkUe2I5TSwdLdwfLIdoTywmAX03F5ZDtCYfeLOW0j\
j2xHKJRLeWxb5JHtCIWyPURzhvwX2xGKx8GT1QVfbEc8+IWFZQuR7QhF+\
9NFFaNCZDtCSYgWdHcpRLYjFI/0mtwzhch2hPL47sunEYXIdoRyfm+\
7aUIhsh3xiORLmpRZiGxHPLQE+rgKCpHtiIfOQ7eSkkJkO+LROyH8fnUhsh0xaKY/\
La0vRLYjBtsLU5+0FCLbEQrB7cV6p/BEyp1DQ8QhnBKQEibBeb8Q2pBQ0p68Wji/\
vxDakFDEJ5Y5gweF0IaEoi0Wmz76pJAjdKrSgvzDOGXnxwPBj0cKoS0JxUb6paD0q0JoS0KZzSYt2f\
a2ENqSUEIXlx/o/\
FDof0yJd0uOC06peWYnJ8D0xaaku1DsnR8LsimhiNMul4pMRDYlFF31oQEWDuArk29bvNMDp7BGrEy\
bzfXFtoT95DHTg1OA2Qib6dkLnjglhG1AxJ0HMDaL3Xsp7YVTpjXpdZtPR7YmlKLeklNXZyFbE8oIW\
6mwxFxka0Lx8J2zYWA+\
sLTbUHvS9TjZPl1v9G7yIZsTygLFXabWi8DaG25Vxi3k8obmLZ48gkCgc1aF9jEfnNLme/\
5azWJkg0IpkbXnPrcU2aBQAgjBy+EiyAaFImkjxlosimxQKBk0d/cMcWBbtynnprw/7rE+/\
7bDMwkAGTUK0ciXiq9CNimU7G35YpzSyCbFY8OoId9JGWSTQpnZfT1yliyySfFQrk3wNV0HIJPmcXb\
WnJBlGIBMmocUpdP2A45sVIpePH0+9Gg9gEwaJYfXx+\
m5IoBMmkL4nshTzMoAMmmUWZebb8mrItsVhaXynXWimsh2ReG9W7qb10Zku+Lx4ci82/\
e1kO2Kx9WL4i8MtZHtSpRMTdXN4zoAMmVRsSo+\
bHq6ADJllIUtfLPltgHIlFG0Zvi8mLAD2bRECdF0V/fvBpApK7K5fivj0R4AmTL+\
iSeTHUf3AsiU8V81r+AW2QcgMxZ19fViwweGyOaFf7WynICUKbJ5SZufO93ynimyeZl6x+\
4NEWCGbF7qjJm9Tr0xRzYvaZVZCtMeWSCbF/\
aX7PP4cg4ByHQlvDfHJYRsAWS6ZvfMudQRbAsg09XNYTw86mIHINOlYD1pr8seB2QT4+Eitq/\
U1AnZxHhMqgg689QJ2cTYmLLPeOnsjGxiomI0s4KDXJBNTICI9vvZHW7IJuYV74Ro1d2eyCYmasVKH\
sfKE8gmplP2TtvZFT7IJoZZxFvK87wPsol5J3Q88oGhL7KJeZh4MTaZ3Q/\
ZxJQvnyFo4Hoa2bxYa3AJrTgSiGxLwE2p61bXw5BtyTlmvvvTR8OQbUmKYxFnIxaObEqO6qnOu1gej\
mxHOO+8WTm7NQLZgCRor7/s/\
u4SsskQvhRxuP9yNLLJKPtE566jRyObjKl8x7RSe6KRTUZnfVUMviQG2WBo3C2aTEuNQbYWW5dsPcZ\
2/Qqymci6d7H0dE4cspkQYSVqTRvjkM1EU37oAsGncchmYvPCM05rl8Ujm4kda9s/\
9V6MRzYTpaOr59HsryKbiXdJ21Yanr2KbCYEpB92Pkq8imwmkmY+Vw+8exXZTJg8e3N+\
VCUB2Uzslnyt8IorEdlMcO4hXvEIJSKbCdWqzcxM8onIZoKbrwnssEhENhOE3UjU3cpEZDPxQr3k1m\
SnJKCyUu9sv18+\
nnlTZqfsmSRwRknXbfhSPh5jM8F91ZUksMhCcdfL8ny8imhPCqxJAqqFC3k4ZhXg3MmUGa/\
mJyObCivOnDWCWcnIpkJsC0MzuiIZ2VQ4ZEYH32tPRjYVKbQ83gRKCrKpwCwmi6lvSAGquuaSQc6Fe\
PNpJd3G3SkAu1f7dENAIT6iW3KEzyIFiI1etMzOL8SNuKcovjudgmwtuLpal1yvTQETC4KFFJcC/\
OmuaEu1uyngo/\
poz2t5gPNvmP7hwqMU8Nio3MDYHOClSpfLnDhTQW3I3t1yRQDPnRbNiiunIluMpUEzK2sTU5EtxiVB\
1QTD7FRki7FZX7MnqygV2WKUluyhRbSkIlsMft4wht2nVHDF6fSnuNlF+\
ET5qSWcHDTAp1B010OwCM8xjyg0mUYDs24JRUrLFuFZ0m/\
27l5MQzYayQeGR3ao0MCxVMG3rtZFOKhqpLzfSAOf7LYzdjgX4RFKK9Ya6dLAa0pByOSAIpwd3O1yM\
KIBu4rHDoNhRXiTNN8VQXMaeHJ60baSuCL8/\
dELykHWNDAw12e6U34RvnWqZg9woQHjezdGdMqLcFs/O2UnTxrouvqwXqy+CLdpuKL5+\
gQNtK7eGtDbX4QfqNkrgJ+jAZ1Rb2viWRGuoihhwBFCA7fp1zeFvS/CRQLC+\
EPDaMj2g9VUaTrrFRqy/RjpfpUfHU9Dth8vOrX2cCXRQOpDM5EccTrutW/\
7YuVUGrIB6Rh9pbEhjQZUk5/Kv1Om409nDrPMz6SB835ZavM30/\
HFIoR3QTYNdJs7bsF20XEttlssy3NpyDakbP6aXNM8GnBcSqF6WZLnyxtqsy2ggTK2UqvYI3Q8b/\
fp6I2ABqYN+DiWe9LxE33+6i8JGtAv1/QaPEXHuz5ycVjSaSApbor/\
pBA6fnXz0IKsYrK9vRuDRaPoeGJjWnF1CQ0om1y4vCmJjvMvi1mVXkpDNiW+96+\
mmpbRQKcAX2YgoOMmHbpWj8nlZcw9BVmVdPzQ2e5MlXIaOHwvvrylgY6/\
tBcstCSXi4sO1L3ppOOfdp2v2k8uT4kSa587QMdVy/\
A5EuTyXveRnnXP6LjY7tqHNeTxEvRzHumPku2ncOS4HLn8Ut75tceEYnxdAJOQM1kexQUY05UpxXhN\
ETHZnyzvmfdMnGVzivGe+f5eNmR9OjrKeAcEi/E9cmXlS8j6Ls0/uZBDrBh3PayxMINsD/\
swraXL1xTjDw873ppCthfdiUdSS7EYl78mNGc92Z7cu5rXWm8sxr2GL6mqku0NbVlcu66E85HXA9qy\
HMg31r9FXi9oy5JQ5tS8mbye0JblQeqCD43k9W8Lsji89mQxfmxt97oWsn8I24t76J0vxl+\
l7dlMu0oD0LZl+\
u5h7ntRNMA1zTWyJL0YL0yfsmldJA3sfIZf7csvxoeLJ3pbXaSBkWsVecvqivGDkizvd5L9F9q8JHb\
OXb/JnQZsuMKHG5lL8HJ2j13mzjRQOKz/8iVXCV6j2Qn0HGhge1I/u9yiEtyohC2q8QAN+\
C55tbJ4Qwlep3py+\
nsdGmiamCfbq1OC65s7DQ1p0cCifjelifoleNeaCTaZajSQFzthh4ZtCb78hmdJuxwNQCY0hxrz1ou\
PBqCtTNZJb1WX2TQAbWXUz+pQdHhoANrKZBkEdkUz0wC0ldl/\
M2hzWU8qgLYyFyQzJhpHpQJoKzN3hGJnfyEVQFuZtEV8d83PpAJoK5N+WLuRyTUVQFuZ9jsKQo+\
3pQJoK+PVk7/rNWsqgLYy55fddjvwLgVAW5mSj77zyp+kAGgrw/\
K4q1OmPQVAW5mQwzJzJ9NSALSVcXIX78rbkgIgA8tjz+H+\
1i8ZQFuY3P6O6b2uyQDawrhSiNICq2QAbWEGnS5ky25NBtAWZss0g+\
0HZicDaPPiTnspNBSdBKDtSu8uJ/2dyYkAMrZm+\
yXWSsVfBZCBDXiQfCOo9QqAjGpgnk5VOHcUgIyqL/\
snHnemKAAZVTM2denmwcsAMqr72NyZs7MuA8ionrk0KrJO6zKAjOpD4UQDa89LADKqN5c+/\
xjwKgJARvXMwWEdRd4wABnV9xP59+Z+vAggoyrSf6EAG7oIIKMqN5/\
N0RVcBJBR5bPErfLNLwLIqFr1asYqlYQCyKhWJs6Q2O11AUBG1TF53SSFlcEAMqpvL6nNFpwfDCCjq\
met6zWLIxhARnXJoTh8dU8QgIyqy6WL4utCgwBkVC3tNDe7TggCkFH1rT3vZvUwEEBGVaAiOeLUUAC\
AjOpkacUjlh0BADKqGpEbB/\
fcCgCQUeWPou3XTw8AkFH1eO5Q8sYpAEBG9XRWwhHnyQEAMqrc1oXvO5zPgL1Trm9adrIRj3lRnXHZ\
8AwoeHP6ovSZRjxFMHC5s/oZ4Hpz7cotoY34hw3759jNPANGbS7sPpHSiC84vr3JNvM0eJe/\
Kf1pUyM+Y0eJ9sVn/gAyr7WryjZTjp4CkHmdPGB+NIR6CkDmdRu+\
i6asdQpA5tWi9G7O4PxTADKvrvIPH28s9AOQeWVfl6Npy+\
wHIPP6yo5XLCTSF0AbhXIPfwMmX18AbRRKppU0e9r6AmijID3VZ3Wxmi+ANgqCT8+\
7YM99ALRRsM2MWzx9kw+ADG1WN1fN5WknAGRoj3d75/R+Og4gQxtddj177aPjADK0T/\
DDSXyVxwFkaGU8c5wKjx4HkKH9aH9Maf0TbwAZWrvpnGuedR4DkKH1YU3oMBjwBJChLX+\
ZHHOlzRNAhlaYuBYzctMTQIbW6NAavuw0TwAZ2tZagYpqZ08AGdpdidwdYjyeADK0d4SlbP1VPQBka\
J8tkmuOjnEDkKGdcL9hEPi5AcjQilxbEjZi6wYgQ2uZgjlGKrkByNC26bBd+\
NjnCiBDK6ajsq1dzBVAhnbp7ct6e+ucAWRoZ4lmcb/\
VcgSQofX3FVmtu84RQIZ2620sAIg4AsjQitjlpxexOQLI0Er7BbI4FR8BkKH1dE3TT5U7AiBD+\
27r7LwSqcMAMrTJ10Njq3TsAbQVYO5YdPG2ij2AtgLrffZNuSdjD6CtQKCsyHbh+\
fYA2gr4MaUIyvbZAWgrUKavEnLYyQ5AW4EXbPkZHEm2ADK6q50ehx1ZdghAG4BQd1eb2QsOAWgDsPc\
Y84TSqYcAtAGolzBSWPvGBkAbAEG3+4yEChsAbQD6+\
tycjpjZAGgDYCzL9kHG2BpABrh8b1NnN2EBoA3ANh9jZflUCwBtALLfrNdOCLMA0AbgtMEE/\
iQHCwBtAJ6clBTfI2oBoA2A8I2pxaYRBwG0AQjqzM1rOHEAQMaY8mykb4eXGYCMMY37SvjqQ2YAMsY\
bJn7o4zMwA5AxFpPY8GkRZgYgY3x/\
z4PshnemADLGHO5Sz9sOmwLIGJtvfV7E77QfQMY4X1BSP9t8P4CM8c4pIfe2794PIGNMDc83K1q7H0\
DG+PDkN/NFP1EBZIxZJGos9vhSAWSMY3WYknKdqAAyxmol8zgFDlIBZIxjmqQnzdlEBZAxfrdK8XoI\
LxVAxtjpuXetzkQqgIzxzIf6qfPfmADIGJ/ZFRFU32ECIGNsvtDjROEtEwAZY96o0WnZhAmAjLG/\
2COx3HQTABnjP/hZ8F9jjCX/u4wxpX93FuXRPdzWIbVw87ZF/bjtnIDCux+\
eVf4Nxngdy7eMMbRKgIzxklC9Ke6d5xFjbHPXTmjp8HnEGF/\
AGeJR7EGIMZYbSJ27TDkIMcbCOkIzEwuDEGMsce6afH5eMHZ+\
fceGFbu7iOXnhJcx3wzGmkYHB4S3dRFLV8us39ERjG23YV08V7OL4HxpKCb6Phjbs2ttBEWmiyhxSf\
fywkIwk+WJ/re4u4gU/em2j8pCELMsOT3RWaD7AmKWV67dcrrh+\
QXELDt90rMLZgtFzDI2d5BDd2UoYpZfhAVdyHEPRcxyyk18jeDii4hZnu036L/\
SNQxbZ5U3I2bSXeLEuY+JRoFh2Ba/FPeVE+4Sk/WnayQnhGGuxQE6Gu/uEK4yedZuzWFYg+\
SuUffeO8SNoxp3l4iHY27TH2gM594heNjKJyUNhSMG+sTLrp1TrCIRA63QFHzmyPFIxEA/P/JW+\
mVEJGKgTU6ekJaoiUQMtNieB7q05ZcQA21/\
ndut7vElxEBrxmccEFGKQgx0V4yaZ9unaMRAzxR4WruJOwYx0ANLCozr58cgBjpeoffCR9kYxEBzDB\
2OfmcfgxhoxzcUvuOPYhADDXKNGlWGrmChZl0W8UfI9cctbh59ewVTzY+\
tSbTtIJjUr9aWc8RiMQYr/\
dPMOohrzhNXeYvEYnuTlTmBbgfxZq3AghyLWOy2gjVHm2gHMTpN5DXLi1jEVE8zvUa5zh2PmOp2L8U\
BF4F4xFQ/vnzmrq50PGKqdZdHbVfSj0dMtfvFJ0281+IRU71p9s6wSN2riKlmb/MqGriWgJ1Oi40/\
JdJO2KrL39pdnoBNpW5qEBBqJy6FKDX2diZgM2qjl22Z205U0hrEsEmJGH+UOiOVtZ0I6vp0n31/\
IialHCJl2tZG1PnFn+YVSEKM9uE814aClGTEaLful3D2L01GjLajN+\
8Eu85kxGgvc9HiP86Vghht2SO+LwgycICM9n2vo2Gxq1MRo+\
2oXuLV0ERDjHYDbW5KyhMaYrSnpUvSoyZdQ4z2+/\
luM1oVriFGe1bF5rXutGuI0R6atkr6gFoaYrTNDzWpLJFMR4z267RliwIV0xGjbdTKsYpbJx0x2vKt\
85Xk7NMRo11j385rcj0dMdp5W49nca/PQIz2juD9ZcpGmYjRXlux6/Y7+0zEaGtQZ9iV+\
mQiRrvVR5sRmJqJGO0tcSzaC99lIkZ7NH5pC9OFLMRo05cux053ZyNGWyD64S3nl9mI0T7+\
XLTSbVIOYrQTAWNT6eocxGjrVSx9sM0vBzHaKYo3rkbKXkeMdu7b5e06iblYwFuzzO3iLcTIPXBuFj\
0X81Ctjnot0kJEdM3Ve87IxQy6/V1k+VsIfe+kE8/Zb2B8vNMkCie1EA/7J5+\
afeAGdsllfkRpVzPB3Lojgl0iDzHfoiOib+\
Y15CPm24pF8ey64XzEfIvtmORpz1qAmG9K3vRCEZkCxHzj76nnMiILEPPdcO3OEdy6EDHfzNP7Ht5c\
TCBG2+rT5qvFVnTEaI+YWVYz3OmI0V6ydavkpwA6YrRvd19+7ZpJR4z2+ixiv/\
xbOmK0s6wzJrf7FCNGe3vDjjoivQQx2iGd2yNqZMsRo23Epm9YplWOGG2+MwsLbxmWI0ZbyReXn+\
xXjhjtadJFDmod5YjRnnkj916CRwVitBcXnd8zs7USMdqzJbdGnku/iRjqmc26l3Y/\
q0OM84iKkdsetyaU50qhOSpnjV8TynP1VnVZL/\
eFJpTnapmXumxcWhPKc3VD4aODXU8TynPlLlHraajWjPJcpc+o21cwsQVLa+\
KqtGqpIYaNqTrYtBbskESfmV5NDREQRR1OW9CCvXgQnCSXW0PsnSNUv391Czaq93rFy7M1xL6dDeVc\
hi0Yu3Le6gN4DXGrZ8q5tzktWHVUYPNOqRqiZJtP1T56C+b/\
4cBhteU1hH52uV36zRZsyvV5uYtn1RCafs9yZnS3YDNF3NZ2Pb5JyNSWfWxla0VMN2fNXvVnW1tR3q\
1w84PcMXtbUd6tJhGjuFX7W1HerYvb78i/dmxFebfm33O88iyiFbu76gE+\
f91NwiWS8AqLa8XUdU85SkrcJOydfCfy01qxBcG3hvTn3SQW0nvrAGhFebo2VCzkWHe3FROXec5a21\
tNSL40TMnra8XCdgTJ97ZVE5rHw714HrVi1qEttKml1QRNMMtZZbQVmz13zznz0GpidVyLQs4MBuYl\
977K/XQ1YXE4U6R/\
HgN7uDuSOcSrmogh1M4NLWJg9PAuu2KLasLbYAvVbAUD5QWbaGvVs1qRgTXJTzgrIV1N7D76yv6JKg\
PD9OMr1JZXE9leYScdNRnY9MuDa+xnVBOlIt3Jz3UY2FHi5CG/\
SdVE0rx6q94dDGywSyQp6lMVYcZw54vew8AK+\
C3n3RqqIrxPFyW6GDEw4fXcuj13yfVzMsVDqQwswPCa/9vGKoLbbinlqBkDe+\
epXTalqoqo3Uu1ED3IwKgxzz4IAXL7U3mVMZYMrK44UHpdZhXx6s4J025rBibXs8p6a0IVsTdFNqz3\
EAOLZWm+ahZZRYDl29JpdgyMe/\
Hh7qOBVQTPA5v38g4MzFF51pxgnypih8G66nOHGdh9k9wtya5VxOUIT7PEMavY47v86IeqCHeWpYu9\
HRnY9bh3xa37q4jmZTIbFjkxMIHy8NFHe6qI4PI2AQ9y2b9/\
3WrWLVUE9P54NfGuxVxVsvxKqvPH1hsscY8TX1tFaMyTqOUjl6vV+O+qilcRWsOvdx4lj7/\
ajD5TT6iKOJUWyxJOnv+Sr9Fmu7lVRJi6I68DWT6ORBbfk1OqiOJZj+\
s4yfLbV8UWXWatIrBqwk2frN/dIZW32W8rCQvxIX0Lsv7qkwYkah5XEh3SKddXk+\
0DNQqe74KqcywYSKNQmnHU/\
pM5A2kUyruT3jCbMrA3C6btACWVRI3OSHSRMQNpFh6yBufJGDCwhgMlL7RplYTqVszfdC/\
ZP3gilMKuVBKtuhwGm3cykKbhiHLeSuXNDMybVVj88DFy+1Mr8jdrMLBnSR+PEo6VRFx8v+\
lUFbI9Xl+bv9W4kqizforRZBmYzCXfg+E7K4nFSmwvT64ir6eyYV6vFlne4+96ZpH9FWokmsFpdzU+\
BvZAZji+aEUlMT+lPmtgFgPbfrfkJYdgJWEkqbJaZioDE1/\
ucD5iciWx8r0n371PrVhEvdb9PuZKQqbeg0fudSvG4SgssfJNBWEfKLwbf9yK3S9traXfryBsa3e91\
exoxTYfTFvAyaggzh871LSlvhUr4DlpoXurgrhftmUKU0UrFqwvN2ngegWBBQqn7ExvRZqNrat3Z7d\
6tiLNhuPUnuLpDq1IsxHlvQJ/\
btqKNBu3DOL8L25sRZqNd5P76FY8rdi8BjnOKNEKIsPm0ql0plbM13H67qFFFYTYxaUd5561YIZlpa\
9duCqIuj6RBUvrWpDGY73ug6IQ3xbMcwLF60FLOTFFulAj3aEFe5zMqFtVU07YvdjpZ2zUglW8OWlV\
nlNOtLFu3eQv14I5Bz5MHD5VTjwybuXs6GtGGpHKG8uN6pc0I42I6UOXlw1TmpFG5H7+\
YlWb101II8JlYcTiWtaENCKcdb37q/\
Y2IY2IeaXx5ZtHGpFGBNN2k964qxFpRED3hyQDuUakEZGpT9qvNNqANCKJS9cu6j3SgDQiT81UzNbs\
rUcaEZFRbfMy6XqkETHZ9YC9e2o90oiMKuZ3FpTUIY1Iact7c67FdUgjcqduYtvZyFtI43HCVFi8Ia\
QCaTwy5fTVI4QqkMZjynbNJK3McqTxWH85Ymj/\
zTKk8RDyaHnj9LgEaTZkjt8wc6EUIc1DAHWExd4kFWkepoY+\
47o9KxlpHsTnZSutrkhAGodu8NRizdxYpFnw0PFm7hMMRhqCpbouci6GgQAy9trMojxDETcAZOyDtv\
Y/PX0/D0DGfk2oRMveZQUAMvbzaXdtDPMAgAz9zv2RLNde0AFk4ot1fZpr5CoAZNRTuJ7x+\
EyoB5BRf7OGKYpFrx5ARp2HPnTwXFY9gIy6wUQFSYZxA4CMuoCKcWxzcSOAzLnDNRYQ5tECIDNeOIG\
Xr+5BB4DM+KwmUdkFap0AMuNTprsvFLrSCSAznqS7RWLn7jsAMuMm7GL4k9K7ADLjwjM+\
XHlf0g3epx9N+Hg0n2huv8S+6kk3kEriHp1mnk/ctpLGROfeAwlhYlFr5fOJIpGYgwbW98BpF6sH/\
n15RI7AzCnRM+8DyJwbHO2jT9nRAyBzviTqeXWyWw+AzHnTicy1T6/0AMicD+\
JqQwef9ADInJu9bvnA5NULIHP+\
5MYLa62gPrDkhts7X3oukTVr7a6srD5gkD5ZKzI5l7DX6lic3NQHGqNXjJS55xL61QXXFKf3g1wvy3\
WzluYSp8qsT4z49QPIrMcvjbshYjwAILPeL6wm7OIyACCznuD0zkLz/\
ACAzLqtmb6cKX0AQGa99oF2g9WsQZB1oFeN/\
XoO4Sl94EHU8kEwYtVT7hWdQ7BPKq7UwAeB9ZF7pUcO5xCtn/\
SlmamDADLuz5MlaAOJgwDmxcQXsScRNwYBzIt5jquXzl41CGBeTJ/\
7hibDfYMgKpKxtjwrmxhYKXfm2PNBcDe6NU/\
hcjaR8CBumh9lCMC8mUCrJo189AOhtCaZNP1sYm5jTeSKxUOgJaMxR2RDNtEsNcl/\
QGwI8F5vkIpblU2Ifeh9ySU7BHTy67P4FmYTDJ6TeyMVh0AgUbcqjD2bCH//\
Ti1UcwjUldzO4H2eRdxMWqz2QWcIQEaffR1nF4vxEIB5OXtmH8uNNR8CMC+\
nSg22hGY9BCa2Va9w8skiXoItd/\
gchgDM09ky7fX5t05DwPte5XKrvVmE1uMwzrVHh0BxX0XSoGoWka7Uw9nrOQQoD8qXGUtkEXnTc41f\
eA8BmNdTQERz6KDPEHAdKV2yc2IWsV2Hz1nj5BDIe1US3/\
A0kzgwacroWb8hcvwVC2l1ZBLg0tad604NAZlP9NiKskwCepYdZqELKqZlEjPvp7hVkdtnsRXFFIRl\
EqsFZJWSyOONcBKLZI5nEuf7ubqfkeeDeUS9Px6lRh0fAla8hXyiuzOJbaF6D7O9hkDK7IJL8cqZxK\
awp0GS7kPgwfz8BYtWkvtbj56Y6TIEli3Kiwifk0kMqoFnhoeHgJnQjXkzWTOJiupXnDMODYH4Zblh\
AY8zCFy+e7r4wSHQu+L6HM62DOLJ3FWbM02GgIBkTujxkgyiYNFizst6Q8BAOnsWhZZBvKozini+\
bQhclssKcQ7NIAL3zNqXrjUE5itlBFlbZhBZwrXcB9aS/\
UUtffqDHRnEYyGjNqoE2V800wJNFDOI4tM+ATXCQwBqLoqsxeo7pwwBqLl4//pT/\
z7WIQA1F6579y40fjMIoOZCVn/1m+G7g2DJoY+\
GrzLSiXuTMpJt6wdBqVLHqfuX0okg8cwYl5JBADUZa0c235gZPwjC8w9xXDVKJ3JGj8xIChkEa85sW\
nV+UzpxcqGYWPGJQWC7it3noHA64T0su+EYOZ6ghmNrmv8avQWDAOZZ3VC4Yb/\
IpEEA86w2VForeL0aADDP6pytBjrNtwYAzLPK0lTtsujIAIAakHcqtYNC2f0AakBKe8+\
acIX3A6gBocfVLjjt0Q+gBkTHUOumoUY/gBoQFasj/o5tfQBqQASmrre36O8FUAOyuzhu+rXS+\
wBqQNpzOrMUIu8DqAGhGYYqnXa4D6AGZPHV+mf6QvcB1ICMNnJGz/\
O6B6AGZPY6r4N5Et0AajiM9oyKVj1pB1DDETuwd7rrhXYANRyihYvSl+\
DtAGo4YrKr0pzOtAGo4VDVCbzhuoIBoCbjntMkuws2zQBqKmKamQYlltQBqKnYr2DpcyDnNoCaChHu\
5/0KfLcB1FTwN9uvtn9+C0BNxdSQkFsX4m8CqJGIajHmKF1XAaBGon+\
aZPmhrHIANRKhngt3qa8oB1AjMfdJY4S3QBmAGolNToMPyueVAKh5mL0ubEg/\
HACoeeCaYXrYJqsQQM3DQ48Xdw7WFQCoeehW8lBW5MkHUNPg3TivTff6dQA1DZ25Os6RgzkAahre6C\
1jTF2QA6CmQZd+8m7w2SwANQ2Do5k+veHpAGoaKAVt+zYPpAGoafCYLVC9QDoNQE1DwHvNcx/\
zUwHULKSxr9w78VoCgJqFp1Y83nZuVwHSLHgbZbPrxAOoWZhaF+\
3fMj0WQE2CgujaAwrtlwHSJLQeoNi8jARQk8Aft6H27cIIADUI/JGZCnqRoQBqEBTMZ6/\
ePhICoAYhqkLx/cC2YAA1CPxaGe+\
4NwQCqEGIWkLRIxgBAGoQihzwVrfHZwDSHHRb7MylnwRQc1A0wgcW7fQBUHNQdFXA/\
TjXcQA1Bh59kWf9b3sAqDHweHvgbVKBG4AaA49NWz5VzHQGSGOQK+\
UXkHoYII1B08MWAU87ADUGHps0J4SfswFIYyCvslIYHARIY9B9tlelcT9AGgMVjZwiIyOANAY5m/\
tc2vYCpDFo4NSh398GkMZAYcm1hSWbAdIYpGgul05RAUhjkMtcpMy8FiCNgc1VZRr7CoA0Bh6jH9Rc\
ZwGkMfBgmrdA9FnhF42B2TDHOaLwi8Zgp7OCKDtAGgPxNLe5JwUB0hgwKA9N9q4GSGMw2JS2c/\
96gDQGvY8OOflpAKQxcD32cNGtrQBpDESPMSdr7AJIY1BurXJb3wAgjYGPh+\
adQBOANAZn3fV2rzcHSGPA6cq24IAVQBqDVYtrXCbaAqQxEFvC08nrAKCmwGP4/\
CK2QRcANQUeWxItglPcAdQUeLCbtte2eAKoIfCwVWJVlTwBoIZAIaBzz7TTvgBqCIqm6WyvnXDqi2Z\
g71lh/aUBSDPg4bsnYt+5c0gz4LFIs3EZx/kvGoEJi3J7FocgDQB/WEK+\
Pmck0gAoyCdc1Zp2GWkAumc6+kwKjkLM/9SzqbIPymIQ0++x12NKkd9VxPRrb9KV2lKXgJj+\
p3FBkQ8XJCGmP0ozNWJSfQpi9usq7xyN00hHzP5gooZwDVcGYvbXzG4YzG/IQMx+b+bdk83mWYjJF/\
1wzP9TyXXE2E9d1yw3h59AjH0Cm8ElzclFiLGPvWd8UNC/CDH2ISuN6D5n6IixZ6zki/\
OJK0HMPNaVFakxqxIx79M2CLyufFyHmPfSuTSmM2vrEfN+\
Yc6nrGTfesS8r2E3ntMn2ICYdwfM7tM7vUbEvK85K23x6U4zYtb1RS8FLXrdjpj14zu2JA+\
pdyBmXcLi5ZbYsA7ErCtZb+Xsle9EzHp7aoCy+LE7iFlf8ODFmUks3YhZPxohazzp4H3ErK+\
7qnJlNPA+YtbfxK2/cTXvPmLWMwOtzy/\
l6EHMeuAqnsGQmB7ErFtdedHoUdYLYN5OZ3ARrB3sBTBvJ3aRUnd+Uh+\
AeTvLD77z593UB2DeTr1sW79ldX2Iec/zoLiuJfoBzNs5cvl+\
14SOfgDzdtZXLTbRfdUPYN5OFtaKbY7LBwDM25nFvfVtztkBQJcgeJ0M0/DrfCu3uF0l4x9+\
lvZtR9JwnnlvPQrBAKj84Gcy5Uoa3s5kWRw/PABgns/MlbqVH7BBAPN8Ou9lJNttHQQwz+\
dLrqH63WR8BvN8UlwsBJ1ODoIOw8c6DabpuOQUCQ9a2CDw1Zacc80tHa8LwL22JA8CmAc0OHXB8jvV\
g+Ds/I9mKkQ63haoiZe2DYJ1nIpiAs3pePXm4MYZg4MgZLAqt4OSgdcY6SW/ZB4CSq2Tj+bOzCCvT/\
hFLzJefVq2RSlYNANPMDqhd2TeENIIPC47wRNCxrtQI5Bi6VAfQMbDUCMgnjin/\
pXyEFDQ3BmaEZqBR/GOXqog42eoGXg6430d8/YhEDCVufpySQZ+10OPNYGMv9c8bzGa2ZaBK6XT7+\
SQ8Xl3c/Ko/2Py+PNWcqwk43eoMfDXmSY3lYzvxcO3rXCek4m3n8CX7ybjf4abSPlTsUx8i/\
XzS1zk84GHwSd9U+VMvDK3UX8J+fywVKnp9Z1dmXhh5+O1SeTzRZ1QYoCudSYuY5fPHUw+\
fziyH1120zsTf/dm5vUB8vmEf3hr8fqwTHwFp/L8GPL5BWoacmcPipaSzzc2ae+\
fi5Vl4qUn2bu0yOef2efr/ePaM3EhPTZxnFwucogXmv80E58tf3lxKLm92U4XEDghC0+\
c1FW5kzze1LXaOzjmZeGr7y0W9yTPl7tA6Km7eBY+\
cm62Aw9ZHgPKO99XKln4tdC4Gxxkedl7ahdZ7snC5/u9ED5APt+llV3J67HJwi+/\
N34k6TwEdiY46uw+kYXrP/RQNiGfDymntB7WhWfhseEfD3wknx8TLAWOq6Vn4TJPU+\
OZDpDPH9qvF4DyLJxts72yFfn8+UayJmd1ZxY+\
8fX6UOW9Q0izMWNCatPKjUNIs8FkzuKrojSENBss2wpOlJPPv1CzURMlpsYlNATOUC/\
12tpm43vmrpnUMGcISKvbuQ35kNtXL5s3gXsIaTqyQgNts1+Q/\
f3pMzWtymyco179yaqBQdDSUN5dcicbv6GrJixA9l/hUJtp6ew5+G5O7LB2/\
iDSgOSVSN9ndxoEVhMucjPb5+COrwTV55gOgpmDllcdT+bgGislrC/rDoL9qbPaqFk5+\
NL5PQ5TxQbBxDUH1ylMuo4bGVIZl9oHAG2uQnMO33Xc52ZcwOHSAbD9A6/VCqnreKNQ6/\
GbqQMgvhhcnmtwHVefw6v57OgA0pzsT7i4XWPeANKcbFhbmfeEeQBpTuQ3tD0WedCPNCfaPHjk/\
uv9SHOixuqQwK3VjzQnMgKdS9n39yHNybkmWT5vtT6kOUmqmRoZv7QPaU5cLnne6BnqRZoT9aT6HH2\
zXqQ58d6nImSwvQdpTngP2fXXSfYgzUmVouGqUe4epDnpnY/t9yy/jzQnwXkWi45I3keak9OzLs4U+\
NSNNCNVizqZcgY7kWakm3kGpeJ0J9KM+\
Gu8izsn2Yk0I511b8MMXDqQZmTkxcwD8pPakQZEeb17YiJfK9JwpJ2UXrcEq0cajgf6GpSN3XVIw9E\
4s3aGr1cd0nCwF8S+\
iTpzG2k4xNOqTetja5AmY2pegEDCvXKkcXixuoptmuN1pHHw6H3sMUcqB2kc5os3FBg8z0KahoBzQc\
9L7DKQRkG0S7y3kz0ZaQY8rlVnOW48ixh6hWUr1rbgKRhk6HfO0tc7akLDIEPPfhp8aFRMwyBDP2kX\
W1G2fgYGGXmLQ4lNszxzMMi8UxIFzp60Aigv8QPu3Ze7bMoxyKDTHqceUmkvxyCDvrt7phuhWIFBBn\
3Lp2d3nkytxCCDfitf/ZpCTBUGGXQvtnLttNAaDDLodyOCE/Y+\
r8Egg37yDF69UOsWBhn03bXCqX0fbmGQQR+\
tv07x1b2NQQad4FGMURiuwyCDrmdHz9Tjqccggy48SjflkKnHIIOe5Lf2w2TPegwy6Ck+\
cxWbpzRgkEFfdS5zKm12I7ZQdmTeWc8yHEjNqu2SacTMAo9OOXqqDJfClkrEb2/\
E3itfeLXnchluWJCQMBLYiC1OqiydVVGG80rtexUysQnlcW7jjvY73N6EQYZdTNG2EH/ZhEGGnduY+\
8L5Kc0YZNil78gN3FFsxiDD7q52o2dKbDO2+Dpn+\
Lkj5fjwhCSR9fnNWNnG2692epXjitNOnmJuaMbYHbfTBi6U48UJUw+u+diMQeZ9k3eGr/\
eWFkzcZKlTza1yfK99wlENagtW/3a46TyjHGcfHlWNd2zBeIXs/AUel+PhAtFyApdasDAXz1F8TgU+\
s++mikJvC7aOR2UH2+IKnF9BzLDqRQt2J549s1asAj97/Iz0Y9ZWjL/h7AE95Qp8rVgOF/\
fiVgwy9hlxpmb5eq2YOjCUUnSuwK2qNLbKHGzFhnSEznEcr8CLKKJvdR1bMVH3FPXQMHL7puhjjuda\
sVpem9h9cRX4SaYdD9wjWzHrpFWUJWkVuNfRtbyiia1YRnPe9eyyCjzqrG6uA9GK6R48Ot2trgJvie\
3O5q1uxV5SFK2VOyrwu+vWue1pasXWiFYJNz4ly2+sbt0z0IoBr9bgp/\
Mq8clyL5hGJjEwg9nhz64LV+LBE9Kse6cxMCaavpa7RCVeLO1F857LwJTb+li51Srx+IxDl+qXMrB+\
q0SD5i2VuIumQq37Sgbmw2pZELG3Es9f5lpzV4qBVa98YbfcthLfwuu1ImM9A7Mou357xLUSv5Taw7\
lUjYFN3uOyPM+nEl/R3XJty0YGRnuK+\
XgGVuKnKlhaVm5hYNonmHvUIyvxmaeC5Eq2MbCReeXY1IRKXNtY/\
CLXbgYWlH4yrDWjEucueJXCpc9AecLfShfeWUVloDzh9N3TnZeaMVCe8HfKg6VdBxiY2CB337n+\
StyXuU9ntyUD5Q3vLpcpCLVmYNNUcp/R3lXiHsznAsMPMTDv51yOhaxV+IpT/AeN7RjYq2jDjze5q/\
DQ5sC2p/YMlGc8ToH7kPJhBtb+cRLnkEAVHnxIvFR/\
7Ht16r5zr0WrcEk6J1XBkYGBPVmzJspU4a9uLO4bIpclJnFc4l1fhbvGWzfvcWJgsbl6iwU1q/\
Cb4pvKQ8jlmaYZSRLbqvDtPKfVwsll3xlsEgr7qnDzWsNBc3IZ5jXfdMpMhoVctrBNk9ezq8L5B6KL\
Tcnj3+WfUHrQrQqfNWwzK5Qsj/btXRrOPlX4ZPaLxUFkeYvdaHW+\
56rwbYLrtPUdGNhqUZYdF8Kr8NUZDM2XZH3j23fciYurwg171RR22zKw2SdTjLOuVeHXO/\
Ovn7ZhYKdkmB4U36jCY94Urg2wYmAf+7bZ1JdU4SeFVmwzsmBgNkFJr7pukeVRXufPSrb/\
fcVPro9bq/DiizZmR0wZmO4zHZYP96rw5ZujbPJNGFj55YSTnA+r8Cfvn4rUGzKwNZs+\
TJn7qgqvUW6Zf4O83jBv+yqt5BtMOxnYmV2jMSq81XhI+PuDxroMjMKuvUx3YTX+\
VPSKyUVtBtZr8lbqkGQ1Pm9a/UpvdQa2ffqmAvd11Tj/yTcscsoMrJIeo3hGtRpnHMkkZykGlrpw4+\
bk3dV4B8d0KWNpBsZ/K6r5hkk1/\
kTZQdhBgoEFurzcU2lVjZsd6t25T5SBHWZcMuvzqsaNX4ragEUMDAt85smXXI237nhXmUWOrzQFVXa\
x7Grc8Frg0hBWBibwJOzMOqIan6vFFaTzsRWbuFE5fFdjNX5B6hTV5FkrdnvChazzo9X4ze13rj5ob\
kV56S+l91Y8DG1FeembrzBfmh7QivLSKy/84DTbpxXlpefl8NoD7FtRXnojlwPiJze1orz0N9r53/\
m9b0F56RWZGvlPqLRgewtVrtZk1uAaC2zF9WRbMKGE+uBMUINvzqQwLVrRguW6Ddl6NtXg+\
0Q3HbHhbcHuLp2zYgHlFq58cqmX7P1mTMTdMVp3xy18dP+GFRXOzSjPvarT/l1rYppQnnv+\
eZm9SsFNKM99hdzSSeq+TSjP/ZUWM661Vk0oz31boP6yBtkmlOc+\
9WxlxIvbjSjPvfLAov0H3jagPPevNY9Z7NCoR3nonRxtD+\
7cWIPy0Gsomp1JkKxBeei5FZjs2OfUoDz0c98INrzuu4ny0EsUurBc8LiJ8tB7m1Y49+\
dWozz0wqtYc0Wlq1AeernXSk9WUstRHvr+\
rjxl2S3lKA99715fnq3y5SgPvallH2fGjHKUh54SMnP78ooylIdebaLUdqYVZSgPvafFylOLWUtRHn\
pBp+ULpbroKA+9eq/rjZhbdJSH/sxQ94RFBXSUh95+\
JMpv80U6ykMf37tlhZ0uHeWh3yCxfvjmrSKUh77r5sjIs1ACg5qclZvZ+eudCAxqcuIAP+\
vt3QQGNTkXq3eFCC8gMKjJeX2sy0jxCsCgJmff4/t2s7MLUV77upcNuuGP81Fe+4wPzAdiG/\
NRXvuikhualbn5KK+9t6f+PINj+Siv/VXmT0635uSjvPZVS3uST2nmobz2O2N4V7yj52Jpftx+\
x6Ra8GfZIjSJpFxMbnOfW49cC+\
5A65TyDMzFNjMCqVdUWvAFnNlMZsa5mOODR6sF97TghWbay7ZOzMVucsc2CpxowesObS09rn0d5cl/\
nvjJtullNsqT3yGfeFLjfjbKk9+wNXdNY202ypNfxy64YH5CNsqTv3XBI1G/\
PdkoT36976sXlWVZKE/+xfQZPvuuZmI55XNAiGcrfm6d5Gv2kEwscZasWtiJVlws+\
dG7Yu9M7MyNI7uiA1rx5a83uZsZZWK7Prxwuxbbil9bZlFzZGEm9tj7SfnNmlac1z2EP+\
xiBsq7P5utdvnx8HSUd9+tv+\
4iwy8d5d2Pvbtqm7xzOsq7zxs1y0JuVzrKuz9YESnENDsd5d1XwObppoemobz7e1blaapvvIYxm7oV\
Hqxj4I+LqZ8+il3D+LfnOnc0M3DlwyNsTTzXML3VYi/zuhl4+\
KOhEEYrDWt5OueB0ysGnmHiuUKdSsOqzJ81vl7UhkfFrEyMO56K8vg7TzmgfawjGeXxxxIqJ7iVJKM\
8/trpfJ2nk5NRHv+pb9rOvHBJRnn8VY+t8GlckIzy+Be4iXSVUJNQHn9WkyVGjRMSUR5/De+9+\
XO94jGoQdJxPvr8nHU8BjVIDnelLefqxWNQg1TEqOzWXxOPQQ3SI7m04cwncRjUIG2dv/\
Ceu2EcBjVI/AGdS1ZsicX8Jt59/86wAzeP9jyVohCLTSFUSl/\
s78CfTL4tslY8FpsrPkNn0IZc71DedXxKLLZyWpbNbe8O3EJP/\
Ojt2ivY7pZnyZEpHXjBdZMQYe0ryHeA9bSYl7teDAY1TarPw9r8tGIwqGkSmiHJGi8fg0FNE31u9hn\
OhTEY1DTJN7y+fK4rGoOapnmCzktcqNEY1DQxXWbi03GNQr4GFpeTbM/HRWJQ0/\
RJbsMc9TORGNQ0ad6uqOM5EolBTdN2Fb+\
FveqRGNQ0qYqMPPZ8FIFBTdNHir9jgFwEBjVN0RNFRax6wpBvwkY72qUZFqHIN+\
FE53MmrR2hyDfBgJvSHaoYinwTCk9XZFjOCUW+CdtrlFU4Ki8g34SIylcsL5deQL4JDw7wyHK+DUa+\
CWxzRc0S+oORb4JeQ5T9jqZg5JuQ5LmE8eBaMPJN2DTsntZrGox8EziCq4V4O4KQb8Lq5D0q5VVByD\
dh2N1n5sncIOSbwLow47hCSBDyTdgj9/qK/dYg5JtwVMhqb9L6IOSbkD09es1T8SDkm+\
CxuH5mypQg5JtwukTz1aJP55Fvwhwxt6yrj88j34Tt87cryN89j3wToF7nv6ZpWvVbn/\
a5P7q2jy1tdbCg2k0ZFzrZ2VgYOsEyjRdwgwnVyt7c3um7zcfM4XXNjQ/\
afSuaGtdLrXewt7Yka2D87dJ3RxivqyPVbrOtuam51beH2TBWV/HP//5kN1VbQ0vqT87+\
u7J8bsw5XzefjrGhBdXkVwf7pva/aIr/S6cZr/jYadRszU3G9GD/fqv/xcs8lfxDm+\
x8Ww2tTKnahiYmZIV+1+afqz8mqftca1sXXpraPecg/Ncrfr//Zz1c4o/\
7oxXfFpjn6wIrWZjb2JAlHl+ta+tA/\
W5jrrGKWxqimtmNqfjWW1j8vTbjHDuInQ3VmCwEue0XleEmJUNjsz/KMDZ+\
tK2PUG3HN1eztiCPNb65+SfyP9vNQytlnpT3fF871j/GzHeXf+xgqoYWdtQvf/\
2k84ztuNHQiGrx3d5jf2yytqKiP/7WQOX8YzdlKtlcVJN/Z14ZHyq/Hdnwev7kwv6r9d9OIj9pjz/\
fOn+69cZPpWPvBC/Eb2bEf2dq+9VB/+LU8J+ZYLi/\
Psp4nX8mpGWGP6nZGjptpB6mWvwxoNvwPzS13b+TyY7fCz+vn/LVemVDO7MfJqjxzikx/q/\
kd2UdG5RaVHsza5P9rD9v7LHNdHjHik7db+\
hgYa9o7WBlYmjr9C8vps7ULztpUe3MPrfEDzXStja3stcxd6aaj5XlJ4cYm+3IKqGh84tupjOT/\
EPJ2tqWnMbIiMBO19raYrPN+B6/6kfju/1kdP4qNvlmiv7JRugXNLJ/DF++HEmbvDn+ZIMvF/a/\
dgbmHxt6+njj2ZhTTbYbWjhQ//e2xHiPRrfPcck5/P+PUUnA0QlRWygR+jv34f/nUcZf2P/\
vRb9jgn5Va1tLlG3g6x/Gjjp+/9SlWpIj0n5M9v958oQn0BmLWIxUzakWJrrkQ4KFs87YPWO/\
ua2dvTKVfBjQGdvbjmpsbWXyeXkS5XMCgY1UU6qVyb+Oa37V5b8uJivcZHxOQ2X85pcJcCdtw/\
HsBT+kWkAbjN0rxn5govxwgb69+F/tPPH7nVl+3BwtTYStSt5qbMgbiN2PmR6+XRov2k/\
yPoxVUMXElDrWDl9uYL9JDrFq/L/GP3rVN3c7cwoa2ONDDt4Gvrv5/clUEzYhgX2Lg1pxW4mQoQu+\
Mt24bYV3qGZSTv9fSDXxbdN/lXjid231R/g39puE+\
HerxpYkf77uf18TU37ehj97Xhhfoerww1PIWCXGH1bGKvHn2vqXk+uvgtUfHoh+F+\
mNHVjR0I5saSsyjrEz//YGObbJLx7abuDjbQv3/e2963/LEP5POFL+M4T/m038zxD+\
00P428Dyf8sQ/k8kfPpnCP83m/ifIfynhzAL5Ydnw6kUFHCvtzA3tbIkHz1/+\
3Jh7KKS183B8vuXEOOFUSJ3p9p+/o26//t9x/+wPmL3u+eCb8v/k5eWZJMpUy2o9r9+LzrlS52UzQ+\
bm5AF+tNV+l3JfnG+P1etP1HYDfZUyx974L9Z2J++9f5zRf31C/M/CqozNqjJLvxnCzr+zoHpj//\
RHPHzkn2z7edOPYSPrx07+X+y9/6uCf5OBx5rPl1rm7/dd/+j3eF3bzX/VK3+1fenf7Nr/O6cn1/y/\
huF/Xzv/FWnGa8J7C2/uNJ208Y2srGhGtoaWhlTVSyo4xv/y8ldy9DW1PzXr2dR4aQ+//\
tn1qAWRneo9ePvcMZfC22l2pE/6Fqrmn9fAfiSaIPV+NvEsTH3k0Lr2Nua22y22mBl4/\
D1FPWTNzXfHFjV2spe1dDS3MJJZ2yn9bbmht9PF2ObKRoaHzS1HXu7/tvu8+\
uCjNdb19bQZPwOaGjxJXj5/ovU2KvyDWP3Hhtb6ucP7b95+4XunWRHQi+/YHW/\
e72mM7bxnh924fix93219tv3e2NrXX7YZsJvj/Btkb4J1X5Ror9yvK8is89H0xkrsYSYwfiS3vi/\
op/34fmhYVH1x/5RdLC3//zT+GUZa7uxzxT25jZjv7HBS/X1A8Lv3uv9NtbkGu/wxvZktGXxY/\
j8c7zgP3JUifHwb4XEd4f9Sy+UmP90DX52rs9fun42IX4f4373quXb76/jP/3u0+lX3/a+\
qVhI5WxJCZvbuK1ipX+1weVm3HbfxMNTetTvfv8S/dvPnb+aL/9K4PxtcI4eLJSdrMgJ6LcfRj+v+/\
xan6z7HyHyS/y73790AyUHW1tyshz/XqQzmfJ5nlMytFGnmpua2X/Zbfwb/+\
fdxj4jwoeTr3e3G9tdy9DUyny/\
ufH4sBlnAHSEv2rVPeJiq6TXrJaQEeUXF5MSl5aRkR37S0ZcVkZ2jd7P4gd0Q/pdY40Fz5+vI+XnI+\
2Xjxi/i72/+vT52xN8PzFzo0nix+9tO8ztzX52rxnrfzpU+/FroutkQ7Wj2hsYWTsu/ny+\
sZZVOUw2MpqNxnca+2fD/s+HYxlvHfvfXyId9vEq2VhYk+\
X8PH2O3fWVrC1txm5ZKo7kjGdnN1ZgFnhaHTJ4G6+DlvVh6g/Fg4Hz+LX6avdv6rR8fICQ/\
UrFygSxXovH+8Pno1vbbrAir4ahxXoLGzPDr4bzXz/C+G//xjT1F860zY6MeQ6O57K2+\
zK7jLf7jPERYG9G3ksPGigZWljAQ31u6+lfH3y9vb2hsZkSlWy8Hy76+\
MGmfrU1GfRYO9gaU3VmfFWpz5f0j1J9Oyt8F/x8E+CP3yMVrcn+afmrLX4az+uM9WslC3LgWJl+\
jsfsvrvrT/u6v5DdzNDW3sH287SibTjWCZXMxmY/E52v+rO17RaHHyK5b8b05+nQyoxqa25P/\
Vlki47025DrCyQxHu5o21Kpljbj74H+em9BB/38isnc3tDI4tcPOJNQs3y72R8xx+/jlp++\
CvojghnbSEJM+usQRu9PHfSf4IryPyK4+s2r/v/ZwZXvCvmwB1X3cVudOAUnyWntuG2YIOanheX+\
E1z9reBqzRpxGUnJsZBKWkJCfLXE2F8SqyXFpST+Ca7+Ca7+W8HVv5qm/gmu/gmu/nxv+Se4+ie4+\
r8RXP3mI+z/7OBq+x3B8OR+8ulFbeA9b4XnHdx2f3bjkE500T/\
B1d8KrqSkxSXWjIdU0rISUtLjb64kZFevWSP1T3D1T3D13wqu/tU09U9w9U9w9ed7y//\
vwZXbLw791z8vMsO1f8D2aOpCdO54G6hbW5iMfWP947y/34v539qL5ad7/\
bmaTh7v2GNfZbUMbQ9Sbe10xjbdK6cqJSmpA+8rf+pI4994x2SC413zq8P8sN83Q+tzW/+\
FEnOhEm80dLJ2sP+6wGONIPAZgxD4fNF/1yvhDPWzT+I/+2388J9P/cNo+3MakX+h5mD+\
cel7182xnccoFtQuvxOP/NglP09EB81tUBA1HgH/ZOr4BfzzNZL2LwKEvxtQjD+YjPcocl78Xbm/\
bpMfx9OfORPXlzN9p3T97zJRXxrzuwOwUv4EP/Srvf8GGPU3EMqvHpB+9mTy05H33Tb/\
QeLk66H6i2fkbx89fzJW/sxNaGyFtoWh8b91FmZ0ls/Mz36y6t/csbg+Xw0za9vNDvY2Dvb/\
B4bMqY8=", "fileType" -> "CoSet", "fileUUID" -> "20180313094233221", 
      "moduleUUID" -> "auto-f266c494-19f8-4", "authorUUID" -> 
      "a025d27a9b0b48e98cbadec917ab9021", "authorID" -> 
      "1:eJxTTMoPCuZnYGBIzEvMyUxMcsjNLNFLTSkFAFIjB2U=", "password" -> 
      "657885501654483425", "encoded-data-collection-package" -> 
      "1:eJycfeeaoloT7rkUEMwJc1ZEAXPEiAERFAOKCna3HS7tXNtxNQ32zPTes7/zYz/\
PbFtL1loV3qp6awnzx073+n//z/9xuOBAA3Y55aU8wQKR+3/BbVpiKppob7n3VWkaU7PDWWF8Qca+\
Bl6yrNFsMFamxn7PXOLAX32lZAjtU40CNaY/PxlJvp8PWYchLYGzbtbW3KYVZ+ooeYc8b8Eq+\
frLZTReOForZ+PgmfZcEX70oXhbYt3V2ZVlz+j4BnvxLdmp5L0X3zNaMaTtN+6i93AQVnv9qdRq7/\
VIz8OTiUy1bE4O97735BVCIvxCmkxsWP3q0XpH8IJnx6F4P/9ssZZ9WMOQ538bnys+\
WFojtPDrCrZClpoVJhPrcDT1bheSD8WCMSzTDk4mWtozm+GbaAS+wG+\
F5CWQjRvysKX05swUvZ0cMctdq5gbsscKdtueJtIvIrubSt1SqEDJlsG7e+\
hXmwhfaF3j3aJftsytR2+VGr8JqYe08q5MkcQ4u037rtFeINht2svEwWs/\
LWccVnakvd2zp5H1DNueSzcxO2KpqicyLS20MjGZqGMqd3OMeOa+D+\
bTxWPMsLHGBHVuvcCTiX32YeGr54Q97Oj0LPwwcmwm3CUi9HKZdaXLAvFOJrjQoTOJaIlYWPnJ5ITr\
G28I/O0AoFBLbDrIaqXtfvN9KLXlc2I8eBFJ+r5pGb/\
kj5w99jzYIljDhp54pZJ6y7y7GfbxhKUQFF07wph9fMmHG/\
AIH7OuagFZnx25fLdLqzsFm0ymSQtPf0B9tjW9RDDbi71Wx0/N1t52Deyn+NzvRc0Fx7ppZkC/\
l08pDxHEbFA4dN16sUP1SGbH2fSJocoUFKknmehcloK23LF6LLtfOjl5s6orHswBHaqx7dqQlqVGQr\
B/lqEKLHdVvpAjO/nJpH0ZnPe6tvhL05fjRf9oTMsOyRaXP3T1/6++Tyb5PulwOJaGvIvfncbHWV+\
x8FCXQEJ6O97VLtDhcCh3deIjPtivo52TVrbn8tR2m6WOyd2zZ1l9U95zvoCl92qIsyBnUcoVMrZ9n\
opzancUn3eaQTYetKNZwVktqMgoPhZbDpXR9c1X615+\
WISpfLdLs107K1vvUliHgjWZSjv6VNcejzf6s939vDMh0nckIQ1hA91Ge7bz1QhZeTkWv5TBfnP6S8\
696VYMkxVSkbhU1s3gNGhxsafM+\
5ZvvDhXnK0rBlXUhnz4hF0YKtPZHgqVExzeYOuBZRslyXHWkNahFy9bSyvDbSub1Ykb1KaVxqCEyZZ\
35DY7NbYIxPVp2HsOS1BFvcRFTbV5LmI7uky4n/y7w83HeSya+\
WyBVG2lQNGRMxJIH8lCT7gs6MUs2bAi52fGjdWnMTQ0a46ju8KqQaRdxSY/94+c+\
vZ2Y0WLg5b91MWQ5ov8+g5Dz2oW0ZoPjGVg4g/TLg1LnOJGmF0hUbrU2w4+2IZil+\
zQkFaJDLZzprjQvLQihRZPsrXAy+\
dFCD1XP2zWRTpLhWqOXGq1KabTm0UEYzZXp6upMYO6Viw5qEanwyUgxZB2ZMPqDM7P4DJa2Mf39enW\
F6ls/Y1dOHa1OWJ9LCiEszFi3UlUo3dLo57xUZ1ZuBpefDrOMkozOXwvLnw+U9xrjxebV3+\
LAMdQWYTRUEwo4h6oRMu93tYNTM0SOMVO+S1kd3GtzkkR3LeG3711OOXIcUeN98l93ZD2+\
8NcrMXJZOtL5zNutW4o7eglovXLQ4y10SN4MHufvcW7nsGplIgUvOmq1su+\
GeK4YPPgwZreYF9KHp1+l5wkjnJrMnFPJjEX5DknX0JZNEW92T5aNfRttRebPNsui/Peq+\
S6BOSoFlARRfKY9nqszaztMJs9f9h2+\
bzyxL24Bu4GcSuXPePJZPGfN9L0nt829L9t5AFNieU2pF7a7ZrW9SROEU/\
MkAbDzKbnEJsz1vbsKlZxoAGVF8SmvsfHdwu3vtq1UIbw/k0dDXFN2h1QOeuUf2+WZ6/\
0BURHsZDxl2z41Vv1VzZqnrg6OpQwCF0SnNY/Dtw7OZlL+W7HZz12p1mxa0jrBjU0+\
8YFaxU3BY2IerSHBeAYWgAusLxj84X0otCi7oFgbN9YhBGKUuOMe0PIUZwY34VKB/xFueVNUOHw+\
waymi8U9k4M6ZaZYZd65mZ7aUeci665FUblgNOBVCPOG3GbTtHQ3V1VZzHBOqzg9Zd8gz/\
m6jjVCRriJpOmEBOztsY0h4aKmhgYn4eI7kuYzd0XSytfSczOZcgVhYkOu5TahNfv4eC5HOQyftJHX\
w5UxM+bj0fxe2JgO8Y2qUFxGgzus+UtUqd6h+mmqDSj2iyD+afHDla7DNlZM9ihqBd2P4XRQU2dq+\
lEqIbnTk2SM6SpGWuuzlqo7hyFORF9C9Q3L/\
Ww8sy9hF7okGuQR0P5UzrVodlqMZ0Ru6HMKAy99S3MxuINNZBmPGq5ozNDmnzOZ+ICcUy+\
F63qkhprywr8cPSZmTpGSHZ36e8GLcq6CtTFiCN6j4bhXCzjJheFWMAHFM2QBhSOVvXVG6vW3We0S6\
zH/mk64Z9MKqyN461Nx2RSbJz3Wcd3TJhgpx40ZMg78TPG7mpupwG1ksiVLpuiih75MVYfL9U1JTZr\
AecKXnvcNQLEmGdsNqhPJh0A0Sr5UEZ7i0DqOS6qpt4pgf0bXtNx525UnUWw6JuoefbnijqzTslK2A\
5VUnCoJseHRUSrstRk4ujLL953F++\
8DQrMpmkB8NQQp8NUIaZ6T8ounShJPKl6QrDjd4XGooPnDVcPl5QtiTBVVmwmu/\
LZiBSmmlyMSCGEfXRF0+EnvP8ZMno6tWn+RYtph12M63/GX2LhG4QRE+xU24q1kYhI/\
A87NWX9QyaF2uZCZJSarkMP76Z7tersC55UVyaeCKi8dRrWZnBL7Rb6/KZ0PFw+\
Tz99pLVZyeHw9TsvtNTNq1fpJTYUsmWL18HskFb7yVZEEFYY5qln0xl/M0/\
xKyh9D0btejSLvWmrypVkazTQY1/afphZzsXyBwnb3Z//6hvS6qN4gto5cE0E70/HAvQuNZmkw+\
vM9he16z2lwutQphPaV6+5xnY0KLapy6ETt0XtRH3PmnFMlOt220fk9b6v09ws/\
3d0Q1h9fGMep9wvY7pNHbejC5uCCzWLKfAH19qMGb5eXWhV4BqoVq7TyVfa9/\
Ch0Kv9Us4fHiDVsXeZZ9GXUawW5tfrURC32y/OTPd8I4q2+\
6FjkWPybNGzNZ5jX4N43b0dAaia0TasJbXo7awkm9Q2q3bE9ChoYv/w09zgL2sde+\
1JbPDN0oxMyQw9d5Vlc3DhTyAdu1SySkA/pR0FngpoTSFZc/fbuj51EoaXMvXu7q3uXuqbcz+\
jco0rdE6sf7eNUxZMuNXdOGFpOFaKIzq6DPDaBZ0hakwrcQlrMAVnY8ewGWTL34/np2PJ8v2W/\
ixth5SFKitPL3dg9WfuKf4R8NQmZP/y2LpbMNzBr2E7w/3uQyeTmvOgp6FYDti6ie2+2fzPG+\
h1oquxK1LqKVt7UJGSvpLFImR3h2VB9YHlVp5mJUMaSy/U3ZwPYNmM3z/\
tDOlXPUfyfXOMPzvE5hEOHEMrSwGePnIxh1+OdLJc76EdmXl1fwczSXfuegwjflqkhbYj4Y8K+\
Jviift2La556O6oaJYj9IIAiN6GOD7LiySuIzQDmQ3TQv87fPg1NP3kMv4XHPurT/1pf81sIsd/+\
Bb9XGp4YUhOzQSVFo857qrxpbAH65+466G4hsIa0v4XxR1vasqvOwdJ/6sC/wrVyADIbFH0rqSVx+\
uGtNlrkuo8fXfav2Leqn2ZBs8SwV0WZuU7VjIwv4HLW3K3zFrOjhUxRmKbremGw8EKMbzvr01/5r8/\
K94aXfKz9ouYHmrN9TSAjKqsGQ8nEx0N6Cjgzw3+bxtriNM3+LvET+TyK5zzNVY+7+\
ggjC49eGEbn3Q3LJweoMcQp4Mfw0WQ/sWT1MIOcnsyaVT2sWTnfRQMeMVp6i1ChrR4K5T9NSnD/\
Jfz9FYxI45lHpUDBaMoIWqk1UEvENhx3K76lVz9Rab4RuwqJX7a2ocam+ZgugviDsIBetRRI0h9/\
rbYhA2xLlU1rpmOBLgVw3w90gN2RKq5sAHFAQQna/Id0zUWrtUV2rn9wVh69B1OGuKWAveySaWCTT/\
3DjtA8a/Xy0HxSmKxqt3drqXcBwgp6zDqIJGxnt8BgMhQ9XK4nT2TZpnDMS42Zvh/\
qT9AFZ9cn04P7tuYxqyQmmGtVrLUWOz8cG1sal3FV4Jnl7vfW2At+\
bSuboUY0x7ncikroibVUJP4s9Cwf6fG1VEzGt61FU8kk864C2bSWYnZHVyrVClxdou44GwrBR9kGc9\
gg2c6eP6n+\
qmYHd63v1WPL4NdKak2fFjFNLD9LiXa7ZzT8pKD1YxiodskWnO7KTkJ451EUM6WZwOX7Zw9B7rjTDF\
aGgSVM3CZJO/244FQjNksiYEZvUDcvzzdzUxIFn3/\
lk3Pemu0mHDQm12FBz4VlCgV73ivzoE3McXdI0rqlusppGInlUFWc+3G1JitOJAI9kgH+\
iWQgRU1rgaS//nhWMCgrM8nQzH1yf5WNEux/TizKb4K/WEg2vc/\
t9q2K02EMv6ZjlrjxQRP0UDxzzfx1cL50p2XR0q5Qzd0RCXWrFk61U6xEK54qxt1mavNMmzl2T3CSm\
2l+LLfVsaXHSgKecOoLVLa8BwFDjVCXRYZPFryyeNAbDwjZ69K75EgupvW1rn6atbwAM7fibMMgUYW\
5T0WqmidJx3SkqdlthCq3BpbjEeLgXmjjfE4VHV23lgTzi3QDPvvSgGK6iAdDDaJITBZUD0rDgB2nG\
6DSHSUdBfNCtGoRXIOxAr7BhFmbZF9pyJxHscc+\
WKDXJfORXc9xETpOkjeewV2VcNXhZWVgAeZI7tE8oG8Oj4T1pGZbs5ZHaMiivMFPJfGByKEzdKoh5m\
oHieCrdCzHK+Xm4WdlAq1p5I68HSyZ/EkJcj2M39KZvIfZoJoHdwqW3rXhu9qFxX4PXnxjkZ+/\
SvSznTwb6kUuRvIgt20h+\
7Ccv9kVE67EGy8osWmn0jFHauQZdSoivfTwYlLlxoHW55Axit2O11kMoFa6Xio9r3QI5lYExT1j3u2\
Yu8ibVkD0AlUI/QCj6N5IHo3hzt0YTbfqxzEkT/mA+\
LQwhH1YYK2f0euC9RYgW0yAfGPu0iSHH1UMBz+\
0FsgDbK7SDXgDL73bpFSSLPcHCu9YtGzsSkTVn86eosl2ZHP30NLNgFq6JNJa4FnMZ+\
NUUEZENQDdCcLzx5gB3z4kfn/D0JkV2+\
FYTTInb6leOL8gST4AnOzEsItmT74wbZWT5aAHoblF9mBijA8LFLP37NpXSc3BXzud9gRsfe9FgZC9\
V6E6Oo9hojdX5LXoBWou8r6TnUIuqg+\
gMB7vWPrpy8xxBlf5uADTomxNg6cAsUS3X8S3h7OIc4nnkOZ0I3ZZMV+\
K1Cn0LRpr3CUqHsdUGUUm7NIq/fBbGq5u7LZulAEVLn+w+\
P6jqDYbsirttm0EJsNHoidftHtvHIlguRrZF450TurFqjDJ70aAE8m3MqXltVH4XfTNsQx3j49xLRS\
p7sYQ2Ut+HlUWqdTaXP8f1U/znSdrhCU/vO79O+ozharHuJ2o0/+bQzeJH6W7WgcSUPa1jaOU8/\
pIIhTYZzZJAMICipemxevzUhD/r4VhjR9S0CTBAv/pJw/KSUU1aHowxQNaX/bk9MmeXY4/mb/\
hjSAU4H9B+UayS3/ad/ZvKTa2LyI32IdyyX08rts07w+v2Mh9pDNc/\
oIqnqEVy8Y2KPpt77tz7oGTeDR1Cz1DmA1/a7/23Tqc+FE8SJbXm+2R3TrsEBRWchaFr40eU/\
4Juczek/uT+es1W7ZTQ/\
eAGRLRssbNLmRzx6mdmZPyZF2Bo7XdCbpY35x69r9VTk5VAevQWKXF2LkLBDeWo9RrsZsuN765d/\
LprwZc2g31HY1DwVN9DFJbze8JEF1BE/\
2Sa9VjXpOTcTbGD7Ve0GlO0Natg9JUYoniFlKIoKWyuryNMWyB+yRMeGRKOHInRaN+\
SE9mVQ3qWquynje/MzpOXdll3sNG/Re+oti63voZDxClc5cXsN49+jtI+beeSPAkEchsQPQc/\
yAbGApjUGpTiIjpP27YKEpn0vJVR8EVWnlHS5fgGODxSVRWbbkagqU/\
jKPtFrstiIwxzJxROtPJvXQ2e133dFnH2r8Yu26ZkTi2Eliqm+Qd5Ww2It4YTS+\
HdNTDA1FzOfzzXAnfWLzd38T+vVT1s7JPnMdCzVe4o7tkzch2I+\
kZKV6Ba3kJrtM2eMXF162nGG4vXmwAty2a5wEO1wR5O7PPv3Uqe56p7fe7WQS5luKZxhoqsCi7GNvg\
iXIOi0lXzMbHWi06SZ5ZIpjM0Xs1wqWQLhiEwiC2QQ1ZoPnQrVw1SYsROdThk+\
NUI1J5T98aOoVwtECVNObq9U22LeTnDyjYZo3LZaZPZ0uxLN9XD1/\
ViJYynnfuwP8DL9hwx7smDba2WqWttez6kDeymEtw11OkDN9RM/\
UWNuBys5pUVqY0CmAxh64gKe0w3+o5IQ/rA4LotZKlzqbWN7R9NlsOBsAaNTAG+\
OQwxFWmU2JjntCWXEffEIzwVjGJ3avfnZhqaeHYreKcqmSA7TwZLWtJDYMu3wPmY1Ewys0CrPX3z1v\
7hlJMD2xGarpFkw9A2kWZ2s5HLj96FPGA2TmUnPvw0NhI++\
iNr0Dsbs7qVnK0zcUrrOYxbkt75Tr5nnHe1nbBv6AI2ghki9r5a1yZZb9XaMN4pcC1etMdDxmzBoM9\
QLckqwyCgiroZqw3J3EUTYiZMFXU3zuDBy92H2kKOdTo3WaAXe4cFEkHvWE8KIhLR0En2KU4ClNMep\
wwGz0zz4Cg+dDrHQDD9TvWPzQ5TEz4rBw4N/JNCoGQ9U0CLe6+EdNYfh6HPb89WhIuZvfiGMU8H0+\
GrzpsyEE3l978Fg29wRHGyHW9nyETbcCZxM6PBRW4XRI0x/\
VsqZxpMomHLcDnl8V7ilR9L6BrkJGls+\
fIjPfGmKhWi7qSsxFsgw6WffH6p3eOlkghoaQYCEEPkK9cLPjUPVp1WTjEUiSiMQkrsee6gubaSIp6\
eewyzqrRWqc1teiNVCqc7LM5X4AAv4mlAXvoV5KV2+5kq2/6KcDlqmDadNDNfWtOltbfo+\
svcQXQ6gXV7WLb4YI9trSogA3Y3w2o6uTLhp8jct9XFPj70sFfxMGuWb3xtdr095hVnF2u2kBGe3aT\
hX1Wxoi8pmI6dVqF8fZKkpXHJ9Hk4m+EqCtprtL61/1q7pbAuQSOPJaYL64K/zEPG/\
qxcac0ysHUQWx+liraPrWPtyx6u20jcXkUsdeqle5QT36om8p+AuRGp/\
nvDpSp9Zp5bTUdjaNXi6T112AsHkPdMBnhsVl9X7mt07e4hFtdn5bD2RFrVp24KOwsRBZxc8tezgKs\
JPxWudlDtlUBwPyDe51oxrSiLfpES60S72QgESJnBLqAuBMRrI7tDB/\
xWLfpT4OJOCVGHlGYbjgrY7FmLlSuXlPY30VT1JbCKV9flFOXul3vUJc37Ke3sHzfCR9lLm7wmMLd+\
VFcK/4vMvaQjMx7Ky+xeDvy4i89cteK3jE8baSYOPG69obNTVUBKgBUmET6g3+VJPHMTz+\
XsbO7xebO60t2735VR21g72D/7W2BlDfeF89HlKUG0F0Et+\
PzpCW6mnkKX8sRkagtjHHxy3Pq29Kyoeu6m8SIHTlVQAtp+\
FK7G6iJV1hdcmZlvGvh58Daj3af1dWah5yYERbyRDuN4Cb9ELfxceLshCApNd8/3EgyeSnA/\
jmNVXvMmijrg4PvnaLK613xwF0wCp/17mV38AaxwLu9snG61e/\
Lvi7dYETr76Nnrk8lPxumuD17atGA2OPlGQb2aks8ydvVZi7A79qpCHtZ810rUZcvTd+\
g0Igp1Su00H3NO4v4EFNfgtAoPrWzoLMQyLPEvdSFh5lk29mmJONf4ndxcr5NF7HXn5QyVykqQoSAe\
ttgM2zI8aY3WEByXtbdoo1DiioPdbqciYmE23aLiY24VSG22zujj8miA9vgaRBNQO4ARN1fnMHP7uB\
PeyEftexFTeZxCaTVzR0RrpjxbMxjb811xblutcWevr1CKpvv5oqcAA+RY+\
nPaSA2PaBvTQ8S7INPnyvS1ZO1qfPnrlwBfnMtCvetls4DXruxlYKhPEv/5TeFnB7xOatKHLuX62/\
6NDL6BXxstP8RHUOjx2GZTlFOWI+6ZcFZ2PGHvlMeshXJLHp/mO0ny/bI0JgF/LzxVd0q6/\
M8CuwZjOlaI8KHYPv02QlXzo4/\
GrdCESsKa575QtaKn0ukPss1UEHJQzkkGrN92UPs1q4Q4eWqhLu8UzPP+\
Y9cYqT9G02Hk9IfrcJPZgCewL/AuACTd1x5ISjnnuFkB2sDfiQaMx5JLvHg1DQV7+jMZvLwrlot/\
JoXb+Aomu/nbLbX1E1UAe+RdG4F4psCHf0vGPz04yzVmzMIH0XhTDYu3G00xYGWA2n/O/+\
54UJsCOlyvKeXh5K0Fd3bgC0xAp1yxUFvugoYFtanaSQnInmt4EIdumLtWO9NplU+\
qIMvya38jncMnfO1bXjGkDF8BP6Vr/vMaC2edDkHULkUiLbQVn/Ypp+\
H0oc6nFa2qI0KDKbszXu66EWf7kUD1mRnllyEpuzwZyL4v0th7QP7GqBAgNWcodu0XnaTLvuWdtdyY\
Pyq6zOxoPGOIAI6geHnP2XQ7XXS4rNssVvZiZg2TIVS2xtuw6fd0StNKjEiXvPhshJWmjZsFQZxRMp\
afJslg/QcjcyrZZCqzYAnstg2j2lmvSjaKKlyvkCjDeHcXCECUaYUdCsZpWHYqNt+\
9ie1eCx4wlpY9mH30A5CeTGRAKa614iMd4oviXuNPFhw7aLBS8B17JyzeWwYegK3nG2JwT3lpzKHsQ\
L3LYWACxlNmu07f036e3UE1/\
xuRo7rjnckDZrjKNQKXglsiFI1VqUywbXwR5BbxJGBMdnf6WQvPsH8rGnUCyIwl5774CGl1FiqlI92\
lSRUg3orQtRLAH47j6KdUgNWLFVQvHmgs5bLwpOSVLVzaHqr++1Hj/MUs/\
aMoM3C94GvdWCoKxeMsHhwclWvIfQFZOkt8rBFq75LTsbmRfdJDnVwhAM3BvUKDpApSzph9T57dend\
DBH0mWW6T07dZnJx9FhiXr2T5PeC3OZTBKrXUqwRFmKBERT6ZCN5BLnOHigArp50dio4sitlBoSLzY\
aheuofDGJHANf5XIZxmVRA0uejQ9JnRYuy1+\
NpUov7wyp8WqnOwyoqvrsOcOjQL1yAyaExTdFKAdcqxkhBrFCMJ96271WZZD113ZLy2XQ40FXR1/\
NrFJLu6G1eylEMDtug0d3d4dcM++\
dXvAdYfG3ZNsimbWrp61jRoa0cBRokGu32OeX0VI83OLqfbIse44j5RkAB6VnK9mVRvs006sLPX6B2\
7pcaD+ZWF62ZgpxvNo6QdUQBYBdp9VorpjI4jRMKnwLbgJ3x6X3jct2tci+LnsRzJciNpEOs9lq/\
FKIVVHEZkhT3zc7PnGBkQZ3nQ07M28CVEjEOPZht3jffR+OzmwTy+\
VsUhaquz9p4fmVmx7fg3IjYzeIzKhJqAUNCL1FG9z2bsEMnzZ46aBJVK3+AzXZhWsp/\
PlQXF7aEczWM5/u0gIdi/\
BCxRfnVafd8URwb0jD3ClpMR0dtWYFVwKTyR7oLbkHRx8iUeziZjmtlPGDtG9a9p1WZudKxz/\
W1oGzXWeVzBp/zlzJDN8GLWno+\
RszwYQck8k4MWeTIDCg56hnMaKDbSc5MH26pU3HG1rBa9E1j1H0sn2ABp35RUTX5G6CE/\
CjclPZSoZLAe8OjfQ8tbKqFzSzy6EHIpFavRLLptXdCmKYpu1tLeKm/+VRIA7wlJ/r/0yFMp3JF6/\
BFnzMM2C59Bv4XiitI4nsW3SVdOkZ3CJZDZzOLWiIkRnvhzC2bfOq1zTYYxlGsh5fr55CGBA6QF731\
e38qgRob171kBSl4EV/\
2kphsDWybwDyKM1drFoNeY7Oo6LfGGil71xjo3Xy4Ma222A0QevrtC42XZ1BTVDO/\
B6qh4weN5MLR3CZYejlezaOObiliqIx76hUk2pnX7FCZJR6PphJwS5/aZmkX+\
9YOaxjFsVjSNMJTZZFNy8g9c3szdaY8o+8d9DrU+FCOmRktz602qSM7HVLkeog+\
ye21rSFm83RPq5ZLl9SzHjTbQbKw/\
6l1pu7V5lekJ5M4nZoSI8K8GTCbp7v6bAFSZsQtZYbPdfM55sy4o0sW9aecTjQVizuB71hn61c/\
515YX2vJnowICqZNuaD4SKmNncDX323NEChWbsAS17g5imDF9QneM9dVkWtc2xvqxRcqGMpxaQkNFH\
rTrFEmVJOyvprXLLkqJwj1elz1YH3dM3RcSE3xJLFtNo8TWuWTIa7I5r87dHnM6R5Lxf4O7X0Tw6A7\
/j4jkVWkqYDxwrI7lQMpDw0q0MGPq2swijgTRtVgft2e+SwUJ5a4OgpuEkP7YuydqwkXvPi/\
Kbg41h5Bto5Or8rbZIIFoEHqN+twfYVXwKN7FN1H1+KAgE/Oh/d15AdTz0YFcTqQcs248QXPXt6z/\
6BEpQUuwWRcJAMpV8XASMbIDbGv4xqUzZmJHbpZMh0duCVqxPMK0yJRua4t73X4rU36x5xnsX0R/\
Udet/6VhHpRXqjuvlwQsGG51dCpFf7zLFtX2ys+Ws2IJmOHXh/\
ewdG66O7b9SVZBzVt1N3JdrSUdg4Ly7x9XzGmrzAfaUveuqE2kex7/WSKDqEUjM5g2/rjcg4v+\
rsLMp/8sFjCb1aPf29O3qCfUhXNIscVD5+CRzb2UqXl+SjFM4Wy+\
VpOcjGq23fD1Wtn32pIe2f6KWWj8jdDFidbgK1jGIjUSdyZPkY1r9U49s9vZ9kiAN9pUF7k/\
9bj9pZz7xXTroiOxzy56Nm3IbDNsPE/dVIYbG/uvRz0DQQBo85u5PMdMnGbouwVKFP5PD+\
ZFI4pdmmkj90uR7M6kdQGZIKew/A4q9G8b2z/fcKdowGZbIV8kn1c/hBc+\
t7ZYJI5bTTYDIJ8q0FMxNAMeMxuJB4Z2aYV+cx/RN/aTIx56UW2KpgbHhO/\
HJJn54RtO6Ay5Vih5medS+\
SIMfa22PuFL8OYYydmCr4YO0TzILuwku09gV8s63fF6chcZBK3LcwsLv7uEJU907fu80/\
xyZD2vcYRfChWaQMGJb47NjUK0GdlzIBSvs5ex7pHMpMUEBq2J+KZ4j7Z15z8Y4Vv0IDaj/\
l9YPXk1OjKF3z6Hq+\
Mn0nVsEzAGTiTPz14Pdr1sEUZ52SnEyNY1sEeM4HJMPC3FI31RWMVbgpUIrZoM0FTZPN5GlpdU9aYi\
m+Gymjke/qgiceru2nEQPbB6qqXU+kHjCd3QCvHpvVJ+D528NhoJ3PzmJ+MZQPbN/b/lph7P6Ok/\
C7Q/gMHeraadFSOoIDVmOI6yGXVrvWC9WZ/tFzjFcb4fFlPlADeOqecl9YS4xXbtwLGB/\
QeV6QDHX1QqDWQFuapAd3Q5rFK9oy8Qq/ObWHfHHtjEUfhfP2WD5+p7z/Ochjo8oRwL0zw/\
XRhUARvGAUHtub4Htj1aeb9Ow1tjzM5mp0WHOgebsrk/kMjOs/\
D8Jqdunno9pLfVvBwUSrlspvHyHTe9GW/z7445hFCxe3O900bd8xpflqEQvo2+\
wUBSjxOrPl4zl7rll00/K0FN2Sa7DzcPjP/TL2yZD2/\
7dfTPjX0TjTpactlg2sVxGVj2No1Wcd1uk4YE9a99kCmtIDPPtnlPBPa02yiu/\
6vR7fMLF6Q6lcHJXvls11/zLrE74HowsGb5S9Z6me4t19ON40deTbsynqKX8pA8bdJ3UYAtThv+\
8a2C1D2v++az+Oi5mWH+R5XYlqOdeiXTqr//\
ZwW2QyyZFX8u0rMIDX9DqmWdC5qyBgMOsoo7sA9i1OwT5ZQkvCy8MoPv6Tg0w1jEK07vzNk7gHgU70\
J56bI/sguwrLStvfwJ0AfFZpc67EmCeRTCf8J+W6mmG/MAqYDQQ2ZT/AsJzUQ/+P7LvEo7X+\
Ew3914X8lwWYhbq/LaQb/ZMaCneqMT3GERsdYppZ3V/Pwfk2E1oU1mZ2F8krzZ6TlB7Vvg+\
LGdICVp0tRtocNEq1GinK4lhEHhTpg/O/mK4h7ft0q8Vi9IAMkPQ1wKiHxR/37ss7mYmECLwTI+sn+\
Z0FQ7h/nW/5fa5FfH0gLbPiFMLp3wcWgsHEm6Rgh2k+iMwtjjvAEJL6w+\
qt6HvgIcZJo3sHvtPM6X77biwhWbGD4JCldAV05PWi/YMn96PO+\
U6GuMeUhSb8uwtf2DPtZdY7ZQqp/t1tv+mPqxfzH8hf8eQ9Kuuac6tGOn3Qc5wvFWZBVAXLBNnD+\
vbPtG5Dmk7vthxrz7bsfmsPpeL+\
qrvgtQbdgC79yaDOzNnJRH3ORkPD0mQCvAjVBD2epEViplfMS8l9+sFZx4/pp8r6wVho+\
jzTenT2an2uj2C7Z0tvl5wdAoUJ/\
KzQcD1ac8d4Sg7FG4zKnepPtbb0dnkypFnX0dyB8HtQsrm6tMC7Ef+\
FQaM0T6zYXB5xe4IxvSSxPFmOyLrM9Yj00XePLvdwkRNLgckkjDRNlrk7Ssg4InGXFsnpGeJP103YK\
IStvduuHtqepIVqwZgVB+oNBsrMvYPAOYxzurVamgnBAO3IshM+\
dIkMvnfM6WklD0VbIvlRDjotKEFniflk0plZgjcdJ5jG/0o0rNNmL/\
3muw5SQ2wy0eYLR7QUNyoyoSAbtTl33kzbMRq9dSKiEht3K/\
t4BJtOu9ftovuMxWWTove5uqaOIsuTCfjysRTE20+KEMFKyVP+lz/17/Bta+\
No1pOZZz97kVdnBaf3qjnZvD2D6iJYnd52m/sCjVTx/\
pSHlCghKCuQjcnk1fPa6HpO5Djd0anxib2eXCzCrkF/pPV9czMo7gNteKQf/3ITKzifd+\
0ND6qVEbwasxXylP6A+KfRctuFZbnJNUdYUltorg96K28D9yTTkEbL+Ta7nK4i+bEPxDb/\
lF4D5LvLJfxpDhWCIaCEy6vUA7wIVgM8i7IFrPN7Tc/\
MI75qezNUK7W2XdLbBMkr0Ik1f35WXrVDMAVc0RZiPH3aa6VPthrNk0igBWrYUEzvGJpQ54eqIZBsF\
60LWyfDZ6Z3A4PJY1WsrVqxuKhVc9VDOzuHxg59KXqZxxC3uweAFa1p4K4Hh3Q5JrqZ1FiZD8pXuwA\
Ezrngk7Q3XM4m+L3wAlXgkoemt6KJ6nT2IHsAGzIb6CGgFgIeVH3Si/P7ycR/\
yz7hed5uHbDuUDBG2ORDbOFbWKaIPpAsmMifaM1hwJLVTw0nAsNGW82PVqttzV49FBQ98nS8ievcSy\
j4WZxMGObInJeg/Q/fQHeKiT7K4Y349FSvM+\
EHqXybgb06I0fbAWMLI1Uqs95a01ru9Pt7QVMM7Kjpm/KWtcEcu1jqLXu7m01oxx6Swc4tmesBA+\
fEQsC2P9cz8QEOP8OlNa9HHR/aPZRQkV+Y6LqHBC/37Q+\
CTF4nBIxuGRnidR8njuK03AxAbLp71T3WSdtgv24a/ktBx/\
Bnh1d9BVMWawaxtgK8ohvDIdAS5j7LoHiZt0fjxQbphzvrxZSHJFtMV0/\
TuDL6AQDPiM08BMsEp8JI755DVHQPddutOZQ/gil9dwH4ms+xzWRAb7xCb8obaFMY4mq9ZiI+PfZ6/\
lXOM/AF9zbdhRxfcwqT4uBLYLxsOUTRVcRf08WFVskrzL4Gj8FxxnJlBTQQJxNz8FXXNUkSbflAZeo\
rp+u+G/YCKEu6UtzX2fu+zvJr/cPtP6fpumuQfN+\
xKyXdjZmVNW20XuxOdyRWbCB8S1Bc8MltsR8xZ0wKg5YtWdOVbjbq1Aex388UDCbI8jFjSCsPUrnyG\
ZvuBqDa9xn7WhwTxVF3s36dL6qz/Q5ESShcs+\
gUW1uHuNmz2ydptRizaCXP7QnaYsIcPnbGB9bjFHuTmPB7YnAJ4IlMCizh7HQ0gcLE8aTbX4qs3Wd7\
DBG9h/gh1mtHvFM4dcd+i6XvVyX5Hy1KxzW/\
4xnTHpDlGZn5GvZqavqn30icQXxfId7qrw8W9lUb1rFFZoUZbXNDpq1+\
0SSmgHRVxvS2AydWtnUXEy24K2JWlWeVJ7/n3NhZu6fpR+LUD0i37eua6dmq4VWh/\
kIH5mbkn0xGIOqO4+\
xzHYvlQI8bXEwDdIwWHLMirjN6RSR3dGOr1iUsvoKm9vmWJMFj2EYI65nuzIQOe5WYdB0Yqf6Y1eiq\
APDQuB2vIGeL8hg3CdBitvcKFCPfB/yks/\
XLOHqenElFisx0AuOv2qTXSh39I7lwMlSEJxK7p6y9noFidmnVr7W4xrJcrAVfPmcqfLeuSeQuMEuJ\
Zsdx1M+PE3I6zQV5ObdoRpFAdorUhPFiFMgdU+\
XBKprJ5tr2Okos7kndW6bkjOGDrqvhdtlBv9MQN446dzYl/cYpXxcqdCMAGeqVZGN2R75lqq3OZ+\
Ff9f7ql/TkkjM5pjoqE+IgYdEpW/8FNoVWYe8GBhY44sB9IqaFfd4r8jM/3cpJ2OYlEgXc5PES/\
B2QvCPresEKIQR+TrZBEWm4O5q5dW4UE8NQv+G1sgwgljC7yDj6qlN7qKVdjr9e6tPc+jy9ASJrh+\
qp9Qz/Xl4P6ps8xvYS7Jt6w8xsk9rVu72Ee7jrnkSeUoqreuot9KpHmEgJWATX4zrR4XrZOyT2q3Z0\
g53/bNIY0v69WQM9WyEv2yii6JmnphJWuQ0+hij28cgrbC8qG4EMaf82nH0+\
IxWs4tnqhKGwWo3Wn3TCCcfjSb1ZV6Kx9MXMmJCO06IcOq7u3taj3RCZx5lNmvVPwej4fyfUPpLDz5\
JKqx7oljW8vEiDEGvv2+3VuqVpk+HJpGcVm72D2AQBJi9duPyQqF0ylQ8wBIBo+\
hjZ1NRgW0qnsD7igTe3h/\
QRA2YzFnm0RiTfY73U3AFfhLS9tlaXvoObB1eHleyLjSM3eifNnQNsNQECMbVkyzyDmSbB4UtbPUiX\
O9WIRjvEMRv2A+gBtQtlmjZPPftaFe5RalkkEjDSxBl+0c4b0khEHVyGiH/\
mPk4m40CnHZRp3CovmOTV0fjvfU8TMd1UBhYcERtZAmmRu9d7KDCeZ+\
Nceg2JzcyHNuy2slgmvlmt7dBA859fUV+\
6LlERq3PdMuEcEwUMoZqKl8AZsAux6cvYD6HLpxsg554BYxufN0VclrLiCrDrgTvUAX0YmUermQ51t\
vKPm2Ci4dZMs04b2U9HASpwZ6vejwLMKN0J4vc/fTXIfSddA7lk1hZllCedKi2YZbpc8+\
I6dGOEpEYw13unwvpXaw+hi3GKUUvZeekbxXV7FtznoQUtbl1TR0E9V++ZZDpa7fX0hOskG23GDf/\
T9vy5LY8Su1lposEzjAJgiXjOnRaiTnSZiW7AVSh31BS1josk8N0x1h1e7F3OAIpigAg3ZBlFn76pa\
BcTa3bm9x1btk/\
uZVB4nkyGixg5CrTbir3obsyZfjVc8IR4SnQTcPLVutKPvpPtSWJT5HRNLUUh0mfunKw2BmDMAuCVm\
scS4K5AcwtKXyupzu04SD0DPNyS79EfrtANwKRgo6DCD2Ycky/ue4axQ+1p029+\
VsrwaSOHZ0H9YDiIjZk+\
sfGju9slMu7DDejSHYWq0zKg3fkjRiuPOQOuf0JozvRHNgswMWYeHbig3LvVNajlboseukoIR6lN2R\
msHsN80CJg1Tpi7d0ulG1BvLbC+\
3mHz7k6ITdSM6Qa0vzZRR4nkdi2inZj5V6xybsDIAt2itcgiiD3R4+UT9bD9gmk0/\
I2H4gLCcGHrsqeA4SUN6AAQt7xpnn5yP6ycPvfL95Bi10OmqniZAJFnn2zXVjGwR8aTR6u5KVV2AGN\
QdF0+9xt10Z1BwBY/\
aWmZaMNuDrePOq5ZpLaYFvni9JM9DWe2LsjGKJlBGzRpYFmgTaRtrz4pHfFW9o5/KCBM3+\
eL9FWpujE4maf+XJHtWFvRtOhyQPgpebSa9i5zWyH+\
dv4DPIMJPfpc9Kh6j1zpXg35IKqNGZpnTkXb9ZfmZDXvrXhtB0f75r09OrY8RzOkYTw2Xj4PW8NZX5\
1g9FNvRAOESaoA5/\
BZoMqmPKywuFMLNgh4DAbn7NGZjzrp0T5BeS9xVeu1uv1U9OZRp0FamowP13moB/+mmIB75mN51K/\
1wVAPeBU7jrG/Vy19HI5+MugDlV2g4KTcQ3NPRO13qOmIc7Lxg/6kENFA4PdU+e3m6T+\
YeQfWjotYYu3XI/MXgF7qdpCTZ6kC9YnjlhuJ+UD5TdNCRQ2O+CIv4iqdU+\
mom7UxdZTKGq3htZ1r0okzDJgUEcgYpVErxCemuxcSWXKy/\
dcM0uq3vvGDuth1ZPYXwJHMZ6rKBpdR1JomHfE8tkGDuAyqLmp+\
cSq0AW0TNDb281DZjWX8CJvfhtuicGg6ynuGW/\
5hHAARuiQaZbb1w8JnYlcdQKMa8XrbCuTz94B2mezuXepmRY21MaJtcMCd5k4VakqV39JqdJ7kZQ0Y\
aoELRZx6ptM+g4wSzRVLQEyJE7tnVIUHMaOkfEmfAoNfFOT/\
tpSFe8US3rv3qexIavHxu5JmkwuAc23G+Sfeu6BR8kcGgzS3DJqyVdOHFng5e/\
b8rzj45TeOSGFuVnj4A5698XG0PzsFIsmOIAIv4+ZC52oarCEI9Kf+LDnl8wGB3lhlyC/BNmMjr93/\
kg1qOFP/uvM2Y1+\
scXjJjHmktx6N9u5BU3HeuArtAA2CJnQKZJb7CsfgBVcfUdHNDItNV1ovqSGPthaweM9H5P8Sh8lJb\
M2t+tj7QbZSaczDaPL2pppTf0gbTCk3bFRNg04quFQpWgL7NBselMMx8e90wvXt/\
fKMbIjopZAgt4cQ3t5nXIOaReyb1HHVIc/6UgdDGmZWJ3VM6/H/\
FioFhzlWr8Xzn4vmAHye9GhOHqio/\
SYzJVq3lGjyKe3w4YdADlQO6rYNYX3AYdxmqn3hJisVJ6CkYtKOBY+\
PaLqUR9U2WeD3VYy8fDGTtAYpEf7Rl06qeSj37uzh1UiMb+JU9LKO5fjLLENxAuzrf+kz/\
FmVbgDpqemmqkjx/rYAZGz+rCVGbye0o3WbAcyWEWl5rHWRdDpkZfAhvfaNmSsOFXoFflazKrLSp/\
cYa8it+JKZt16MnmXubk8LLsQazl0BYUT4LxnyGrzxZrqjs/GDBV/d8p6cgAGDyMlNONoL9Jg+\
PkhLpZK6hUqWW0xe3jxVL1JansVSEtvhfUcJpRpHuBzUBkChUPdzwAN/Vq/XKx6TM51jrQ/\
G2ncf9DU7xrqRA+24tj+4Vg+\
xreH8KHgLiamsRSqWZBvtn4JSpvlzZ4KtWqtAb5qkBSYjStvc5FUWRvRkc7pHjorefodSdDXldm2Vj\
w9lBlt1hGsJ23dwvWeMU8m29xwFaGO8VxhZmnlK3o38vswoxa4px68PvlCvUivjDm/\
pTVDgzvsPpNpb9WdzVPBFzAWfX4X7F9lLYV93WKXRWs0hyjGaEY0azom+\
ayBKPaYOZqv54eAy7Lm4t/XThS+2FYZo5moNUqOi9u/\
rgVXn9BSe0vwrbuTBWwL09l9si4sudlksjnwcwtGsqMLEw8NkSYMEwd7NoWCt6jLY/\
NcX8oNtZsn7T/so1k4Mffzn/ZxO6KOues6O7627D2b/lx6FNI7A8mExATNdF1fU95Hpi+\
ZQ977DkJd71BP6HdxrEOb6N1PG0MtS5KC9vbI27G3fHdMi43AJdcKlIA2GuLM6OdYKzAA91tbAVaZ+\
X2Tbf3j4IZh+\
hAIQF16Q3P7vLE3EIhMDr6HIRPvfAtH3q0l2X7t7uKSPWYEt7A27lUvtUZoDmCMGjvSwqHF15+\
9b6KdSxkWbkj7d0u3+PKZ4jbhjKNbknj6JxWkzEt+92GvDS7oXpWhx+\
c1763gt9Z4Dp2h7thgyGfPLk4K6uMgOihKey4uwEsO7mtkwSQ46ztcddoUXw4fgpmEz9GP1xrhOVWt\
+l/RcwVyYY6+dMm6ObRhIatt3FvftgL+k33qR06k6e+8Z+cG7i5cBivxE+H+\
Z2SLPoUuvzJXy5avK1+Rk0VpFNUrIbqHFqiwsJGbolaEWomm734gex5jm16bVN+rS//\
gnuvx63xAbzvKKrjBwFQ7RXeZ3/EuUM7ca+5UL4z2Td5TV09g7mFs0zO5n4zZjGP/\
ZNSmMXfPNmcw73r9arZMmsAuQN8TDoMtMsaBTB8V7vH+ofH8YzBE+\
9CdCEYcTyhwAL7pfMTG61DuvLWenquzdq0Et2wzRgL3jK4Zs5VYd7DPwAGTQjWGe7ZW2FG1WW44Alg\
+YCp9t/ah01X2VI7kIMCidIpQTY+v2QPofmYyUlQw51ZKF/+7lZKTVbtuj/\
i687YPNEanFyKuhx0wmQRy898Hy8BAmTpElL6zTD7urOfvtlkBU0PTF9ASAZwCHVHiDJgrmJbazjZ8\
DjLJhvurPvMzkDQd8rdQqL39S/gDYW/X1lP4PD9zn3zgVgDZBco7jMkPH58dS92X6O2nZkM/\
ZBAIyR6XRxx66f7Ra2SfLdaAlmtJ/sfrhjSjdPF7+6faQFsA0qs1EBl1/y5TZ8+q7zldVi0KjDzdU/\
gOgJoHE0AZ0LalVvLifHcCf91lA6y6JORhAlBgiY/\
pXf3wcay4tmul7AGdTMZ3UPsV4ZwllywtL2ZHjHtxSQvaAQFCE/\
1ZJplO44ueJ59G3gVcJ9j6TvkF2CvyWQfYYtNHj7hOQ8osZVqVrIg5tjbjWrzYUj9ozPZh3JHx+/\
2iP92px6Ht5t7qGWyTWapo3i57rHaHHAJtE7eck2jtbZ5Bzl+CfrvpjBOzf6kIGuJ+\
IFlRu0zPddGv4EGffPU8z7T/Vlw0xP2DKHCN1GQS+ttPTjSler+Td1cFE0StPnyhvQ0UlOk8EDXa+\
W79i3Pn+fAzc/eW0ZORy8cCkqP/TO4287HVn/wN4YbD94QSTe+/39z1D78EUD57No/\
2OgWngvTS0cryfZ5N6Z3AbQoc1rFaknfU3L9PR3duNJ+Gl3o/\
plEEt5UE4rnWLsj1m9XPIp9pE40ZrkCPq+Bsol6cjwUZJlk0Wj5r7t/nC0yE8lvpmhuWnHyhPow6+\
CFCG9IuzIPtrzePoKm2U5LgVnXFszCDbPIaLHkCV1/vYNA/WlchBt8icij7/\
bKefydVG9IAuVq5LpRoVxoRSJFp5Dheb1hAwvcRZOn1bC/\
39aJMygKKLaBkQPFl27kyN5EsuNTvO1GPEL4TvFD8T/\
YrukRuOaH9zL55TpDLHbWyeXMY2aLd9dccz897P0MY4DQi6egeDMILUbWedf7tglcTATjPyrwNRYxN\
A/WL8tWz8U1HL3ojMdCj/N29fiHEfXlfHeXF7Ns41dWs7RjtVYjwpasdvaWX33pjDyZZfD+\
Z1P92PakpLm+ISzwbLc7uGDxLeCs5hAK4MRE0nzSvFKidLwNwb6LOdfFa0z6D+mZI+2/\
TFYbhQVF9T6w7UXsMz/Cm6YMggxc6ibO1utV7EOAyPlEZ3GS00Pr+Uwn/\
yyzHP32r8W2gCQmMLj0Arbcx+auTNqT97KztWbA3UF7tfg7+\
t57B7z3sB38yMQqefTZQkMxy4tmuLqRLersjwJRyxs/NAFm6fA1etrlMeXvlbHT978s1pP2+yYB+\
1aqkj9EtYDFyPXWVyIWyYQRcLJ70I2jV6a1u0t1Sc9VDxSYIHWD4wHRy/\
8MQArjnKJHipMoCtDM9UT2GRLqC2b4Gmwqu+XvcMvWdlKc3z/\
6taWanwRYb0r5tNYqCblXe92muQFVGs8cPIvzcuOx4oSLg0CnmNQmuObgQoYFx88lElrKeLLBRiD8r\
hHhPQNmrPb4XerqbxLy/hx/jrqimOchld8rarz/q8V/t4vuRmaE1lh6RIUDVwb3Z2N+Xx2dy1+\
kxHnVsOBubA9XRZX9gDtRMg5yt3TxvvvcgC25dLf+7OhrS/\
uvaItUVdspXWwDAxoIWi1qble84oUNNFXQQMTV4w7cETaucuiIYnpE4Oar/\
8MH3K9VS0nH3DzfdG0ResyK28+4Xm65b765CxP+fV/k3EPH7usDVjvqlCb9fmGaQOg1pv9/ZG6G/\
S7oGAfTxEIMoWsQRaQuqorx7TfHUPVJ8ymc7oz5n5hC4F4zRVe3DuNBfpLX3ykmjG0wfujp//\
UWPv2yeIU6ndf+5eSDNJoeZIbgg928/iXUy2ci/9wmcqaK3OZnMD2BS63Gr0yr2++\
qMVeU64MOGOHI9K+l6eXj9aYbnn2d3sq58PNiixU92vVHSrfx31/\
jPLtGQ9qdrJIK6KgPWhnWnT6q5NnIEXCdxFqkpFsh4vxPCP8O4WZT4SzgH10Sc6Ozlk6JbBHip8uxL\
F0beai4IbqMCQXphIpz/xRmNMYx1xmfvoIQDCfr1kfrRPCpX6SNIix83D//jUHl8+\
p3zeLWDS7fb1WMInL15qp86cBEYZBYUYXoHKtffuSDWYnq4K6cKtKN3+e1XPb53780k/\
cfpZaFoz08V1gOahe6hHqV0twfuq/4T2hnSfoV4w7DOB9UJL5NJZ+cCA40oVVoIkwkIE7+\
BuFVi81LhmV7PRIeA1xIOqhtqOqtZm1YosnTA8TJu3WNJp62r+NhsY5sh+cPWhpJ5nK1Od8Td/\
JBrbTIBlGvrehOUo6SZB0MF0Dbf2oZ96rk/\
OCcnk1f3ENzIFS9uLE2FLzz4Qp6bniD8ykzFJpPP34MwBAIOlWK/+\
IbFM9oogrtnjNLudwbVz43B5avB3jCkPVgc9x1Kn0Mn6QJHF3l3H9q5wc45Q5ibuBU8xTeu1snqiXT\
6JdD+rSVolutlqtXtM3m+Yvzmxj9doemVQJWB9D5+G+4RNE2T/eUT3UbxZneCno+\
HJkbs0naMWlR18JLz603sLe58jiWQu/v6vE+hMPQ6KOy7P9H59gsnXMAcSLNu09uOWsNN8h4o3H/\
bvUpjYo0HeOf3SCt2lWOcGDyxpzzNLgmT4+\
QWBlpgpC7BVV6glFvcclsoDDpFdqKaKcpiABSJkw1v19ORX+zRWha2g+kaawv8bkyhYAuA/\
zOkCQPdzDPLzTGVr3n3u/Yr1GZLm7MvZN99jqM/\
66PumZ7OEgl49bGUTnfaT98zSjAuYUiLLIp0yYIwXxPSoG4DWkqgkaKTmECoTYvimIcd3oqi2sBlK5\
jaVnxLqLiZTEBbe4iJJu1P9YLyTfAE5oYq+\
HHI1XCmOI0FM5bOeCGL9v6qegTdKnC9gM59At2ytHPwlP68GzHthCTZLL6AqiX5fiyBQlLZIgnsZAI\
qPkAAcL2A+tel2ToU0m81NIjb+\
Ah8Jeo0JnDMHH07POb84F4AEpmmwS1jOw6QTg1yHbhPGN8aAzSFUayjvuhX7INCbqRbQ8G9CWZlKHd\
Zuqfz0awaOjc6to+\
wKjwB304ciCDQv8ePaS4nk0xlKSbO4BKQ4dC8dxAAmMftrcaPCYC7p36Pw7NikcOSZ8qdwXrLEmgbm\
LftR5ldC1awRrAVfCLkhVnPPcywyBX+\
m3HRxC4fOudpwLoCHl232stpZtcvnTd1mHAvhqvBK6bAIygWu5tPQnMgiafgJWW3JbsVNu89eD8kwT\
Eie+Ns0B58L1k5SjgnNptVS8hmPSK2zpjVzfitRNCSdHXv/a1INPXm3LFC2no3R/\
QWfJlMNGCch66z6BvIqJokO2gBTxc3yHnV3mzv76Jo5oRrytVjtk0LYzy8cYFGxLxka7hvzX2HIl52\
dlA52XS7idZUfkZb1ZnnNRniTy0RHTn9Ui0b04b5fkNlUVVDDk2zXtKhhs2dC3z28HyxgPcRZK9HNX\
sl3/6klVvH/\
DiqXbEt35PuD9vbteLd0mXRUrzV2ei5MsOtkfceEjTzTYuvewr2ETxa5yjM4vq4ZzlOC5sIhBMC2sX\
Tu0ZMFbKFj+\
nFEmAT02bQ6Sl9vgW2J54ZinG1xLm6h2fmXLPYPbmdz9lAOYLXuU3bcVpHdqAenplMNufQlduHzot1\
LxLsV4fR2sWJvimXlt3vmIt3fZeGAUGuJ8BNVoa45aV7bDsmk6C0YnzMKGzp9lF4CHMN4SyoBLwYT1\
eqPd8fZKZp+\
v2hLdOTY3SUSl3HwtFZfuRMD4Dcxtolo1evtXmUJB3qYEPlG9xKjjZXiXPFDtzK48ZPr1In+\
ejJuvRx+7Rj1Ah91NYd8zo4dQ0wnfZmu0S22ttkQq5jxHEywd3JDZFvYFcH0rOLTa2ROxaSh5b+\
it9raB8j7Eo4DvIF07Pz/X3K3kRg+/Id96ieI4+\
twHpDWXDJeOfFnqwFcvn7biQr6lik7wnh6m69uEdIq/XSxbF1xpSdUnz0EWQqCoUhaIhb3c3yR/\
0jGEj6pxp39HF3KSNyGBg23QtiK3QT6ZF/arPlQzIUsxC2TmKqwI1ottggBz3Tt4vN+nlVWlP/\
FK27h++/H3UP90Jsi7QjKio8dSzOm6NYbITeqyaZEJBoj0tqTEB6TX9sB9evE2gn8T2duAwVu2dQs4\
MD1y9G/lpzOqxXoQ1xegm5+\
h4nEzyXv2uH4EtztHCixlpkzhj0JG4onJtLx92ah4FesIFHv1ckwfWcZkqc62tXJ6hcguu9YUFadwX\
2VHODJ/BH7EgLUq9L36ZX4YnC7ASu0/\
J60Ke8rZsRkGzFZ3NuLsOWeY3u3RA1SlgBTuD37Pqn0nznmvTWfbnTIDN4nWU/\
b8fQf5LFYjmayRi4iMzX3zwbb3btwU8cn0SK96GpkDDrWGwfOlmDbIuoHqS1wMCXJcFlasa1wg+\
TVb3TN2AwFhkEftW724bOa69E2frETaZihb7ffrT42yKXOBO6SlaLR8/\
yqgf7GZqfBcxpqUg9Rjrylvuau5qKbaMjgMK+Di1QNqgmgIATsIAmcejzxiN+\
gaHBYrl14D8DcPHxM3CAvfR5yx41zQad8HT8vKFBqw2EZG4OroO6jLF1p9tY5wvIO0iH7hkkp0oLhF\
6Lt/u3/vkTusZQpvoERqUV7ZT3oe7lwl7oN7qHORYBTZirU+snVkSwv+9WoQ+\
0EOXBL1GwtLb0d3CT/Tv7IN4+r7P9eVgqLCilYtNBU1I2xrX7a2FUfW1c3IF59/\
LR9JJdfTdoM5C5JCTwdecKuBLQWCJ6VrLgPr3JJNzhFrCEqOyj369T2FELOLmyRXcChjzgDABwGe1Y\
die1/19r17mlKtZtX0XEWCpiQjEi5pwjJhRUUIxg5Xr265ICq86p032+0Xf0j+\
7RpVvC3ivOOdfRLEcrwc6fKTKqnGgi4nQCC69q5pyQld0DnrAHtX5v8H0SheBYtA/jQ+\
8JwWXb0KWSCq6nwQo/L/shdNMiPT0f+\
0ZE3m8r6TkREPgsaP3FRJ6hmoKJxUmKFZJVOvknpoG22tJeKIhDwfBtwBIytzaJVP5wXNvMG5sKt1z\
7LIlWUKUUTVKcokZFUL8v+7f6k4OwFY/\
BTMa2M1EHFi429rWWpdHItSkAWgCkeaC1rAKgA43yuL5uZULh+HM4Jpob/XKqmbp3TJswMXTtjY/\
VPtDS+vtQpcJFfI/EcszQd3UhUGOobcce0n0y3PdoR+83gwKG0XDig5d4/5+\
HwsjMTGldmBlMyPwND6lv419xkXwf21bGZGLddoq39BNaT9pS8nT9UlwI3ntyEWhFnXTEpkeLTJzs0\
rvepS2o49iLBw1kEWhv632Sqrqcm3Hbv7YXxJWr4vAtWU+hnlvDnmq/\
A9wvERH0fpM1v0tCPA0q1JWA78BkgCxWfvNT6dk+\
MyubXtV9y7xQk1kN9adF8sly4PadnSNotl1jpD3NuvUABe/\
GA3VbQWCSlk5mxwf2brWoloicjwA6sMjE3FBo7svv9HQWXvdVRdhZ9MFX3yLb6YsqfKG77LWrlOqyM\
5SAcUtuFzosTPOZCV24ZJrk043nBsZKU6/3PsYDnVCr1OIbBSN9fjSR6qVry4VDGyHhXkvBtjqm/\
GQWcCZrcnuDwyA1RtvJDvThz57blGPRfVc5+n4w9Kj9FuPnbRThD8S9PqUuViaeEAXATKpnS6Srew/\
wFccHEI0qsoaQcwUn9nNvx28oCqhaaOv9c2MKqhabDm9ZvwTleN/3wRAPD267/WVRZ5/5utA5wugv+\
F095alWrF8htN0YgIW9svIQTV4j1862ErX7TYeNc+H3mK3NqekNgABqrSNXvdpd9xgdCvqZNfHnV/\
NKIoJGJpiWZkYkngjsEtyuaOw2KMTcOGTZIHgWmBTlzDlE137gnzKOJwh8AN6bHdZ3FT2DglokbhkE\
FM9aqnjbhC+m8KJcXECAYVmVep5+0uktUASvLENwQd9bd1q9UvexX/\
Il1tp6SnRn3s3HKe01tfZJj82YwX6qIHxPh4p6oEhYAb0BcYFcNVoB2ecX4xzpYBbljutM7e6k+\
4sbtM5Lfi5IJOx7ciM9qCEhaGJpq93Lm4HXvmFM0YXI0tWtpoGIRLPZvapQXZ9XulEDhMAqAQqxGV1\
IO5KFKzEXEL1PT7/chgks/\
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\
Wusz7dwT07iwgWjy5YMVXTl6ugGSJ+\
T3i2ZOJmron1XGQAu1tiJpq7pyDV94VOAXMsZclFiYrUEVhdv+\
PJt37Vf7nW2G4XV5EgE7TsF2s3wLNI8ANiiNul0g8OaI95zu9StEWGP10e+\
TSzJirG0D0hRxQNMINViaeuB5YL9xRrhjahgD+AaSnUYjGdizYDJT3ki780Xc/\
ycmJmrJ4fHF4RCjKfv+uD6xoksUnpIESyY++\
QGhmJf06wkOPwdurIdr5tkTL6gNQ9WEmexlmPZLNfpJTog3N2CiomAJo2/rgW2+qGNtg9/\
K32lDmj8nl6onQ+9WvTZAbkmxHEKU/vT/exN/\
IY0zaWxNt8bG6vtXPAsAFFAU25zeZmWVa0XPQv41Hw5xCFYax9EJdiHWO/OL+u/\
3sEiQu5nXpde3vkcmsEkTe8JehFvpYDzaDknylRWnb6gnr+OX6mdfJDlApVYZXThToN8bgxZRCew4+\
Epb3bIIoverfSP1tke8W3Pk7FXyQIhUcWfJbaIwAQfHkS95IGs9uLmkcRtxrXfnk+\
77qD1H4HKrWDamLbmJLBhw+4OCzrsFHxJW+6fEe9ILnFKVuf7/TsxmLYMgaY7j4Pb+\
HVVfcs5OMc35+ymI6FYhBx0THkE9W4qo1E+HNYKudc/X3w/\
G21tQWpIMmOnyXecT9rWB9CIy2AR3tVN1IuvmCVBRzOEaI9gvXP4tqT45KVgeiRRkC+KX+\
o638qnFsvqWgcURnZSJBGKYr4yIbWyk1mxO/k4UnEUDS64Q7prVoWswB+\
0D2oUpOUNpfauZSghq7he8Vxaq0HYs8i+V0EOlo9MITB0tsJ+OHIgVShmYdL0pOfthl+\
Fh56JLTueAeTUxa9mw+6ylFtKbenWlQn2YWHvdYPz4/\
IsCzMQVSqJRiERIu53cDNbBdmdigOfLnue8U1fwBTUZWt8pWOAaAkMw9DHoDB8EHDzU2ZoFYwUuT3y\
ZoJYomk6fiQL1o+H1c92GkH2evEZdv0DOo8uw8fLelNzLk7ka4iCclcigu0pO+\
5Z5NFJuJjD4Ve5sConpSQb2asjL7TRj9x7mj3rNIDllq9NsX2qXGRMwG5wZ0J1I7f3N5OVwsqK7jJK\
cxPKOp6l8GSIeRwe9TFSE9xapCrPUnZeDV7WOi5uNEryUu/laHOyWwOWM2aNbtgUklwmN/\
4U6ioRwq/vejTqN0MnM1SdehJnRSe7yUDfxgZftxHYXVedsi4m8p7LWapEgXularjVKV43tsPZ2sam\
My9F14fWeFveUfx4sCFEOVjnts54DJwfeJJ7eUxEVV24JgPT3Q2XQiBgzB6hYNbNHE6GR1uwnSKZ3c\
SXr9KGgko/Z22xRpMKZbWxvtpqK6OE3XYA0z4A36LYh4zGZSeIhIVV2JdYQ47FHD6/h+\
TkZMPV3fjXUqnNmphaB/HZDiVxOuH2ug5D6QhG+vvjOqCNWuupPhNPpQBjol+\
xiCQD8gRmx8MWi1oNOWJbmtDlAhYJ9V5TekbxdSPSElWUY6VA4CMWyVm7M99lyJsuuwhRqOxTRsDXQ\
G8IWifkaGRMHp/\
jZu1VaMtdQwgPeJKKUwtS8XDviR5MX2gaFrAMCoEYXelOmuq4bndSNTeMyNeAnwencKhH2M2GBsSPj\
Q0sgdBNZrFu0C63c4ZobPap6/umXGQgoM1b1g3jNHECbrK2WlxsIObCOHcndGyKVJfrmyv03L+\
iJWBvSNHFUobAa03sGSaYzdPNDH9+D1lHo83JVLZxj0m9oAATgi7eUN4eBBFAd3aXNT/OOJrJVa+\
RXTR8dhpar+pwckdQjNqWihQcmiJDL0QZZwSYL/4PUe9jX5y+\
ZXpceaz6lvFlZRfu5gG97jtdLUbxMHbbXB4MSQlJ/rYHyyWDAJEWkBKBoXTubXpkBsmb9CC2USHi+\
NuNCB/kzH2TBewBpQrdjUYn8NvFBfQNQh7h9eKHv8ZJLT6MvHkLdF8F8+\
tu7Abql1dKXlpt2AMt27lHDdx/MrPUrwV30XF6MmwyG7hcxYMnSn52dh+ZYFt2d/\
AOOp12Z8dsmNLE4qlcnAr48FSUCJVubbCax9Y1sOlZM6+p7kBYdI/RtNXCnhmyMmGLjT+\
PlIaqzBchx7DGSyOKP/v8yTdLDu4zkCdqE1o58TXZ1b+\
GovVKaHHymbkMNiTvgGffZfB0CyCZCMDcrVSjYM1EXqc1cKfeYZrcTwz16jkUtbq//\
iWP80ytoHiJ0tJPlZkvwvpf4rjC1FonUo4WNu498qNRPKQ98sELdBu4sEBLRHaOPzsVeuk2OnqhXps\
ejZyAstEW/LdKOBjkScE3rm3GHktUPW8xD5iX2sI2hrId/Fs/se7yY/eaYXyLAnzxnZnzo/\
yiGyui5jMPH8l8RNhwqOVozKKvpq0pPpiJWUKonsnJmK3qlj0U5brVVVTZWkIN74ZCwqHPxLC9yjIV\
JpIOcWp/QwiYLp85UDx2Db4P8ZekL/\
AGRJeiGNDbxZBdfMsquJ66PJaz7mDrq1O2JqPRkIC43u3SOkb8K72Smrs+\
fWoLTv1cmHvk9pev8Khn3A2q4/zAUWHFI9aM04pvopnFzCXJKt6vi+oWivYqYuLX6DxqOD+\
Y3sLvoWp5NOrWyXmCCkTE4Vl0I+Xl9i1mv7+\
MJMaExjoci2xDsJMXDaUpn6vUY3iFNiLNPnum4JtBqxqZgcOshFWezhAFQVm1Yw8+h8Q9+\
sWFd6hJGSjcb5kOUM0LgRpnG49DEKoZLlHcvhlMIMcBHZxCQDxjlHM0wja9x7w+\
u9ZQwmyH5K9Xn4iYTJCdOR1f0kPtLQXxL6Ph3BOsE0vd0zvH6XBsxa+\
B37e31dzsomejzBQpXxJnSNwfCS0c7tZAzTVzpnhwUvONW3swE7df05bTftWRgf5+\
Eckgp67M8OEuH3hKkCra5GvWZJsHKoZGK7DfRmzyuShgWfA+\
2mqKByBmi2SvDPh0RyD1cM0ovSiUAZnQ1z+SW2FvzSs2ZfL7NqF1evf+eA0bSBj6GsDbm1a+N++\
EkCbwsz7PB4D3B1tWoQPa5Dh9gw5DdbmV6s6/D+\
rUtipdRYPfd3yAx6RzWGZqHCiDdD7awg7J7y5uc8w6d4ZuEaiGPNKWUxES0FwnaLMkbgK4zWHcoki/\
Dn2/jAUbN/sH+eyZPaeLlYyXFZS9P0h2bPKzyFkj/\
ts47INOyU7iSHJjF3LUFAxHYOeXbY7Aaz7hQMaGuHgqe1nUmx+fhGY1/\
mrJKaTDMhoNbB3P9iH4kGPjWoKnu57gPcFTjjaDp0LhjmgGNdrM/RLfvgmvnYd73tY6p/\
hXhrzxrs5f5yeK5qqetCOevW9p/LYh1e6pU7pvR2M/065V75N67y9NbRv/OJIQfl2obOa/\
7l94OKbTl0me8HxhmNq3w6Ktt7WoWpZk4V4uMXs39njU0cYbQfyXE6Z+mA9YqjKhfbR1TOlxxech+\
fUL8ASnyWISseL5xuGrRWlG4GoBkgURPOobR3xnXLcpa3PzjL0eseA19EQDAo2u3MZGwGVr2G6Kz2z\
4YT3hZlvRLDNqNxlmzNoVwLl8PR56znPbsFCtgu8a0iaj4Qyfhf8qfXy3yapKlBo3HOqd+\
fX3tGevOzM2O08Gm1S+C8GCnYdJifDR+EKb1/p9MSdXHiefWVQ0Yx1nwHnYJeHNaav9+\
gZhJtXh6ezh3rWH3ZnzdW63fMVqdy3ohXGRGkeKycNFMQXEjT4K84awMAARxD02ja2hOrtFQCLZ+\
zYtAV9q/sBikmJmeixmwSCRah9mDuIjPUbNjFA+xIZKPG/\
z6k0ZKOeqs55yBpLLdZsvmYNtmK4KjgAuyJ397XXAhHNPp9rgPLHT1rLpHlzfKRkBPb/\
TKRnSFns6YtecS3Ruwq6UEzBBVn8ZiCaqFnruFtJx6UaInzWyxm1BAgCMVhPQ/\
fa3gi7fDnocld7jGXVE43VIZ700dD2q6SxziO/eo+\
5rYOrfTU3P2cUn8HGW5k57XbavMzfT7kqsv2mUJsaVoVG/\
zEiqfgPNx66xemL372IAncg9xCuPS75uIjmZ5m40xD9d3o4LDpg+vI+Ae277Lkshjzt6/\
UnVMPbK07bJff3swNmSsaq7HclI0mNaDvaXIXx3umTHDFXEZvzDh8oU2L3C/\
BPOhJojLviLttr9E7zxm98BOAIUKKSsSqtfX6guagVa+\
bkP1k8gB5Vz7Dy0xdbFop7hzVnrJGSCRB9BwNClS3ikPKln60fsUFFwDxAcRqNolA/\
XwhUuAgFoozId2p83DQhPhwFIgmq6uWtmZy20RYX8gWkJrQsJdqhG3IV+ZdDy9+Z8/\
ruXLcrSSe15TI6QZqtMEz1N+\
SvGyS9N94IxeAICyvlZKUmEmBV0mGfN0w0nJ0OjWmbXGCPN1mjUoPBk1Yi4MaiStvBZ52Tigk5+\
8dLsMwU+r74t3zbr2XmDesPdTmE974ByDTzTpsPQLB648KXSQg+\
NIOyU0vt9J0INCroVKpV1LdG7WTI93A0Pl7HO3Wkd5THzHmPUmqeYLcb7ZHTJ0N23zYCvhc/\
SSXvuRNt0nu8LAjArf69Z6+vpER08V3i1GQwv02GwHYmIf96iG7XeTpyNRlZL1WKLP+\
KeHPetNs6wkODotbawxg4CVtBPXZDzaGSOZCddBmeOcmVY2BPWycUYAyOEvEChDCbv6BHPIjsUn8yv\
8Opm9uKjL5Z3jzuOTcppy2F1YwF+TmYcFN6JGGiv2xkbzOumC/vIhgSZftsr+VZ5LuoCuaente/\
vgUCx1G6IG6A62+qTFqiz2mNp1/5NP2JlK+WbkB2eKZbpkoUEXky89jcHv2SHR3R1nk6rXlj42/\
zwt2evxdoCA4VCbTmtYNiSIJVMudPWiq9NyOWvBM5/J27qR+\
IvCJx87X6z31Elax87lKKYDnymxoVDaljKNFlo8XFzKkyRWsFbLXTTg77X02l2sNfZ+x/\
r59pyWh1957H6RKbzeEpPUr8Rw899fmbel5ZyxfHyVbnw/\
ur1LadvgWQ1saI3049bN7rG54X2cz4zqGdmkI5gvQdh4NHYZt9ZZlCxvPv/e+\
WSYJqt1lPEMXySD5OFicFW+y3V+yN26t4nF/QUYJFQiGNyKl/zfr+X3FQeTan20Ynceet/\
LnL5apZG5dJqmQe4vk2ko9h9yJcew3ZO8ZazmUCsoACtxj9NO1Dzw6vlORDcnoZEdFqcb99+\
1TEpvxinWHCot5//TRAy/bQVi8PzBoBA41axt6RtwbZPyrW7AOLCulRC7lj0JwcaQN/jDDW+\
CBottjkbJFwcgjYcYisgY5JakDqZghe0fbomAq/Zp01hvKvEj7W63roHJUKm7nhobR2OKS+\
WJ4UOktv7YrNcfX2NAcabQBIMYD9IZlBXtAOT5u+SxxevinTr68ld9ukrEk8lCf0tOeh+jPQg1gK/\
PWa+khWsu2pTeRdOv9ObVVoz/vbr7tOP/7ehq7MIf4Ki/T9BxCRZLb6ZkgA2PbwnMI9+\
bZ3XcESlEszfwexEkgBEypRHo8cQG/UD6jNwGMz2PSanIo722TISWclvt+eq6urDftGj2JYKOMk+\
x9+QIfcUjh5PreFJdrr5p3TIs2kjt9km5VmfyQy77eQ5ogxZh9pAtlIPs/\
7bTT9CWw5wsBNzmi1Jvji4BJA7/s63BJ5l5qQ5iuLLktYe5l2y5W7W1bbpT1svZ3Sh5h5+\
dPiTU77i25YvxmlsKZ3glf4TN655MtsnTnnQ8Lbf4TaBEoTNAsnIQq6k3ZruUEDpFvo4Y8kNkN7kXR\
WfSA0VvKFrlE/3t3PvMTuNJLf/WF5dOd+tXB/F9mW5/Tdx0rBPWjdsc++\
RMulktu0mwm9Q8prdOerPwjwQcdKg+\
SfIsyxMDQ5kz2yMYlvuhcaAuLgPyU03OzxtqDey1TxcMwQYGnwPO3+FYYQKW/\
9Z3CWDZIDNVq6HbZp9GjOZicNNedqUxQb78pDkEiUOgEg9fPx00rXF1ol/s2nBVukE9mlj+\
e0epmLIUIm1Dz0dNbpsm9q+ct4niHuTaDMaCImLh4K00A8U+wxQold9m+RI0gI/v/\
i9CkN08ehrseVdHZeb6E1lGDd0OqJOapk6smPfdj/\
DMtfIO5l7N3RD80774qMo6HYWnN1zj2oLDguZVdzyu/xOl/A6QcSViD/\
7cshOivYWVbjLPFzsDWJxWthCAymDKonaaDSAkMzSYovhS/1CduBJUXTZupD5wjxJI1plL+\
W0GjfjbcQZTUT6OmwUaXDhEscFL+5S+GdRqF8jnuMHGc1Yh/GxF/\
6r9zwpu3S43U03NB4bjYpzpDHwXMNBVdNM8ZQ3YANhS3y1hn9CRmnr/\
S8gGBX88pMqhLbaV3WInwjy82ajoM23FJ4g0vwbyQhNSue7wlTy/VchiZM5jDdd/hB0bos91CK/\
C5u6voehjGj9QA118XpMQdD9pwsM5uA4hC81FG/aBRg6pTbJZjlyx5k2j7i+\
5xoHuvTTZNf8lj2CMHcAGUorPNWLOaDCdH1hzdbYb2nNYlTI5hqN+nxN1RDQq2y/\
XAlZMLZFj5IL9a+pzyY71LAVsajhetSTUafi6iNKZrHwVNqesEGagVTSvWhnJfKyIC/\
LNWf0lfWAMPrFPq1My2D6Oju0ZqaiVaAAgJnWITnXizye4mbYxTuXxwCGVM87f5n3V93B9PSOZN0nL\
b4WNPR/MvVM3uk/\
BhRDDr8mpZ3Xll4sVmrRGHSw7klD8SXEOSKayAjM2bUksgbBFHdh0s9Dxas6TMGJ11zVSqRgtDgNk2\
NJ1LIyVXBW6lqNFH6ynDw/v/Pwg6r5oa1W32gYb7nXCgF49McR3+\
kcyxgKLrGSUUcrRG2gXxC1SZy6Y/Xz/\
9vOXfkA4crae7E9s0CTHgFOM53al6UQoJYwFvxRPLj3f1Vh0pb7XY0pwnsnLaflvVQHa0s57hH81SX\
giMkQs/8Q1eq9+y/RrWdYbeBzynDxgxPjbd2lCd+1LkiuaqUsSPEyzNGtSMpo42bhZ+mBGsP/\
UY2ZttyPIJjGo7Dq8iJKeaCJZfso+EYj13qZet91O+LxeTsP1eRKUSk9GXT39X8vtpMZ", 
      "Credits" -> 0, "speakDebuggingMessages" -> False, 
      "printDebuggingMessages" -> False, "cacheDataLocally" -> True, 
      "clearDataFromMemory" -> True, "sendDataToWeb" -> True, "studentUUID" -> 
      "anon_30424622f5b74c26b2b0f219fec", 
      "ClickedButtons" -> {421529663, 695984209, 932933760, 1090393974, 
       1124045646, 1169513409, 1926444827}, 
      "SubmittedProblems" -> {1599379777}, 
      "Submissions" -> {
       "1599379777" -> {{"Sat 17 Mar 2018 11:35:20", 8617029096150563781}}}, 
      "ViewedSolutions" -> {932933760}, "ViewedSolution" -> {"1" -> 26}}, 
    "CoSet" -> {
     "Stylesheet" -> 
      "1:eJzsfQm8ZEV575WdYRiGRRQSsUURREprPVWlyDAwDKAsw9xBSDIm1jrTcOf2Td97gcGFJ\
CbqU3HBRJ/4kmg0bigajFETooYYI+6JmgUTJURjIkZJfLyYmOirql5uL+d0n+\
7bdxiYnp9eTnedPqeW7/t//++rqq+eoGvb/UEzMzOLR4Q/l9WWnK7VrvWHxG/in0uqi0v+\
Ua1P57u5ucbdRzc/XVivLS9sUUvKH9b1k0O6fvKo1gt2uBuW0t0Hd949e3K4QE+nz6hcMH9dtV6b3+\
PmlyqLbml5YSdEeKV+s0t759x5tRtmTXzW7upipTpv5patW6ws7a7O71qszFWvdZV0W+\
WcytZafY9aqoSnLS+eFZ+3FO6pLC+EX+129eqSmjfurIqat5VFU3duvuJWXr+\
48uZYze3Lcy5VYWttfmm2eqOrbgwfcmp2XmzzbjW/y4UqucXwt1Yxjc+\
XqvBNqFDVqJ3PwBDJxYp2u9V11dpyPdVCLSw4VY+\
1GvTi9fF1h8YOqC7N9d55TLPLG1XYUd3jFv2hXSNzUOen+o4//9Qpz7zx/s31qy96+hPiRU/5xpc+\
52fOieV3PeWEnz2nv7x+zOmnHfW7oRzf8r4z4kVP+VdO2ABS+f994zqUU/43//ju553wzlD+yYM/\
my562rMhXFxww0LdLS5Wa/NXXnnxltknha+klg5lXAHMpAfUIggk1AxIyWRGrKTK+HJi2yWIK5/\
iTbNHhYuLV0Rl9vDY884shZqUqyYXgmdYWUClkIAiYYDGAgNrpMDaUKq1XnnSiqoc2ZKoVMXuV21sl\
zlfna/GyizOrgtfhs9qeW7pafO6XOUscpBZx0FmHQGUCASkxg4gjh21XkkrJ1O5Y1tfXhoU8fy5IOK\
l6+go4sxgCRgVCtAMQ6C0k4BgJLFhQgtqFiPynD9XW3S23JB360P3kJ8Q61rb4yp71PyymquYWN2AG\
qOPvVHSWC8p4B5CQLlDQMjMA0g4l9xKxzLd/fKc7k2vDbq8sOTqOV0dO3S2Vo+w9lw1t+xS6WW1+\
V5UKKwiV5iiDPCMuNC70ANFPAZIUkcwZERldHgVo+zNLmuzVrUUPoy9zRxgnDNAqbNAKE+\
Ac1xBjVQQVOOPGFbLxnjPX9vzzqji5wdkDXYpVrNRGs3R1gu21avXqSX3/K3BIixdMG+\
3u8UA1AEG1nf/pqF921QQlaWcN7RVIt4bJS7aqYIeODFcnLe8tFSb7/\
tFbM3m5aVash85HRfNw3ODqKqkcyuK0I358fbZ+\
Kgr562rz1XnG4Oxo77cW5Ujm888vzZXqzeEIPbx9gvPS9/UZ9K/ezc1L760qRr/\
k9P2RnuCabx8oVG1I4qrllR5c1Cy6wrrFft6c46djA/r7qSiTl6pVBC2YHaVDl9GTNiq5habNx/\
VvHmLm1N7nU093PjN1uX5Bgi0OU33Nyflys4FNzizvORWEKlVsKN2rZtPEnX5gpu/yM0tdItQN/+\
anastVeOnxoCs73rXxU2Ll8RzuV53USCCus0mfrK76pee4/Y2OmU56EgcrsXHdj2h0cI2Cezv+\
JUbOj7mmIE4DhdcF16ulmr1onGIN128R+\
1ykdWkr7cut0C7SyAudUu7a7ahZYGm7VmI8lEOOxAzhCiYAWIJDzaOkIBwmQIaGmszgrCWdoW5rhiN\
buyIny7au5AUplC9OyzevsafQfV7eGHDwf1VG18Vj+nQs5YC5rR9w8yK43NJzajOu5LCHdRX+\
dljmgp78fxl7vqrqvO2dn2B8p3QOTaX1mzVV109KOI4GtOhDPHyimW3HDhPKUXQzkFkNQWYB0tKiSF\
AO2aAsk5IwmGWCbxKItXl8iWXbrO10eFajHyq6Z9pZa4N7tcAOpXnwXTDYbcH8St/\
cO6Dr5sNHsTGP7w3XfSU3/jcf//dl747lL9l6afeES/KdZh3BCpkeHApTPAweAANQUL/\
MYaI8VpB4XW5XjpkQC+1qfFixdfqlfNrscNajGqxdP8cNqB/xJbf/C8RPbjL7v5quugp/+\
Hr3X8eHz2wlz39o42Lk6+jd+5+d9+Nb/8v94n4df3bN972iZxy9YffeWXq6OccZF/10v7yn/z9b6b+\
r3/nveKd5QeCUuktFhBwybLg6nEDBHM0uCnGYmsMw5aWG4iDBgxERA9RAXEE3OzRzf4fZQgKQDW1/\
AP0K+9KLd944/\
PfXb7lQcIcd5gDFhyH4EIGJ1fD4EL6DEqJoSY8KOqhXS0vMDyxVSWIefWIfpje0Lzv/\
Nqe4BLZgFyzj0p1y2EHQbd3hd6etyv1uLCu9l7irnNzDdpSqt1QCsRocJoyYwPh5zw4fdRp4DWWmSS\
MUYfSQyICr37oY9VlGPqL5xeWlypjDf7hAwb/kLfc8aOkf++54Ac/ytG/47/8vYbaveuEF/3X8e/\
sK7/o7//nX14Vy4/40WHfSRefvPRHb/3yu/pufP4Lr7kr6efuF9x0V45+Xv03f5DUsn7GD0+8OUc/\
r/nQB5Nw1j949p+\
OIKUEQp05x4CFwdmlHgWgVCyYF4YzxozRhrvhUhpvSANQRkyPLC2mcg3FNMZ0HNceZNgHk6phsBUqI\
8Ao6InmTHpMJiimEeMvX14KXTSWiA4yoT886cFHySii2eUXHiT7RfTw91+RBKZ+2C/\
tuXkEE6oMDUgFAWY0kG8vMiCJpUE8oJHCM4u4Gh5eWGn3Go6lRVJkGUcgExQCqqgBUnMCSIY18xh6R\
Xl7LEfmSd2stntY8UwXA2gOa3tkAy7hypPj1z9PV74io1OEQfbp/R/+4/devSOM7xNu/MLt8aKkc+\
UQCcAcNF8E80xRhoByQgDkqMJQUA8dG675G1eEuag9uSDQz8qLQKA3jD9JwXHQC0wlBszSAAKIS6Ax\
k4AE4OM8Q9RIP7wPju/\
qg5G64eDS3UDWsBsyzq1EgSgrr0I3BOQPngXTQdUJZpBSZZBfpdrkxGlX1Oa8mt1biZNLgxWjKEzPF\
DYsVJdSLeKfSDEDktsAUUJCp7kuyfWHUcxYxaC/fOIUs7542yuTCl9/w3+/\
srwKZ5ooQjEGHCkDaOY40CZAdAA/yDxzDpmsHMWMLSsjr4eXlle+lvLKsCA++\
BPIKx7njywQEPrAYTQXwWS5QGMmCvNHNb9eDKPPnppNfPzf/I7Lf+rq2+\
I83sxN6aIsecPcxTgAzlxwMZyyQEUhMMJT4jyTmLHVe7kxKHLe8tycW3I2tr8M5o/\
aAbfe9YRXJAU4o3bOK8orgA5A7QTCwBAV3HyNggKoAGEEikxCTzNESvpYFy+\
5PWUU4NDSCsDWUAGw0IHbQAOyTPgIeQoorjMQJCCiHSec8bxJ/\
P7ZqTCO1ZJNX9dfvQm3KfiN1oSW8OCJOBw8EYlFcCMZdFwKppkZ3qaWAdlvmhUYqUBc8yCTHANqYgN\
R0FYojSYkGF3EychYNUxdL1veo109qWu2Fur6lq+8rqGu63/6PSOoK2GBcAobiKancYi5BVJAG+\
P5TBhBUKb5cHVd31TXViPLDPJhpdU2W0NZQCpYZc4YMJSiYLeYD/\
baUcBoaD8jXGgDh4v4MStqO0oXrLGcI8myINIauMiiKYQkuIsksBJGXGYN9tj64W07rkt996PmWadJ\
wCAMgmk1MaAchs6Z0FrDlOSBbga+3KHG+ZerZ6Gnz3QR57hEanlOLab1R9vqtV11tWdPDNqDCp2sk/\
lvp1ZflzT+\
C4973C0jGGiEQsf54ErIAHzUBHdTeGJBEAqSGUQp1NSvGyYVcWJ9S3VxYU7tbbZ4FMk4pLTu0xwBij\
NlW9We6tzeFOXaXK+q3lnOrvVdG/\
LlMJZf5aq7di8ls7vd7Qqt6F1u0ZqZm51T4U983bY5Ve0duqgjzdnFeHNr8m3QvOBxzQdvqy0uzZp6\
dWHpMrWnMV1YtCphksrDEJPEWgIgIoGnKsaDPAgFuDbaZCyQeIhWozGDqHuUndm0PjDJU8cSxRFnsQ\
Zpx53oZe9NUeJP33T2+\
7qjxANDbFBhwmFcsmNCvyAsY6gcAW8gJZpxbE3JyZEjBvRAmqSOC6EaSxoniwtXnPKsb6eWL33khd8\
u33ITJEEpCIGlMAZeBASB/QWEwCS47BnBJND3g/tb3oULi/\
GGzaGFcSCvqtWvDSpfBhBmSgsut9ZoSFiQ1AwGng05UNJgIGEwaggjBK0oX80jGoo7v1QrFygvX0/\
HkBQYMgCjU0AF9kBaLwAmoYKEcmg9K1/\
PhvpVg4pMtpaUueCnxblrpEkYdOuCuyohyAijyHHlnXXla3l0u5ZgNq2smGxlMwstt8GhVBjF8GjsU\
pdx4AmyWXCwhRK2fGXjt+fX5q2bXyxntMpXVBDGFTaBRSsWg3feAR0cp+\
BgWMmwdlBpXL6i65OMBpiYX1Jlg5jl6woRNll0hhAhGlAS3DsVZBNAQTnikEKLRpDT9O1c1brZ3bXr\
J1tRFZzoDIvgfQof1/9mCAgbJBdKJl2oJ8FqdDM1YI19wxRbuxYQnX3/Yw2Ivt3/\
1wgQLRzUwoq4NDvYJRosEVAqOOUkOHCW8GCz2QhyVURmcsdpBK/DkOBAxZlLKsI4WSqBzJQALiM+\
gCJE3GU9XsfBgyFlm9rlrq8uuqLK9q0WG7PRgZPU5uZCk1v8rWCKr71gqVWxJhFOhf2ru9JkxHNdPW\
5TmGu8Y3sUk1SnrdVSiF4wKZGH6Jp5HkQDOCd5GIPgFakMCaAZw4HzGcMyM5p9bCxKW+\
6l2KPMIeXZcYd9IBYEOBtlJfM+\
oqUBHjPslHRGqd542QAx2dgxGgPqO4qkDGn6fiwsBd5VnkXNvOZxORY0MkYIAqDEWUbAsAxUACkrgv\
kvPQjrUuODP3VeTdXzTOoBoKgFweg8w8sUggJqIInT0Q83QFMrgUPBqhFpA0ckaxWz6NyaNkGf6+\
DqwX/9R+8KZu3WRz81XZSUQmW8IoqB2O4YyNFAMU+B5lTwTHAr3OpnC/\
OCGF079Lqrmpad1l1w6OOPL95SIDJl4xFFAXYHUaDYFrDgd8edGBLoQGOBwMwIhg1lQUOHrqbuGs2B\
SpjilIGZxSedV1fmWrdU1LDjmi9s3jZgPXFbfQ5tI+\
bQFcwdFz0PiU3bsbtqrp0PfdW8aebcnptil1xVtUu7e1Q/\
hRzz4o77ZjiD5HqSUQYyGsSXMoiB4EICCwk1xmsajHN6SM+il/\
Z35aS8e3FcjpQP2Bj6hCh1cWNoWpfp1FxlccGZqq+aymIKYhbsD90207s/\
tDbvQM375s9aq22bz1w2uytqsbn8Nob04v7TGBG9YM/CbrVYfQRtBl03k6sRCRBv/5mbPswvC4B4/\
uZfTRc95cffe/cxabPo3/35YzfmbBZ99Z6vnpjK3/OOP35sTvnrd9313LSZ9MUfP+eqnM2kL37/Kb+\
6OZY/e+erX765v3z9yXfitJn01W/+FsvZTOp/98mbU/kbTrtmc075xx585s+nzaa/+a2rGhcb3/\
qiH6eL7BNnnPTo0ttPUWZkAPtgAmXgqtQiClSctAgACXXGMSJl1yQfMlOoHCvDOkGb9/\
WNn39rGuKrfuEbb+0e4oFReOwyjI0GXjocaXqAisxnADOWeWsFzhhcvZ1/\
cri4tGZDPVKzK6ASlK9iasvzS65eeWplPqjHrhRUGN2/PWRAp5x8m3hPWv/40jfPNy7efje768h+\
AcJ/9NW/TGt1H/2qB76cs1b3m6fPVF8fF0r+\
1fZr00XJ4Jt0CrvgBBmEA7fCNIiTtBkQJm5yRlarAMdH9fdut109qrv3yhDagoW4eb+\
PqHOBrS7l7Zbrskezbi4MysDb4hu3hNsG35Vn/\
YvuPSI9cWGutrdpnnKMZcNDWtg78KXHppuSwF08b+\
oupQLo1qg0F9KyHZe1RTKPkDQetDmM9q5GUoFB8Juof+u5zT2/aVIJDriviQq593XWc0VXcm99dM+\
tg+9e33F3WnSXd9PRHTelld25d6WxKnpEe1F4YTf0zGIXdkP/jHDvrYU+\
Uiotv1uZ2eAc6MwDbGRASuhJUGPuAYLeqwxy5LPRV2sMAs1j2mofGrmUcHN0dCzgyQnUnvbquxqg+\
E+Pft5t6eKTF/\
9cQsf6zlff8MXjS1vNTENlfUA4BLEFVGMKRFyDpzPLjHZZFoCvZyN3Dsxt6GvvmEh3RKOT8h6x78Fu\
YgA2ARGW1kosDQp0Jrr60EZX31tgRKZNsPjEYjRRET62c0gXm0MyWSF+xQfuacjuEf/3me9NF/\
ddfFNDiJ/+g7P+orwQS2ZQMNcEGMwRoCoTQFkcfCjFMYfWYc71cCHObfGYcnxUG9+\
motw3SxygWGU2jBEmLIxW4FhKxc2DDMe0ETozeM3WDaQ2Nsx4ZYL7Xe9/4dt/\
kraBnfuZD6SLnvJDL/j2G+PusPoRF3z3jV8uHdXywiCNfOgpguJCeBRT1TgENM9k7CWMaLZ6TT+\
jLfetnpkkxx+0De87d572rqT3618+37h47N2X/0kexz/rbS94XOzfe555d7roKf/i614/c3MsP+\
be325cvOVvb3t/zn6857zsqA/ekva73nlMuugpnz/kVdckZ+\
GnXjRzbXlnQWhGrfYS8Di7SCGGwYDGdfvcSUSdEsQjv2EYAB3dOxBjgk9xfpp9DzxHNdu7JYCFVks9\
kcj+UFO3n5w+rZtps/YYv8lj5C3GmtOSldVORTDVFbuJxDSnoYMyK/zDjSfcfuE/3LepTtK/L2+qP/\
Mbl9/8xvlbNuVUpyMyeHiq3S67WxXFWJP+xqCeq08O2QvuidIZ5zjOqzt17WZdK872srE5elvrao+\
7VNV3VYunT1JEdaYlos28XZ1rJdopYtplRXcOcAWHu2z7wj08gN2+\
3sXbDyPf0FGRQRUXWWkZ4zxxsjtmh1OISE0JI2yMNSGlibVpcZGJEus7Lvx0w5wuPfD0d6cLefdysq\
v1+x9z8z0jeIcWKY+\
hAgrGpYxaZUA6G7xDSaxBjhptShDrjTktHtO0DcxrdmDTauyCw069Ap65QKu99UDDmOAOIWWkzRzWa\
i0ng5vwtzjBwPgTH/XRz218T5Ba+\
KxjPx8vyjoYijqXZUAo7gGV0gCRSQ5s6ASXBRZNsVy9K7EhIWIQVTVXvXFMcjyo8fc9lqK0e/\
CHn7gBld89CH0QAqIwUJzK0Pi4JoA7DzjR3DCnBZNZToh/\
Yc6pRVeZry2labG6q1QXK6piQnllOeaeismCFouI1qht+9kfXrHn2Diwb3jbtvljSw+\
s1DJjGbQxN2IQcckY0IYakPGA2JBYL5QqF6zqHrhVOPnnhV7LF/\
YjZzpoUt4ixVFi6cc3H3bBXKI8swvKxNRNA7cHbGwrePzlRWmbQl49jmg+\
O80oD6pAd6clLRnEEVcb8VJIZYZIgCTCgKK4vQASDAwNJgljnSlXsDdn9YmyGssQrBs1RjDIKH9B3n\
qaiLN8bz7zt9NFT/kbaqqRU+aUL72vcfHZ71zy4mp5HzR0VxaUHsQUoaG/\
HARSYAuY5sRiJqnNyOpR76SZJg98eiP/RwVUVpaKjA6Ag4Iqew794afEJ+PM9c8u/nm86Ck/509v/\
lwqP+PvP/S57vKBQRXmAioiCYhkJIAIDVyPwWAnaSayIHPUs+GrlTv48MDVMl2+\
5WP7da9w2513JAt1NJ5RQJUgQDAe/\
jgWd9VwqawcXseO7DRrUcm4rEp7SAHWsZIsaKnAHAJPCc2woQQiOlGWEau2eXlpd62edLMrSjXZyed\
9kZ9tUNcqxy3JcCDaEAUZTUkBaRBUzFnQ67j9To4VDD1ymMis6+riMe3iIU30HIeel+\
Pd3bY1Z2F5K0ZxwXXBWm42ZRNZJrh/jtu7pXZ9hwhdVV3anffj+NVsMNrxRybm/\
uzcWrMS30qNqNZb4ay0k7u51G67U7aR9DUJQiPXZKhr2wh1pN9qvS0+PNKyot913x0/\
zOvGvcd13du9ajH+udg3rmN7rpxfDF17ReOL3gSazacm2p96uJ3Etm3dV1bLbQmUobarp/+6An+\
ptTvCh5+pLVeMmq+4RiVbC7Riaxcry4txC+zOZ2zlW9hT03/\
oWRUdLNDexq8Cda24IF7xR3sqtloPSDC392k5r0JxTGvLczb9NJ1OsCctA9ujwmUgvcFbS4vRYnH4O\
j5100q3bu/clrIiDanFcWnYXDNb9EGpQxpdHwsbHbHdLS3X51fUtZkhvvmb+\
PyfaRGJRtBoz0IMXq6ARKMs5SpJbmz46tJWtC71VFpx6AMm5oBDa9CvisG15jB2ye+A2nZp3+\
a5Vnwsvm57NC09d8Xvg9cftLebI+bljt2mFheTIC2uaF5KrKqWzO4CIRwk04Mks/f967vef+\
XC2r69i1BfGCO7Qc4TQW9sAB/\
I6DsMeqxPA6hz87CVWTLTFxWcPIeH3GgHmQTMKho98cC1YspMBzMV5/wI99yf2gWZ/ZsDeozS0F0V+\
4WFas17lImP753pW3Gcvo/VqVZm+\
oxbwbrqQZKzsq66f8t3wTLqhn8auyxI8aVqYSHuwx30jlj2rBTevKo254Nl3jy3sFsFD7feK1lHraj\
NoCmJ+KgE2nPVBR156469C43V3Ulcc+IQjdS99epCqvfl80Gvlwof39rVkWY8oo2vFru/\
J6QOC6Sq7A+mBGRmSkCmBGRmSkAOTAIy8iRxMnbdua7T9/E96U+BS59ecInSbm7g89u9kNMdw8rT+\
x7d975mq/JCqsev6NVl7vp256aIcaPT8gjXsSu/apySFu1dOn+m+\
W360UpRHuVY7bEVRTmfo5LEYHVMLNMQlCKzGkXyor0Lu918ksky7OSE7p+\
cv1sFZhODOlHeAtKS81BOWy+\
pzrtmILwb3JsLMX6waeVipvHv3Bwhii26eEnNVc1VtbpdbOhVfkXTuMb7r1gOmtau5uDfPLah3ktu1\
B9GFbpEze9aDpTj/DB6u2r1vY0NBSvblHp+0lhh0hadNlWK3+\
X0YGNuPcjxtYWjeUKzo3VaFmKvWV5cavgSXeHzZkffvynt3m5soYtNywvNTMI16YpYHt3/\
jp7cTPH782pzvXHPocmQ6p//XPz33V5mXLRvHhKIJLfAkJhXRmEHpKMcOEsygZxSDJGRvZ3Rd0RP/\
Z2pvzP1d6b+Tlf/Tf2dmam/M/V3pv5OifKpvzP1d6b+zn7r7+Ss0Hho/\
B3OMcI6rjjiWZzdcSweVo2A9tgKSONCmpXDlia6EuTkblzp2bA0+\
lqQQaex7w9nhQ1eKwINFUIBZHgGqMcxEyfWIFMEKaI01tisyVqRweA+\
Sm6DIpGfrhaZOi9T52XqvEydlwNitYix0mWaMIBFXN5PhY75rjnIuEeEYU0oMf5JXZA53CwNWi6yVj\
ZmoOOXGGP80/P9TP/308jqhCKrZTbATqOvUwIzJTBTAjMlMA8/AjONvk6jr9Po6zT62q8b++1qk/\
48Muv++m0Lz1r3/U312y+MKWW+\
35KjB8ouP9FKUCUYgM5BQL22IHzhAeLIK4I1ZUiM7j4N3Tk4daCmDtTUgZo6UFMHaupATR2oqQM1da\
CmDtTUgZo6UEUO1KSWr0zegVIQI8eoAc7DeJKpYUBpyYBXRmpHNeI2Sw+Z+\
HqWXnSebCaxH5704KNSFsDs8gsPkqWPiqTcSGQbqWfiWalIAMHjSc9CZMooJwzHq04olOeClrBVZVa\
WrFi/Qa5m0XqQ1R45QAxDzhnAIfYxg48GiiMNMuuV1JmiNKDB0IzAfXIxYDJz9Q70QS0ceOQ50Ac2v\
+nB16JzEcsdVL++\
edeOOGJBOwpv3NC88bmqXlWNYT0kv0fSsB7eUNe5YL2K3PSk0rO7la1dX3hLcnSW6sFJ27E7ANCu3Y\
V3xuZeGVMbDnplT/bnfokr6u81tVQOQS+EtMDG0x+plSRYKmYAjNk1IJOQC+\
2PaT2pNLoMjPVN8WWKLwX4MiK/m+LPwx1/rCdEOZoBnqWD1A0FWhgEvKceaZEhzmAeU25/\
V443dmde76bMj5tpROgqoFJtJItfrPh6bU8lZmRNacxHS905aAn4N797ZSN15/+5+\
mt5qTszeuKP0hLwy6657kc5S8AP++Heq+NBhvUf7z3iZx7dX44P+tXrU/npT/7eDeli9w/\
YGx5fOk23J5Iry3Rk6vEgbM7jcEignc6IhIIiUXIJ+\
CAnJUWpmmdvTtZBqXzzizcnB2XrS2ZeXd5BEVRIR5QBlAQvhWbeAEVEaDvFiGjKMgPHWvm+rv8n/\
adUtXpiTOfkiJlG7uCcWZF9n8Z8qEM0sTznGzrfVHCgxkooIg/\
bJuCbZV5Ai7MgN05IQI3FQGuPgUI0ePhaeURNTxrpnH36XeowgZxkAySiPPV61ExfFKfo+\
5Gp1xvjM07oe/YIp3fsIzJWRsjqz0o28J6O06Rb3wxkJdGWNcKPo9rcx//a/Vd85JR/XTG17W/\
KSS201gqmDeCWCEB1POmWqJgUmzNsiVZSd4RdS0ltFM3WufajSO8QSBykDUXhEmOdRwwBxVTMWh9AX\
UrvQluxxTjLrOEr5GGiobeGIdu1yy1OPoX/uhtekcxZ/\
SsvuHMEu4YkYhkkDlgKHaCeWKAwjHG4YMgzIbRgaBy7NvS02u6+\
mFq2NbRsq4w6doHSYiEoFREnrl3GCAdWxvNQUSDyUksLsBQEKawJNNhvHAYlPZqztiZwHNEpGM4JSU\
7vyWZdsJKzimCgco1xUllOkKD0AWP71uxP9JSckaIsMy0ZW/3JY6VIxf/a/PxvfenU2zbVb31T/\
PfRTfW3L0Ra8Ym8eNFYul5MQIYdU1e6bmvOZJRjmioT+\
Hfm0skegckgjoFwHGmmJRaYDmcyPfAzQS5THtiKwrNGKC4IAYbIYMAdovEALQowQUhgJqThfnw20wa\
aHDYTLy6qzk94AvFH77r6NYnHWFp9zQj+\
OZJWGAeB9dpFP0sAgTAEPDjp2CrCtS55DtMgAtdu8tEzrXPjJtPqW/Z89Usfivvx/+7K+\
9JFSfZGiQrm1QChmQWUSgiEcAZA6xiBDFPH/\
JpMm7Y6Yo39zzxbWJ78pD8FT8jrTMi1EN4D6FQQIZJxIAVFADlPHUYxxoN7plFzoKItIlOOMpijFIj\
QlJ3MPALYyYoCNg33P69VqOOENK3wvQ6C0JpnKKf1Ggd3HwYI9Vk8kzNgJlAk8gWjM+\
QoFFR0dP5QrZ8gNSiDJAWNIoIyqyQFGYqhx4wKoAwmgARoC5QHUYnlCiloXazePkZt2lYPdXZ2Tczk\
dTv+5S+SmbznbU/6y/JmkihuDRIOhIEN3RFoH5CEeaAVslpIATmGw4+\
46mncmJietD7f7K2AcAE0FDUvsFrtrQOQeRpzGfB4omz4CBEy1BmvtJzgIK9ryuVFTllXn/gYP/\
VFj1tMY0y+/aLF8mMsMM+ccBQQwlUQeSmB9kHuGTfaEmoVJmQ4r+\
lu22SHuMcmpaXw9arKSxTRNm3xlSVDtgpBqa0HlhsPKEZRvDUDmEsqI0e0ZI2imukI+\
NqedFbkRF2BW/\
7zHxuuwP97zE9GcAWIl17FgK6mwQugPHhE0sYDzbxVyvKgJEityVRdR0fsH4TvkRTPXJk76btYRbyj\
iBQYJXSmYzqYtL3REiAoCbBqaeY94ZSq3hWVOaSgUzH2P29gjYVjHHcgblI5kNyBfTRH+\
Uj1Oia0QKlvXdKok6XQZp5FnAh8C1CXYaCE9IBQoQni2PjOxpQBiwk6ESUxqHDyJrM+\
2E0gCMSARj4hOEFAWxQIJs24gGxtSEVzm0cAjzWhFq/e9CuvTdRi9z9+\
4rXlqQXkwRuEDAPELIqnLsTZUpQFpplloTsCr8BjnZU6lFr0dccBYUP27YRprEAbQtdoOZBwSlFFNY\
DExmVkmQiqhSGQmdUuHgptsO9ZTJ2DFf3KMaUXXX3WTy8auxmtq+Trz5RmPAQ0o+Ce/\
Z5lFHXAeCHNnOf79O97ZRdIU8sMFgpIFSMfBhkgkLYAYgkNh0o4W2KxVj+\
mTJCFjARYRbYXcY2JJyDDQsRdbgJIzDVg1CiNjLNG0vG5SBs/Cmb9dqjFaydLQRZ+fMbrEgXZ/m/\
Pel15CmIMY8I6BJDxgZIxAaMFscBTprXxLJPWTWaiMzV50tG93z/5wrtTdO/\
3PnH13eWje5Z6LpSGQCGtASWEAcl48M8DJ/WOIIrlWPtDh+5banXEAWFUJ4XgpeI52z9ySnCz/\
mZTfedr7nrwjJ3fbu/EXw3tGifGuqH/lT2biKIh3+52Lc+\
p3pBwuW1E0QA38yzEm8sY4OOaD95WW1yaNfXqwtJloS/TPp6YLCBt8S+\
nOorQTHLEAJcxHOpsPBcbcgAVJdBkxhBuhlPONiBMgGmmZ+\
13CjGQYoy71n2U6FcOzIxBSwdI80Rp6W2tcV096Zry09JdNVqkvIGs39jUPGvl74oIa9GDGqk7/\
nRTnacFfXdtql8UQ2UX/snIy/gaVeqYnB+\
R4wpLHYQuLlPPAscVmAFhfQaYls5rR4imYjjHbYPYhGfphwFj0YIjwj2yOgMo4jFl3gERQBoY5TzWm\
iiCOs60aV1MdJZ+TThe/YMv/nTieC+8/E8+XZ7j4TC2FmoDPHeB44k4b+cDxzXSMBwonwjdNNIs/\
Sp4W4GJWs0sPSaCCCl0sMMwLkJwEkiUybjFBnPjPFeMTXCQ1zXlchWz9AMwbZD3ksq/+\
7WzdycZeMNrl64tLwOeMe5gJoBhUSU88yA4tRw4IZwn2hhBYLlZ/\
JW2T1YE1nYWX3gliEQeSGnidkGFgZaEA5JlUBpPBIN4fCd3kLzEZzWSUY7u5h4yM76g/\
PdXfvGdH35XKP/vDXemi57yJx38h7el8udvuee2nPLnveHWp/ooaC9+\
zGfSRUlWzAiGEXuVpBRQHa40UgoYSBFUnmPt9JqsnF3p58m7lBNZO9u01V9qLd7/\
h1E37HMrpHI6rUImUYYN0BkKPQ0llg67DFLjj+\
7qpxxb3SGPB2xwuywP75mseGTT7xHXf3d3zcOM9mrCtNcwLuqjwRwoJoDkmQFSC4mgFo5LP5z2dqjS\
BIlvOQUtzB/\
uAgPCCHAayRCRoU3eEIC45VbFeAUR49u57vwa3XYuVujS5bml6sKcO393rWrcw8venXfiR85M9u7TJ\
558Vnl7F7BXQewZsBqZOJMfNzfALOZvz6RHyHEoVk8icjp30s7F6XX4xUQsz33bi75YnlhyIhXKMhQ\
8LB/azz0Jlt9qwDjCEjtjGR0rf8dQe9/\
fJWtt93MQb4SA7KdX4rD19MVHyoKV0iymGxRAaI0AxTSAFRIcZA6i2OHGYzk80JgjQvuf/S8wTeOY/\
5zRGjV4GD9csfxw2+t7wBGX/T1u+EghTQRKYZljwaHTwf/w1AIhOQaOWw1JhpzQHVMnI+\
DQBMnTaChXlMjE6cw4yQAnKi50dzGRiXMgUCtkwxVknTmEWxert/IxX18zxLbGxl79n/c+5g+isb/\
sw/Sxf1B+v4+OWW8Du8TIBu7sYUwZ5zlAxIqMSug4H2uZ3lBjX9gzaxmGHHQwSczLHjMEzu9aySw+\
cJVcTm9KkznsoQdY67iZLNB0CXlcDhp30EOBHELD7Xqx0OxfM4r7n2nf7hYXQrsfRivjp6Z9atrXxL\
QbjY2yceVXXAtEOWdxqX1wMTLNLMUiro0abtqLoWiCFn4svCvK8QEzYQ2mQBgZENhmMQWzy4BkWAc2\
E9O/dyx9m5yhjxaku/\
JrtOfzVbufcmNy6k858p03lnfqM0uRp1IAg0zc80k5EBRnILOWeRwoECVquNEuauVkbdHazhtJbZ2E\
EAJOVTw/waCgIhaDjEOjYZY5hPGaCkYDoSc+zfiOVzzujU++LQjGP7/imnTRU74bv+S3U/\
ldd2x4S3f5wGiY51qauBJK8OAicAGB1FkGbKaxx6EPnUbjCE6jFx56wclZBFQkOBYS45wCVtEMUIcD\
tDCsgPACEspYQJaOTAGTnHCMDbl8Kdi00eOvgySGXHHxwSn++j339YNz4q/2PRevT+VPP9yvHyG/\
kMAZNY4AhGTa6eWA8jCADhTSWWY1Qrp7ccIsjeIRHhPsyVmVZArOqqh5W7nA7K5VVN1V1NxcxdVV6M\
2KXY4cvaKXq3O2SBCKZJmqjBlugDfR3dVIBXoenB3MsGeMOp8R1pkWe9QxPHLAGDZ4SXAqvDJuxCTY\
g+zBNfAvP0kvDYN00LMP/bN4UXJWwQeldlAAJH08O8YEBdcQg0ALPKMB0zNXMh3SoGzgsTGt49QaR+\
NNOEX1dZfc8LqvR2t48b2fShelW585EbwzG6GMQqJB4EoOYMUssgjHCZfVq21e6ydNB17ye9ed9o3Y\
AV/a8fF0URLLvNIGcghQnN6gLBADyXTQURLgnGVUZK5jbqgI1XMaOPmg8zignuO9dTP3cvthi1bYWx\
YsgIcgE9AGjmkDwLGgQFwQFsXII6Ymiv/RodxRXZpzzeMlJy1Et1+\
99bFJiN5yz288trwQQcgIkoQAmRaGEIMD67YMYJgF78OxALZZj4uRI0Q9jRtTgIaLYhEUKEGRUwRgE\
/PCQaqBjmupGKUiRm2MN37y23V3q4VgCtZoOP/y0Jc/Jg3nz/\
775x9TfjgzpIRzYRCt0DKItTZAUxXQgSDiOZHeKTl8OPuat68H1AZrnnEugYrZ/\
qi0MYORk4AwwhyViFovJ56qOp4AvEajWXnLW09Mo7ntja87qfxoBmMeVDOedGacB5RaExBeGIARZEJ\
rQ4QroZzdbdvXQ+kJcsR4BDClDlDMWCDbOnzUzhBrEUeQT1w3t9Vres7tWcVoDuLcA0Yzld+3/\
oIzU/mNt7zqzPKjrWzgcc7SuFUlQLFyMNC54K8pIQNCY+\
SZ6p3IKdDdrubvczC21jAaaYkIjIRmSgHNJQXEEceC52CFmKxlTQey1uaWY1MeohF/7iH3NUb8zD/\
e9dTyIy5kcEM1MYHAq5jPNPNAYkeB4cHrypSmQfmHj3h/+/\
f1kBOpsPMiAyhzLp6fEHwyK3wwwiIzhEHsHJ04XMe8ZWsE1wd9/Rmf/\
mYcznvX35wuSnIpFzRXuMDAcTyYMtgqoDDjwHtrvMYiY5yUg+\
uVtu3roXRxzhAFQXTcBwLhJAFCZhpkBgvovOWE64kPZVy8vkZDeesN32gM5Z6vbbm7/\
FAi4x3NZPClYx4sKgOjVC4m0+\
ZIiExroTguN5QrbdvXQ6kd14EzBF0kKLTB0kCnYPhjnAluIvWIEjzRoewPEK7RoG4465Y0lvWNN818\
pvygGqG5kCpSkdArNDBhIGLsgNFgk7TNlGe9mYtKhUEfmuE1XPDg5vtA9V0WRDR4/\
tqH4cUoBYVUPFV5rQJhsdJxrv2y4OqvSUxo6899/bP3xxHe8oXnfO7+\
EdTWqYwHzweqaFCFzYAiKoww14qxoNJKTCAmtKGj9Ws0Q7R05ndf/t3Y/u+fvf1/\
fbf8fiIf4z6QA4NJzBugKJDQSOCYI9BhZ5B0w/\
eU9bdv8hGhSa3W4FhCr5UIbm4kzULB0GKhAPIYUyh1sGKTBbnOzlkjeHvKO7/4hST8F/3zSV8sL/\
xMBnjPBAHSxeUqLFhtEfwtAAO8MZOhgPhl2WRX+yY7v1NU+WBSA4Qh4EVcIW+\
QAiLDCLDgM0BJqOfMTNxNvMjNLfjluTVyGvqGsX7nifivyo8nRsQ6xiVgBsaZDujihLiN4ykFySA0q\
oS56mvnPqchJoxddAlclpE4gWSBioeTGIwCQHPmMwEnOrLHRsGr1S5dNrsvnve1VYxu93K40Uc33fj\
sD517foLyz17xT1vKQznMMskZYgB7hmO3QaCxNSALWhx8KkuUVcNHP7cv9rUEhIGOiXsgQIwGv8ipw\
LsMDfaZaBHTcVCYiYlKwMmxpi5wnktr9dCqxZRQZHXRgfFEof47v3HrxeXHnHKhKc4gsITF7cBUAOG\
DCLh4chiDjmJfIno7uPX7PP4nNaIcc5ARGQefZEBDxQGPB7YEYJBKTNahPHEmTtKa2p5Qld1ufrGqV\
zXnMubA3z97z6Uj8DbOiKcZBoGhBb0wUgOpmAMWaks5xJCSElBf3PJ9Hr+XAbwUDzxUB6c5rUgO/\
JsFzJdUCGMUxpNlZcemptuq967uVhUXGnO83/ClI7aXH2/GnaZx1UJwP+\
MxlCgeWEFiHvvQVYIJgmUJqpbb6H091BxynPlAuzmiwU6RwFcEDhZLQUtIYHWaqcnG909s1GOuaqpL\
WwPMaWVWEzwac7zveAN+\
bvnx5sZCnCENkLUQxJWbQDMZLLoPWo6VpNqXiAwWt3zfRwmpNCRwUZaWUVnDgp8NPdACecaZo0EgVh\
N7GDT+R6RKp+W/Ew46vOM/\
fn3nX8TBfe6vfytdlLTaAhvlLQbYBeGn1EugdBbTnQSVyAjVSvcuyyzwlVvN6nlv1zL79HXOyvdWSK\
ZjGfmovnRM3a2jL2153IONfMx87TVwwTwFOA+chLOJ+2Dt9VTRV5zseJ509hO/lZbZPubNv/\
Wt8stsA80O9FQowLUkcfmxAUphCAgxyAnLBMMlVkv2tW3yMZQ1XmMb6GfmAyfRKB6VjD0GQokMcCXC\
f6FjkLqRpWHABqO0w/6iqrVuwkdFX/2ay9+alkDW/6L+\
1vJLIFlQ59AsBRBhQQywJsEBC9rAlSZWIUFEr1rPbpmJCRFdGK3KfIDVSlzu6SrVxYqqmFBeMWpuzt\
lKo5GVeky2WNFurnZ9uDPctRSGON1YFDsZteW/Dm+\
du3pHaPkDz37hfLwoie460DeSIQAN14Bq4oIMYAk8hZowqDPiSM+\
J1zmCuzKcOfK4bzOQjIKNxzebdMGcS5l7F5Spzu8avBdnY1sL4i8vSlk089aiTSzB+\
xHNSqZVyoOOr1hl/nbDISOWKWBjLI7GNMsi5iijQkqcSStjyrZJWoSNnai5NqcsfZb8TkKDpZe+/\
ndGQANtuPLIBQ8trmqwwdxLSRjgwiikpCDUyuGnwOc1b/\
J24WGe4ufmVmNXv1nsITqCfg2PaqKMUQ0DIpu4i4NCEtwtiQzIbChQBmbWTjaWlrCtZt2sU3Mtp2Oy\
GvmJf37i25JGfuLWD75tBI20mpIso8ARLGKwLFgp5wI/\
cZI4rWLIWfr1ZTSyt3mT18hRDNAoqpIkbmamL09vzvdjG7eWuFxanS+\
2bGPtCC1R86OaLwgQpKIOH9P5nktUIE8DX9NWrhwt6ypvfN0IqAR4DsK2pFLMtHZDnuuW9g3Xbliht\
LH9W/bOByJuLq3ZUOH4w5zQQvxq1jUgzDTw/0lPml1pb6s8ylJdRZAIxfGVtLs8Cs/\
19fjbqIrnz1YudPOu3qL+Uf93qF2xDoe1qnthvWrjF93JoroH/\
uDWzRcvuT3tm49oSXn4ZvYp4cOpTY67vOgaxNXX6nsqS7XK4rLeU12q+\
KYenTqiI9Kdhjx9f15trhfTh24CyDE/61MT6tWFy+cvnl9YLla+YVt6O3YWj/\
aaHA3rGKVDekepW6a7f3xI36DE7eOn7ti74Co1X9lapvePHrf3x27iob1NzBG98j8+\
ZGaIFHf1T9ycfOpmXVteii5ZpdpiYL1dNOEuSJVMWyPcnoU5teT6RzZ9igZuu7LV5vRcu3MOXwGVFY\
XvfkeP+jckoflhRRLSVrWEln0MKQLqlupiqN7ercvzDXPezsvQ/\
mbI4OW0qWPwDupFlTbMbFPzK33S8Yv202fnao2k86lhs9dWFy7eo3a5KMJJ13OgYfNcddd8N69OSJ8\
4kYsjv9gy1HPVPta1saNoW22xYeyH3B9ogVqeW4p3JInr7O2B9e7sk+4mH9SvnrlvWr/\
ypvSfnN80R6ygW3psfeP4vLnlPX3JJx5V0Jk9D0gXtevH+\
3XSv3jcQ3I4BrvzzWbF7ou9OpFWHTlTeNpEuYYNeECuZPVwn/\
iwPLPSmNfrpCUDVPVRLV0Kte1Dyi7RjHf+XN/9BfxgRRPjn7Ny5LVRkKKQ29MxIvHz8x4CSEy+\
2mzl4j0L9dp1DZ6bDMDs8q5dbnGps2CKjFNknCLjFBkPEGRM4jVbOW95V9KPU7e7hVp9KX6eAuEUCK\
dAOAXChwQIS0jkoABl2bFLF87nTbj06XPEnx21hTIKdlj79Q9LGeyrf34Q9KCWFLWCKg2IPiq1US3s\
DlYnfjlT3L7GRE0L43rkOm4HKYorjwC2jWC1Mrtdq1K9wZnY2hj2dvWOQ4YHRZqGxku7Ik0xwN6ONF\
UXK6EJi7X5R0CcKQXeQ5WDMraDTVFS2sGm5mzmlEhMicSUSEyJxAHiUaUJ1SYsTgNOU3icwuMUHqfw\
2G7j+pkVeNyxd6GW+Hkr7BS/mOLhFA+\
neDjFwwMED9M5D008jKsOKxfU67V6gy02UTF8HVMjp4IpOk7RcYqOU3ScRuUP+\
Kj8QzYQj2TV7qh0eyn8BCqdAwWl6tpQ00OaldoPFPCRrFU5XTe5Bdnxw6nb0/r9/\
WEZdrx7W21heSFuPsolrJ37DYrOe06dHn+JZp8V27dz5xN27jxj584zd+\
6cb7X853buPHXnM3BGNoeLs0JBq6ngHEyft3PnUyoX1p1aOjXnqXj27MFP3coxLnxqrWbzHkpmnzm0\
qrLooeep3GfS2XOHVhQVPXOHq9djXpZesZiq98NIveNbT21NeD60+\
p1cskaugXDb1qqbs7kK3rXhqDELnjIv5jhi6SE5c/Q4XFQP7W/RVHTXUnT79mSlHV3xx+\
34Q2Mifrax+apn+0/vBroN7R+2HY923a+\
qLu3O65vOTWdxVcOTGss80r7M69TccvJsVjZYtm6PlV5QMTNRMwwSRX9b+\
mJlJ13PdwMf3Iie7FmIW7NWNoQ2npMizdG0uC1VNVfb1d2O2ZOi7u9W89emzWqVvbXlenub2hMabz2\
6Q6w6kurEr1s5cq6Ke4y72tV+S/\
7ewPYXO2rhK7c40LQmpQwVax2fm5q0XI8vSjuFVxq6re6uq9aWF+NLO6vTzgsQYK4niUzCrNR58+\
HOjgBVfx0avKWbEuTpSAKTnp2MhUkfuhb/JPy51Nnq8p48b2Nhwam6mjduIHk/\
ckVKavWBdzbetrS7ZtN2qdB7bs/CUvW6fbb572GKl1uq11Wtq0/EJ0oX/bvvy0Fl/m8fJtC+\
b3zOVVe6EQrqFYte8xHXO3Ttc27kMBi47q9HrdJbh+7YHTk/\
dGEypAS53TkEEli3mVNXewZt2o5D0YS6nC3bsesaeJm3YTv+NwBu73btVLmOTj+0/+\
3xUxTvxr3xhoYGnz7TTjY0bCP2IIq6T/\
dhj4qw7RhnL1StUKOVDokt6d0EPSFy3haKFJjJIWj9nkazxjkGf6XGUZtytiWPUqm+CaKksSvTU/\
2eQL4kpt7r3Ti82I4Jr/\
ZlOXvyYuNzVkhN7p0du10aR2C1Nrt0vGKEoHNbFnOXDxfr78pwH9sx3O21wftmsPOW7x7TMeItNjex\
zi9aGLfmo9635OSolbGPnyf3poLJ3ONX3tc5lzue0PVDbpsyFtG9I5oi2s8sOuapRgLWFadgkrGO2J\
h2ULK/l1fMaYl45AXhb4y7nY/SX5n+ip0Q4XZkrhmWPPWs+G13WC7eDBuBydy45JZST4/\
hyQFPr9VszsPJ7Pllqy6LH36eyns2nb2obMVR8bNbAcvRRKbDQ5ykCY6FK4GufqHpYGgTi3El7nVwq\
/HNTMMpoVN3wGUaR9n/\
4ijtWfYdtaYoPKolp1ur9ZYLtL6javGgzPya5URRmpagOIbSAWLFEZROt2IS8ZPxQxil7UsrMpB6YP\
Nc7/KVThPUsSTmEeBMdt/26JnebGTN1GdFyT9TRr1+1ClaP5KXLzDvvg3N+\
6JEqXn7HLe3YRcnKhxFR25xawUnGkAp4kHaggNtlAEcOsWsFkZnk00anaC3edxlUw4nm4/Q/+\
ebPnZoTBv9yRu+ky7KdYRHFBMmJeBOQUC5wUDyTAFruCdMOU8IH6f1G7p+\
0hb47izuPR2SI3oPYULQovhWkv22zOV9f9BMnxju61SKRbo5mVSKOQ8eOWdpwT15KRnzcKl8atMiZC\
hGtu7krHmTh0XJx0lgFQhngGWaACo5B4IYCiBmxnuEKNSuRzPaTsVAzZhtdF1s5XKe2ZqqySNVTQZN\
x4ypJ/3so37rm+K/f+nN/\
LsGKuKQIohADTKhGKDKGyCoDyY4c0ZqBZmgMj0kJQlvX3ScytH6rpxV6g5tddnkDp7tbljqT/\
TfOCT66fQZlRjoqCxGBW04ENVGw+NkX3RAG+/uWmvB41N3u/CzhXptQe1SMa9+rRJ5+\
lmV5kHnZ1VaWn5WxS2Zpz3taZWVp+\
V7nith7663XR1blHhCDMmGl1Z9dHIq16v5pfha0y4L1Q9fLYZnpYa0c/\
cvhjZVgijU91aWmsHofFrSVZ00eRh7eEd1aS5vnquXwKzr7N/6jtu/9phnXNZ39Nx/0w9+PGVW/\
tbrH/x4d2blVH7Bufglz4jlX3r+2emip5zIB458Ziy/6PMfO/qZ/eWnnXHe41L5yQ+Yx+WUb/\
3mJ7el8nWLL9iRU37J4/H2c2L5Hddkzz2nvxz+8H0/f8I74/kFH/1y4+INv/8nP04X373EnPTod5Y+\
okU7kw5vEBkUIHyKeeyJBUgIL72wxBtRTgu6Hc9uZhpxdLYx1jHsl5y82dKUtMClTR3x1BP+\
cD4N1Fd//PH5nIHa+M73f+dVsVu23fzhxsV7P/CCX/ryu8LFwfNLd+\
wuTWIlQoJhGJNq2wAqhgcSSxUOHUUzzTnhRKLVU/\
jYUWkqutE5o9P3wwb01dsP31FLfXXi3FtrOX110UFXnpBE6Hv0y+mip/zKH5/0l6kLL73yni+\
ni7Pgv9+U+vKtv/XFn8SLnl+865de+8Zd6XSomd9JF+\
X6mknFFCYUeJ4FhwFBCVQ8pBtl2mUIEw6pHKev1/X/pJsW9XR/jj0sk+68WLofugM+UpdEk+\
bqhfce1+yZJiu6fKGjhQWE5Mhkg6rm2vk4hDlsa6JkZJUnBDDopSZMACwCJaCaeKAyIQAPlAA6jpWU\
HcZ8ZSp8oIwMos2rF5hJENBT4ven9A/NWgz3yNnucyqXvo/\
DMALlsxRJTBgDKkBGQGeaARGP6OGaQKK1otSaPKa3esTe0BKHNkqPDtoFaxsShG4/\
8eSFBNr3fqS2kAPadz3vjMf/VMTim990S7roKb/vlUfek7B63buPb1z8097PfyUHq4+4/6vvi+\
awvv7+v39febsouLZGOAy4swhQyiBQwQsFlpvAw5mBno0V3Dmy/yfdStPf8WNq38Dh2j8QewBw7i/\
gCh3GQkoEMoNd0EBhgcSWA2Ow4Bx7i3RH1LUIXHO0aQL4OnCEi/\
geY4poLEFwJAOiwIwAbQkGTmuNkSBOOLU2iHJcRx+0K10ZHVUGnd/\
51i1HLydUOeYX372cgyqvuv3GJyZUefEHP9+\
4WLz2Je8fARWIDKqvJNBZRAVkCFA6fEQSZdbyIBDWrwkqHJvXeWOKzbBDU6fYUBIbkFFIe6oB8jRIQ\
zAMQGOOgIDMKWeh9ooPx4bcoZ0EPAwb54JWZYwbAxEDGfQ+\
0MngDIrQIuCZZYpZ44TmudGlUcFiQHwpBXK31up71NKSs5UYZBrVux5EPl7yuLfdlGDiFes/\
elMOTHzhM7e8MpU/8LiTbs4p/9fbXsZSmONO8wGWE+Y48YUb7k+c5PYPVhoXH/\
nJL32tm5wMBGnqifZcAW0QB1RaAzRyNKCOcDIzTmqHVw/IrVh0msec7IzaLz7v2+\
8SnwztfvPdG98dL0rCq4PGWYYAETqInpcMSJj50G6HuPdCBPVaCQUUYWV/\
uy6JMeXzaqqet8e2b7514+m57t7aL6BtxpL/\
tjeWXNBbCnlufXAJNCcCUIUxiGcWAu410RnBhiA9UQu+bmblvLPKGJZ7kErOVOq/lFSu8rO3/\
VKOyr3mkG8/JhnsH/740sfm+AOfWfjPrydNe9/tZ30jXdibjvtajj+w/ntzv5f8gVP+9Vd+\
b4Q4mbDace6BdTQeB6k8EIpG0YwheUK9Y6xcD3fzlyOGSfOAQ+bKGoJkJveHUyP3J+\
NNlZLMUgs4FmFAMaVAYI0D4CjvgtutOBQ9o5NjvDtHZxI2u2Coyk8bxk89EYyi70eOxDylVd/\
Vn9M5ytzaR/Pm1gahcUmc7Xvu0KVGzR/+a0mAxixgMjMKOINNMOMwmHFi4rHxVmbamcAR+\
YgiNtSaTYVsLYTssfuvkDlMMycyCzJpIo55C7RgUdKYMi6AmFirEGErYrytXtsVeniyDPLfZk7PEsX\
euGdv9szSZ8Si4IUrKTCwnuGgcji46kHbAKZMQK44tVKN0/\
Khx8r2dMYqIub5TzhAjHXJdZhdyrmhXzm7+Xh6zLY5Vc1bY5seM6fmi+\
8qYoSeSm6FB5kRwUmjWfDP4kSq0FQSgjCCOPOHd8nNgGmXlhJNaNolX4j2x94djoc+/\
fteSTxENpNSRDeIxoVk0YEWMZohpURYKhgs8hoFOI9uDuV2513dzRs3WUQ8+5762QkR2ZM/\
e3Z5RKTSaxn8ExC8l4CIPMantMyAyxjkKDMKsrFClkMdl77uGFOc46eiZxwgqFgwtJwb5RXKQAa1BB\
SqAD6UEOBlsPpMIyY6KVERAvWL7QQwaNCgFc11xmgpdxhA6QJbZtgDpUhwuI12AU41N5DkKe5E444N\
6KvvWZ5TiyMGHAfp7lPe9OWzku6ede+\
DZ5XXXcu0CyPpAcmyYGIsdEB6LkKXKGUyqAyiJVcxDcKtVgD64vm4I7HZ+sli1289/fYnp/bf/+\
PHn16+/Vop64mmgCoBg4kNBFdb4kCGMmW8MdqOh9tDsSu3S1YRhh/\
0nAMbw7KMMZgJAzBncbYBE6A5ZYBp7Bx1hFgxwhxKtwhPaA5l0OAVzRoLSYnSCBiZBDc0SLrgoxFEc\
PheWmLWyClrzbK2MkWvhTZ/+H1/lJS4/\
p7PizPKa7OBLssQdgApwgDNhA1MxAnAswDzWHjFEF0Tbc7vkzElIjZu4IMObH0W0HtpNAMIwkC/\
scFAyOgVKYEtIzSylOH6XCDFE1DoocNXpNFGB6PLGXAo4hSWgUZTaIHhWBlFJNcSrY1Gn5zbF5ct79\
GBXdnJavbH/\
uzPk0LXd9ylnlJes2VwIyiVQZXDAAdjbTQIHUIBDiCIrUAO0pKTI90dcfQwzR7cN2OKyIl9IlLwwAN\
E09cmahDJ9Xa3K/Ru7+\
bFcnGDCBHb6tXr1JKLN5dZ5nlc88HbaotLs6ZeXVi6TO1prP4sSt5V5FRbDC00DhhkAhpAJgLKWQyc\
IJ56ijnNVI/05qDcEM2eANo9kkS54J6pJK9Kkjm0XkNqgPDMASqCdyl0EGepqQ++J+TY5nrdq7drp+\
ZK/wW/2EhesTb2bfumJ56Z7NthW055ann7RqSgigQnJfRRXOjlPZDUK+\
A44YJRY7ExazKrUK6PxgSHU/rAYciDHwYgsf/auzWZg6BZximMnEtzDWigoUF7bdBj57GnjjOndc+\
CqRw7VFITJ2CPRha5h9NYOGuthxwQ6GAcAQukNQRAKaHHCAqsYR6SjgyqbRjNAdVDm19PMnj5e3fc/\
atpadbzL9jy0meUBk0Huc+QDk6+ih6TsjKAJgseE/\
VZ6CisFS458TCowfEi5YId2U4cMqDJT1iovSY1+Ytv/pvX5KxGu33dX/9HKv/puX/\
7j5zyp4rTWdrnii+YZTn7XNETfuNZqfx/v/\
oTzzqndJcK6xGShAbvytMYIudAOhSMtYPxv1mmJ7FZs7XgJHXrsEXEeT170ICeXXjhS/\
429dzVX3z613J67vh7rs9Sz/zZM2/\
PRugZpJzMqAbe6ACEytnYMxnQkgqNfXDcyy7PGzG21NlZY4JiS4QPTGtbtHYKWQvD/\
4HxKog6DWOpXAYBRgpmBHGobYl9N12iPKHleTlDVUQbiUCUSwaw8gRQRCVQRlIgMkI0t4jSzhmt1sU\
Ed1sv6+q4OjzIINz2pgd50tG/+tSForyOMg0RcZoAhyNFCfYQaIcJkAgRniGHuVib+\
G9Pf4w59oc3ejHnCQe2phKNgkEXFjhLY1ifBA8SYQOgUUJgj6Q3crim9srspLYf5w5YkYA6nLkMWUA\
wCQxOEgYE0QJkUgQP2TutqFoLfe3cHbhGKvvT7/tZmVT2DW++\
U5ZX2YwSHbxdDhzhBlAfYExImAGioGIuKDNyY2UsGKqy/\
V0yphCsa3fkVHF7xd0bhJAJ4i5gdB4zCQTLBFA4C26lZNRJNVxxc4R3gltbR1FfrKzWTClgVWyPJB4\
IihxQlHluhSGY+\
X71naj7laaLQ4W3qbraVVcLuycbvrrjjid9tZEV5h23f7W8J4aVYAQpC7wIuku54UA4Y4CG2CpkMuq\
wWz2Ktefgu9o/DpAN2uHb9h/O/IXH/H2O/7D+qA33pfJ3POfU+3LKT/\
in3z4nAeGtrz5uU3kgtJnHxDMIIMUxEYOAQGeR2QkTV6IQb9xYK3HKr0Tp7NUxlapPOqdw2Lk8QVnG\
ZPCmEWZxIT0MPMZBCqDlyEDklMB4OBzma8GkVqIMGLyiVmGuOXWBySBpAdU2tCoLzNtpJoW3KPjGOa\
C4ejQ4YaaLz60OEAZh4kd+hZ2bFPr5r/\
qbc8srtBMZ51z5oNA8cj3NQaCrCKiYWgVnhjq1Ns5IUceMKRYbZ9okd6rWubtkFbfOOwwyL1RQa+\
SBDoIfvBXjiHeCZoEoDFXrQnGegGaXGMLCte6GMwMlQMzGzE9MxkUpCkihM2gshoybtVDux8z0cr7V\
6XepgGGBwf+P1+4+L+n/D+GZ55fXf4wYC/0jAVXBw6NcBp4YgD64ftxqznVwddYmYDig78aUn+\
NnOrnyFAXyKXCwdD4MsmE4jLk0DkhqNFDSc+\
Mk4jIrEU4cJPcTAIJyA1m0VhqxYNNUBiSngaE65QJDzQwIzIVypDx0Rq+x9xOnsyNFGX/\
ufhAQnHbe37w2AcHej//ktTlAcN8hD/53Kr/+zM/\
8T3nnCAqviAzcCFMfvEajDZABToEkghPGg9zYsYhAd9e0zvzp6p79zTd64F3nbU1Qeg788NbyUEqgC\
gY1CyYVyjj3gjCIaUqAzCRlOKAsF2PtuRwKpXmdOqbq9YruFDw7nV+\
OrVLWAmviTK4UwYfwWQY88dwRIbiDfjh45qrABFBzyNAV+\
UXGscxqDWAgiEHtJQECSwECaXKUeJ1h3DFbPznqdPxMF5FcFRYMdIve+f0Lky7/\
7QvNReV1mUtooSAweL3CxbzJKrBlreJucsgDo4z7F9ZElwv6ZUyZaJ7WNOBJB7ZGO4yo5IYCTmIWQB\
kz2klGg3uEvYZYaU3ZcI0ukuUJKPXwASw6lCUL5hw6CxBl0SUSPJhzqIGAJNgky7j1eC30+\
sSZXmq4KtXuplmTNfMvP2n2gVT+h+76B3LKf/+3j312go4nf+qOZ48wVxRYk+\
YkAxmLGZICsQaaCwwIZc5CnmWQrE2ItLjrxxS+42Y6efgUQPLW2xijERUM+\
JiALKhaYM0axq1uSEnrrUG0RLB0gNJMAENKDWNh6h5MLQ0AmXnGQvsgj4k+FRBC8kB7ILeE98NI/\
qq+EVFmgIc19NiNx4cLGo/daB1T2kqz2jiBo+DEjafPpPTX8SALM7ds3WLxYRtXLFdvHPOkjV+\
JjSh30sbigjNVXzUVtbDgghs8b9KxGqrdnHjQxlnNx4SecPO2svMZGCIx6LiReIMcVPGRz+\
Q4smuoulH0O3fsNGmp+au+eofJyRH5rWOfszOh7CdffN3OnCWC9x7z7F9O5YddpX81p/\
xXTzvqTZti+Z/+4KZ00VP+uUvQH25OKP6oZ6aLnvKTX/S5o4/63ZhA+1Gbj48XPeVbnnjDOan8a2/\
jm3LKP3XNRV9P5V+6/23fyCk/9TNP+\
IV06sKtL9vxCyeUPriDKeVtPEUNB78bUOccEMH3AIhpJY2QWdxgs+pt/\
qkWQcYbxzLuVgtLfUeojRqe+MwfffPtaTz+5zf/5+\
0543HrFx540bmxHJ17xIvPLT9PIT30TmnAObfBqsqY2ckFtFXBGROCxgDw6iM3DTvVOshkgmuHB5xj\
MpBLKM4UUw4wzFRgccYDxeL+\
FJsFdkclRGwsN6S71Y9vSkEFVHarxYqpLccD2StPrcyr66q71HhJ7w8f0BvDTirZ/\
uPvVJLOf4FufEKOzm/d8cQ7k4x97K/lnTkytnDLp3nS+XMu/wbP0flLb/\
3Rh9K5JbecfOUfdJ9b0sCEl+7lKTfmNYffxXf3l7/89fwXXx/\
Lr9C3pYuSZIFLT6ykAFKEY87x4E8iEmOxxDqsMOGq5Gh2R7+\
GZoJtqfmYBGLwsSljnDMRIanowL10ntrMTN9ZF+2O3aZ2ufPqTl27WdeuK9wOd2x6RRLki+\
dNvXHWeg9LaJwNb0O71FzruI82Ih7XUXhZWw/y2t54y+Yw1s3zY1f2M/\
XLftdzO9Lgx2bDnls3tOoy+\
LZH9zxx8N3Hdjx08J3rO56bki7m3XRE83GFNxzd8ZR0gnXuXWkUix4RxaX4p33R9rybcvzo3PvyuXL\
vrQOjwDijCgeKrLhCwXBLEiA7xgwlzHgmIRYODt8S2xbDUfl/jvaPcKJN+\
dSXORqavo9tSX96ntxKfbkl2FWtejFrCJ9vlK9bUbbIozu1t0ldZuM7wfbc29s92hK1HBd1Jf9akRv\
YxZOP629mdzbMPnSr/8ONJ9x+4T/ct6lO0r8vb6o/8xuX3/zG+\
Vvy0mN2bPhKZ4KrXXZ3H4iPklP0WS3hWH1O0cmifv3/nbHzNXc9+M+b2qm/6//14mvuXHr9/+\
7tl5FPIJqZXJvL5VGdSf/\
u7a34Q2qQNhR30NQgPQIMUrq1me8yhioKe6YVwci1aF3gVpkZOdVv3mm1w45eL4+\
IRfP9hmXKxsNHZCTV3jugCMpA8AeddCKmMafDT31ra1nEl8gwr68uulXa3TI2vCPnQaxaGRg9qaOGl\
9WWnK7Vrk3mPb540C+Hj8VHTvm1+6/4yPc21f/0wYjH/7qp/vnPxX/f3a/\
AbMquH9lgNngjTiaMRAoIhyigGZIgAIACxmrvmFJEiDVK0/HTfeLSHS7Zt8cCPm/\
7i1NgpP7zV74lL0Lykl88809ShOT2l53buDjzR1rkhEL++7DNjVDHf7z0Il7+\
GBCUCRr3GgNqDANUIxOXuSCQIUUlZ15Smo0Tyjik/\
yf922y6h2HMoMbQ8wXzMa4U3AytZAGyDYijrxkOlUOQUmj1yIEZh6VWPvMgkzImnEUQCGk4cBZ5jjF\
RMRtt93HDBVvCeizMBNz50c5QXLvDLCbsAUb/74yd39+\
04grOpH99jtQop1ncXY64TJX6EaXUw4Iw6/76bQvPWvfXm5q+\
x2daoja681JaaEdXlpEDO9V1fbo7YmwjN5ppsKRMAiljdiWrIVDahI/Bz8o0i7suaI/RLgeEE/\
SzRoPZKQIcAAhQJM2GG2niyVM4bgKE2ATvwUIACUdZxrHN8Bolr21NsXYN3Fo6EMNOAP71u3/QcCB+\
/E8nnJo3xXrLL9+d/IY7X/HGxsWL7/+jPAfilMMuypID8bu/\
9jtZeQdCEYOQpQRkSgeGxQPXkhZnQCEoLfQxzWDJjAojOhC5KjSmD1HmNOIyeFMMAmVqW4A6Aybgp+\
iQn7hOCyVYXAxsFaASSaCEg4AJAbGQmof/9ZxQXbDxuR+iJ8D7Rz4fuTz1T3Pu3cHbou/\
Xgvo3wo5f2FT/7hXx8k8K+Vgp6p+3bmCqhPudEg4j6aWFYihJb/\
zqgY6odoutl8MFyaEx1GKAaAYBFdYCCbkHmtDAjBESkJNxcWGCNHhk4JniwxQfpviwenyIKYU8RgxY\
YlHcFhh4A8dxD60jlnBpvM31Kia653jDTOPALrUUfPtKGuvRVq8O2lD7kse97abkTLxi/\
UdvynEmvvCZW16Zyh943Ek355T/620vY2kN+\
J3mA6x8unEHM6JJXPMLiQeUKQYEVxZAmSEoiMWMjJVuvLvnTpxZmWNbS49s2Mnun7r6K09KHtkDX3z\
wSTke2fH0Y99IjtiT/ucvv5Gz6HXHE794Ylr0uu6ob5+Y46j934O/\
SZOj9vxfm2XlHTVHrTfCQ4AyG2d6NImJxAwgNjhpykKoy6a+G9FR65z7HNM/\
6zwyegzE74PWAVUqwPcBWrXfuT/\
UIu2MAy6enUgV1UBIpEFGVGYyRo2wevjCxa4Z6wl4PV2nfpclM3mcZNQFiN2qPMkFiLEQNGrXc8sA+\
Tpm5c6ty/MJjxajAG2v7VExabyrq7m2mR9oAdP3j7iljbeFi+\
ohM6uIgD9UpPURtqLxgIDQ7gMSDku1UHN9Z80MXTCXIw7l6Wp7tdYLouLd2LdIq2jphoEUGaKBETTg\
fDyuTCuigDBcS28FNMIMn9LpwvkJerFl7ccBLHxFO/\
5dQF1rMJAZC25IhhlQnmLACJLUa8g4XqOzNo9qdmvr7PaRafMg3+PfZk7Pku+wcc/eLGf/\
6K33bTkt0eaXztnTcmjzl1552r2JNv/wennvptK+\
hxY4Zjd1ABoZTzYTFkhBebjiiCnIM8NL7uIvaFwR7e3pzDGZb2vPR/\
5TCv0tzBXKdDyvMAsSxDHQMfOJ4UpnGGJLXIkzK3ulYYI7WEo8svBkRimYyTwg1OEIeibuypGAO4aM\
NJo7ko3etAni3gi9VrRjmBioNAoKrzMBqEknCMMMGOMzaaClRPq10f+\
jm3VfOTl9oghw9j31sxMCsCd/9uwcBPjN93+igQB3yH/IQ4Bv3XdzAwG+\
d99bR0EAZbmDwdPVLggK5ZYDCW2cE+JChv8Jw8Za4jgUAfq6c0wM6DvQvly7g6YYxwUB2JuU/\
R8CHfccW8EDQ6BICWKHq0q/TEwAB/\
paNIaaOOI4jCnuOI1nB0niYnoWCJzERHuGeKmDtvubN0EsGKnvivJ6ocDypHIgsz6Mos5CMzUM4JAJ\
rgmFRuefZzgyMAxKL9BwKdP5ZpM8iOspb/\
ryWQkQzrr3wbPKhxMVdVZoFmw4ieeueB4IkmUUKGUJMxTxTOjJpH+Pg9d9BPtEAfG3nn77k1P77//\
x40/PAcQTrnnnkxMgfnfxb5+cA4infeiXv58A8eM/+vXvlwdEEQwMwhwBKEWgRDEPgwy0AChtvVE8+\
A2iZKrYEQExt0vHBMV2XvLRD7OXVPBMZgQoY+\
KpYyoAYwALQKx24QJbJOFw5MiXjwmuDyj94MJMG4ErOGwAtvHEKe98zDxiABOUQQVlBlmJRNH5zVyD\
6c7VNjeYRYwpFYHeB1mmxnCgoGWAS2gM9koStEY7So5rtqDncPeJQsWH3/dHCSHq7/\
m8OCMHKuSFTzu9cUDf3stPz4GKQ6+c/fcEFevA/2/vbIAtq6o7/\
6oG0FGJSLc4MKiNQHeLbtnfH7GhCR/d0BoTu7GKopRifwrSdMODliHlBD+\
icVSUGMWAlSDiqJGSmB4yfoAKTtGKRkhMNECSCWEMolFpsBpIoe2svW+/1+++d8655953TtMN/\
Yp63PfO7fPuWWfv31prn7XX/\
7xH26OCCBlD1uOkijvImXLYZJVFTEVHsfLSy5ZKG2OiotqmE7Li0KkqPdC2sGDaWMEQvAgwrLKysMn\
JeVAyOQooCXr0LKoZIh3QovraJpg/\
Gm6oJRYiC2IhaSS5OBhSESQjjZJrA9OoRTxVc6Ed8mJ8U9blBSxI5w1BhkFKwLV3SAdIKpnE2jPLkn\
Q95VlHVF7C5F2mm8DxtTu+WXgxfeY37MsrwHHfkZ8cgMOddnsVOB79zY89XsDxyE8/\
93h7cGDhAo3MIoVN3s2LHbIpMoQ1IY4knAht2fZqTHA023ZCgDQL27fNV7CU0kCYFQ2k9ZxbZGjWbR\
BgCwIYxY7uvti6+\
TVi6HQAlOZrbfoL81a8Kx5ADDZsPNx2R7hgIphksw40BDDWZykvFSF7B1QJbjHxLXrcj7BYh2Sa/\
N7U9nROHGvKEREefE8pqw4mL/gzXTpYM8b7IdTLKi9l8Vr2TaRq0LIfLB+9e9nKQqpHX/P6lRWk+\
mN1yhOFVHctf8MT7UkVghUmyzpjkWWSLMkOgUsUmOaKWeqiaWnQMUm1rIWNJ+\
TVsso53HjqumKCYILAGCK+\
mJfPSTJIM8A6ZS5yJqOXzIymVptL7YJdba57DII1PLObfVEe2S39eUukQeJJZTQROZ/\
FGbTV5XEdUskKx7QIQZOOzNkh2BZ7+3o3K9c6BmkhxvBZN4grBeE6TShZbqixNDhW+\
cjs6SpVb5mjxDk1EDfliYLnxJrnLoWCQtKmKcP7perHkqp3xmgmlUQs5D6uJgsmRg0/\
JsK0pJ7GNJG+0rBJZx5sTyxV32TZRUjVl+OrN577WDm+csu7HqtKFVb905PFAX9z+8+fbO+\
AeQpRMB2RgGkKLoZluRUrUKRZiNIqz8REhYkjHfBcY0/\
oaOfqsbccR5QaE7OOkcyirkGBQ42AKhm44DTmVrButAcYGicdVueNOl/\
vJJcmS5clgnx0EQaDBYZZmHVR0BhF8NGmFuLbT5V56kRIGCcyOIiavCuraAzZLEJiQ4oYXE8QdE7z9\
T4qOjYsQoa7KWa/\
8ZodqiDhB9vW6gokrLz3qOMLEh664tTjK2qdr7zmZ88tTaSnbp56Xvsm0tYLY4IjSBGT00OZH21Gio\
h3UWGHPQmpl1rmefackBrztOHnnaW6ImooSlhQETXvFPt+\
ERQHv0pMUAhS4FwEpQPSQTCkMWExKe1yX5eRmJw//\
Ltswjr6lP3DEltLkoU414Ab4QHSNOcIR9IFD7/\
BQpMWgufzjdRDMUwLY9W5SymkNhYjm7JOtfESGbgopBTGSsMYsa6nnf5zm0T0RM8jP3+2KfS8+\
uO3mgp6fuvBnQN6PnHUKlxBz0tXvLZAc/rVPz5nDHoSbZnwOCBhcN6yDzZ1NAmUNAV/a62Ipv+\
eX4sC6NzWSfsZWrsGH5IwDu4uVVRA2JEMMpaE3AtLEi6F48yPZmjFPOi4+dVeQNIoLWPEQ/\
qhiYcpAd+spRwxFUIi0knNW1RMVpiqp/Y4E/NUiMiLLrByeQ+0z/XiiRkkcXTGQxoGWUnvKyULpN/\
HX0FoWjTZuvWY7w80Oj590/fbL5qwaDzL9VWe5jzUk4g0Mw7R4CDzMJYTPpHe1/\
C1z5Y7LFpkummP4mIl1ZY+eN2JxTNd+8FDV1d5pn++\
Y03xTA8eu3NNhWfaKl747OKZ6JYVz27vmQwYXHkiEKb5kSzPa/Eh99xXFEsGN0Na1W9lUgfy1bP1O+\
NrHjOVbGBawJjLUa/IzQmA1shDKOcgD9aO4NHErh5iXVYmtT1x/wu/\
wbrIwbtRbIHbtpQCaoKkhugQh8A95ZMarI8ap73GcCF4m7c+IOZyDaUkCdlcHk0sdQb4FwyLu/\
3AzIvF42/p1FBGsDgCNsXWX3qnOKkQ7NwP3HNSBcEOI5esLQS78KGPrq0g2Af+4/\
cGBPvFG68ch2DBygiDDwWqLeIxeGQYVcgobY1yWItIeiFYnWEnhNjSqaE0d0yORUZJirlUWdP84DqX\
njOhERU8Ro4pI6rFtKwdKx2grO76ntJJ6ZKWFlONMBd5Rx9LSBsXUHQ8gQdQ8J+\
fNxLGMVuHQJvk1tRlo0BuJixB1ILj595BRMoA4bn6IwXJo4qyDxK9aPclXNIFjIYD3vHCscevOu/\
kAqsn8HGnVMDql3cuOb3A6urz5OkVsPrCWfcPYHXXk78YA1aBBKYEC0hIKTOsKLISw8gz1DAIuSKNt\
BdYNdh+Ql69aGp+\
PjkusiDKV8pw5IFdCEIKgTTAGklnA2SCMjHbotChaVB1QK2Gq3xKwaUYtVTlYrbs+\
ngiOOs5mhzBcpEiiVS0qNRqMl6H7JrwHtVdOrU+\
KMigfUlZaCKZ2Xkh1mNuBGEm6oX46jSdXrDsNHY2PczJYbYce/\
I9VxV2Xf71X19Vwa4HDtjxy3L8suO+/\
av22baL3nMpEgo4B0o2S4DmhsQRnBxOMnGMWz7CaYL8IVO7A+9F6Zf3mWxv/+zJawr9T8RfXFNB/x/\
+0ZvOKPQ/58B3nFFB/4O+PHVwof9rv7vk4DHoH6NLLuZyN5IL33CucccO5V2mmjoMOUA/\
hW9VN2VC7B8ytTsjHa8cl1PuE4ekMRnvwPc5k4NVD8MxGi2scJiI0byvHF8dgL7qup7aR03MKyeUQo\
nlUtRoIKUJwkO8wCRQLsXE4mjCV5qrQ7SPezvqQlLiKdUiF5HJBO4MAKUDTshjxjTV2tE5IugdhqRL\
poai6kUBqzE3/szDawtw7n2bP70COEdc870BcN72ox1VwPnq5/\
wAODc8tGUM4HgMIb7Ju2gGRd0cI6u4QZQn5SwzhIR+\
ws0au07InCVTQ6njeNghjBGjbEIi5XbZAi7f5MnEqMEwvzDBqcUzmbqB0gF5aq7uKYWP8IJaTQwSPK\
tn5wBdM8ZQyh0SQiCMt9nqXWe0DvkzwX2pS0cch6SfRqRTBOecID9zgmrkEkkaLp5QI/pA0GG7r2D+\
k8dJKHTQVD2FFhs2vffwDdvL8a/Ey7ZXHL/\
5uhesK5Rbvm3rugrKfeTq09cVym275YJ1FZR74bptA8p99eZ7xqGcc+\
Aps2t0uChqaWSt9MhxDuklIcnzfrZM1t+\
6CUF32NT8bHM81uHAreRUIWwCA9ZBamS4hgzbBOu1IdQzPZp1DSOyA9zVX+\
NTSjyipMNYE7AVBeJJJ5HOjyYFZNOSM6sgexpNvAbTdQi9yW5Q3YVTJbwzAUVj4cJFLvnSDKMYglCB\
8giBWWM6PffleFhsaoAxV5I1v97VJnKRqfW3b/nhpwqBfvWnv/\
pUBYFuOfCdRxcCbXvujUe3J5CGgJVbbZDmWdhPCkhtcH7lJI0pcmE0W/\
yqQ1lkGDiC8ze9ucM9D69Y+pVNg8f3O7++\
qf2CgvBRSRsV8jLmrg7AHZv3DWovPXXSqcg76ApyzO6BMNxjeJndFJZtmlVA7bbl8KeedebmYpLDNl\
6/ucLVrd/5k2XF1d3FD6lSkVxz5tG3loH2tX8wt1YMtE9dc91vl5bCbzlix28PtxQelAOcc8XdZ90I\
x9Oz/ra8aHdLUnQhGU5RCgpcoeER2ShhXCbMYJbzwNhErvCghf9kGElzpuuEvm+2zLO+\
CXzsrMXoVPm6f07H1ZnfVNg5U/vk6Wgv+C23+a2DZ7RnTm+Z3xNqUmHfuaDbC7R9XzDn43Qp77t0+\
LwdKPw+d/cZ94v8ziBZQRwjcEQpktyH0DtkSKIoipiwxlpSRkd3op47JLss4O5SWCPP1nlNYMvv64Q\
1xm1iPcy/sZpY/27l2+cadWbANQa55fejuk0fsvBKR3WbXl+\
6335r9XQqXz9YPf2prOl4w217pNv0CTPjY/\
EtmDv2Ca3t8jRrO73fRe13UX24qCFOLRvFqYpRXCNEPHIpYCBG829zpGUHqrX/r+\
2Tl1L1QwICz6kgh2M+P3kxyBPBc5EGEUruTh7aONEOc/+WvvnQ8rbz32ovjfkDtmHj4XM+\
5Os2Xxrd5s0XFLed/3aj3u7IO3Jx5uhFP9u9JjP90tyA/SU/20+o/\
YTa64JohQnHVGBEbNa6dcoi7ahDluV988F7wkzVQlg3WrcLxk2fykrrDzviorLMcf+\
XNl9UsczxpvW/P9C6PecNn6ha5njXxcfdXpY5bvrDk26vWOZ45LYlZ5f1tN/\
4kjn7pIXHNx609qMfzssgP2HXlxft7hDcBW2M8kgxaRAn0SKnCUOeBUGclsS0XXmaQAJ3wQ2acMFj7\
oasifVva6DU5nP2Lrk9Fq2e2ZJ99SUzRPvokbaMI04JR5ZAYOKE84QKzgNO7fQzF3qjjrcUdpnb55/\
Kt9G/f0oTwXbJ2CCM/fIkGkD7Z/fTYnaPWpEZNGn85ozg1d/OCBR9bY+\
nPlRGD66TIiqTQFwmglzWjQT++GiyzJFpoXBUDZyOd3eNRbT9k+\
0ZM9lqVR2idAobZE0upyTUII2TQtJEY3ggkSTbT1D/spp712dcf/2pB28pcf3zL/7zLRVx/Ufu/\
MUgrt/54NKXVT2+/PA77ixx/a3v+9idFXH9q/59aypx/SG/vidVxPVr3rfjYyWu/9blr/\
2T9nG9g9tAEtwabkney1AkZDwkYsZ67KWz3vbTZahufk0Y2s9s22061+KEs1t+\
4P3a2d3QAxusU8QC/GJWMlPEIkOUy/\
UexhJlaVAhPXtolNXsE6ykeIc7xVufuH04XvFIrfFR29M2HO9rOg69qWlyDn7KxiouYOFcnRdqznt7\
GfBVb6k7//xZ3vHpZ/jQ8WlnydKDNeYyqePTV9Cs479QzcHx/0ifGcxAC/\
knu6VZd53yxy0zmGS1kxozpKiPiGOTNwZagZLCVhPBHWN6dAZTS+\
qOd3SP6w32Bw37UNDAdWIycoJIMDAUlXbIMS9RZA5bSwU2olJMoNOtqr8xNRCSs5deGsOyYtjxCkeb\
tjW968U3XFHSjPc978tXVKQZd337w+8vx7e/+PArK47/7MY/FEWA4Fb/\
BdFejs5QATGX4ggSOJ9zOQuBmAsoJUpcTIaJtk2LmvK2w6eGHo31ma5NLZt+\
e7HTsrNvfHuFnbad9ffHlHRt+907jqlI15bwr/1LSdeO+dX3/qUiXTvp7P99yt9/Fo6/\
5L4Hy4t5xw/\
d9pZrS7r2xnfecu0Yj2EYiVgLjJznIudsEjksKSIsZa0qOKRtb01h59yaCbO0mR7DFaeYSCO7+VPt+\
90NlUk5OTeI8LyBPCSBHMEW+SA0FdrjJPnuJ+h1rnX+E+cOm0WPOt+4NYDDU7bjGsB8HA0+4Lx3NY+\
j5+9+85otmwp9LslGX7/5QpuVIeK03TjrRBujr/L7UQWG+dRjLmcPQr+7ZiK322eKqxecqJcCw7+\
CF+cfMDU/W91fV7in6wqfKbScmQ4bNlr4dlD5FHbj+\
X7MWdNdCjVbbTUYcPXVVnVtKpxNUTiFqDYiy3dT5AwH7CvOBeaGYtIihZrP+Y6bXLd0Ic/\
soVm3mikVZlIJ5JWGG5xSka3BKBjJcNZHMLqyJW03Lb53WRb+\
92aATbeKZo9MrZAloTjkwstlhaLZtQ+cOhC8f8/GUCV4/zfvP3YgeP/\
EZWYMwXtMiEkazKhYDHnvuEJOZbkp4oPizlHZtpHt8MX9p4X/ZGEFxrA9J4yFZ/\
ZoVJ9l5IbCafba97LhxKJ5v2SySWKKjMYhaw3YrO6KkfWQOmjtAnNsNGEqBlOHu1VanHJis/S+\
mzn5wLlTDCXtcoEcdchxBZlZzHs1Y5TGtlA9qzBwx92129++\
roegpSazziCTFQ548AlZGxMw0BmppeBY9MTAQ3Zf9/qYgN2bfOyWgqvum15VKCiWf2dVBQX/\
9C9uG1Bwq/nXKgr+\
2wNXDij48weuH4OCxlBHFLW5Ex2wj0WTWwMrFLyjJDcMEXKiTqwjKVhl0Qk5ePCu2V93nq6HoSc88q\
IMEXMfP6010jIXKGR5Mx49TaJFrFU5pDpg4QJr7Js0FFFmiemENM1dXnUExyOZQ5gxJVlKWCbVrvPY\
AiN33EprnJvY9VB0kTErBUUypIi4URwZB/\
GhCowm6WM0TFYRcWw4NrV9GKw9FLXLLlUdX37N372yEPGV9+945RgLzRDOeZn7nLMgc/\
8shizDGtxo0Dwk55Jr2dehySHMeSxzxqaN52+KMwrrnTqFPzv+puXFBP++86UrKpzC0rd8ZnlxCj+\
95N7lFU7h2L96x8PFKXz9yY883N4paAuRMQ0RuQQpJDcxIh0SQ4A7E2SgPnfI6MMp1Fl1Qscw24m/\
4Vxdz0jsmNccRxSEhDEIuIIojlCIUbywPlBKlBzrWebw8OpSn6DtiUebaMt3nhongZPFlnmPWBZf5h\
bz3MOFowiJidcYe6Za6J/\
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\
OkVqDzimu8NUPm2H+2oQuVXP+\
cHqLzhoS1joJIJpSj2eftwgLGXWOkcAB5fM5II15q5frYi1Zt2QloumRpaLNhDwKTY6siwR4zm2ncS\
CbKKcZRgVCoJw5JYPhqYDeOsA2bWWGbfxKa3RGNNcoUhoXmzgUSGC4yot0K4ZIlRLdagGwzeITknu6\
1dD1GjIHp3JiDGaIJoyBJkIoF0yHimI2eEcdwHPA+fqkhmFsXPg4b+\
Wreh6nsP37C9HP9KvGx7xfGbr3vBusLn5du2rqvg80euPn1d4fO2Wy5YV8HnF67bNuDzV2++Zww+\
J0MNYcIja1Le0IE10oFSpKzUnjjGWein9Ljx7k2I6MOm5q8v7CFKY5a4jBjSAB5g4Kesw0pFyk7PQ3\
Ygk7B2NKWbB3QHoK63z77J6pQ8jFiTCy1KcIEpsk5jFChjBENKQXSL+\
pRms3eI64nvb9fDVQZwa8b7rBuQg4oQsrBzQoIwHZxMLpLmepW5L8cD+\
vBqwNC9KRbYsHnjllkl812dxFvOweiwzfLU0oD3hiwHIiWsHKIWRy6YjVG1XBlpWjQqa0QDh3L+\
pjd3uNXpFUu/\
smlQYbPz65varwcFrBIPLqFE8oYIZhTS1FokFIQqAB3POe8mT5m5M4vVf2hKUj71rDM3FyMctvH6zR\
VOcv3OnywrTvIufkiVDPdtF730E0W/\
4WMHbP7EGPoNXkKIDVmJijp38hEsl8pYlCQJlltKfJyoGP2ghf9k4a6RGbtO6PNmi6/\
rJWxiZy3cB5y+f/U0K19/t3r2NxWGztQ8eTraC37LbX7roJ/\
HmdNb5jeSrG5MPWTHIXWBDXPEgWZhMVey9HX2ree/\
2baX83letS3KH66RQq3tRj3zeZrfOp7k6Qvnnbj53a2khZ4355S1b2onZVTu6tNCpUhBuBvyUq4KxX\
9QD5EwI8gDCniMOKMgHTw0oyuCiaFh2eXeii6FDPOULd/m/\
T5bq0rIcFy9kGEKluNt9UI2jNQLmRlxjcFm+f0oSY9DFl7pKHGC/3vx+\
z74w0c3zwDwf81oWPxNlThB55IeJ8yMj8XrXHTsGFrb5Wmm7bHfT+33U335qSFWLRufVVO7vna9+\
JvVsy/GzdMfW/nGD31jB4R9+X8r3/ij1bt+\
81DbR1GCCSm5R8EqhTilGuUG6cgZGaw2TCUqdmeGrVxrh2l5W5edb93vTp//VntpzB+xDTIPn/\
MpX7f50ug2b76gePP8x5v+5eh78t2/zl8/3a1pM/1/duSbskDcZj+\
49oNrLwmwmTRZDSZSjxGk1RiZ3MjNiMR9tNwHsns1qdNGZMsqh06fCxnrDzviorKQcf+\
XNl9UsZDxpvW/X9Yvps95wyeqFjL++ylrry8LGe9998evb7+QgSknxBiLgmM+\
76pXyGCVOxd6K0Pi1jPaixBl9eSccElj7vbJyhO1EbOqIUurD1oDsv/cALI+\
kbNfVLhq4TNSzZjJosL5wVXWm7LEMeRdVr4OWAQu07OHxm1FTFHjVDreA9xl7p5/Kt9G//\
4pTfTaJVvXXpO/vjyJkGIPE3zoTU3TffDTbnH42tk/L0if98/\
KcK96S9PfqeRGx39nAXE6Pv98VnV8+hnKdXzaWT72YI25ZO349BVM7vgvVNN8/D+yEBDzVinHSY1+\
uHoXXX68evpffy8/WP5J27YHxIuUtEfR5FYwGqJVHYlFSXnstA+UpTj6aX6Na+\
kwcR3fee0PnCre9UwLnHjikmmBbIqQI0BOgLSVHElMoowGMrG+RE+Prrt5fWZi15968JaSiT3/4j/\
fUpGJfeTOXwwysZ0PLn1ZRSb25ldddUPJxO7Z9MAN7TMxZYUxzHJEwdyIi2CRNTKg5Ey0WAoqeMvOF\
2NmYrUzZMJkbKa9QNO52mClfp63/\
cQ1cHlWA1z2A6CqaooyS6WkSFJj8iIBRcZLiWjANjGFPZZmdOZUT+IOe1q0PnH7/KniGWfjs8+\
nbf7U24QczqIapuf+rGN/1vE0zDpS+\
fp57QOZurhMxZhSFMgTGxAnXKLcXQhRQyJ1xDChW2zirsdyxyJSY7N/\
f5AwtQ8FCYJbRZNNiIUcv8aUW1LGgBg3OMgQpbT9Swr8xtRABNdeemkMy4phxyu4bUoM3vXiG64oic\
H7nvflKyoSg7u+/eH3l+PbX3z4lRXHf3bjH4oiM3Or/4JoL6UblWZG6IRokrmRL+\
HIWW6Q0lGGpIxRtmUztqZU64g50yXbrc8Ma2rZ9NuLoZadfePbKwy17ay/\
P6ZkWNvv3nFMRYY1veFb/7NkWH997gs+3T7DSsInh6UD8+UOlfmBl/VKwQi1VMOoxYxOVLQ7MsOa/\
3B3wsRqpmN8xSnaoHIBj0Z8rBowNtzYvQ1JkkaataZh0gj4hvOue60seEkhc40mowLvLjaoc5ALHs1\
32Px/1PnGraMc3izRcR1lPo4GH3Deu0aMpOfvfveaLZsGjx/yP1m/+UKbZXTitN046wkbo6jy+\
1FVmvnUFdleU+XTl16Sa2LuWj3909fnl7fPVD5VBnWdV2l+DF6cf8DU/Axzf3Hmni7OfMYAc2Y+\
bNho4dtB5VPYjef7xmnTUdqTB9JFJ/xk9XT5/\
3MeXr1r9rVuU5Ewzn2qkI8OD7ZtGZ8iMioyYjBzgdPRac8CqneY7YzjMZ7hA7FuTz0lJlmSt1blViS\
5CYSxNPcsNY5SKYXrS+/3+XNMC47vzQCXbts8PTK1QpYs4JALL5cVYpPXPnDqsSX4fc/\
GcGx7uS0amGIOe5RVABBXwedCLglms0o6L71W/\
XTGqzDYhPHtzM6V6rO0aeT4vnH6iXkTNRdZlUzF3LHV5epinkcciVRi660fjZGq4dLhJp4Wp5zYLr1\
vtg7SCZF8RIRkkUGpMYxG5ZE3yrHgfcKmRa+\
7Kgt3yOoxb2DXo1BHKxM4NKRZbm9lHUcG0hOUDLHECc+\
pof2A7gVzLnx9TEDoTT52i7pV902vKqgTy7+zqgJ1f/\
oXtw1Qt9X86xioAwcvBdYUWZydgzYxPykVyEZrglLca417U0BZYLIJYXfwrhled57OB1pgIhBpkOEy\
d06VGmnMEvJeCYaxSJANtxNAWThoOgDeAnMsbhK+/TtPDfKcsobJSBDM6VxOnRIy0gakTSDM6IATl+\
30TxZauWP9k7Fu48QWr1uKA0tQE7LeKgXnS4NBTguNFIk2cOIgjJdV2BubgMMLIsMEHCwaFE3fLiVo\
X37N372yUO+V9+94ZftlXhITMwJGjeM5CslosxzmK4dZmyjRDquWlfhN1J/\
7VOSMTRvP3xR3WaBb8v/Z8TctLzb4950vXVFB/qVv+\
czyQv6fXnLv8jHIHxM3yXAkJM7i3skiHaNDWgdpo6CQ/E1UIzOS/LVmm5D+\
sxIcDefqes6JpKOPyiJFmUScM4VMohBvEOk5hGlWshYN9usHUJfKJG1PvPd6ApEiIy53NrOEwFDNgh\
AUYhamqWJcMQBYi+C33to9PZzt3/\
K1bYp95EJSGJMOkoUSqeQ2Q0YABI0wNMzVJukyEJ7bqmZY6b1bJn7x87cUFE5/\
7rt6ZQUTzdpXrRjocF/+OyvGSPyTUkzHgAQdLIdByKEFQ5GwHBpHo0w/\
TKy324RQPHTX7G88WdfjzkTMhYOsVEHSn6WuEjjgaFCSGjiZVKKyhUxqwxjqAIvVhtk3uYixZU57jw\
jm2d6JI52750rtjVNYKI5Du26ZNfbuuFvm+\
He16xEKblkzxjGKmOYJ7iDx1dLBgOXacx1ljLgfMr6k9vr76YD/tTu+\
WcA4feY37MsrCHnfkZ8cENKddvsYhPTBEaxzUF06VkKyixw2EWmupQoJR+\
b6WS8Ybb8JSXlEJRAmbl053ngkwUpiDSS1MJFhPMaELANzUsMTdg4IKuVoYrYYWx2Qs9lQ+\
yZBCdHGO61RyrKCXBCMLARHiLuoSWAOkkg7mqAt7N8hSRd3t7sewd54JbMYMCEYiMoEAR9kBcKCeG4\
dMUSRfoi6vNYOp128pXTI6Ies61cffVwh60GnvuQVFWRd9e5lKwtZH33N61e2J2v0RjqfleV9Xsaxh\
iIHwSjkPOCzZEhe+X50Qo9paccJ+bqsEhuNp+\
7c68sQhXVAWQpW5TKBkSFLRziK5AIOVHkxmrJt7dQFa9sYbd8kbpSEEeYEykvoEEVYnJs1c2SxoSYo\
DsxtoZPX+l50yN0u7n/n8UNUOVXNouAwvHlSWejRQv7qJBMqMitV5bP9TguFD9z16y4Xfv9y651/\
UMpazz3t1Pe0b8hrDSTq0pK88JuFrRJkoNZbMEpSljuNjWqpDdR0wflFLvAY368c0HDJR120+\
UPlku/++D0fqqjkvek5//B4OX7kxkcerzj+Cr1CDNY8TtsgKip9yVEfPaEc/\
5MP3nZCe78UvMfEB46wCuCX8s5sq5lFQQtLJOZEqA6c+dwqnGLarhVYZhUEzrr7+H+ssN6S+\
y6TxTp3vPomWWG91RvPfawcX7nlXY+1t55QBjJNypAxvixdKqQxcYhkOVBuNdWxHwWW+\
Qad0HvPFNdWnKLzVUvAl4FkCEWZU0ufm1NJpxB1kkdMrFXj1qKVgdRhhfGo8+\
29XpcbYzjEPIgxkbLQRETWpbztHCfmVBBOqdFed4Fte6rz683OtUqogihHMcLaqLxezpGL8CoxmLBU\
0kjSHC8686Lb+\
rhdtYATca8pW7nxmh2qcOsH29bqCq6tvPeo44uyyUNXnHr86tZc414qqVkAkwWavYJBjoiIXDLJ4EQ\
g8WvZ+X4RJXK7bDYh2mabO1eeZfQYW/+a94+\
jvceU5gTiMw8YgxyEeWQiTSjAmLMmBZtoiw2GVSOmyz7Xo085sV16Z5zmWAgZIbNwpcMh5BjaE49YD\
MYG7YzDLbSjqizcU4lcn9ausxHTXJgYEPEefGxKAQKTRJEWwQanhbS0F7Wo+f1reoLdkZ8/\
2xTYXf3xW00F7L714M4B7J44ahVuDzsXvQueZoUPBXOXZ4VnAkZUjlhmhMMEctY+\
YFdttgl5N7cn3h5BnoFppxjOddMRYl8G3DNBCGRwXnIR2kra4nFgzdDpuEngvgw+\
KbFMkI6hZCLOBWAWWYUpSkI7iVnEQbYI7mrs3GPHrD2PP6JzWXqWCDcG5+V+\
CPSUBhpipmWMXkkaFuKv08WS/O4zhnS/x15EaFo32br1mO8PhIw+fdP326+\
bYMZIUNEilnIxGA8GWRwZ8hDJmVxbDpfeccHckA0mcQRNaymL1Qtc+uB1JxZHcu0HD11d5Uj++\
Y41xZE8eOzONe0dCSRaJkqdkKZ5eQpDdKI5sFFDamatjTyIfqLmWstP6Etmi8saztW5OxFeGUyy/\
zAcMEdgGnOhkIBkI4WotMEtZP7qx2CXNXdtT7z3OhUqLcTNOjf3DdmpqKzul4AImARqLYYET49Zczd\
klL5q7nq3fJ1rSVw7+ILhmPfHe5o3Q3GHnCA2YKYM70eH9b9MLUgoFofVpvj6S+\
8UJxUsnvuBe06qwOJh5JK1BYsXPvTRte2xiK1X1gWGgsqVJVFrmON5010IYEzmaMKqFyw2GW9CMi6d\
Gkql9xQcMTVOWuUQIaWwCV45sBykKFF550NMsgUcGwdTB3ysM86+iUgcIJ7M/\
Wmph5CbK8ijTa6EoDCYrSfKw9gdjchGm3dIyUnvbedLENaxECVBXkgGoSbkh5oJi7LCN1fYap8qYvD\
Fg/K/TlVlH4tjZasHTjUh6ONXnXdyYekT+\
LhTKlj6yzuXnF5YevV58vQxFmYV1SZEj1JkCkJMx3IVeECec2q9JYmGfkLMEfadEKcvmpqfo+\
8pojpqjIvSokiiQVwSyKo1GDJKR1WUFFPZog/\
1qFHXAVQbTLS4ef2733mKFnKjFTJ4C75M55IyK5GJGJImYSyDVB2C0RbbPUZZvkO0LuImT3wXaht6e\
KwJ5mC7XBKOTV7b1Rwpm7xgVlBTRddOVzgWtL/otPru2JPvuapg9fKv//qqCqw+cMCOX5bjlx337V+\
1XwBJSQehjEQuKRhzksKYAzeFhBPSJW199B3sGFw6NZypzJpob1v/2P7Zk9cU53Qi/\
uKaCuf0wz960xnFOZ1z4DvOGCPQNwknphKCjD1vWIBQVVOaEHWBGhicQqt+\
nFOd4Sf0SodM7c7zJ64UH29ia0u5F0YgFXJPEmohHzdaIcYguKeQYcpIRruj2gHYgR+qMsq+\
6YCiCDHmfptGEZpLcQUyNILVow2UYCOsafEksdbWHXqeSe5n1yMzCWE8txoxQm1eKcr7NAOk8F47ph\
jDgog+AvoXTS1IaBbF08aFj888vLbw8N63+\
dMreHjENd8b8PBtP9oxBg8d9945z3JNMkfcwcw2RsCPKeR2pIJj2w8PG2w3IRKXTA2l9nuIihigiG1\
uQwrZJJjNi1ycCN+\
MY9IYJrAzo6nYNJI6AGONafZNNppAdVQwZDWmHizuFNJOOZSc9wQTrb1p8bCxyeId4nHCG9s5ISkzI\
Rc1+qhprkrWSBumEQTjkTKpnXCkD0IeMVWVlywKksM9QLoNOt97+Ibt5fhX4mXbK47ffN0L1hUIL9+\
2dV0FhD9y9enrCoS33XLBuvYQFpEJGLwOYccBvSJDGMMtwtRqSYgVnPbT7a359kzI4cOm5q8G7CkUE\
xk9JgSFaHLTPECxxsRkzR0vFI7g51psZRwxZDugcb2B9k0gR8mICV6iRHgatHd0QcLwNSpiiMYCDO/\
RQH7a2b22RUHSygeKsCUQrPr8nCTkNtbY2YhVothUPKar3jlTgezRpimrIfCz3bLx0ldtcv8fGR7ES\
w=="}}},
CreateCellID->True,
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"1/4: Environment setup\n", 
         StyleBox[
         "This includes things like Style > Format menus, setting up \
inheritance, and screen environments\n", FontSize -> 16], 
         StyleBox[
         "Change these to change Mathematica\[CloseCurlyQuote]s behaviour and \
appearance", FontSize -> 12]}], "Title", 
       CellChangeTimes -> {{3.687962870211832*^9, 3.687962889477581*^9}, {
        3.687969482360115*^9, 3.6879694886300974`*^9}, {
        3.7104090012206354`*^9, 3.710409029424096*^9}, {
        3.7104090644400425`*^9, 3.710409096331049*^9}, {3.711476461309063*^9, 
        3.7114764623442097`*^9}}], 
      Cell[
       CellGroupData[{
         Cell["Inheritance", "Section"], 
         Cell[
          StyleData[StyleDefinitions -> "Default.nb"]], 
         Cell[
          StyleData[StyleDefinitions -> "StyleMenuClear.nb"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Some manual clearing", "Section"], 
         Cell[
          StyleData["Chapter"], MenuSortingValue -> None], 
         Cell[
          StyleData["Subchapter"], MenuSortingValue -> None], 
         Cell[
          StyleData["Link"], ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "PacletLink"], 
          StyleMenuListing -> None, ButtonStyleMenuListing -> Automatic, 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0.5, 0.25, 0], 
          ButtonBoxOptions -> {
           Active -> True, Appearance -> {Automatic, None}, ButtonExpandable -> 
            False, ButtonFunction :> (FEPrivate`FrontEndExecute[
              FrontEndToken["OpenHelpLink", {#, 
                FEPrivate`If[
                 CurrentValue["ShiftKey"], Null, 
                 FEPrivate`ButtonNotebook[]]}]]& ), ButtonNote -> ButtonData, 
            Evaluator -> None, ImageSize -> Full, Method -> "Preemptive"}], 
         Cell[
          StyleData["Hyperlink", StyleDefinitions -> StyleData["Link"]], 
          ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Hyperlink"], 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0.5, 0.25, 0], 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               
               NotebookLocate[#2, "OpenInNewWindow" -> 
                CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None,
             Method -> "Queued"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Adding some things back in", "Section", 
          CellChangeTimes -> {{3.667693482022279*^9, 
           3.6676934870227127`*^9}, {3.712759087573056*^9, 
           3.7127590888579865`*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "Styles for Coding", "Subsection", 
             CellChangeTimes -> {{3.6879584849145775`*^9, 
               3.6879584866808233`*^9}, {3.7114756591743126`*^9, 
               3.7114756617870517`*^9}, 3.7126978256394167`*^9, {
               3.712697859186846*^9, 3.7126978613587527`*^9}, {
               3.7127588793352513`*^9, 3.71275888312528*^9}, {
               3.712759092933349*^9, 3.7127590977711077`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "8 - Code", "Subsubsection", 
                CellChangeTimes -> {{3.7127591106314316`*^9, 
                 3.7127591150149*^9}}], 
               Cell[
                StyleData["Code"], MenuSortingValue -> 8, MenuCommandKey -> 
                "8", Background -> GrayLevel[1]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "9 - Input ", "Subsubsection", 
                CellChangeTimes -> {{3.687958493582033*^9, 
                  3.687958495602254*^9}, {3.711475663463266*^9, 
                  3.7114756679087715`*^9}, {3.711723343933262*^9, 
                  3.7117233442181435`*^9}, 3.712392463853243*^9, {
                  3.7126978753276825`*^9, 3.7126978759838142`*^9}, {
                  3.712758885713909*^9, 3.7127588887177925`*^9}, {
                  3.7127591176158953`*^9, 3.7127591181011596`*^9}}], 
               Cell[
                StyleData["Input"], MenuSortingValue -> 9, MenuCommandKey -> 
                "9", Background -> GrayLevel[1]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "Output", "Subsubsection", 
                CellChangeTimes -> {{3.68795854365942*^9, 
                 3.6879585462284193`*^9}, {3.7127588905526156`*^9, 
                 3.712758891421878*^9}}], 
               Cell[
                StyleData["Output"], Background -> GrayLevel[1]]}, Open]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Styles for Subsubsubsection - 2 & Sub^4section - 3", 
             "Subsection", 
             CellChangeTimes -> {{3.6681004539286723`*^9, 
              3.6681004704524083`*^9}}], 
            Cell[
             StyleData["Subsubsubsection"], MenuSortingValue -> 2, 
             MenuCommandKey -> "2", Background -> GrayLevel[1]], 
            Cell[
             StyleData["Subsubsubsubsection"], MenuSortingValue -> 3, 
             MenuCommandKey -> "3", Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell["Styles for Body Text", "Subsection"], 
            Cell[
             CellGroupData[{
               Cell[
               "Text - 7", "Subsubsection", 
                CellChangeTimes -> {{3.6681001893578424`*^9, 
                 3.668100191889705*^9}}], 
               Cell[
                StyleData["Text"], MenuSortingValue -> 7, MenuCommandKey -> 
                "7", Background -> GrayLevel[1]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "Lists - 5+6", "Subsubsection", 
                CellChangeTimes -> {{3.7137123464890876`*^9, 
                 3.713712347968792*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "Bulleted - 5", "Subsubsubsection", 
                   CellChangeTimes -> {{3.668100177055005*^9, 
                    3.668100177951069*^9}}], 
                  Cell[
                   StyleData["Item"], MenuSortingValue -> 5, MenuCommandKey -> 
                   "5", Background -> GrayLevel[1]], 
                  Cell[
                   StyleData["Subitem"], MenuSortingValue -> 10, Background -> 
                   GrayLevel[1]], 
                  Cell[
                   StyleData["Subsubitem"], MenuSortingValue -> 10, 
                   Background -> GrayLevel[1]]}, Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "Numbered - 6", "Subsubsubsection", 
                   CellChangeTimes -> {{3.668100180557205*^9, 
                    3.6681001813159237`*^9}}], 
                  Cell[
                   StyleData["ItemNumbered"], MenuSortingValue -> 6, 
                   MenuCommandKey -> "6", Background -> GrayLevel[1]], 
                  Cell[
                   StyleData["SubitemNumbered"], MenuSortingValue -> 10, 
                   Background -> GrayLevel[1]], 
                  Cell[
                   StyleData["SubsubitemNumbered"], MenuSortingValue -> 10, 
                   Background -> GrayLevel[1]]}, Closed]]}, Closed]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Styles for Formulas and Programming - 4", "Subsection", 
             CellChangeTimes -> {{3.6681002352855153`*^9, 
              3.6681002409098883`*^9}}], 
            Cell[
             StyleData["DisplayFormulaNumbered"], MenuSortingValue -> 4, 
             MenuCommandKey -> "4", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "ScreenStyleEnvironment", "Section", 
          CellChangeTimes -> {{3.687957860224821*^9, 
           3.6879578658905983`*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "Clear these", "Subsection", 
             CellChangeTimes -> {{3.6879583299099507`*^9, 
              3.6879583318975163`*^9}}], 
            Cell[
             StyleData[All, "Working"], MenuSortingValue -> 0], 
            Cell[
             StyleData[All, "Printout"], MenuSortingValue -> 0], 
            Cell[
             StyleData[All, "Client"], MenuSortingValue -> 0], 
            Cell[
             StyleData[All, "Client-Source"], MenuSortingValue -> 0], 
            Cell[
             StyleData[All, "Condensed"], MenuSortingValue -> 0], 
            Cell[
             StyleData[All, "Presentation"], MenuSortingValue -> 0], 
            Cell[
             StyleData[All, "SlideShow"], MenuSortingValue -> 0]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Add these", "Subsection", 
             CellChangeTimes -> {{3.6879583339667006`*^9, 
              3.687958335825034*^9}}], 
            Cell[
             StyleData[All, "Plain"], MenuSortingValue -> 1], 
            Cell[
             StyleData[
             All, "PagewisePlain", StyleDefinitions -> 
              StyleData[All, "Plain"]], 
             ScrollingOptions -> {
              "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
             MenuSortingValue -> 3], 
            Cell[
             StyleData[All, "Colorful"], MenuSortingValue -> 2], 
            Cell[
             StyleData[
             All, "PagewiseColorful", StyleDefinitions -> 
              StyleData[All, "Colorful"]], 
             ScrollingOptions -> {
              "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
             MenuSortingValue -> 4], 
            Cell[
             StyleData[
             All, "LightBoard", StyleDefinitions -> StyleData[All, "Plain"]], 
             ScrollingOptions -> {
              "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
             MenuSortingValue -> 5]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Notebook", "Section", 
          CellChangeTimes -> {{3.712343736106569*^9, 3.712343737346387*^9}}], 
         
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CreateCellID -> True, FontFamily -> 
             "Arial"], 
            Cell[
             StyleData["Notebook", "LightBoard"], ShowCellBracket -> True, 
             CellBracketOptions -> {
              "Color" -> RGBColor[0.5, 0.5, 0.5], "Thickness" -> 2., 
               "Widths" -> {10, 10}}, CreateCellID -> True, FontFamily -> 
             "Arial"]}, Open]]}, Closed]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"2/4: CodeSeal specific styles\n", 
         StyleBox[
         "This includes one-off styles for CodeSeal such as CodingComment and \
Emphasis\n", FontSize -> 16], 
         StyleBox[
         "Change these to change Mathematica\[CloseCurlyQuote]s behaviour and \
appearance", FontSize -> 12]}], "Title", 
       CellChangeTimes -> {{3.664887227979697*^9, 3.6648872281329665`*^9}, {
         3.687962750308603*^9, 3.687962752774397*^9}, {3.6879628066696234`*^9,
          3.6879628219265947`*^9}, {3.6879694620751433`*^9, 
         3.6879694659608755`*^9}, {3.6879759689589224`*^9, 
         3.6879760044487658`*^9}, {3.7104091098781796`*^9, 
         3.7104091351752386`*^9}, {3.7104092252076902`*^9, 
         3.710409227317088*^9}, {3.711476465873748*^9, 3.711476466746779*^9}, 
         3.711477747925911*^9, 3.7114779612734632`*^9}], 
      Cell[
       CellGroupData[{
         Cell[
         "Title", "Section", 
          CellChangeTimes -> {{3.664887054408309*^9, 3.664887054980388*^9}}], 
         
         Cell[
          CellGroupData[{
            Cell[
            "ModuleTitle - has counter + navigation", "Subsection", 
             CellChangeTimes -> {{3.6879598897708864`*^9, 
               3.687959891456485*^9}, 3.7104061616808643`*^9, {
               3.711475350679101*^9, 3.7114753595171*^9}, {
               3.7127852240048695`*^9, 3.712785227353862*^9}}], 
            Cell[
             StyleData["ModuleTitle", StyleDefinitions -> StyleData["Title"]],
              Editable -> False, Selectable -> False, Deletable -> False, 
             ShowCellBracket -> False, Deployed -> True, Copyable -> False, 
             CounterIncrements -> {"CodeSealNavigation"}, 
             CounterAssignments -> {{"CodeSealChapter", "0"}, {
               "CodeSealSection", "0"}, {"CodeSealSubsection", "0"}, {
               "CodeSealSubsubsection", "0"}, {"CodeSealText", "0"}, {
               "CodeSealInput", "0"}, {"Text", "0"}, {"Input", "0"}, {
               "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}, 
             MenuSortingValue -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "ModuleSubtitle ", "Subsection", 
             CellChangeTimes -> {{3.687959894079856*^9, 3.687959898908923*^9},
                3.7104061628527546`*^9, 3.711475323767378*^9}], 
            Cell[
             StyleData[
             "ModuleSubtitle", StyleDefinitions -> StyleData["Subtitle"]], 
             Editable -> False, Selectable -> False, Deletable -> False, 
             Deployed -> True, Copyable -> False, MenuSortingValue -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "ModuleSubsubtitle", "Subsection", 
             CellChangeTimes -> {{3.68795990283405*^9, 3.687959905873539*^9}, 
               3.710406163977769*^9, 3.7114753374046855`*^9}], 
            Cell[
             StyleData[
             "ModuleSubsubtitle", StyleDefinitions -> 
              StyleData["Subsubtitle"]], Editable -> False, Selectable -> 
             False, Deletable -> False, Deployed -> True, Copyable -> False, 
             MenuSortingValue -> None]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter ", "Section", 
          CellChangeTimes -> {{3.711723517140249*^9, 
           3.7117235175246887`*^9}, {3.712392383227175*^9, 
           3.7123923833834267`*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "ModuleChapter - has counter + navigation", "Subsection", 
             CellChangeTimes -> {{3.687959873179311*^9, 
               3.6879598754541073`*^9}, 3.7104061544932976`*^9, {
               3.711495133099145*^9, 3.711495134288556*^9}, {
               3.711723524611549*^9, 3.711723524996101*^9}, 
               3.7123925733703156`*^9, {3.7127837683602653`*^9, 
               3.712783768491811*^9}, {3.7127852363755407`*^9, 
               3.7127852400152717`*^9}}], 
            Cell[
             StyleData[
             "ModuleChapter", StyleDefinitions -> StyleData["Chapter"]], 
             Editable -> False, Selectable -> False, Deletable -> False, 
             CellDingbat -> Cell[
               TextData[{
                 CounterBox["CodeSealChapter"]}], "Text", Background -> None, 
               FontSize -> 18, FontColor -> RGBColor[0.59, 0.3, 0.018], 
               FontFamily -> "Bagdhad"], ShowGroupOpener -> False, Deployed -> 
             True, Copyable -> True, PageBreakAbove -> True, 
             CellFrameMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
             CounterIncrements -> {"CodeSealChapter", "CodeSealNavigation"}, 
             CounterAssignments -> {{"CodeSealSection", "0"}, {
               "CodeSealSubsection", "0"}, {"CodeSealSubsubsection", "0"}, {
               "CodeSealText", "0"}, {"CodeSealInput", "0"}, {"Text", "0"}, {
               "Input", "0"}, {"ItemNumbered", "0"}, {
               "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}, 
             MenuSortingValue -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "ModuleSubchapter ", "Subsection", 
             CellChangeTimes -> {{3.687959878258752*^9, 3.687959881498102*^9},
                3.7104061556808133`*^9, 3.7114754124091697`*^9}], 
            Cell[
             StyleData[
             "ModuleSubchapter", StyleDefinitions -> StyleData["Subchapter"]],
              Editable -> False, Selectable -> False, Deletable -> False, 
             Deployed -> True, Copyable -> False, MenuSortingValue -> None]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Sections", "Section", 
          CellChangeTimes -> {{3.7130420217813888`*^9, 
           3.713042024538719*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "Initialization", "Subsection", 
             CellChangeTimes -> {{3.7137125216280375`*^9, 
              3.7137125237735558`*^9}}], 
            Cell[
            "please note there is a cell under this", "Text", 
             CellChangeTimes -> {{3.7130433065615664`*^9, 
              3.713043314519969*^9}}], 
            Cell[
             StyleData[
             "Initialization", StyleDefinitions -> StyleData["BaseSection"]], 
             CellFrame -> 0, ShowCellBracket -> False, 
             CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellOpen -> 
             False, InitializationGroup -> True, MenuSortingValue -> None]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Code ", "Section", 
          CellChangeTimes -> {{3.664888108819556*^9, 3.664888108973951*^9}, {
            3.7117233390448713`*^9, 3.711723341431655*^9}, 
            3.7126993784036613`*^9}], 
         Cell[
          CellGroupData[{
            Cell[
            "Input/Output - LightBoard", "Subsection", 
             CellChangeTimes -> {{3.7267553837506623`*^9, 
              3.7267553876048174`*^9}, {3.7267554284300833`*^9, 
              3.7267554296832466`*^9}}], 
            Cell[
             StyleData["Input", "LightBoard"], FontSize -> 24], 
            Cell[
             StyleData["Output", "LightBoard"], FontSize -> 24]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "AuthorCode - has counter", "Subsection", 
             CellChangeTimes -> {{3.6879584849145775`*^9, 
               3.6879584866808233`*^9}, {3.7114756591743126`*^9, 
               3.7114756617870517`*^9}, 3.7126978256394167`*^9, {
               3.712697859186846*^9, 3.7126978613587527`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "AuthorCode", StyleDefinitions -> StyleData["Code"]], 
                Editable -> False, Deletable -> False, CellFrame -> 1, 
                CellEventActions -> {
                 "KeyDown" :> With[{$CellContext`content = Cell[
                    First[
                    NotebookRead[
                    EvaluationCell[]]], "Input"], $CellContext`cell = 
                    EvaluationCell[], $CellContext`nb = EvaluationNotebook[]}, 
                    If[CurrentValue[$CellContext`nb, "EventKey"] =!= None, 
                    CreateDialog[{
                    TextCell[
                    "You can evaluate these cells using \[ShiftKey]+\
\[EnterKey], but you cannot edit them directly."], 
                    TextCell[
                    "Would you like me to make a copy for you to edit?"], 
                    Row[{
                    CancelButton["No", 
                    DialogReturn[]], 
                    DefaultButton[
                    "Yes", SelectionMove[$CellContext`cell, After, Cell]; 
                    NotebookWrite[$CellContext`nb, $CellContext`content]; 
                    DialogReturn[]]}, Alignment -> Right]}, Modal -> True]]], 
                  PassEventsDown :> MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None], PassEventsUp :> 
                  MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None]}, 
                CounterIncrements -> {"CodeSealInput"}, MenuSortingValue -> 
                None, $CellContext`GeneratedCellStyles -> {
                 "Output" -> "AuthorOutput"}], 
               Cell[
                StyleData[
                "AuthorCode", "Colorful", StyleDefinitions -> 
                 StyleData["Code"]], Editable -> False, Deletable -> False, 
                CellMargins -> {{121, 10}, {8, 32}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                StyleKeyMapping -> {"=" -> "WolframAlphaShort"}, Evaluatable -> 
                True, TextClipboardType -> "InputText", PageBreakWithin -> 
                False, GroupPageBreakWithin -> False, 
                CellEventActions -> {
                 "KeyDown" :> With[{$CellContext`content = Cell[
                    First[
                    NotebookRead[
                    EvaluationCell[]]], "Input"], $CellContext`cell = 
                    EvaluationCell[], $CellContext`nb = EvaluationNotebook[]}, 
                    If[CurrentValue[$CellContext`nb, "EventKey"] =!= None, 
                    CreateDialog[{
                    TextCell[
                    "You can evaluate these cells using \[ShiftKey]+\
\[EnterKey], but you cannot edit them directly."], 
                    TextCell[
                    "Would you like me to make a copy for you to edit?"], 
                    Row[{
                    CancelButton["No", 
                    DialogReturn[]], 
                    DefaultButton[
                    "Yes", SelectionMove[$CellContext`cell, After, Cell]; 
                    NotebookWrite[$CellContext`nb, $CellContext`content]; 
                    DialogReturn[]]}, Alignment -> Right]}, Modal -> True]]], 
                  PassEventsDown :> MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None], PassEventsUp :> 
                  MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None]}, 
                CellFrameMargins -> {{8, 8}, {12, 12}}, 
                CellFrameLabels -> {{None, None}, {None, None}}, 
                CellFrameLabelMargins -> 0, DefaultNewCellStyle -> 
                "AuthorInput", DefaultFormatType -> DefaultInputFormatType, 
                ContextMenu -> 
                FEPrivate`FrontEndResource["ContextMenus", "Input"], 
                ShowAutoStyles -> True, 
                HyphenationOptions -> {
                 "HyphenationCharacter" -> "\[Continuation]"}, 
                LineSpacing -> {1.2, 1.2, 2.}, AutoItalicWords -> {}, 
                AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
                LanguageCategory -> "Mathematica", FormatType -> InputForm, 
                NumberMarks -> True, 
                LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
                CounterIncrements -> {"CodeSealInput"}, FontSize -> 13, 
                FontWeight -> "Bold", Background -> 
                GrayLevel[0.9], $CellContext`StripStyleOnPaste -> 
                True, $CellContext`GeneratedCellStyles -> {
                 "Output" -> "AuthorOutput"}], 
               Cell[
                StyleData[
                "AuthorCode", "LightBoard", StyleDefinitions -> 
                 StyleData["Code"]], Editable -> False, Deletable -> False, 
                CellMargins -> {{121, 10}, {8, 32}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                StyleKeyMapping -> {"=" -> "WolframAlphaShort"}, Evaluatable -> 
                True, TextClipboardType -> "InputText", PageBreakWithin -> 
                False, GroupPageBreakWithin -> False, 
                CellEventActions -> {
                 "KeyDown" :> With[{$CellContext`content = Cell[
                    First[
                    NotebookRead[
                    EvaluationCell[]]], "Input"], $CellContext`cell = 
                    EvaluationCell[], $CellContext`nb = EvaluationNotebook[]}, 
                    If[CurrentValue[$CellContext`nb, "EventKey"] =!= None, 
                    CreateDialog[{
                    TextCell[
                    "You can evaluate these cells using \[ShiftKey]+\
\[EnterKey], but you cannot edit them directly."], 
                    TextCell[
                    "Would you like me to make a copy for you to edit?"], 
                    Row[{
                    CancelButton["No", 
                    DialogReturn[]], 
                    DefaultButton[
                    "Yes", SelectionMove[$CellContext`cell, After, Cell]; 
                    NotebookWrite[$CellContext`nb, $CellContext`content]; 
                    DialogReturn[]]}, Alignment -> Right]}, Modal -> True]]], 
                  PassEventsDown :> MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None], PassEventsUp :> 
                  MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None]}, 
                CellFrameMargins -> {{8, 8}, {12, 12}}, 
                CellFrameLabels -> {{None, None}, {None, None}}, 
                CellFrameLabelMargins -> 0, DefaultNewCellStyle -> 
                "AuthorInput", DefaultFormatType -> DefaultInputFormatType, 
                ContextMenu -> 
                FEPrivate`FrontEndResource["ContextMenus", "Input"], 
                ShowAutoStyles -> True, 
                HyphenationOptions -> {
                 "HyphenationCharacter" -> "\[Continuation]"}, 
                LineSpacing -> {1.2, 1.2, 2.}, AutoItalicWords -> {}, 
                AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
                LanguageCategory -> "Mathematica", FormatType -> InputForm, 
                NumberMarks -> True, 
                LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
                CounterIncrements -> {"CodeSealInput"}, FontSize -> 24, 
                FontWeight -> "Bold", Background -> 
                GrayLevel[0.9], $CellContext`StripStyleOnPaste -> 
                True, $CellContext`GeneratedCellStyles -> {
                 "Output" -> "AuthorOutput"}]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "AuthorInput - has counter ", "Subsection", 
             CellChangeTimes -> {{3.687958493582033*^9, 
               3.687958495602254*^9}, {3.711475663463266*^9, 
               3.7114756679087715`*^9}, {3.711723343933262*^9, 
               3.7117233442181435`*^9}, 3.712392463853243*^9, {
               3.7126978753276825`*^9, 3.7126978759838142`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "AuthorInput", StyleDefinitions -> StyleData["Input"]], 
                Editable -> False, Deletable -> False, CellFrame -> 1, 
                CellEventActions -> {
                 "KeyDown" :> With[{$CellContext`content = Cell[
                    First[
                    NotebookRead[
                    EvaluationCell[]]], "Input"], $CellContext`cell = 
                    EvaluationCell[], $CellContext`nb = EvaluationNotebook[]}, 
                    If[CurrentValue[$CellContext`nb, "EventKey"] =!= None, 
                    CreateDialog[{
                    TextCell[
                    "You can evaluate these cells using \[ShiftKey]+\
\[EnterKey], but you cannot edit them directly."], 
                    TextCell[
                    "Would you like me to make a copy for you to edit?"], 
                    Row[{
                    CancelButton["No", 
                    DialogReturn[]], 
                    DefaultButton[
                    "Yes", SelectionMove[$CellContext`cell, After, Cell]; 
                    NotebookWrite[$CellContext`nb, $CellContext`content]; 
                    DialogReturn[]]}, Alignment -> Right]}, Modal -> True]]], 
                  PassEventsDown :> MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None], PassEventsUp :> 
                  MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None]}, 
                CounterIncrements -> {"CodeSealInput"}, MenuSortingValue -> 
                None, $CellContext`GeneratedCellStyles -> {
                 "Output" -> "AuthorOutput"}], 
               Cell[
                StyleData["AuthorInput", "Colorful"], Editable -> False, 
                Deletable -> False, CellFrame -> {{2, 2}, {0, 2}}, 
                CellMargins -> {{121, 10}, {8, 32}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                StyleKeyMapping -> {"=" -> "WolframAlphaShort"}, Evaluatable -> 
                True, Copyable -> True, TextClipboardType -> "InputText", 
                PageBreakWithin -> False, GroupPageBreakWithin -> False, 
                CellEventActions -> {
                 "KeyDown" :> With[{$CellContext`content = Cell[
                    First[
                    NotebookRead[
                    EvaluationCell[]]], "Input"], $CellContext`cell = 
                    EvaluationCell[], $CellContext`nb = EvaluationNotebook[]}, 
                    If[CurrentValue[$CellContext`nb, "EventKey"] =!= None, 
                    CreateDialog[{
                    TextCell[
                    "You can evaluate these cells using \[ShiftKey]+\
\[EnterKey], but you cannot edit them directly."], 
                    TextCell[
                    "Would you like me to make a copy for you to edit?"], 
                    Row[{
                    CancelButton["No", 
                    DialogReturn[]], 
                    DefaultButton[
                    "Yes", SelectionMove[$CellContext`cell, After, Cell]; 
                    NotebookWrite[$CellContext`nb, $CellContext`content]; 
                    DialogReturn[]]}, Alignment -> Right]}, Modal -> True]]], 
                  PassEventsDown :> MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None], PassEventsUp :> 
                  MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None]}, 
                CellFrameMargins -> {{8, 8}, {12, 12}}, 
                CellFrameLabels -> {{None, None}, {None, None}}, 
                CellFrameLabelMargins -> 0, DefaultNewCellStyle -> 
                "AuthorInput", DefaultFormatType -> DefaultInputFormatType, 
                ContextMenu -> 
                FEPrivate`FrontEndResource["ContextMenus", "Input"], 
                ShowAutoStyles -> True, 
                HyphenationOptions -> {
                 "HyphenationCharacter" -> "\[Continuation]"}, 
                LineSpacing -> {1.2, 1.2, 2.}, AutoItalicWords -> {}, 
                AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
                LanguageCategory -> "Mathematica", FormatType -> InputForm, 
                NumberMarks -> True, 
                LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
                CounterIncrements -> {"CodeSealInput"}, FontSize -> 13, 
                FontWeight -> "Bold", Background -> 
                RGBColor[0.97, 0.99, 1.], $CellContext`StripStyleOnPaste -> 
                True, $CellContext`GeneratedCellStyles -> {
                 "Output" -> "AuthorOutput"}], 
               Cell[
                StyleData["AuthorInput", "LightBoard"], Editable -> False, 
                Deletable -> False, CellFrame -> {{2, 2}, {0, 2}}, 
                CellMargins -> {{121, 10}, {8, 32}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                StyleKeyMapping -> {"=" -> "WolframAlphaShort"}, Evaluatable -> 
                True, Copyable -> True, TextClipboardType -> "InputText", 
                PageBreakWithin -> False, GroupPageBreakWithin -> False, 
                CellEventActions -> {
                 "KeyDown" :> With[{$CellContext`content = Cell[
                    First[
                    NotebookRead[
                    EvaluationCell[]]], "Input"], $CellContext`cell = 
                    EvaluationCell[], $CellContext`nb = EvaluationNotebook[]}, 
                    If[CurrentValue[$CellContext`nb, "EventKey"] =!= None, 
                    CreateDialog[{
                    TextCell[
                    "You can evaluate these cells using \[ShiftKey]+\
\[EnterKey], but you cannot edit them directly."], 
                    TextCell[
                    "Would you like me to make a copy for you to edit?"], 
                    Row[{
                    CancelButton["No", 
                    DialogReturn[]], 
                    DefaultButton[
                    "Yes", SelectionMove[$CellContext`cell, After, Cell]; 
                    NotebookWrite[$CellContext`nb, $CellContext`content]; 
                    DialogReturn[]]}, Alignment -> Right]}, Modal -> True]]], 
                  PassEventsDown :> MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None], PassEventsUp :> 
                  MatchQ[
                    CurrentValue[
                    EvaluationNotebook[], "EventKey"], None]}, 
                CellFrameMargins -> {{8, 8}, {12, 12}}, 
                CellFrameLabels -> {{None, None}, {None, None}}, 
                CellFrameLabelMargins -> 0, DefaultNewCellStyle -> 
                "AuthorInput", DefaultFormatType -> DefaultInputFormatType, 
                ContextMenu -> 
                FEPrivate`FrontEndResource["ContextMenus", "Input"], 
                ShowAutoStyles -> True, 
                HyphenationOptions -> {
                 "HyphenationCharacter" -> "\[Continuation]"}, 
                LineSpacing -> {1.2, 1.2, 2.}, AutoItalicWords -> {}, 
                AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
                LanguageCategory -> "Mathematica", FormatType -> InputForm, 
                NumberMarks -> True, 
                LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
                CounterIncrements -> {"CodeSealInput"}, FontSize -> 24, 
                FontWeight -> "Bold", Background -> 
                RGBColor[0.97, 0.99, 1.], $CellContext`StripStyleOnPaste -> 
                True, $CellContext`GeneratedCellStyles -> {
                 "Output" -> "AuthorOutput"}]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "AuthorOutput", "Subsection", 
             CellChangeTimes -> {{3.68795854365942*^9, 
              3.6879585462284193`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "AuthorOutput", StyleDefinitions -> StyleData["Output"]], 
                CellFrame -> 1, MenuSortingValue -> None], 
               Cell[
                StyleData["AuthorOutput", "Colorful"], 
                CellFrame -> {{2, 2}, {2, 0}}, 
                CellMargins -> {{121, 10}, {8, 32}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                CellFrameMargins -> {{8, 8}, {12, 12}}, 
                CellFrameLabels -> {{None, None}, {None, None}}, 
                CellFrameLabelMargins -> 0, FontWeight -> "Plain", FontSlant -> 
                "Plain", FontTracking -> "Plain", 
                FontVariations -> {
                 "Outline" -> False, "Shadow" -> False, "StrikeThrough" -> 
                  False, "Underline" -> False}, FontColor -> GrayLevel[0], 
                Background -> RGBColor[0.97, 0.99, 1.]], 
               Cell[
                StyleData["AuthorOutput", "LightBoard"], 
                CellFrame -> {{2, 2}, {2, 0}}, 
                CellMargins -> {{121, 10}, {8, 32}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                CellFrameMargins -> {{8, 8}, {12, 12}}, 
                CellFrameLabels -> {{None, None}, {None, None}}, 
                CellFrameLabelMargins -> 0, FontSize -> 24, FontWeight -> 
                "Plain", FontSlant -> "Plain", FontTracking -> "Plain", 
                FontVariations -> {
                 "Outline" -> False, "Shadow" -> False, "StrikeThrough" -> 
                  False, "Underline" -> False}, FontColor -> GrayLevel[0], 
                Background -> RGBColor[0.97, 0.99, 1.]]}, Open]]}, Closed]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
         "Text - inherits from BaseText", "Section", 
          CellChangeTimes -> {{3.6648881066851673`*^9, 
            3.6648881108545666`*^9}, {3.7114756726938734`*^9, 
            3.7114756757004766`*^9}, {3.7114784678115263`*^9, 
            3.7114784722648916`*^9}, {3.711478716125268*^9, 
            3.7114787274421573`*^9}, 3.7114994416859627`*^9}], 
         Cell[
          CellGroupData[{
            Cell[
            "Emphasis", "Subsection", 
             CellChangeTimes -> {{3.6879596624965973`*^9, 
              3.6879596640160246`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "Emphasis", StyleDefinitions -> StyleData["BaseText"]], 
                Editable -> False, Selectable -> False, Deletable -> False, 
                CellFrame -> 1, Deployed -> True, Copyable -> False, 
                CellFrameColor -> RGBColor[0, 1, 0], MenuSortingValue -> 
                None], 
               Cell[
                StyleData[
                "Emphasis", "Colorful", StyleDefinitions -> 
                 StyleData["BaseText"]], CellFrame -> {{1, 1}, {1, 1}}, 
                CellMargins -> {{151, 20}, {Inherited, Inherited}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                CellFrameColor -> RGBColor[0.41, 0.5, 0.41], FontSlant -> 
                "Italic", Background -> RGBColor[0.91, 1., 0.91]], 
               Cell[
                StyleData[
                "Emphasis", "PagewiseColorful", StyleDefinitions -> 
                 StyleData["Emphasis", "Colorful"]]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Suggestion", "Subsection", 
             CellChangeTimes -> {{3.687959668327153*^9, 
              3.6879596698901157`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "Suggestion", StyleDefinitions -> StyleData["BaseText"]], 
                Editable -> False, Selectable -> False, Deletable -> False, 
                CellFrame -> 1, Deployed -> True, Copyable -> False, 
                CellFrameColor -> RGBColor[0, 1, 1], MenuSortingValue -> None,
                 FontSlant -> Italic], 
               Cell[
                StyleData[
                "Suggestion", "Colorful", StyleDefinitions -> 
                 StyleData["BaseText"]], Editable -> False, Selectable -> 
                True, Deletable -> False, CellFrame -> 1, CellDingbat -> 
                Cell[
                  TextCell["Suggestion"], Background -> None, FontSize -> 12, 
                  FontFamily -> "Bagdhad"], 
                CellMargins -> {{151, 20}, {Inherited, Inherited}}, Deployed -> 
                True, Copyable -> False, 
                CellFrameMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
                CellFrameColor -> RGBColor[0.053, 0.1, 0.13], 
                MenuSortingValue -> None, FontSlant -> "Italic", FontColor -> 
                RGBColor[0.053, 0.1, 0.13], Background -> 
                RGBColor[0.91, 1., 0.91]], 
               Cell[
                StyleData[
                "Suggestion", "PagewiseColorful", StyleDefinitions -> 
                 StyleData["Suggestion", "Colorful"]]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Hint", "Subsection", 
             CellChangeTimes -> {{3.6879596747706275`*^9, 
              3.6879596752876453`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "Hint", "Subsubsection", 
                CellChangeTimes -> {{3.7128556866696253`*^9, 
                 3.712855687072981*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "Hint", StyleDefinitions -> StyleData["BaseText"]], 
                   CellFrame -> 1, CellFrameColor -> RGBColor[0, 0, 1]], 
                  Cell[
                   StyleData[
                   "Hint", "Colorful", StyleDefinitions -> 
                    StyleData["BaseText"]], Editable -> False, Selectable -> 
                   True, Deletable -> False, CellFrame -> 1, CellDingbat -> 
                   Cell[
                    TextCell["Hint"], Background -> None, FontSize -> 12, 
                    FontFamily -> "Bagdhad"], 
                   CellMargins -> {{151, 20}, {Inherited, Inherited}}, 
                   Deployed -> True, Copyable -> False, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> 
                   RGBColor[0, 0, 0.75], FontSlant -> "Italic", Background -> 
                   RGBColor[0.94, 1., 0.99]], 
                  Cell[
                   StyleData[
                   "Hint", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["Hint", "Colorful"]]]}, Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "PrintedHint", "Subsubsection", 
                CellChangeTimes -> {{3.71285569529156*^9, 
                 3.7128556971450014`*^9}}], 
               Cell[
                StyleData[
                "PrintedHint", StyleDefinitions -> StyleData["Text"]], 
                Deletable -> True]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "HintHeader", "Subsubsection", 
                CellChangeTimes -> {{3.7128549369215293`*^9, 
                 3.7128549399344726`*^9}}], 
               Cell[
                StyleData[
                "HintHeader", StyleDefinitions -> StyleData["Text"]], 
                FontFamily -> "Arial", FontSize -> 16]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Comment", "Subsection", 
             CellChangeTimes -> {{3.687959679124215*^9, 
              3.687959679971675*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "Comment", StyleDefinitions -> StyleData["BaseText"]], 
                Editable -> False, Selectable -> False, Deletable -> False, 
                CellFrame -> 1, Deployed -> True, Copyable -> False, 
                CellFrameColor -> RGBColor[0.5, 0.5, 0.5], MenuSortingValue -> 
                None], 
               Cell[
                StyleData[
                "Comment", "Colorful", StyleDefinitions -> 
                 StyleData["BaseText"]], Editable -> False, Selectable -> 
                False, Deletable -> False, CellFrame -> 1, CellDingbat -> Cell[
                  TextCell["Note"], Background -> None, FontSize -> 12, 
                  FontFamily -> "Bagdhad"], 
                CellMargins -> {{151, 20}, {Inherited, Inherited}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, Deployed -> 
                True, Copyable -> False, 
                CellFrameMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
                CellFrameColor -> GrayLevel[0], Background -> 
                RGBColor[0.99, 1., 0.91]], 
               Cell[
                StyleData[
                "Comment", "PagewiseColorful", StyleDefinitions -> 
                 StyleData["Comment", "Colorful"]]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "CodingComment", "Subsection", 
             CellChangeTimes -> {{3.687959684070258*^9, 
              3.6879596860277596`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "CodingComment", StyleDefinitions -> StyleData["BaseText"]], 
                Editable -> False, Selectable -> False, Deletable -> False, 
                CellFrame -> 1, Deployed -> True, Copyable -> False, 
                CellFrameColor -> RGBColor[1, 0.5, 0], MenuSortingValue -> 
                None], 
               Cell[
                StyleData[
                "CodingComment", "Colorful", StyleDefinitions -> 
                 StyleData["BaseText"]], Editable -> False, Selectable -> 
                False, Deletable -> False, CellFrame -> 1, CellDingbat -> Cell[
                  TextCell["Code Comment"], Background -> None, FontSize -> 
                  12, FontFamily -> "Bagdhad"], 
                CellMargins -> {{151, 20}, {Inherited, Inherited}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, Deployed -> 
                True, Copyable -> True, 
                CellFrameMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
                CellFrameColor -> GrayLevel[0.5], FontSlant -> "Italic", 
                Background -> GrayLevel[0.95]], 
               Cell[
                StyleData[
                "CodingComment", "PagewiseColorful", StyleDefinitions -> 
                 StyleData["CodingComment", "Colorful"]]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Task", "Subsection", 
             CellChangeTimes -> {{3.6879596892810593`*^9, 
              3.687959689935708*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "Task", "Subsubsection", 
                CellChangeTimes -> {{3.7128556262220097`*^9, 
                 3.712855626773522*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "Task", StyleDefinitions -> StyleData["BaseText"]], 
                   Editable -> False, Selectable -> False, Deletable -> False,
                    CellFrame -> 1, Deployed -> True, Copyable -> True, 
                   CellFrameColor -> RGBColor[0.38, 0.73, 0.], 
                   MenuSortingValue -> None, FontFamily -> "Arial", FontSize -> 
                   14, FontWeight -> "Regular", FontSlant -> "Plain", 
                   PrivateFontOptions -> {
                    "FontPostScriptName" -> "Automatic"}], 
                  Cell[
                   StyleData[
                   "Task", "Colorful", StyleDefinitions -> StyleData["Text"]],
                    Editable -> False, Selectable -> False, Deletable -> 
                   False, CellFrame -> {{1, 1}, {1, 1}}, CellDingbat -> Cell[
                    TextCell["Task"], Background -> None, FontSize -> 14, 
                    FontFamily -> "Bagdhad"], 
                   CellMargins -> {{171, Inherited}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                   Deployed -> True, Copyable -> True, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> 
                   RGBColor[0.5, 0.49, 0.45], FontColor -> 
                   RGBColor[0.15, 0.147, 0.135], Background -> 
                   RGBColor[1., 0.99, 0.95]], 
                  Cell[
                   StyleData[
                   "Task", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["Task", "Colorful"]]]}, Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "PrintedTask", "Subsubsection", 
                CellChangeTimes -> {{3.712855619959405*^9, 
                 3.7128556220409527`*^9}}], 
               Cell[
                StyleData[
                "PrintedTask", StyleDefinitions -> StyleData["Text"]], 
                Deletable -> True]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "TaskHeader", "Subsubsection", 
                CellChangeTimes -> {{3.6879596892810593`*^9, 
                 3.687959689935708*^9}, {3.712854849901846*^9, 
                 3.7128548756426497`*^9}}], 
               Cell[
                StyleData[
                "TaskHeader", StyleDefinitions -> StyleData["Text"]], 
                FontFamily -> "Arial", FontSize -> 16]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Action", "Subsection", 
             CellChangeTimes -> {{3.6879596892810593`*^9, 
              3.687959689935708*^9}, {3.712335163557249*^9, 
              3.712335165876829*^9}, {3.7123351978128834`*^9, 
              3.7123351988208466`*^9}, {3.712692572830855*^9, 
              3.7126925743153677`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "Action", StyleDefinitions -> StyleData["BaseText"]], 
                CellFrame -> 1, CellFrameColor -> RGBColor[0.25, 0.55, 1.]], 
               Cell[
                StyleData[
                "Action", "Colorful", StyleDefinitions -> 
                 StyleData["BaseText"]], Editable -> False, Selectable -> 
                False, Deletable -> False, CellFrame -> 1, 
                CellMargins -> {{171, 0}, {Inherited, Inherited}}, 
                CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, Deployed -> 
                True, Copyable -> True, CellFrameColor -> RGBColor[0, 0, 0], 
                FontColor -> RGBColor[0.15, 0.147, 0.135], Background -> 
                RGBColor[1., 0.99, 0.95]], 
               Cell[
                StyleData[
                "Action", "PagewiseColorful", StyleDefinitions -> 
                 StyleData["Action", "Colorful"]]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "MultipleChoice", "Subsection", 
             CellChangeTimes -> {{3.6879596892810593`*^9, 
              3.687959689935708*^9}, {3.712335163557249*^9, 
              3.712335165876829*^9}, {3.7123351978128834`*^9, 
              3.7123351988208466`*^9}, {3.712692565752717*^9, 
              3.712692576815281*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "MultipleChoice", "Subsubsection", 
                CellChangeTimes -> {{3.7128556735139346`*^9, 
                 3.712855675926178*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "MultipleChoice", StyleDefinitions -> 
                    StyleData["BaseText"]], CellFrame -> 0, CellFrameColor -> 
                   RGBColor[0.19, 0., 0.96]], 
                  Cell[
                   StyleData[
                   "MultipleChoice", "Colorful", StyleDefinitions -> 
                    StyleData["BaseText"]], Editable -> False, Selectable -> 
                   True, Deletable -> False, CellFrame -> 0, CellDingbat -> 
                   Cell[
                    TextCell["Question"], Background -> None, FontSize -> 12, 
                    FontFamily -> "Bagdhad"], 
                   CellMargins -> {{171, 0}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                   Deployed -> True, Copyable -> True, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> 
                   RGBColor[0, 0, 0], FontColor -> 
                   RGBColor[0.15, 0.147, 0.135], Background -> 
                   RGBColor[1., 0.99, 0.95]], 
                  Cell[
                   StyleData[
                   "MultipleChoice", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["MultipleChoice", "Colorful"]]]}, Open]]}, 
              Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "PrintedMultipleChoice", "Subsubsection", 
                CellChangeTimes -> {{3.712856253394089*^9, 
                 3.712856257647376*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "PrintedMultipleChoice", StyleDefinitions -> 
                    StyleData["Text"]], Deletable -> False, 
                   ShowStringCharacters -> False], 
                  Cell[
                   StyleData[
                   "PrintedMultipleChoice", "Colorful", StyleDefinitions -> 
                    StyleData["Text"]], Editable -> False, Selectable -> True,
                    Deletable -> False, CellFrame -> 0, CellDingbat -> Cell[
                    TextCell["Response"], Background -> None, FontSize -> 12, 
                    FontFamily -> "Bagdhad"], 
                   CellMargins -> {{171, 0}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {"Color" -> GrayLevel[0.5]}, 
                   Deployed -> True, Copyable -> True, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> 
                   RGBColor[0, 0, 0], FontColor -> 
                   RGBColor[0.15, 0.147, 0.135], Background -> 
                   RGBColor[1., 0.99, 0.95]], 
                  Cell[
                   StyleData[
                   "PrintedMultipleChoice", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["PrintedMultipleChoice", "Colorful"]]]}, 
                 Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "MultipleChoiceHeader", "Subsubsection", 
                CellChangeTimes -> {{3.712854993294012*^9, 
                 3.712854997219863*^9}}], 
               Cell[
                StyleData[
                "MultipleChoiceHeader", StyleDefinitions -> 
                 StyleData["Text"]], FontFamily -> "Arial", FontSize -> 16]}, 
              Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "MultipleChoiceOption", "Subsubsection", 
                CellChangeTimes -> {{3.713610936923175*^9, 
                 3.7136109393294563`*^9}, {3.713611004099903*^9, 
                 3.713611008459321*^9}}], 
               Cell[
                StyleData[
                "MultipleChoiceOption", StyleDefinitions -> 
                 StyleData["Text"]], FontFamily -> "Arial", FontSize -> 14]}, 
              Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Other", "Subsection", 
             CellChangeTimes -> {{3.687958554291162*^9, 
              3.6879585589499426`*^9}, {3.6879586263020496`*^9, 
              3.687958627188377*^9}}], 
            Cell[
            "Message, Print, and Echo are all erased during build", "Text"]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Interface", "Section", 
          CellChangeTimes -> {{3.66435690256841*^9, 3.664356904165284*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "NotebookButtons", "Subsection", 
             CellChangeTimes -> {{3.7129391477593336`*^9, 
              3.7129391502148786`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "NotebookButtons", "Subsubsection", 
                CellChangeTimes -> {{3.712940331709169*^9, 
                 3.712940333979103*^9}}], 
               Cell[
                StyleData[
                "NotebookButtons", StyleDefinitions -> StyleData["BaseText"]],
                 FontFamily -> "Arial", FontSize -> 12, FontColor -> 
                GrayLevel[0]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "TitleButton", "Subsubsection", 
                CellChangeTimes -> {{3.712940226198325*^9, 
                 3.7129402286829376`*^9}}], 
               Cell[
                StyleData[
                "TitleButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ChapterButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129402202507105`*^9, 
                 3.712940222435834*^9}}], 
               Cell[
                StyleData[
                "ChapterButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129402130507965`*^9, 
                 3.712940236549721*^9}}], 
               Cell[
                StyleData[
                "ReadButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129402130507965`*^9, 
                 3.712940236549721*^9}, {3.7129403701578226`*^9, 
                 3.7129403723928804`*^9}}], 
               Cell[
                StyleData[
                "ProblemButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129402130507965`*^9, 
                 3.712940236549721*^9}, {3.7129403750630293`*^9, 
                 3.7129403792418413`*^9}}], 
               Cell[
                StyleData[
                "SolutionButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "HintButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129518738396006`*^9, 
                 3.7129518764078217`*^9}}], 
               Cell[
                StyleData[
                "HintButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "TaskButton", "Subsubsection", 
                CellChangeTimes -> {{3.712951878983472*^9, 
                 3.7129518821517854`*^9}}], 
               Cell[
                StyleData[
                "TaskButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "MultipleChoiceButton", "Subsubsection", 
                CellChangeTimes -> {{3.712951884567878*^9, 
                 3.7129518880155106`*^9}}], 
               Cell[
                StyleData[
                "MultipleChoiceButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "ShowNextButtons", "Subsection", 
             CellChangeTimes -> {{3.712966238948642*^9, 
              3.712966242368929*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "ShowNextHeader", "Subsubsection", 
                CellChangeTimes -> {{3.7129677513801823`*^9, 
                 3.712967754569938*^9}}], 
               Cell[
                StyleData[
                "ShowNextHeader", StyleDefinitions -> StyleData["BaseText"]], 
                ShowStringCharacters -> False]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ShowNextButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129662624891553`*^9, 
                 3.7129662648096046`*^9}}], 
               Cell[
                StyleData[
                "ShowNextButton", StyleDefinitions -> StyleData["Text"]]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "HelpfulButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129662624891553`*^9, 
                  3.7129662648096046`*^9}, 3.712966321565275*^9}], 
               Cell[
                StyleData[
                "HelpfulButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "TooMuchInfoButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129662624891553`*^9, 
                  3.7129662648096046`*^9}, 3.712966321565275*^9, {
                  3.71296719402213*^9, 3.7129672071974845`*^9}}], 
               Cell[
                StyleData[
                "TooMuchInfoButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "NeedsMoreDescriptionButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129662624891553`*^9, 
                  3.7129662648096046`*^9}, 3.712966321565275*^9, 
                  3.7129672448307657`*^9}], 
               Cell[
                StyleData[
                "NeedsMoreDescriptionButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "IncomprehensibleButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129662624891553`*^9, 
                  3.7129662648096046`*^9}, 3.712966321565275*^9, 
                  3.712967278822744*^9}], 
               Cell[
                StyleData[
                "IncomprehensibleButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "IndifferentButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129662624891553`*^9, 
                  3.7129662648096046`*^9}, 3.712966321565275*^9, 
                  3.712967312275462*^9}], 
               Cell[
                StyleData[
                "IndifferentButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ExplicitFeedbackButton", "Subsubsection", 
                CellChangeTimes -> {{3.7129662624891553`*^9, 
                  3.7129662648096046`*^9}, 3.712966321565275*^9, 
                  3.7129673455808954`*^9}], 
               Cell[
                StyleData[
                "ExplicitFeedbackButton", StyleDefinitions -> 
                 StyleData["NotebookButtons"]]]}, Closed]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "NoFrames", "Subsection", 
             CellChangeTimes -> {{3.7129121006552305`*^9, 
              3.7129121031743574`*^9}}], 
            Cell[
             StyleData["NoFrames"], CellFrame -> None, ShowCellBracket -> 
             False]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "InterfaceText", "Subsection", 
             CellChangeTimes -> {{3.712855849101086*^9, 
              3.712855852956432*^9}}], 
            Cell[
             StyleData[
             "InterfaceText", StyleDefinitions -> StyleData["BaseText"]], 
             FontFamily -> "Arial", FontSize -> 16]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Hidden", "Subsection", 
             CellChangeTimes -> {{3.687959818486248*^9, 
              3.687959819588067*^9}}], 
            Cell[
            "Please note there is a cell called Hidden right below this text \
cell", "Text", 
             CellChangeTimes -> {{3.66809994081843*^9, 
              3.6680999558841476`*^9}}], 
            Cell[
             StyleData["Hidden"], Editable -> False, Selectable -> False, 
             Deletable -> False, ShowCellBracket -> False, 
             CellElementSpacings -> {"ClosedCellHeight" -> 0}, Deployed -> 
             True, Copyable -> False, CellOpen -> False, MenuSortingValue -> 
             None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "InterfaceComment", "Subsection", 
             CellChangeTimes -> {{3.6879598256186*^9, 
              3.6879598286101627`*^9}}], 
            Cell[
             StyleData[
             "InterfaceComment", StyleDefinitions -> StyleData["BaseText"]], 
             Editable -> False, Selectable -> False, Deletable -> False, 
             CellFrame -> 1, 
             CellMargins -> {{141, Inherited}, {Inherited, Inherited}}, 
             Deployed -> True, Copyable -> False, CellFrameColor -> 
             RGBColor[0, 1, 0.5], MenuSortingValue -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "CodeSealFeedback", "Subsection", 
             CellChangeTimes -> {{3.687959833122162*^9, 
              3.6879598376126404`*^9}}], 
            Cell[
             StyleData[
             "CodeSealFeedback", StyleDefinitions -> StyleData["BaseText"]], 
             ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 0}}, 
             CellElementSpacings -> {"CellMinHeight" -> 0}, 
             CellFrameMargins -> {{0, 0}, {0, 0}}, 
             CellFrameLabels :> {{None, None}, {None, 
                InterpretationBox[
                 Cell[
                  BoxData[
                   
                   DynamicModuleBox[{$CellContext`comment$$ = 
                    "", $CellContext`rating$$ = "4", $CellContext`wrt$$ = 
                    "CS General"}, 
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    "\"Please use this form to submit feedback\"", FontSize -> 
                    16, FontWeight -> Bold, FontColor -> GrayLevel[1], 
                    StripOnInput -> False], Background -> RGBColor[0, 0, 1], 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Type of Feedback\"", FontSize -> 13, FontWeight -> 
                    Bold, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"About the interface\"", FontWeight -> Bold, 
                    StripOnInput -> False]}, {
                    TemplateBox[{
                    RadioButtonBox[
                    Dynamic[$CellContext`wrt$$], {"CS General"}], 
                    "\"General Feedback\""}, "Labeled", 
                    DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]& ), 
                    InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", #2, ",", "Right"}], "]"}]& )]}, {
                    TemplateBox[{
                    RadioButtonBox[
                    Dynamic[$CellContext`wrt$$], {"CS Improvement"}], 
                    "\"Suggest Improvement\""}, "Labeled", 
                    DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]& ), 
                    InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", #2, ",", "Right"}], "]"}]& )]}, {
                    TemplateBox[{
                    RadioButtonBox[
                    Dynamic[$CellContext`wrt$$], {"CS Bug"}], 
                    "\"Report Bug\""}, "Labeled", 
                    DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]& ), 
                    InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", #2, ",", "Right"}], "]"}]& )]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> Top, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {20, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[20]], 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"About this lesson\"", FontWeight -> Bold, StripOnInput -> 
                    False]}, {
                    TemplateBox[{
                    RadioButtonBox[
                    Dynamic[$CellContext`wrt$$], {"Content General"}], 
                    "\"General Comment\""}, "Labeled", 
                    DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]& ), 
                    InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", #2, ",", "Right"}], "]"}]& )]}, {
                    TemplateBox[{
                    RadioButtonBox[
                    Dynamic[$CellContext`wrt$$], {"Content Improvement"}], 
                    "\"Suggest Improvement\""}, "Labeled", 
                    DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]& ), 
                    InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", #2, ",", "Right"}], "]"}]& )]}, {
                    TemplateBox[{
                    RadioButtonBox[
                    Dynamic[$CellContext`wrt$$], {"Content Typo"}], 
                    "\"Report Typo\""}, "Labeled", 
                    DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]& ), 
                    InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", #2, ",", "Right"}], "]"}]& )]}, {
                    TemplateBox[{
                    RadioButtonBox[
                    Dynamic[$CellContext`wrt$$], {"Content Code Error"}], 
                    "\"Report Coding Error\""}, "Labeled", 
                    DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]& ), 
                    InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", #2, ",", "Right"}], "]"}]& )]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> Top, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Rating\"", FontSize -> 13, FontWeight -> Bold, 
                    StripOnInput -> False]}, {
                    PopupMenuBox[
                    Dynamic[$CellContext`rating$$], {
                    "1" -> "\"\\!\\(\\*\\nStyleBox[\\\"\[HappySmiley]\\\",\\\
nFontSize->24]\\) Great\"", "2" -> 
                    "\"\\!\\(\\*\\nStyleBox[\\\"\[NeutralSmiley]\\\",\\\
nFontSize->24]\\) Good\"", "3" -> 
                    "\"\\!\\(\\*\\nStyleBox[\\\"\[SadSmiley]\\\",\\nFontSize->\
24]\\) Bad\"", "4" -> 
                    "\"\\!\\(\\*\\nStyleBox[\\\"\[FreakedSmiley]\\\",\\\
nFontSize->24]\\) Terrible\""}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Comment\"", FontSize -> 13, FontWeight -> Bold, 
                    StripOnInput -> False]}, {
                    InputFieldBox[
                    Dynamic[$CellContext`comment$$], String, 
                    FieldSize -> {50, 5}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, {
                    ItemBox[
                    ButtonBox[
                    "\"Submit Feedback\"", ButtonFunction :> 
                    With[{$CellContext`this$ = 
                    EvaluationCell[], $CellContext`parent$ = ParentCell[
                    ParentCell[
                    EvaluationCell[]]]}, 
                    CreateDialog[{"Thanks for your feedback!", 
                    DefaultButton[]}]; NotebookWrite[$CellContext`parent$, 
                    Cell[
                    BoxData[
                    ToBoxes[{"Source" -> CurrentValue[
                    PreviousCell[$CellContext`parent$], CellTags], 
                    "Component" -> $CellContext`wrt$$, 
                    "Rating" -> $CellContext`rating$$, 
                    "Comment" -> $CellContext`comment$$}]], "Hidden"]]], 
                    ImageSize -> Medium, Appearance -> Automatic, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Background -> 
                    RGBColor[0, 0, 1], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{2}}}], "Column"], 
                    DynamicModuleValues :> {}]], Background -> GrayLevel[1], 
                  ShowStringCharacters -> False, FontFamily -> "Arial"], 
                 ExpressionCell[
                  
                  DynamicModule[{$CellContext`comment = 
                    "", $CellContext`rating = "4", $CellContext`wrt = 
                    "CS General"}, 
                   Column[{
                    Item[
                    Style[
                    "Please use this form to submit feedback", FontSize -> 16,
                     FontWeight -> Bold, FontColor -> GrayLevel[1]], 
                    Background -> RGBColor[0, 0, 1]], 
                    Column[{
                    Style[
                    "Type of Feedback", FontSize -> 13, FontWeight -> Bold], 
                    Grid[{{
                    Column[{
                    Style["About the interface", FontWeight -> Bold], 
                    Labeled[
                    RadioButton[
                    Dynamic[$CellContext`wrt], "CS General"], 
                    "General Feedback", Right], 
                    Labeled[
                    RadioButton[
                    Dynamic[$CellContext`wrt], "CS Improvement"], 
                    "Suggest Improvement", Right], 
                    Labeled[
                    RadioButton[
                    Dynamic[$CellContext`wrt], "CS Bug"], "Report Bug", 
                    Right]}, BaselinePosition -> Top], 
                    Spacer[20], 
                    Column[{
                    Style["About this lesson", FontWeight -> Bold], 
                    Labeled[
                    RadioButton[
                    Dynamic[$CellContext`wrt], "Content General"], 
                    "General Comment", Right], 
                    Labeled[
                    RadioButton[
                    Dynamic[$CellContext`wrt], "Content Improvement"], 
                    "Suggest Improvement", Right], 
                    Labeled[
                    RadioButton[
                    Dynamic[$CellContext`wrt], "Content Typo"], "Report Typo",
                     Right], 
                    Labeled[
                    RadioButton[
                    Dynamic[$CellContext`wrt], "Content Code Error"], 
                    "Report Coding Error", Right]}, BaselinePosition -> 
                    Top]}}, Alignment -> Left, Spacings -> {1, 1}]}], 
                    Column[{
                    Style["Rating", FontSize -> 13, FontWeight -> Bold], 
                    PopupMenu[
                    Dynamic[$CellContext`rating], {
                    "1" -> "\!\(\*\nStyleBox[\"\[HappySmiley]\",\n\
FontSize->24]\) Great", "2" -> 
                    "\!\(\*\nStyleBox[\"\[NeutralSmiley]\",\nFontSize->24]\) \
Good", "3" -> "\!\(\*\nStyleBox[\"\[SadSmiley]\",\nFontSize->24]\) Bad", "4" -> 
                    "\!\(\*\nStyleBox[\"\[FreakedSmiley]\",\nFontSize->24]\) \
Terrible"}]}], 
                    Column[{
                    Style["Comment", FontSize -> 13, FontWeight -> Bold], 
                    InputField[
                    Dynamic[$CellContext`comment], String, 
                    FieldSize -> {50, 5}]}], 
                    Item[
                    Button["Submit Feedback", 
                    
                    With[{$CellContext`this$ = 
                    EvaluationCell[], $CellContext`parent$ = ParentCell[
                    ParentCell[
                    EvaluationCell[]]]}, 
                    CreateDialog[{"Thanks for your feedback!", 
                    DefaultButton[]}]; NotebookWrite[$CellContext`parent$, 
                    Cell[
                    BoxData[
                    ToBoxes[{"Source" -> ToString[
                    First[
                    NotebookRead[$CellContext`parent$]]], 
                    "Component" -> $CellContext`wrt, 
                    "Rating" -> $CellContext`rating, 
                    "Comment" -> $CellContext`comment}]], "Hidden"]]], 
                    ImageSize -> Medium], Background -> RGBColor[0, 0, 1]]}, 
                    Alignment -> Left, Dividers -> All, Spacings -> 2], 
                   DynamicModuleValues :> {}], Background -> GrayLevel[1], 
                  ShowStringCharacters -> False, FontFamily -> "Arial"]]}}, 
             CellFrameLabelMargins -> 0, CellSize -> {1, 1}, MenuSortingValue -> 
             1, MenuCommandKey -> "1", Background -> RGBColor[0, 0, 1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "SolutionDivider", "Subsection", 
             CellChangeTimes -> {{3.712495092811694*^9, 
              3.712495095327242*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData["SolutionDivider"], Editable -> False, Selectable -> 
                False, Deletable -> False, CellFrame -> {{0, 0}, {0, 2}}, 
                ShowCellBracket -> False, CellMargins -> {{0, 0}, {1, 1}}, 
                CellElementSpacings -> {"CellMinHeight" -> 1}, Deployed -> 
                True, Copyable -> True, CellFrameMargins -> 0, CellFrameColor -> 
                RGBColor[0, 0, 1], CellSize -> {Inherited, 5}], 
               Cell[
                StyleData["SolutionDivider", "Colorful"], Editable -> False, 
                Selectable -> False, Deletable -> False, 
                CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
                CellMargins -> {{0, 0}, {1, 1}}, 
                CellElementSpacings -> {"CellMinHeight" -> 1}, Deployed -> 
                True, Copyable -> False, CellFrameMargins -> 0, 
                CellFrameColor -> GrayLevel[0.8], 
                CellSize -> {Inherited, 5}]}, Open]]}, Open]]}, Closed]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"3/4: Base styles for inheritance\n", 
         StyleBox[
         "These propagate to Read, Problem, Solution, etc... \n", FontSize -> 
          16], 
         StyleBox[
         "Change these if you want to change the font size for text cells in \
every type of section", FontSize -> 12]}], "Title", 
       CellChangeTimes -> {
        3.6648920948650303`*^9, {3.687960061600218*^9, 
         3.6879600636743035`*^9}, {3.6879616255703454`*^9, 
         3.687961625886818*^9}, {3.6879627035069823`*^9, 
         3.6879627339625587`*^9}, {3.6879628580674005`*^9, 
         3.6879628591230593`*^9}, {3.6879632701528654`*^9, 
         3.687963299857793*^9}, {3.6879694255663204`*^9, 
         3.6879694577005243`*^9}, {3.7114764694365463`*^9, 
         3.7114764706164474`*^9}, 3.711477750053294*^9, 3.71147796310314*^9}], 
      Cell[
       CellGroupData[{
         Cell[
         "Sectioning ", "Section", 
          CellChangeTimes -> {{3.687961461814962*^9, 
            3.6879614619998574`*^9}, {3.7117233494891434`*^9, 
            3.711723349736*^9}, 3.7123921958653164`*^9, 
            3.712697747638429*^9}], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseSection", "Subsection", 
             CellChangeTimes -> {{3.6879614666259327`*^9, 
               3.687961469044444*^9}, {3.7114758746565285`*^9, 
               3.711475878600211*^9}, {3.7117231528122964`*^9, 
               3.7117231668229127`*^9}, 3.7123921915683804`*^9, 
               3.712393214488114*^9, {3.712695484515705*^9, 
               3.7126954850625896`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseSection", StyleDefinitions -> StyleData["Section"]], 
                Editable -> False, Selectable -> False, Deletable -> False, 
                ShowGroupOpener -> False, 
                CellBracketOptions -> {"Thickness" -> 2}, Deployed -> True, 
                Copyable -> False, MenuSortingValue -> None], 
               Cell[
                StyleData[
                "BaseSection", "Colorful", StyleDefinitions -> 
                 StyleData["Section"]], CellMargins -> {{0, 0}, {30, 30}}, 
                CellBracketOptions -> {"Thickness" -> 2}, 
                CellFrameMargins -> {{30, 30}, {5, 5}}]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseSubsection", "Subsection", 
             CellChangeTimes -> {{3.6879614728152246`*^9, 
               3.6879614754913177`*^9}, {3.711490297261445*^9, 
               3.711490300581244*^9}, {3.7117232162983255`*^9, 
               3.7117232166143847`*^9}, 3.71239287042113*^9, {
               3.7126977106849403`*^9, 3.7126977109349422`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseSubsection", StyleDefinitions -> 
                 StyleData["Subsection"]], Editable -> False, Selectable -> 
                False, Deletable -> False, ShowGroupOpener -> True, Deployed -> 
                True, Copyable -> False, MenuSortingValue -> None], 
               Cell[
                StyleData[
                "BaseSubsection", "Colorful", StyleDefinitions -> 
                 StyleData["Subsection"]]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseSubsubsection ", "Subsection", 
             CellChangeTimes -> {{3.6879615124146276`*^9, 
               3.687961517295051*^9}, {3.711490331833807*^9, 
               3.7114903344281607`*^9}, 3.7126977241068664`*^9}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseSubsubsection", StyleDefinitions -> 
                 StyleData["Subsubsection"]], Editable -> False, Selectable -> 
                False, Deletable -> False, ShowGroupOpener -> True, Deployed -> 
                True, Copyable -> False, MenuSortingValue -> None], 
               Cell[
                StyleData[
                "BaseSubsubsection", "Colorful", StyleDefinitions -> 
                 StyleData["Subsubsection"]]]}, Open]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell[
         "Formatted Text ", "Section", 
          CellChangeTimes -> {{3.6879615970973525`*^9, 
            3.6879615977827806`*^9}, {3.6879616925872564`*^9, 
            3.6879617047849045`*^9}, {3.687963052239737*^9, 
            3.6879630535121746`*^9}, {3.711723352452647*^9, 
            3.7117233530219336`*^9}, 3.7123929240312157`*^9}], 
         Cell[
          CellGroupData[{
            Cell[
            "CellLabel", "Subsection", 
             CellChangeTimes -> {{3.7267551432301564`*^9, 
              3.72675514452461*^9}}], 
            Cell[
             StyleData["CellLabel", "LightBoard"], MenuSortingValue -> 10000, 
             FontSize -> 16, FontWeight -> Bold, FontColor -> 
             GrayLevel[0.4]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseText  ", "Subsection", 
             CellChangeTimes -> {{3.6879616035664062`*^9, 
               3.6879616053547516`*^9}, {3.7114902392193065`*^9, 
               3.711490242437374*^9}, {3.711723255795018*^9, 
               3.7117232573963227`*^9}, 3.7123929205780506`*^9, {
               3.7126977394040585`*^9, 3.712697740091445*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData["BaseText", StyleDefinitions -> StyleData["Text"]], 
                Editable -> False, Selectable -> False, Deletable -> False, 
                Deployed -> True, Copyable -> False, MenuSortingValue -> 
                None], 
               Cell[
                StyleData[
                "BaseText", "Colorful", StyleDefinitions -> 
                 StyleData["Text"]], CellFrame -> {{2, 2}, {2, 2}}, 
                CellMargins -> {{41, Inherited}, {Inherited, Inherited}}, 
                CellFrameColor -> GrayLevel[0.1], FontSize -> 16, FontColor -> 
                GrayLevel[0.1], Background -> GrayLevel[0.925]], 
               Cell[
                StyleData[
                "BaseText", "LightBoard", StyleDefinitions -> 
                 StyleData["Text"]], CellFrame -> {{2, 2}, {2, 2}}, 
                CellMargins -> {{41, Inherited}, {Inherited, Inherited}}, 
                CellFrameColor -> GrayLevel[0.1], FontSize -> 24, FontColor -> 
                GrayLevel[0.1], Background -> GrayLevel[0.925]]}, Open]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseProgram", "Subsection", 
             CellChangeTimes -> {{3.687963057218865*^9, 
              3.6879630597945633`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseProgram", StyleDefinitions -> StyleData["Program"]], 
                Editable -> False, Selectable -> False, Deletable -> False, 
                Deployed -> True, Copyable -> False, MenuSortingValue -> None,
                 FontFamily -> "Arial", FontSize -> 14, FontWeight -> "Plain",
                 FontSlant -> "Plain"], 
               Cell[
                StyleData[
                "BaseProgram", "Colorful", StyleDefinitions -> 
                 StyleData["Program"]], FontFamily -> "Arial", FontSize -> 14,
                 FontWeight -> "Plain", FontSlant -> "Plain", Background -> 
                GrayLevel[0.95]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseReference", "Subsection", 
             CellChangeTimes -> {{3.68796310758914*^9, 
              3.687963110348414*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseReference", StyleDefinitions -> StyleData["Reference"]], 
                Editable -> False, Selectable -> False, Deletable -> False, 
                Deployed -> True, Copyable -> False, MenuSortingValue -> 
                None], 
               Cell[
                StyleData[
                "BaseReference", "Colorful", StyleDefinitions -> 
                 StyleData["Reference"]]]}, Open]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Formulas", "Section", 
          CellChangeTimes -> {{3.6879629826124463`*^9, 
           3.6879629836836147`*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseInlineFormula", "Subsection", 
             CellChangeTimes -> {{3.6879629334433126`*^9, 
              3.687962936999868*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseInlineFormula", StyleDefinitions -> 
                 StyleData["InlineFormula"]], Editable -> False, Selectable -> 
                False, Deletable -> False, Deployed -> True, Copyable -> 
                False, MenuSortingValue -> None], 
               Cell[
                StyleData[
                "BaseInlineFormula", "Colorful", StyleDefinitions -> 
                 StyleData["InlineFormula"]]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseDisplayFormula", "Subsection", 
             CellChangeTimes -> {{3.6879629418649554`*^9, 
              3.6879629457751055`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseDisplayFormula", StyleDefinitions -> 
                 StyleData["DisplayFormula"]], Editable -> False, Selectable -> 
                False, Deletable -> False, Deployed -> True, Copyable -> 
                False, MenuSortingValue -> None], 
               Cell[
                StyleData[
                "BaseDisplayFormula", "Colorful", StyleDefinitions -> 
                 StyleData["DisplayFormula"]]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseDisplayFormulaNumbered", "Subsection", 
             CellChangeTimes -> {{3.6879629502428885`*^9, 
              3.6879629550549717`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseDisplayFormulaNumbered", StyleDefinitions -> 
                 StyleData["DisplayFormulaNumbered"]], Editable -> False, 
                Selectable -> False, Deletable -> False, Deployed -> True, 
                Copyable -> False, MenuSortingValue -> None, FontFamily -> 
                "Arial", FontSize -> 14, FontWeight -> "Regular", FontSlant -> 
                "Plain", 
                PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
               
               Cell[
                StyleData[
                "BaseDisplayFormulaNumbered", "Colorful", StyleDefinitions -> 
                 StyleData["DisplayFormulaNumbered"]], Editable -> False, 
                Selectable -> False, Deletable -> False, Deployed -> True, 
                Copyable -> True, MenuSortingValue -> None, FontFamily -> 
                "Arial", FontSize -> 14, FontWeight -> "Regular", FontSlant -> 
                "Plain", 
                PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}]},
               Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "BaseDisplayFormulaEquationNumbered", "Subsection", 
             CellChangeTimes -> {{3.6879629611014795`*^9, 
              3.6879629689458036`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData[
                "BaseDisplayFormulaEquationNumbered", StyleDefinitions -> 
                 StyleData["DisplayFormulaEquationNumbered"]], Editable -> 
                False, Selectable -> False, Deletable -> False, Deployed -> 
                True, Copyable -> False, MenuSortingValue -> None, FontFamily -> 
                "Arial", FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
                "Plain"], 
               Cell[
                StyleData[
                "BaseDisplayFormulaEquationNumbered", "Colorful", 
                 StyleDefinitions -> 
                 StyleData["DisplayFormulaEquationNumbered"]], FontFamily -> 
                "Arial", FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
                "Plain"]}, Open]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Lists", "Section", 
          CellChangeTimes -> {{3.687961638303063*^9, 
           3.6879616501334686`*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "Item", "Subsection", 
             CellChangeTimes -> {{3.6879617234824376`*^9, 
              3.6879617267690196`*^9}, {3.6879625587200537`*^9, 
              3.687962559544447*^9}, {3.6879691932256064`*^9, 
              3.6879691946021967`*^9}, {3.6879692606603017`*^9, 
              3.6879692620174065`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseItem", "Subsubsection", 
                CellChangeTimes -> {{3.68796231610894*^9, 
                 3.6879623294940605`*^9}, {3.6879692037453704`*^9, 
                 3.687969205444796*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseItem", StyleDefinitions -> StyleData["Item"]], 
                   Editable -> False, Selectable -> False, Deletable -> False,
                    Deployed -> True, Copyable -> False, MenuSortingValue -> 
                   None], 
                  Cell[
                   StyleData[
                   "BaseItem", "Colorful", StyleDefinitions -> 
                    StyleData["Item"]]]}, Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseSubitem", "Subsubsection", 
                CellChangeTimes -> {{3.6879692156750083`*^9, 
                 3.687969218243022*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseSubitem", StyleDefinitions -> StyleData["Subitem"]], 
                   Editable -> False, Selectable -> False, Deletable -> False,
                    Deployed -> True, Copyable -> False, MenuSortingValue -> 
                   None], 
                  Cell[
                   StyleData[
                   "BaseSubitem", "Colorful", StyleDefinitions -> 
                    StyleData["Subitem"]]]}, Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseSubsubitem", "Subsubsection", 
                CellChangeTimes -> {{3.6879692268336315`*^9, 
                 3.6879692298939924`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseSubsubitem", StyleDefinitions -> 
                    StyleData["Subsubitem"]], Editable -> False, Selectable -> 
                   False, Deletable -> False, Deployed -> True, Copyable -> 
                   False, MenuSortingValue -> None], 
                  Cell[
                   StyleData[
                   "BaseSubsubitem", "Colorful", StyleDefinitions -> 
                    StyleData["Subsubitem"]]]}, Open]]}, Open]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "ItemParagraph", "Subsection", 
             CellChangeTimes -> {{3.6879622811468134`*^9, 
              3.687962285457865*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseItemParagraph", "Subsubsection", 
                CellChangeTimes -> {{3.68796231610894*^9, 
                 3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                 3.6879623850717344`*^9}, {3.6879692689968357`*^9, 
                 3.6879692725799074`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseItemParagraph", StyleDefinitions -> 
                    StyleData["ItemParagraph"]], Editable -> False, 
                   Selectable -> False, Deletable -> False, Deployed -> True, 
                   Copyable -> False, MenuSortingValue -> None], 
                  Cell[
                   StyleData[
                   "BaseItemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["ItemParagraph"]]]}, Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseSubitemParagraph", "Subsubsection", 
                CellChangeTimes -> {{3.687969281672207*^9, 
                 3.6879692867671356`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseSubitemParagraph", StyleDefinitions -> 
                    StyleData["SubitemParagraph"]], Editable -> False, 
                   Selectable -> False, Deletable -> False, Deployed -> True, 
                   Copyable -> False, MenuSortingValue -> None], 
                  Cell[
                   StyleData[
                   "BaseSubitemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["SubitemParagraph"]]]}, Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseSubsubitemParagraph", "Subsubsection", 
                CellChangeTimes -> {{3.68796231610894*^9, 
                 3.6879623447303667`*^9}, {3.687969299267696*^9, 
                 3.6879693053184776`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseSubsubitemParagraph", StyleDefinitions -> 
                    StyleData["SubsubitemParagraph"]], Editable -> False, 
                   Selectable -> False, Deletable -> False, Deployed -> True, 
                   Copyable -> False, MenuSortingValue -> None], 
                  Cell[
                   StyleData[
                   "BaseSubsubitemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["SubsubitemParagraph"]]]}, Open]]}, Open]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "ItemNumbered", "Subsection", 
             CellChangeTimes -> {{3.6879617347580743`*^9, 
              3.687961735992123*^9}, {3.687962599656846*^9, 
              3.6879626063176837`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseItemNumbered", "Subsubsection", 
                CellChangeTimes -> {{3.68796231610894*^9, 
                 3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                 3.6879623850717344`*^9}, {3.6879693300831223`*^9, 
                 3.687969333724639*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseItemNumbered", StyleDefinitions -> 
                    StyleData["ItemNumbered"]], Editable -> False, Selectable -> 
                   False, Deletable -> False, Deployed -> True, Copyable -> 
                   False, MenuSortingValue -> None], 
                  Cell[
                   StyleData[
                   "BaseItemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["ItemNumbered"]]]}, Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseSubitemNumbered", "Subsubsection", 
                CellChangeTimes -> {{3.6879693434892235`*^9, 
                 3.68796934710899*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseSubitemNumbered", StyleDefinitions -> 
                    StyleData["SubitemNumbered"]], Editable -> False, 
                   Selectable -> False, Deletable -> False, Deployed -> True, 
                   Copyable -> False, MenuSortingValue -> None], 
                  Cell[
                   StyleData[
                   "BaseSubitemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["SubitemNumbered"]]]}, Open]]}, Open]], 
            Cell[
             CellGroupData[{
               Cell[
               "BaseSubsubitemNumbered", "Subsubsection", 
                CellChangeTimes -> {{3.68796231610894*^9, 
                 3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                 3.6879623850717344`*^9}, {3.6879624985968666`*^9, 
                 3.687962499731168*^9}, {3.687969360550745*^9, 
                 3.687969365586688*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "BaseSubsubitemNumbered", StyleDefinitions -> 
                    StyleData["SubsubitemNumbered"]], Editable -> False, 
                   Selectable -> False, Deletable -> False, Deployed -> True, 
                   Copyable -> False, MenuSortingValue -> None], 
                  Cell[
                   StyleData[
                   "BaseSubsubitemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["SubsubitemNumbered"]]]}, Open]]}, Open]]}, 
           Closed]]}, Closed]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"4/4: Content section styles\n", 
         StyleBox[
         "This includes Read, Problem, Solution, Quiz\n", FontSize -> 16], 
         StyleBox[
         "Change these if you want to change the specific appearance of a \
section type, these extend \[OpenCurlyQuote]Base styles for inheritance\
\[CloseCurlyQuote]", FontSize -> 12]}], "Title", 
       CellChangeTimes -> {{3.68796341889684*^9, 3.6879634215885677`*^9}, {
        3.6879695063459344`*^9, 3.6879695077029743`*^9}, {
        3.687969802314438*^9, 3.687969827073123*^9}, {3.6879720403483295`*^9, 
        3.687972043998506*^9}, {3.6879764015406246`*^9, 
        3.68797640184389*^9}, {3.710408814390271*^9, 3.710408858031377*^9}, {
        3.710409203754305*^9, 3.710409209738752*^9}, {3.710410482263034*^9, 
        3.7104104931225357`*^9}, {3.7114764730559244`*^9, 
        3.711476474641553*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
         "Read", "Chapter", 
          CellChangeTimes -> {{3.6879721351479235`*^9, 
           3.6879721359255357`*^9}, {3.68797387152522*^9, 
           3.687973872257836*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "Sectioning", "Section", 
             CellChangeTimes -> {{3.687961461814962*^9, 
              3.6879614619998574`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "Read - has counter + navigation", "Subsection", 
                CellChangeTimes -> {{3.6879614666259327`*^9, 
                 3.687961469044444*^9}, {3.687969031343545*^9, 
                 3.687969032506446*^9}, {3.6879723211040373`*^9, 
                 3.6879723218075857`*^9}, {3.6879753582678757`*^9, 
                 3.687975358978423*^9}, {3.7126957278625855`*^9, 
                 3.7126957306594934`*^9}, {3.71269676379762*^9, 
                 3.712696766063405*^9}, {3.712785289736759*^9, 
                 3.7127852933557515`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "Read", StyleDefinitions -> StyleData["BaseSection"]], 
                   CellBracketOptions -> {"Color" -> RGBColor[1, 0, 0]}, 
                   PageBreakAbove -> True, 
                   CounterIncrements -> {
                    "CodeSealSection", "Read", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "ReadSubsection", "0"}, {"CodeSealSubsubsection", "0"}, {
                    "ReadSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "ReadText", "0"}, {"CodeSealInput", "0"}, {"Text", "0"}, {
                    "Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "Read", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSection", "Colorful"]], 
                   CellFrame -> {{0, 0}, {3, 3}}, CellDingbat -> Cell[
                    TextData[{
                    CounterBox["CodeSealChapter"], "-R", 
                    CounterBox["Read"]}], "Text", Background -> None, 
                    FontSize -> 18, FontColor -> RGBColor[0.59, 0.3, 0.018], 
                    FontFamily -> "Bagdhad"], 
                   CellMargins -> {{61, Inherited}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.78, 0.4, 0.024]}, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> GrayLevel[0.5], 
                   CounterIncrements -> {
                    "CodeSealSection", "Read", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "ReadSubsection", "0"}, {"CodeSealSubsubsection", "0"}, {
                    "ReadSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "ReadText", "0"}, {"CodeSealInput", "0"}, {"Text", "0"}, {
                    "Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}, {
                    "Problem", "0"}, {"Solution", "0"}}, FontSize -> 32, 
                   FontColor -> GrayLevel[1], Background -> 
                   RGBColor[0.59, 0.3, 0.018]], 
                  Cell[
                   StyleData[
                   "Read", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["Read", "Colorful"]], 
                   PrivateCellOptions -> {
                    "PagewiseNotebookBaseStyle" -> {
                    Background -> RGBColor[0.96, 0.93, 0.9]}}, 
                   CounterIncrements -> {
                    "CodeSealSection", "Read", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "ReadSubsection", "0"}, {"CodeSealSubsubsection", "0"}, {
                    "ReadSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "ReadText", "0"}, {"CodeSealInput", "0"}, {"Text", "0"}, {
                    "Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadSubsection - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879614728152246`*^9, 
                  3.6879614754913177`*^9}, {3.687969035947554*^9, 
                  3.687969037010421*^9}, {3.6879723613263564`*^9, 
                  3.6879723620165625`*^9}, 3.6879753630931597`*^9, {
                  3.7126967620321026`*^9, 3.712696762266475*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadSubsection", StyleDefinitions -> 
                    StyleData["BaseSubsection"]], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "ReadSubsection"}, 
                   CounterAssignments -> {{"CodeSealSubsubsection", "0"}, {
                    "ReadSubsubsection", "0"}, {"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "ReadSubsection", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsection", "Colorful"]], 
                   CellFrame -> {{2, 2}, {2, 2}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.98, 0.78, 0.5]}, CellFrameColor -> 
                   GrayLevel[0.2], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "ReadSubsection"}, 
                   CounterAssignments -> {{"CodeSealSubsubsection", "0"}, {
                    "ReadSubsubsection", "0"}, {"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}, FontColor -> 
                   RGBColor[0.36, 0.21, 0.], Background -> 
                   RGBColor[0.98, 0.78, 0.5], 
                   CellBracketOptions -> {
                    CellMargins -> {{61, 10}, {Inherited, Inherited}}}], 
                  Cell[
                   StyleData[
                   "ReadSubsection", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadSubsection", "Colorful"]], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "ReadSubsection"}, 
                   CounterAssignments -> {{"CodeSealSubsubsection", "0"}, {
                    "ReadSubsubsection", "0"}, {"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}]}, Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadSubsubsection - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879615124146276`*^9, 
                  3.687961517295051*^9}, {3.6879690396183567`*^9, 
                  3.6879690406531973`*^9}, {3.6879724280491056`*^9, 
                  3.6879724287356853`*^9}, 3.6879753658724966`*^9, {
                  3.7126967542507467`*^9, 3.712696757078814*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadSubsubsection", StyleDefinitions -> 
                    StyleData["BaseSubsubsection"]], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "ReadSubsubsection"}, 
                   CounterAssignments -> {{"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "ReadSubsubsection", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubsection", "Colorful"]], 
                   CellFrame -> {{1, 1}, {1, 1}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.24, 0.14, 0.]}, CellFrameColor -> 
                   GrayLevel[0], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "ReadSubsubsection"}, 
                   CounterAssignments -> {{"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}, FontColor -> 
                   RGBColor[0.24, 0.14, 0.], Background -> 
                   RGBColor[1., 0.93, 0.78]], 
                  Cell[
                   StyleData[
                   "ReadSubsubsection", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadSubsubsection", "Colorful"]], 
                   CellFrame -> {{1, 1}, {1, 1}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.24, 0.14, 0.]}, CellFrameColor -> 
                   GrayLevel[0], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "ReadSubsubsection"}, 
                   CounterAssignments -> {{"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}, FontColor -> 
                   RGBColor[0.24, 0.14, 0.], Background -> 
                   RGBColor[1., 0.93, 0.78]]}, Open]]}, Closed]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Formatted Text", "Section", 
             CellChangeTimes -> {{3.6879615970973525`*^9, 
              3.6879615977827806`*^9}, {3.6879616925872564`*^9, 
              3.6879617047849045`*^9}, {3.687963052239737*^9, 
              3.6879630535121746`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadText - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879616035664062`*^9, 
                 3.6879616053547516`*^9}, {3.6879690626358366`*^9, 
                 3.687969063681633*^9}, {3.6879726059438567`*^9, 
                 3.687972606593401*^9}, {3.6879750944730625`*^9, 
                 3.6879750952200975`*^9}, {3.7126967431254826`*^9, 
                 3.712696746610031*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadText", StyleDefinitions -> StyleData["BaseText"]], 
                   CounterIncrements -> {"CodeSealText", "ReadText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "ReadText", "Colorful", StyleDefinitions -> 
                    StyleData["BaseText", "Colorful"]], CellFrame -> 1, 
                   CellDingbat -> Cell[
                    TextData[{
                    CounterBox["CodeSealChapter"], "-R", 
                    CounterBox["Read"], "-", 
                    CounterBox["ReadText", CounterFunction -> RomanNumeral]}],
                     "Text", Background -> None, FontSize -> 18, FontColor -> 
                    RGBColor[0.59, 0.3, 0.018], FontFamily -> "Bagdhad"], 
                   CellMargins -> {{171, 4}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.24, 0.14, 0.]}, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> GrayLevel[0.5], 
                   CounterIncrements -> {"CodeSealText", "ReadText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}, 
                   FontSlant -> "Italic", FontColor -> GrayLevel[0], 
                   Background -> RGBColor[1., 0.96, 0.89]], 
                  Cell[
                   StyleData[
                   "ReadText", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadText", "Colorful"]], 
                   CounterIncrements -> {"CodeSealText", "ReadText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadProgram", "Subsection", 
                CellChangeTimes -> {{3.687963057218865*^9, 
                 3.6879630597945633`*^9}, {3.6879690661526613`*^9, 
                 3.6879690671382475`*^9}, {3.687972609173317*^9, 
                 3.6879726097958946`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadProgram", StyleDefinitions -> 
                    StyleData["BaseProgram"]]], 
                  Cell[
                   StyleData[
                   "ReadProgram", "Colorful", StyleDefinitions -> 
                    StyleData["BaseProgram", "Colorful"]]], 
                  Cell[
                   StyleData[
                   "ReadProgram", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadProgram", "Colorful"]]]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadReference", "Subsection", 
                CellChangeTimes -> {{3.68796310758914*^9, 
                 3.687963110348414*^9}, {3.687969070021437*^9, 
                 3.687969071038293*^9}, {3.687972612433947*^9, 
                 3.6879726130589514`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadReference", StyleDefinitions -> 
                    StyleData["BaseReference"]]], 
                  Cell[
                   StyleData[
                   "ReadReference", "Colorful", StyleDefinitions -> 
                    StyleData["BaseReference", "Colorful"]]], 
                  Cell[
                   StyleData[
                   "ReadReference", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadReference", "Colorful"]]]}, Open]]}, 
              Closed]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Formulas", "Section", 
             CellChangeTimes -> {{3.6879629826124463`*^9, 
              3.6879629836836147`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadInlineFormula", "Subsection", 
                CellChangeTimes -> {{3.6879629334433126`*^9, 
                 3.687962936999868*^9}, {3.687969077231699*^9, 
                 3.6879690787954006`*^9}, {3.6879727320533624`*^9, 
                 3.6879727326557307`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadInlineFormula", StyleDefinitions -> 
                    StyleData["BaseInlineFormula"]]], 
                  Cell[
                   StyleData[
                   "ReadInlineFormula", "Colorful", StyleDefinitions -> 
                    StyleData["BaseInlineFormula", "Colorful"]]], 
                  Cell[
                   StyleData[
                   "ReadInlineFormula", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadInlineFormula", "Colorful"]]]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadDisplayFormula", "Subsection", 
                CellChangeTimes -> {{3.6879629418649554`*^9, 
                 3.6879629457751055`*^9}, {3.687969081446194*^9, 
                 3.6879690824835443`*^9}, {3.6879727546041284`*^9, 
                 3.687972755255498*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadDisplayFormula", StyleDefinitions -> 
                    StyleData["BaseDisplayFormula"]]], 
                  Cell[
                   StyleData[
                   "ReadDisplayFormula", "Colorful", StyleDefinitions -> 
                    StyleData["BaseDisplayFormula", "Colorful"]]], 
                  Cell[
                   StyleData[
                   "ReadDisplayFormula", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadDisplayFormula", "Colorful"]]]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadDisplayFormulaNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879629502428885`*^9, 
                 3.6879629550549717`*^9}, {3.687969085066022*^9, 
                 3.6879690860397196`*^9}, {3.6879727967259455`*^9, 
                 3.6879727973414235`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadDisplayFormulaNumbered", StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaNumbered"]]], 
                  Cell[
                   StyleData[
                   "ReadDisplayFormulaNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaNumbered", "Colorful"]], 
                   Background -> GrayLevel[0.97]], 
                  Cell[
                   StyleData[
                   "ReadDisplayFormulaNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ReadDisplayFormulaNumbered", "Colorful"]]]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ReadDisplayFormulaEquationNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879629611014795`*^9, 
                 3.6879629689458036`*^9}, {3.687969089016264*^9, 
                 3.6879690905405207`*^9}, {3.687972802100534*^9, 
                 3.687972802660987*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ReadDisplayFormulaEquationNumber", StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaEquationNumber"]]], 
                  Cell[
                   StyleData[
                   "ReadDisplayFormulaEquationNumber", "Colorful", 
                    StyleDefinitions -> 
                    StyleData[
                    "BaseDisplayFormulaEquationNumber", "Colorful"]], 
                   Background -> RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "ReadDisplayFormulaEquationNumber", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData[
                    "ReadDisplayFormulaEquationNumber", "Colorful"]], 
                   Background -> RGBColor[1., 1., 0.94]]}, Open]]}, Closed]]},
            Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Lists", "Section", 
             CellChangeTimes -> {{3.687961638303063*^9, 
              3.6879616501334686`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "Item", "Subsection", 
                CellChangeTimes -> {{3.6879617234824376`*^9, 
                 3.6879617267690196`*^9}, {3.6879625587200537`*^9, 
                 3.687962559544447*^9}, {3.6879691932256064`*^9, 
                 3.6879691946021967`*^9}, {3.6879692606603017`*^9, 
                 3.6879692620174065`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadItem", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623294940605`*^9}, {3.6879692037453704`*^9, 
                    3.687969205444796*^9}, {3.6879707390132136`*^9, 
                    3.6879707401080513`*^9}, {3.6879728308824396`*^9, 
                    3.687972831466892*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadItem", StyleDefinitions -> StyleData["BaseItem"]]], 
                    Cell[
                    StyleData[
                    "ReadItem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItem", "Colorful"]], Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadItem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItem", "Colorful"]]]}, Open]]}, Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadSubitem", "Subsubsection", 
                   CellChangeTimes -> {{3.6879692156750083`*^9, 
                    3.687969218243022*^9}, {3.6879711930577583`*^9, 
                    3.6879711941406136`*^9}, {3.687972959424994*^9, 
                    3.6879729600219727`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadSubitem", StyleDefinitions -> 
                    StyleData["BaseSubitem"]], 
                    CounterIncrements -> {"CodeSealText"}, 
                    CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}], 
                    Cell[
                    StyleData[
                    "ReadSubitem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitem", "Colorful"]], Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadSubitem", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadSubitem", "Colorful"]]]}, Open]]}, 
                 Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadSubsubitem", "Subsubsection", 
                   CellChangeTimes -> {{3.6879692268336315`*^9, 
                    3.6879692298939924`*^9}, {3.6879711999656715`*^9, 
                    3.6879712018791466`*^9}, {3.687972962379816*^9, 
                    3.6879729629659705`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadSubsubitem", StyleDefinitions -> 
                    StyleData["BaseSubsubitem"]], 
                    CounterIncrements -> {"CodeSealText"}, 
                    CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}], 
                    Cell[
                    StyleData[
                    "ReadSubsubitem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubitem", "Colorful"]], Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadSubsubitem", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadSubsubitem", "Colorful"]]]}, Open]]}, 
                 Closed]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ItemParagraph", "Subsection", 
                CellChangeTimes -> {{3.6879622811468134`*^9, 
                 3.687962285457865*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadItemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879692689968357`*^9, 
                    3.6879692725799074`*^9}, {3.687971382183323*^9, 
                    3.6879713839421263`*^9}, {3.6879729286628046`*^9, 
                    3.687972929233056*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadItemParagraph", StyleDefinitions -> 
                    StyleData["BaseItemParagraph"]]], 
                    Cell[
                    StyleData[
                    "ReadItemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItemParagraph", "Colorful"]], Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadItemParagraph", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadItemParagraph", "Colorful"]], Background -> 
                    RGBColor[1., 1., 0.94]]}, Open]]}, Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadSubitemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.687969281672207*^9, 
                    3.6879692867671356`*^9}, {3.687971387599742*^9, 
                    3.6879713886846223`*^9}, {3.6879729318429623`*^9, 
                    3.6879729324175963`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadSubitemParagraph", StyleDefinitions -> 
                    StyleData["BaseSubitemParagraph"]]], 
                    Cell[
                    StyleData[
                    "ReadSubitemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitemParagraph", "Colorful"]], 
                    Background -> RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadSubitemParagraph", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ReadSubitemParagraph", "Colorful"]]]}, Open]]},
                  Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadSubsubitemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.687969299267696*^9, 
                    3.6879693053184776`*^9}, {3.6879713926184063`*^9, 
                    3.687971393700267*^9}, {3.687972935010826*^9, 
                    3.687972935624488*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadSubsubitemParagraph", StyleDefinitions -> 
                    StyleData["BaseSubsubitemParagraph"]]], 
                    Cell[
                    StyleData[
                    "ReadSubsubitemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubitemParagraph", "Colorful"]], 
                    Background -> RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadSubsubitemParagraph", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ReadSubsubitemParagraph", "Colorful"]]]}, 
                    Open]]}, Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ItemNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879617347580743`*^9, 
                 3.687961735992123*^9}, {3.687962599656846*^9, 
                 3.6879626063176837`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadItemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879693300831223`*^9, 
                    3.687969333724639*^9}, {3.687971402924059*^9, 
                    3.687971404031905*^9}, {3.687972968022586*^9, 
                    3.6879729686188107`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadItemNumbered", StyleDefinitions -> 
                    StyleData["BaseItemNumbered"]]], 
                    Cell[
                    StyleData[
                    "ReadItemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItemNumbered", "Colorful"]], Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadItemNumbered", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ReadItemNumbered", "Colorful"]]]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadSubitemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.6879693434892235`*^9, 
                    3.68796934710899*^9}, {3.687971406581189*^9, 
                    3.6879714076845074`*^9}, {3.687972971114592*^9, 
                    3.687972971684648*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadSubitemNumbered", StyleDefinitions -> 
                    StyleData["BaseSubitemNumbered"]]], 
                    Cell[
                    StyleData[
                    "ReadSubitemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitemNumbered", "Colorful"]], Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadSubitemNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ReadSubitemNumbered", "Colorful"]]]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ReadSubsubitemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879624985968666`*^9, 
                    3.687962499731168*^9}, {3.687969360550745*^9, 
                    3.687969365586688*^9}, {3.687971410268381*^9, 
                    3.6879714113666716`*^9}, {3.687972974196543*^9, 
                    3.687972974772063*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ReadSubsubitemNumbered", StyleDefinitions -> 
                    StyleData["BaseSubsubitemNumbered"]]], 
                    Cell[
                    StyleData[
                    "ReadSubsubitemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubitemNumbered", "Colorful"]], 
                    Background -> RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ReadSubsubitemNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ReadSubsubitemNumbered", "Colorful"]]]}, 
                    Open]]}, Open]]}, Closed]]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
         "Problem", "Chapter", 
          CellChangeTimes -> {{3.6879721351479235`*^9, 
           3.6879721359255357`*^9}, {3.6879731480631995`*^9, 
           3.687973149345187*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
            "Sectioning", "Section", 
             CellChangeTimes -> {{3.687961461814962*^9, 
              3.6879614619998574`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "Problem - has counter and navigation", "Subsection", 
                CellChangeTimes -> {{3.6879614666259327`*^9, 
                 3.687961469044444*^9}, {3.687969031343545*^9, 
                 3.687969032506446*^9}, {3.6879723211040373`*^9, 
                 3.6879723218075857`*^9}, {3.712696940987505*^9, 
                 3.7126969436594744`*^9}, {3.713713787980234*^9, 
                 3.713713790532153*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "Problem", StyleDefinitions -> StyleData["BaseSection"]], 
                   CellBracketOptions -> {"Color" -> RGBColor[0.5, 0.3, 0.5]},
                    PageBreakAbove -> True, 
                   CounterIncrements -> {
                    "CodeSealSection", "Problem", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "ProblemSubsection", "0"}, {
                    "CodeSealSubsubsection", "0"}, {
                    "ProblemSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "ProblemText", "0"}, {"CodeSealInput", "0"}, {
                    "Text", "0"}, {"Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "Problem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSection", "Colorful"]], 
                   CellFrame -> {{0, 0}, {1, 1}}, CellDingbat -> Cell[
                    TextData[{
                    CounterBox["CodeSealChapter"], "-P", 
                    CounterBox["Problem"]}], "Text", Background -> None, 
                    FontSize -> 16, FontColor -> RGBColor[0.19, 0.35, 0.13], 
                    FontFamily -> "Bagdhad"], 
                   CellMargins -> {{61, Inherited}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.19, 0.35, 0.13]}, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> GrayLevel[0.5], 
                   CounterIncrements -> {
                    "CodeSealSection", "Problem", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "ProblemSubsection", "0"}, {
                    "CodeSealSubsubsection", "0"}, {
                    "ProblemSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "ProblemText", "0"}, {"CodeSealInput", "0"}, {
                    "Text", "0"}, {"Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}, 
                   FontSize -> 32, FontColor -> GrayLevel[0.2], Background -> 
                   RGBColor[0.68, 0.78, 0.62]], 
                  Cell[
                   StyleData[
                   "Problem", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["Problem", "Colorful"]], 
                   PrivateCellOptions -> {
                    "PagewiseNotebookBaseStyle" -> {
                    Background -> RGBColor[0.92, 0.94, 0.91]}}, 
                   CounterIncrements -> {
                    "CodeSealSection", "Problem", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "ProblemSubsection", "0"}, {
                    "CodeSealSubsubsection", "0"}, {
                    "ProblemSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "ProblemText", "0"}, {"CodeSealInput", "0"}, {
                    "Text", "0"}, {"Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemSubsection - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879614728152246`*^9, 
                 3.6879614754913177`*^9}, {3.687969035947554*^9, 
                 3.687969037010421*^9}, {3.6879723613263564`*^9, 
                 3.6879723620165625`*^9}, {3.6879735846173024`*^9, 
                 3.6879735858037176`*^9}, {3.712783530219534*^9, 
                 3.712783533037587*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemSubsection", StyleDefinitions -> 
                    StyleData["BaseSubsection"]], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "ProblemSubsection"}, 
                   CounterAssignments -> {{"CodeSealSubsubsection", "0"}, {
                    "ProblemSubsubsection", "0"}, {"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "ProblemSubsection", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsection", "Colorful"]], 
                   CellFrame -> {{2, 2}, {2, 2}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.19, 0.35, 0.13]}, CellFrameColor -> 
                   GrayLevel[0.1], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "ProblemSubsection"}, 
                   CounterAssignments -> {{"CodeSealSubsubsection", "0"}, {
                    "ProblemSubsubsection", "0"}, {"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}, FontColor -> 
                   RGBColor[0.18, 0.28, 0.12], Background -> 
                   RGBColor[0.68, 0.78, 0.62]], 
                  Cell[
                   StyleData[
                   "ProblemSubsection", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ProblemSubsection", "Colorful"]], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "ProblemSubsection"}, 
                   CounterAssignments -> {{"CodeSealSubsubsection", "0"}, {
                    "ProblemSubsubsection", "0"}, {"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}]}, Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemSubsubsection - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879615124146276`*^9, 
                 3.687961517295051*^9}, {3.6879690396183567`*^9, 
                 3.6879690406531973`*^9}, {3.6879724280491056`*^9, 
                 3.6879724287356853`*^9}, {3.6879736855912085`*^9, 
                 3.6879736867811356`*^9}, {3.712783551673129*^9, 
                 3.712783554389866*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemSubsubsection", StyleDefinitions -> 
                    StyleData["BaseSubsubsection"]], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "ProblemSubsubsection"}, 
                   CounterAssignments -> {{"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "ProblemSubsubsection", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubsection", "Colorful"]], 
                   CellFrame -> {{1, 1}, {1, 1}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.19, 0.35, 0.13]}, CellFrameColor -> 
                   GrayLevel[0.1], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "ProblemSubsubsection"}, 
                   CounterAssignments -> ({{
                    "CodeSealInput" FontColor, "0" FontColor}, {
                    "CodeSealText" FontColor, "0" FontColor}, {
                    "Text" FontColor, "0" FontColor}, {
                    "Input" FontColor, "0" FontColor}, {
                    "ItemNumbered" FontColor, "0" FontColor}, {
                    "SubitemNumbered" FontColor, "0" FontColor}, {
                    "SubsubitemNumbered" FontColor, "0" FontColor}} -> 
                    RGBColor[0.18, 0.28, 0.12]), Background -> 
                   RGBColor[0.84, 0.89, 0.81]], 
                  Cell[
                   StyleData[
                   "ProblemSubsubsection", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemSubsubsection", "Colorful"]], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "ProblemSubsubsection"}, 
                   CounterAssignments -> {{"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}]}, Open]]}, Closed]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Formatted Text", "Section", 
             CellChangeTimes -> {{3.6879615970973525`*^9, 
              3.6879615977827806`*^9}, {3.6879616925872564`*^9, 
              3.6879617047849045`*^9}, {3.687963052239737*^9, 
              3.6879630535121746`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemText - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879616035664062`*^9, 
                 3.6879616053547516`*^9}, {3.6879690626358366`*^9, 
                 3.687969063681633*^9}, {3.6879726059438567`*^9, 
                 3.687972606593401*^9}, {3.712393757698517*^9, 
                 3.7123937592141256`*^9}, {3.7127835713366785`*^9, 
                 3.712783573859663*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemText", StyleDefinitions -> StyleData["BaseText"]], 
                   CounterIncrements -> {"CodeSealText", "ProblemText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "ProblemText", "Colorful", StyleDefinitions -> 
                    StyleData["BaseText", "Colorful"]], CellDingbat -> Cell[
                    TextData[{
                    CounterBox["CodeSealChapter"], "-P", 
                    CounterBox["Problem"], "-", 
                    CounterBox[
                    "ProblemText", CounterFunction -> RomanNumeral]}], "Text",
                     Background -> None, FontSize -> 12, FontColor -> 
                    RGBColor[0.24, 0.14, 0.], FontFamily -> "Bagdhad"], 
                   CellMargins -> {{181, 4}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.19, 0.35, 0.13]}, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> GrayLevel[0.5], 
                   CounterIncrements -> {"CodeSealText", "ProblemText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}, 
                   FontSlant -> "Italic", FontColor -> 
                   RGBColor[0.18, 0.28, 0.12], Background -> 
                   RGBColor[0.92, 0.95, 0.91]], 
                  Cell[
                   StyleData[
                   "ProblemText", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ProblemText", "Colorful"]], 
                   CounterIncrements -> {"CodeSealText", "ProblemText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemProgram", "Subsection", 
                CellChangeTimes -> {{3.687963057218865*^9, 
                 3.6879630597945633`*^9}, {3.6879690661526613`*^9, 
                 3.6879690671382475`*^9}, {3.687972609173317*^9, 
                 3.6879726097958946`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemProgram", StyleDefinitions -> 
                    StyleData["BaseProgram"]], 
                   CellChangeTimes -> {3.7123936282593017`*^9}], 
                  Cell[
                   StyleData[
                   "ProblemProgram", "Colorful", StyleDefinitions -> 
                    StyleData["BaseProgram", "Colorful"]], 
                   CellChangeTimes -> {3.7123936282593017`*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "ProblemProgram", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ProblemProgram", "Colorful"]], 
                   CellChangeTimes -> {3.7123936282593017`*^9}]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemReference", "Subsection", 
                CellChangeTimes -> {{3.68796310758914*^9, 
                 3.687963110348414*^9}, {3.687969070021437*^9, 
                 3.687969071038293*^9}, {3.687972612433947*^9, 
                 3.6879726130589514`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemReference", StyleDefinitions -> 
                    StyleData["BaseReference"]], 
                   CellChangeTimes -> {3.7123936282593017`*^9}], 
                  Cell[
                   StyleData[
                   "ProblemReference", "Colorful", StyleDefinitions -> 
                    StyleData["BaseReference", "Colorful"]], 
                   CellChangeTimes -> {3.7123936282593017`*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "ProblemReference", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ProblemReference", "Colorful"]], 
                   CellChangeTimes -> {3.7123936282593017`*^9}]}, Open]]}, 
              Closed]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Formulas", "Section", 
             CellChangeTimes -> {{3.6879629826124463`*^9, 
              3.6879629836836147`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemInlineFormula", "Subsection", 
                CellChangeTimes -> {{3.6879629334433126`*^9, 
                 3.687962936999868*^9}, {3.687969077231699*^9, 
                 3.6879690787954006`*^9}, {3.6879727320533624`*^9, 
                 3.6879727326557307`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemInlineFormula", StyleDefinitions -> 
                    StyleData["BaseInlineFormula"]], 
                   CellChangeTimes -> {3.7123936282593017`*^9}], 
                  Cell[
                   StyleData[
                   "ProblemInlineFormula", "Colorful", StyleDefinitions -> 
                    StyleData["BaseInlineFormula", "Colorful"]], 
                   CellChangeTimes -> {3.712393628274836*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "ProblemInlineFormula", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemInlineFormula", "Colorful"]], 
                   CellChangeTimes -> {3.712393628274836*^9}]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemDisplayFormula", "Subsection", 
                CellChangeTimes -> {{3.6879629418649554`*^9, 
                 3.6879629457751055`*^9}, {3.687969081446194*^9, 
                 3.6879690824835443`*^9}, {3.6879727546041284`*^9, 
                 3.687972755255498*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemDisplayFormula", StyleDefinitions -> 
                    StyleData["BaseDisplayFormula"]], 
                   CellChangeTimes -> {3.712393628274836*^9}], 
                  Cell[
                   StyleData[
                   "ProblemDisplayFormula", "Colorful", StyleDefinitions -> 
                    StyleData["BaseDisplayFormula", "Colorful"]], 
                   CellChangeTimes -> {3.712393628274836*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "ProblemDisplayFormula", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemDisplayFormula", "Colorful"]], 
                   CellChangeTimes -> {3.712393628274836*^9}]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemDisplayFormulaNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879629502428885`*^9, 
                 3.6879629550549717`*^9}, {3.687969085066022*^9, 
                 3.6879690860397196`*^9}, {3.6879727967259455`*^9, 
                 3.6879727973414235`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemDisplayFormulaNumbered", StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaNumbered"]], 
                   CellChangeTimes -> {3.712393628274836*^9}], 
                  Cell[
                   StyleData[
                   "ProblemDisplayFormulaNumbered", "Colorful", 
                    StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaNumbered", "Colorful"]], 
                   CellChangeTimes -> {3.712393628274836*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "ProblemDisplayFormulaNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemDisplayFormulaNumbered", "Colorful"]], 
                   CellChangeTimes -> {3.712393628274836*^9}]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ProblemDisplayFormulaEquationNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879629611014795`*^9, 
                 3.6879629689458036`*^9}, {3.687969089016264*^9, 
                 3.6879690905405207`*^9}, {3.687972802100534*^9, 
                 3.687972802660987*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "ProblemDisplayFormulaEquationNumber", StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaEquationNumber"]], 
                   CellChangeTimes -> {3.712393628274836*^9}], 
                  Cell[
                   StyleData[
                   "ProblemDisplayFormulaEquationNumber", "Colorful", 
                    StyleDefinitions -> 
                    StyleData[
                    "BaseDisplayFormulaEquationNumber", "Colorful"]], 
                   CellChangeTimes -> {3.712393628274836*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "ProblemDisplayFormulaEquationNumber", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData[
                    "ProblemDisplayFormulaEquationNumber", "Colorful"]], 
                   CellChangeTimes -> {3.712393628274836*^9}, Background -> 
                   RGBColor[1., 1., 0.94]]}, Open]]}, Closed]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Lists", "Section", 
             CellChangeTimes -> {{3.687961638303063*^9, 
              3.6879616501334686`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "Item", "Subsection", 
                CellChangeTimes -> {{3.6879617234824376`*^9, 
                 3.6879617267690196`*^9}, {3.6879625587200537`*^9, 
                 3.687962559544447*^9}, {3.6879691932256064`*^9, 
                 3.6879691946021967`*^9}, {3.6879692606603017`*^9, 
                 3.6879692620174065`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemItem", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623294940605`*^9}, {3.6879692037453704`*^9, 
                    3.687969205444796*^9}, {3.6879707390132136`*^9, 
                    3.6879707401080513`*^9}, {3.6879728308824396`*^9, 
                    3.687972831466892*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemItem", StyleDefinitions -> StyleData["BaseItem"]],
                     CellChangeTimes -> {3.712393628274836*^9}], 
                    Cell[
                    StyleData[
                    "ProblemItem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItem", "Colorful"]], 
                    CellChangeTimes -> {3.712393628274836*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemItem", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ProblemItem", "Colorful"]], 
                    CellChangeTimes -> {3.712393628274836*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemSubitem", "Subsubsection", 
                   CellChangeTimes -> {{3.6879692156750083`*^9, 
                    3.687969218243022*^9}, {3.6879711930577583`*^9, 
                    3.6879711941406136`*^9}, {3.687972959424994*^9, 
                    3.6879729600219727`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemSubitem", StyleDefinitions -> 
                    StyleData["BaseSubitem"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}], 
                    Cell[
                    StyleData[
                    "ProblemSubitem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemSubitem", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ProblemSubitem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemSubsubitem", "Subsubsection", 
                   CellChangeTimes -> {{3.6879692268336315`*^9, 
                    3.6879692298939924`*^9}, {3.6879711999656715`*^9, 
                    3.6879712018791466`*^9}, {3.687972962379816*^9, 
                    3.6879729629659705`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemSubsubitem", StyleDefinitions -> 
                    StyleData["BaseSubsubitem"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}], 
                    Cell[
                    StyleData[
                    "ProblemSubsubitem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubitem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemSubsubitem", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["ProblemSubsubitem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}]}, Open]]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ItemParagraph", "Subsection", 
                CellChangeTimes -> {{3.6879622811468134`*^9, 
                 3.687962285457865*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemItemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879692689968357`*^9, 
                    3.6879692725799074`*^9}, {3.687971382183323*^9, 
                    3.6879713839421263`*^9}, {3.6879729286628046`*^9, 
                    3.687972929233056*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemItemParagraph", StyleDefinitions -> 
                    StyleData["BaseItemParagraph"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}], 
                    Cell[
                    StyleData[
                    "ProblemItemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemItemParagraph", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemItemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemSubitemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.687969281672207*^9, 
                    3.6879692867671356`*^9}, {3.687971387599742*^9, 
                    3.6879713886846223`*^9}, {3.6879729318429623`*^9, 
                    3.6879729324175963`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemSubitemParagraph", StyleDefinitions -> 
                    StyleData["BaseSubitemParagraph"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}], 
                    Cell[
                    StyleData[
                    "ProblemSubitemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemSubitemParagraph", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemSubitemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936282904625`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemSubsubitemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.687969299267696*^9, 
                    3.6879693053184776`*^9}, {3.6879713926184063`*^9, 
                    3.687971393700267*^9}, {3.687972935010826*^9, 
                    3.687972935624488*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemSubsubitemParagraph", StyleDefinitions -> 
                    StyleData["BaseSubsubitemParagraph"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}], 
                    Cell[
                    StyleData[
                    "ProblemSubsubitemParagraph", "Colorful", 
                    StyleDefinitions -> 
                    StyleData["BaseSubsubitemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemSubsubitemParagraph", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemSubsubitemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}]}, Open]]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ItemNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879617347580743`*^9, 
                 3.687961735992123*^9}, {3.687962599656846*^9, 
                 3.6879626063176837`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemItemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879693300831223`*^9, 
                    3.687969333724639*^9}, {3.687971402924059*^9, 
                    3.687971404031905*^9}, {3.687972968022586*^9, 
                    3.6879729686188107`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemItemNumbered", StyleDefinitions -> 
                    StyleData["BaseItemNumbered"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}], 
                    Cell[
                    StyleData[
                    "ProblemItemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemItemNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemItemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemSubitemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.6879693434892235`*^9, 
                    3.68796934710899*^9}, {3.687971406581189*^9, 
                    3.6879714076845074`*^9}, {3.687972971114592*^9, 
                    3.687972971684648*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemSubitemNumbered", StyleDefinitions -> 
                    StyleData["BaseSubitemNumbered"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}], 
                    Cell[
                    StyleData[
                    "ProblemSubitemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemSubitemNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemSubitemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "ProblemSubsubitemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879624985968666`*^9, 
                    3.687962499731168*^9}, {3.687969360550745*^9, 
                    3.687969365586688*^9}, {3.687971410268381*^9, 
                    3.6879714113666716`*^9}, {3.687972974196543*^9, 
                    3.687972974772063*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "ProblemSubsubitemNumbered", StyleDefinitions -> 
                    StyleData["BaseSubsubitemNumbered"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}], 
                    Cell[
                    StyleData[
                    "ProblemSubsubitemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubitemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "ProblemSubsubitemNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["ProblemSubsubitemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283060875`*^9}]}, Open]]}, 
                 Open]]}, Closed]]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Solution", "Chapter"], 
         Cell[
          CellGroupData[{
            Cell[
            "Sectioning", "Section", 
             CellChangeTimes -> {{3.687961461814962*^9, 
              3.6879614619998574`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "Solution - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879614666259327`*^9, 
                 3.687961469044444*^9}, {3.687969031343545*^9, 
                 3.687969032506446*^9}, {3.7127836169825134`*^9, 
                 3.7127836194693103`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "Solution", StyleDefinitions -> StyleData["BaseSection"]], 
                   CellBracketOptions -> {"Color" -> RGBColor[0.5, 0.3, 0.5]},
                    PageBreakAbove -> True, 
                   CounterIncrements -> {
                    "CodeSealSection", "Solution", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "SolutionSubsection", "0"}, {
                    "CodeSealSubsubsection", "0"}, {
                    "SolutionSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "SolutionText", "0"}, {"CodeSealInput", "0"}, {
                    "Text", "0"}, {"Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "Solution", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSection", "Colorful"]], 
                   CellFrame -> {{0, 0}, {1, 1}}, CellDingbat -> Cell[
                    TextData[{
                    CounterBox["CodeSealChapter"], "-S", 
                    CounterBox["Problem"]}], "Text", Background -> None, 
                    FontSize -> 16, FontColor -> 
                    RGBColor[0.0039, 0.075, 0.26], FontFamily -> "Bagdhad"], 
                   CellMargins -> {{61, Inherited}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.0039, 0.075, 0.26]}, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> GrayLevel[0.5], 
                   CounterIncrements -> {
                    "CodeSealSection", "Solution", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "SolutionSubsection", "0"}, {
                    "CodeSealSubsubsection", "0"}, {
                    "SolutionSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "SolutionText", "0"}, {"CodeSealInput", "0"}, {
                    "Text", "0"}, {"Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}, 
                   FontSize -> 32, FontColor -> RGBColor[0., 0.25, 0.25], 
                   Background -> RGBColor[0.53, 0.73, 0.78]], 
                  Cell[
                   StyleData[
                   "Solution", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["Solution", "Colorful"]], 
                   PrivateCellOptions -> {
                    "PagewiseNotebookBaseStyle" -> {
                    Background -> RGBColor[0.9, 0.91, 0.93]}}, 
                   CounterIncrements -> {
                    "CodeSealSection", "Solution", "CodeSealNavigation"}, 
                   CounterAssignments -> {{"CodeSealSubsection", "0"}, {
                    "SolutionSubsection", "0"}, {
                    "CodeSealSubsubsection", "0"}, {
                    "SolutionSubsubsection", "0"}, {"CodeSealText", "0"}, {
                    "SolutionText", "0"}, {"CodeSealInput", "0"}, {
                    "Text", "0"}, {"Input", "0"}, {"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionSubsection - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879614728152246`*^9, 
                 3.6879614754913177`*^9}, {3.687969035947554*^9, 
                 3.687969037010421*^9}, {3.7127836262269883`*^9, 
                 3.71278362886005*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionSubsection", StyleDefinitions -> 
                    StyleData["BaseSubsection"]], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "SolutionSubsection"}, 
                   CounterAssignments -> {{"CodeSealSubsubsection", "0"}, {
                    "SolutionSubsubsection", "0"}, {"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "SolutionSubsection", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsection", "Colorful"]], 
                   CellFrame -> {{2, 2}, {2, 2}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.0039, 0.075, 0.26]}, CellFrameColor -> 
                   GrayLevel[0.1], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "SolutionSubsection"}, 
                   CounterAssignments -> ({{
                    "CodeSealSubsubsection" FontColor, "0" FontColor}, {
                    "SolutionSubsubsection" FontColor, "0" FontColor}, {
                    "CodeSealInput" FontColor, "0" FontColor}, {
                    "CodeSealText" FontColor, "0" FontColor}, {
                    "Text" FontColor, "0" FontColor}, {
                    "Input" FontColor, "0" FontColor}, {
                    "ItemNumbered" FontColor, "0" FontColor}, {
                    "SubitemNumbered" FontColor, "0" FontColor}, {
                    "SubsubitemNumbered" FontColor, "0" FontColor}} -> 
                    GrayLevel[0]), Background -> RGBColor[0.65, 0.8, 0.84]], 
                  Cell[
                   StyleData[
                   "SolutionSubsection", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["SolutionSubsection", "Colorful"]], 
                   CounterIncrements -> {
                    "CodeSealSubsection", "SolutionSubsection"}, 
                   CounterAssignments -> {{"CodeSealSubsubsection", "0"}, {
                    "SolutionSubsubsection", "0"}, {"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}]}, Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionSubsubsection - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879615124146276`*^9, 
                 3.687961517295051*^9}, {3.6879690396183567`*^9, 
                 3.6879690406531973`*^9}, {3.7127836445056643`*^9, 
                 3.7127836470760307`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionSubsubsection", StyleDefinitions -> 
                    StyleData["BaseSubsubsection"]], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "SolutionSubsubsection"}, 
                   CounterAssignments -> {{"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "SolutionSubsubsection", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubsection", "Colorful"]], 
                   CellFrame -> {{1, 1}, {1, 1}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.0039, 0.075, 0.26]}, CellFrameColor -> 
                   GrayLevel[0.1], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "SolutionSubsubsection"}, 
                   CounterAssignments -> ({{
                    "CodeSealInput" FontColor, "0" FontColor}, {
                    "CodeSealText" FontColor, "0" FontColor}, {
                    "Text" FontColor, "0" FontColor}, {
                    "Input" FontColor, "0" FontColor}, {
                    "ItemNumbered" FontColor, "0" FontColor}, {
                    "SubitemNumbered" FontColor, "0" FontColor}, {
                    "SubsubitemNumbered" FontColor, "0" FontColor}} -> 
                    GrayLevel[0]), Background -> RGBColor[0.65, 0.95, 0.93]], 
                  
                  Cell[
                   StyleData[
                   "SolutionSubsubsection", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionSubsubsection", "Colorful"]], 
                   CounterIncrements -> {
                    "CodeSealSubsubsection", "SolutionSubsubsection"}, 
                   CounterAssignments -> {{"CodeSealInput", "0"}, {
                    "CodeSealText", "0"}, {"Text", "0"}, {"Input", "0"}, {
                    "ItemNumbered", "0"}, {"SubitemNumbered", "0"}, {
                    "SubsubitemNumbered", "0"}}]}, Open]]}, Closed]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Formatted Text", "Section", 
             CellChangeTimes -> {{3.6879615970973525`*^9, 
              3.6879615977827806`*^9}, {3.6879616925872564`*^9, 
              3.6879617047849045`*^9}, {3.687963052239737*^9, 
              3.6879630535121746`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionText - has counter", "Subsection", 
                CellChangeTimes -> {{3.6879616035664062`*^9, 
                 3.6879616053547516`*^9}, {3.6879690626358366`*^9, 
                 3.687969063681633*^9}, {3.712783662260186*^9, 
                 3.712783664543066*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionText", StyleDefinitions -> StyleData["BaseText"]],
                    CounterIncrements -> {"CodeSealText", "SolutionText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}], 
                  Cell[
                   StyleData[
                   "SolutionText", "Colorful", StyleDefinitions -> 
                    StyleData["BaseText", "Colorful"]], CellDingbat -> Cell[
                    TextData[{
                    CounterBox["CodeSealChapter"], "-S", 
                    CounterBox["Problem"], "-", 
                    CounterBox[
                    "SolutionText", CounterFunction -> RomanNumeral]}], 
                    "Text", Background -> None, FontSize -> 12, FontColor -> 
                    RGBColor[0.24, 0.14, 0.], FontFamily -> "Bagdhad"], 
                   CellMargins -> {{151, 4}, {Inherited, Inherited}}, 
                   CellBracketOptions -> {
                    "Color" -> RGBColor[0.0039, 0.075, 0.26]}, 
                   CellFrameMargins -> {{0, Inherited}, {
                    Inherited, Inherited}}, CellFrameColor -> GrayLevel[0.5], 
                   CounterIncrements -> {"CodeSealText", "SolutionText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}, 
                   FontSlant -> "Italic", FontColor -> GrayLevel[0], 
                   Background -> RGBColor[0.82, 0.97, 0.96]], 
                  Cell[
                   StyleData[
                   "SolutionText", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["SolutionText", "Colorful"]], 
                   CounterIncrements -> {"CodeSealText", "SolutionText"}, 
                   CounterAssignments -> {{"ItemNumbered", "0"}, {
                    "SubitemNumbered", "0"}, {"SubsubitemNumbered", "0"}}]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionProgram", "Subsection", 
                CellChangeTimes -> {{3.687963057218865*^9, 
                 3.6879630597945633`*^9}, {3.6879690661526613`*^9, 
                 3.6879690671382475`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionProgram", StyleDefinitions -> 
                    StyleData["BaseProgram"]], 
                   CellChangeTimes -> {3.7123936283217125`*^9}], 
                  Cell[
                   StyleData[
                   "SolutionProgram", "Colorful", StyleDefinitions -> 
                    StyleData["BaseProgram", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283217125`*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "SolutionProgram", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["SolutionProgram", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283217125`*^9}]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionReference", "Subsection", 
                CellChangeTimes -> {{3.68796310758914*^9, 
                 3.687963110348414*^9}, {3.687969070021437*^9, 
                 3.687969071038293*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionReference", StyleDefinitions -> 
                    StyleData["BaseReference"]], 
                   CellChangeTimes -> {3.7123936283217125`*^9}], 
                  Cell[
                   StyleData[
                   "SolutionReference", "Colorful", StyleDefinitions -> 
                    StyleData["BaseReference", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "SolutionReference", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["SolutionReference", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}]}, Open]]}, 
              Closed]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Formulas", "Section", 
             CellChangeTimes -> {{3.6879629826124463`*^9, 
              3.6879629836836147`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionInlineFormula", "Subsection", 
                CellChangeTimes -> {{3.6879629334433126`*^9, 
                 3.687962936999868*^9}, {3.687969077231699*^9, 
                 3.6879690787954006`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionInlineFormula", StyleDefinitions -> 
                    StyleData["BaseInlineFormula"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}], 
                  Cell[
                   StyleData[
                   "SolutionInlineFormula", "Colorful", StyleDefinitions -> 
                    StyleData["BaseInlineFormula", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "SolutionInlineFormula", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionInlineFormula", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionDisplayFormula", "Subsection", 
                CellChangeTimes -> {{3.6879629418649554`*^9, 
                 3.6879629457751055`*^9}, {3.687969081446194*^9, 
                 3.6879690824835443`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionDisplayFormula", StyleDefinitions -> 
                    StyleData["BaseDisplayFormula"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}], 
                  Cell[
                   StyleData[
                   "SolutionDisplayFormula", "Colorful", StyleDefinitions -> 
                    StyleData["BaseDisplayFormula", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "SolutionDisplayFormula", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionDisplayFormula", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionDisplayFormulaNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879629502428885`*^9, 
                 3.6879629550549717`*^9}, {3.687969085066022*^9, 
                 3.6879690860397196`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionDisplayFormulaNumbered", StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaNumbered"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}], 
                  Cell[
                   StyleData[
                   "SolutionDisplayFormulaNumbered", "Colorful", 
                    StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaNumbered", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "SolutionDisplayFormulaNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionDisplayFormulaNumbered", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}]}, Open]]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "SolutionDisplayFormulaEquationNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879629611014795`*^9, 
                 3.6879629689458036`*^9}, {3.687969089016264*^9, 
                 3.6879690905405207`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData[
                   "SolutionDisplayFormulaEquationNumber", StyleDefinitions -> 
                    StyleData["BaseDisplayFormulaEquationNumber"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}], 
                  Cell[
                   StyleData[
                   "SolutionDisplayFormulaEquationNumber", "Colorful", 
                    StyleDefinitions -> 
                    StyleData[
                    "BaseDisplayFormulaEquationNumber", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}, Background -> 
                   RGBColor[1., 1., 0.94]], 
                  Cell[
                   StyleData[
                   "SolutionDisplayFormulaEquationNumber", "PagewiseColorful",
                     StyleDefinitions -> 
                    StyleData[
                    "SolutionDisplayFormulaEquationNumber", "Colorful"]], 
                   CellChangeTimes -> {3.7123936283373413`*^9}]}, Open]]}, 
              Closed]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
            "Lists", "Section", 
             CellChangeTimes -> {{3.687961638303063*^9, 
              3.6879616501334686`*^9}}], 
            Cell[
             CellGroupData[{
               Cell[
               "Item", "Subsection", 
                CellChangeTimes -> {{3.6879617234824376`*^9, 
                 3.6879617267690196`*^9}, {3.6879625587200537`*^9, 
                 3.687962559544447*^9}, {3.6879691932256064`*^9, 
                 3.6879691946021967`*^9}, {3.6879692606603017`*^9, 
                 3.6879692620174065`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionItem", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623294940605`*^9}, {3.6879692037453704`*^9, 
                    3.687969205444796*^9}, {3.6879707390132136`*^9, 
                    3.6879707401080513`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionItem", StyleDefinitions -> 
                    StyleData["BaseItem"]], 
                    CellChangeTimes -> {3.7123936283373413`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionItem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283373413`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionItem", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["SolutionItem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283373413`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionSubitem", "Subsubsection", 
                   CellChangeTimes -> {{3.6879692156750083`*^9, 
                    3.687969218243022*^9}, {3.6879711930577583`*^9, 
                    3.6879711941406136`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionSubitem", StyleDefinitions -> 
                    StyleData["BaseSubitem"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionSubitem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionSubitem", "PagewiseColorful", StyleDefinitions -> 
                    StyleData["SolutionSubitem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionSubsubitem", "Subsubsection", 
                   CellChangeTimes -> {{3.6879692268336315`*^9, 
                    3.6879692298939924`*^9}, {3.6879711999656715`*^9, 
                    3.6879712018791466`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionSubsubitem", StyleDefinitions -> 
                    StyleData["BaseSubsubitem"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionSubsubitem", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubsubitem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionSubsubitem", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionSubsubitem", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}]}, Open]]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ItemParagraph", "Subsection", 
                CellChangeTimes -> {{3.6879622811468134`*^9, 
                 3.687962285457865*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionItemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879692689968357`*^9, 
                    3.6879692725799074`*^9}, {3.687971382183323*^9, 
                    3.6879713839421263`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionItemParagraph", StyleDefinitions -> 
                    StyleData["BaseItemParagraph"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionItemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionItemParagraph", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionItemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionSubitemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.687969281672207*^9, 
                    3.6879692867671356`*^9}, {3.687971387599742*^9, 
                    3.6879713886846223`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionSubitemParagraph", StyleDefinitions -> 
                    StyleData["BaseSubitemParagraph"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionSubitemParagraph", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionSubitemParagraph", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionSubitemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionSubsubitemParagraph", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.687969299267696*^9, 
                    3.6879693053184776`*^9}, {3.6879713926184063`*^9, 
                    3.687971393700267*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionSubsubitemParagraph", StyleDefinitions -> 
                    StyleData["BaseSubsubitemParagraph"]], 
                    CellChangeTimes -> {3.7123936283529444`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionSubsubitemParagraph", "Colorful", 
                    StyleDefinitions -> 
                    StyleData["BaseSubsubitemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionSubsubitemParagraph", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionSubsubitemParagraph", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}]}, Open]]}, 
                 Open]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
               "ItemNumbered", "Subsection", 
                CellChangeTimes -> {{3.6879617347580743`*^9, 
                 3.687961735992123*^9}, {3.687962599656846*^9, 
                 3.6879626063176837`*^9}}], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionItemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879693300831223`*^9, 
                    3.687969333724639*^9}, {3.687971402924059*^9, 
                    3.687971404031905*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionItemNumbered", StyleDefinitions -> 
                    StyleData["BaseItemNumbered"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionItemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseItemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionItemNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionItemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionSubitemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.6879693434892235`*^9, 
                    3.68796934710899*^9}, {3.687971406581189*^9, 
                    3.6879714076845074`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionSubitemNumbered", StyleDefinitions -> 
                    StyleData["BaseSubitemNumbered"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionSubitemNumbered", "Colorful", StyleDefinitions -> 
                    StyleData["BaseSubitemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionSubitemNumbered", "PagewiseColorful", 
                    StyleDefinitions -> 
                    StyleData["SolutionSubitemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}]}, Open]]}, 
                 Open]], 
               Cell[
                CellGroupData[{
                  Cell[
                  "SolutionSubsubitemNumbered", "Subsubsection", 
                   CellChangeTimes -> {{3.68796231610894*^9, 
                    3.6879623447303667`*^9}, {3.6879623844388485`*^9, 
                    3.6879623850717344`*^9}, {3.6879624985968666`*^9, 
                    3.687962499731168*^9}, {3.687969360550745*^9, 
                    3.687969365586688*^9}, {3.687971410268381*^9, 
                    3.6879714113666716`*^9}}], 
                  Cell[
                   CellGroupData[{
                    Cell[
                    StyleData[
                    "SolutionSubsubitemNumbered", StyleDefinitions -> 
                    StyleData["BaseSubsubitemNumbered"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}], 
                    Cell[
                    StyleData[
                    "SolutionSubsubitemNumbered", "Colorful", 
                    StyleDefinitions -> 
                    StyleData["BaseSubsubitemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}, Background -> 
                    RGBColor[1., 1., 0.94]], 
                    Cell[
                    StyleData[
                    "SolutionSubsubitemNumbered", "Colorful", 
                    StyleDefinitions -> 
                    StyleData["BaseSubsubitemNumbered", "Colorful"]], 
                    CellChangeTimes -> {3.7123936283685684`*^9}]}, Open]]}, 
                 Open]]}, Closed]]}, Closed]]}, Open]]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "11.2 for Linux x86 (64-bit) (September 10, 2017)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "CodeSealNavigation"->{
  Cell[580, 22, 1409, 29, 174, "ModuleTitle",ExpressionUUID->"ecd40fa7-c212-4519-9e93-cc38366917b9",
   CellTags->"CodeSealNavigation",
   CellID->1926444827],
  Cell[25417, 603, 1433, 30, 117, "ModuleChapter",ExpressionUUID->"33205ef4-af03-4b6d-b8ee-119e4850bfcb",
   CellTags->"CodeSealNavigation",
   CellID->1124045646],
  Cell[26875, 637, 1404, 29, 126, "Read",ExpressionUUID->"e075b1bc-3ccb-477f-9391-6422f8dcbb3d",
   CellTags->"CodeSealNavigation",
   CellID->421529663],
  Cell[55750, 1239, 1409, 29, 126, "Read",ExpressionUUID->"ec36987d-1de2-4dd7-9ebe-753ffecc7e0c",
   CellTags->"CodeSealNavigation",
   CellID->1090393974],
  Cell[63307, 1422, 1456, 31, 126, "Read",ExpressionUUID->"022470cf-60af-4f35-acda-fb109feae4f1",
   CellTags->"CodeSealNavigation",
   CellID->1169513409],
  Cell[253981, 4920, 4951, 99, 122, "Problem",ExpressionUUID->"741d9e40-c747-403b-b5c2-ec416e1a0e3b",
   CellTags->"CodeSealNavigation",
   CellID->695984209],
  Cell[436438, 8568, 4038, 89, 122, "Solution",ExpressionUUID->"57e24816-1ed9-4603-961e-6b158f587ba3",
   CellTags->"CodeSealNavigation",
   CellID->932933760]},
 "Sat 17 Mar 2018 11:35:20"->{
  Cell[292549, 5627, 240, 3, 65, "ProblemSubsubsection",ExpressionUUID->"57811774-bfab-4b55-a2bc-63a66602904f",
   CellTags->{"8617029096150563781", "Sat 17 Mar 2018 11:35:20"},
   CellID->1857370810]},
 "8617029096150563781"->{
  Cell[292549, 5627, 240, 3, 65, "ProblemSubsubsection",ExpressionUUID->"57811774-bfab-4b55-a2bc-63a66602904f",
   CellTags->{"8617029096150563781", "Sat 17 Mar 2018 11:35:20"},
   CellID->1857370810]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"CodeSealNavigation", 1393306, 25503},
 {"Sat 17 Mar 2018 11:35:20", 1394453, 25525},
 {"8617029096150563781", 1394682, 25529}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1409, 29, 174, "ModuleTitle",ExpressionUUID->"ecd40fa7-c212-4519-9e93-cc38366917b9",
 CellTags->"CodeSealNavigation",
 CellID->1926444827],
Cell[1992, 53, 3186, 61, 473, "Emphasis",ExpressionUUID->"8a299190-00e5-4882-8ef9-281c18fefc06",
 CellID->697555643],
Cell[CellGroupData[{
Cell[5203, 118, 172, 2, 0, "Initialization",ExpressionUUID->"f8622e84-eaf1-4fc2-a0bd-e41062442145",
 InitializationGroup->True,
 CellID->147261570],
Cell[5378, 122, 20002, 476, 2352, "AuthorInput",ExpressionUUID->"f7536581-c6d6-452a-aa83-f739090bbdaa",
 CellID->129874047]
}, Closed]],
Cell[CellGroupData[{
Cell[25417, 603, 1433, 30, 117, "ModuleChapter",ExpressionUUID->"33205ef4-af03-4b6d-b8ee-119e4850bfcb",
 CellTags->"CodeSealNavigation",
 CellID->1124045646],
Cell[CellGroupData[{
Cell[26875, 637, 1404, 29, 126, "Read",ExpressionUUID->"e075b1bc-3ccb-477f-9391-6422f8dcbb3d",
 CellTags->"CodeSealNavigation",
 CellID->421529663],
Cell[28282, 668, 93, 1, 0, "Hidden",ExpressionUUID->"44b5f9ed-d3d5-4cf9-bea8-682dc0d5ab92",
 CellID->100494588],
Cell[28378, 671, 648, 15, 127, "ReadText",ExpressionUUID->"0d432002-5101-421d-9981-15a27519beda",
 CellID->949722577],
Cell[29029, 688, 1636, 27, 85, "AuthorInput",ExpressionUUID->"33a60f0c-4b85-453b-86a6-a853d42f7da6",
 CellID->1731239631],
Cell[30668, 717, 169, 3, 49, "ReadText",ExpressionUUID->"196a1748-409b-4582-a9ef-ce796c96115c",
 CellID->1888887135],
Cell[CellGroupData[{
Cell[30862, 724, 1566, 24, 85, "AuthorInput",ExpressionUUID->"6ef5fa71-0514-459b-8b3c-02eecbfff753",
 CellID->1617619676],
Cell[32431, 750, 254, 7, 36, "Output",ExpressionUUID->"320dfe66-e04d-4d8f-a8a4-7593d0df5c5d",
 CellID->688036175]
}, Open  ]],
Cell[32700, 760, 507, 12, 101, "ReadText",ExpressionUUID->"06e74140-acef-443d-95d5-907260b59bd3",
 CellID->275324344],
Cell[CellGroupData[{
Cell[33232, 776, 2066, 44, 85, "AuthorInput",ExpressionUUID->"6f42432f-6154-4b8c-876d-7051373d4062",
 CellID->383466350],
Cell[35301, 822, 164, 3, 36, "Output",ExpressionUUID->"27ad6ab8-4feb-418e-bfd0-05bf07b2714e",
 CellID->2082445346]
}, Open  ]],
Cell[35480, 828, 239, 5, 49, "ReadText",ExpressionUUID->"1275539d-5d08-4bf4-816d-9cc0f51daa8d",
 CellID->1696473970],
Cell[CellGroupData[{
Cell[35744, 837, 935, 16, 85, "AuthorInput",ExpressionUUID->"95a91df7-b8a7-49e2-a0fe-811fd603e7f1",
 CellID->709454592],
Cell[36682, 855, 252, 6, 36, "Output",ExpressionUUID->"6634cf12-efba-4c72-a979-4f8b473b62cc",
 CellID->1840631032]
}, Open  ]],
Cell[36949, 864, 3632, 65, 348, "CodingComment",ExpressionUUID->"89555cee-473a-4ecd-b890-bcb3ef37062d",
 CellID->1593464481],
Cell[40584, 931, 192, 4, 49, "ReadText",ExpressionUUID->"b4cfcad5-a9f8-4ad4-98d4-98e091a486f3",
 CellID->497632571],
Cell[CellGroupData[{
Cell[40801, 939, 1075, 20, 89, "AuthorInput",ExpressionUUID->"234abc2a-02ad-4d5d-a4d0-d0d98f9c8c9e",
 CellID->1353196019],
Cell[41879, 961, 147, 2, 36, "Output",ExpressionUUID->"96b1ab53-0bbf-4532-85b1-aa19758461ed",
 CellID->1183951713]
}, Open  ]],
Cell[42041, 966, 3092, 65, 198, "CodingComment",ExpressionUUID->"c111f653-708f-4bf1-b196-142e8012cc0f",
 CellID->1119934346],
Cell[45136, 1033, 190, 5, 49, "ReadText",ExpressionUUID->"c5699b08-5d51-4f7d-980f-26dd5bb50da0",
 CellID->1409299379],
Cell[CellGroupData[{
Cell[45351, 1042, 1316, 22, 85, "AuthorInput",ExpressionUUID->"484d4b8f-baec-4f05-bff9-6d847bcb1327",
 CellID->318033562],
Cell[46670, 1066, 7062, 134, 240, "Output",ExpressionUUID->"08dc0386-5650-42b3-8f4b-6c4d623b7249",
 CellID->592228420]
}, Open  ]],
Cell[53747, 1203, 1966, 31, 48, "CodingComment",ExpressionUUID->"76684e6b-3e71-4322-aaa0-6915fad7425b",
 CellID->1912022176]
}, Open  ]],
Cell[CellGroupData[{
Cell[55750, 1239, 1409, 29, 126, "Read",ExpressionUUID->"ec36987d-1de2-4dd7-9ebe-753ffecc7e0c",
 CellTags->"CodeSealNavigation",
 CellID->1090393974],
Cell[57162, 1270, 94, 1, 0, "Hidden",ExpressionUUID->"5e2aae31-532f-4a56-97e5-1916b87645d3",
 CellID->1773561167],
Cell[57259, 1273, 1340, 40, 158, "ReadText",ExpressionUUID->"ba78d55f-347b-4947-a740-7b44af3e0e1c",
 CellID->1497520090],
Cell[CellGroupData[{
Cell[58624, 1317, 1563, 25, 85, "AuthorInput",ExpressionUUID->"f5105bd2-e5ed-4386-9d5c-cf458e3875e2",
 CellID->608113012],
Cell[60190, 1344, 201, 4, 36, "Output",ExpressionUUID->"c1dc6b65-0c1a-43b4-b323-118f3aa7d6ca",
 CellID->1287197434]
}, Open  ]],
Cell[60406, 1351, 2864, 66, 77, "CodingComment",ExpressionUUID->"497ea37f-27e0-498d-be03-d6dc89be6bef",
 CellID->1450156104]
}, Open  ]],
Cell[CellGroupData[{
Cell[63307, 1422, 1456, 31, 126, "Read",ExpressionUUID->"022470cf-60af-4f35-acda-fb109feae4f1",
 CellTags->"CodeSealNavigation",
 CellID->1169513409],
Cell[64766, 1455, 92, 1, 0, "Hidden",ExpressionUUID->"8b16a42e-6789-4b9b-949c-eafbc226f167",
 CellID->94044072],
Cell[64861, 1458, 70500, 1232, 550, "ReadText",ExpressionUUID->"8609306e-0ada-46b1-8a39-629ef8cd2295",
 CellID->311809790],
Cell[135364, 2692, 2861, 56, 166, "AuthorInput",ExpressionUUID->"708f3962-5c2d-47b5-8326-805e65c2a60d",
 CellID->984646623],
Cell[138228, 2750, 10325, 293, 676, "CodingComment",ExpressionUUID->"08ddfba9-1bb7-4751-99d1-fc6d38f1042b",
 CellID->206770511],
Cell[148556, 3045, 40523, 676, 165, "ReadText",ExpressionUUID->"07e67f25-bc98-450c-9078-6d2a5856ce84",
 CellID->727041850],
Cell[CellGroupData[{
Cell[189104, 3725, 3379, 70, 243, "AuthorInput",ExpressionUUID->"26b76c01-ca93-490d-a346-03840e5cdc02",
 CellID->866730242],
Cell[192486, 3797, 439, 11, 72, "Output",ExpressionUUID->"b9ce2a06-624c-4b18-98b1-fd4f56417f0f",
 CellID->1077906709]
}, Open  ]],
Cell[192940, 3811, 2768, 52, 173, "CodingComment",ExpressionUUID->"bfdcd312-c045-49e3-aa96-50765c85a408",
 CellID->411889428],
Cell[195711, 3865, 1165, 31, 183, "ReadText",ExpressionUUID->"442825b9-7f79-4875-8967-89cd69503b70",
 CellID->210421520],
Cell[196879, 3898, 1957, 39, 93, "AuthorInput",ExpressionUUID->"77f81681-1857-444e-8d51-5c5623532347",
 CellID->1635162056],
Cell[CellGroupData[{
Cell[198861, 3941, 1613, 26, 89, "AuthorInput",ExpressionUUID->"b581fe01-5af1-4587-a8e9-34d5b80bcdb6",
 CellID->1083424221],
Cell[200477, 3969, 13430, 237, 247, "Output",ExpressionUUID->"c222a135-e156-46ed-ae17-7d11f721669c",
 CellID->2108661844]
}, Open  ]],
Cell[213922, 4209, 2943, 44, 73, "CodingComment",ExpressionUUID->"7d314d01-a4bd-4bb0-a7c7-a08f43b5f8e2",
 CellID->1776836798],
Cell[216868, 4255, 244, 4, 49, "ReadText",ExpressionUUID->"9dd133c0-a838-41c9-abf8-8681bea726a4",
 CellID->1796403678],
Cell[CellGroupData[{
Cell[217137, 4263, 2451, 37, 89, "AuthorInput",ExpressionUUID->"e576d523-b05f-44e7-9b40-326331053e81",
 CellID->1504566924],
Cell[219591, 4302, 294, 7, 45, "Output",ExpressionUUID->"7a6ca7b7-42a9-48cc-8fd1-9d44a6c7fa00",
 CellID->1187558236]
}, Open  ]],
Cell[219900, 4312, 2329, 37, 48, "CodingComment",ExpressionUUID->"d6dfdea6-8884-42db-8ce2-cd907117812b",
 CellID->795095766],
Cell[222232, 4351, 214, 5, 49, "ReadText",ExpressionUUID->"87e64665-c516-436e-8d31-64f7544d2535",
 CellID->684022973],
Cell[CellGroupData[{
Cell[222471, 4360, 2671, 42, 117, "AuthorInput",ExpressionUUID->"c7bf4065-7789-4b40-ae71-91bd79766e7f",
 CellID->656644659],
Cell[225145, 4404, 17429, 303, 240, "Output",ExpressionUUID->"32c9f56b-8d96-4b23-9d04-9325d976dbc1",
 CellID->1214317795]
}, Open  ]],
Cell[242589, 4710, 2045, 29, 48, "CodingComment",ExpressionUUID->"adace46a-6a6f-4729-8632-299539bc4dd4",
 CellID->87796949],
Cell[244637, 4741, 128, 1, 49, "ReadText",ExpressionUUID->"82a7ac0a-f094-4dfb-bef9-d6e3a0295655",
 CellID->894144820],
Cell[CellGroupData[{
Cell[244790, 4746, 2681, 41, 89, "AuthorInput",ExpressionUUID->"330e3175-9cfc-4187-a037-94ab6944c1c3",
 CellID->1782896097],
Cell[247474, 4789, 181, 3, 36, "Output",ExpressionUUID->"69a66053-f7c2-4369-994a-0cfbf6dbf750",
 CellID->289480022]
}, Open  ]],
Cell[247670, 4795, 3182, 66, 198, "CodingComment",ExpressionUUID->"c383062f-d18e-44a6-8ec7-616e663ad6df",
 CellID->364938521],
Cell[250855, 4863, 153, 1, 49, "ReadText",ExpressionUUID->"6ef40b3a-8167-49fa-9798-9be664e30b14",
 CellID->1948911681],
Cell[CellGroupData[{
Cell[251033, 4868, 2732, 42, 89, "AuthorInput",ExpressionUUID->"7525c775-aa4d-4b62-b000-62ad800b910b",
 CellID->181487636],
Cell[253768, 4912, 164, 2, 36, "Output",ExpressionUUID->"387cf94b-1488-4b17-adb9-bab5454de81c",
 CellID->671159559]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253981, 4920, 4951, 99, 122, "Problem",ExpressionUUID->"741d9e40-c747-403b-b5c2-ec416e1a0e3b",
 CellTags->"CodeSealNavigation",
 CellID->695984209],
Cell[258935, 5021, 92, 1, 0, "Hidden",ExpressionUUID->"220d3f87-5ae8-4c82-b022-1f9749da01cc",
 CellID->63175454],
Cell[259030, 5024, 33494, 599, 634, "Emphasis",ExpressionUUID->"cb258472-aa68-4374-8682-bc0dd5105886",
 CellID->1759705777],
Cell[CellGroupData[{
Cell[292549, 5627, 240, 3, 65, "ProblemSubsubsection",ExpressionUUID->"57811774-bfab-4b55-a2bc-63a66602904f",
 CellTags->{"8617029096150563781", "Sat 17 Mar 2018 11:35:20"},
 CellID->1857370810],
Cell[CellGroupData[{
Cell[292814, 5634, 2132, 61, 217, "Input",ExpressionUUID->"2edfd9cc-b8cd-4fc9-99b4-7030f4fefedb",
 CellID->37013077],
Cell[294949, 5697, 631, 18, 84, "Output",ExpressionUUID->"6e126918-2865-4b5f-a5ff-59bf9a7772a9",
 CellID->814139628]
}, Open  ]],
Cell[CellGroupData[{
Cell[295617, 5720, 1519, 41, 145, "Input",ExpressionUUID->"04647a76-2d82-4118-a77d-86b4b9f57feb",
 CellID->599250171],
Cell[297139, 5763, 632, 18, 84, "Output",ExpressionUUID->"c77f251e-ff75-451c-9b88-482c80d3719e",
 CellID->66275668]
}, Open  ]],
Cell[CellGroupData[{
Cell[297808, 5786, 366, 9, 48, "Input",ExpressionUUID->"262ee3b3-e1d2-47dd-a21b-c65cb57fc809",
 CellID->1005558258],
Cell[298177, 5797, 920, 26, 84, "Output",ExpressionUUID->"f22b48ce-211b-4656-9712-ab89186c140e",
 CellID->600413669]
}, Open  ]],
Cell[CellGroupData[{
Cell[299134, 5828, 410, 11, 48, "Input",ExpressionUUID->"63860933-5913-4fb0-85a2-a4becdb783a2",
 CellID->838245962],
Cell[299547, 5841, 859, 24, 84, "Output",ExpressionUUID->"95173833-c310-460a-b357-a4483e4e2824",
 CellID->733165131]
}, Open  ]],
Cell[CellGroupData[{
Cell[300443, 5870, 469, 13, 48, "Input",ExpressionUUID->"e66a4519-7cf3-4da1-89d8-21e586ff40da",
 CellID->1189844749],
Cell[300915, 5885, 16333, 289, 264, "Output",ExpressionUUID->"01009049-fb87-45a2-b650-f1b6cc3712c6",
 CellID->1734217499]
}, Open  ]],
Cell[CellGroupData[{
Cell[317285, 6179, 390, 10, 48, "Input",ExpressionUUID->"dd676825-3ade-4a03-a8f8-1da3b1976899",
 CellID->2031448008],
Cell[317678, 6191, 1117, 34, 84, "Output",ExpressionUUID->"8b79031f-f0b9-4f5b-a408-f03ac454b67c",
 CellID->1079325626]
}, Open  ]],
Cell[CellGroupData[{
Cell[318832, 6230, 483, 13, 48, "Input",ExpressionUUID->"e1082930-d8f0-422d-a030-95448e7dc6c7",
 CellID->1433958493],
Cell[319318, 6245, 18965, 332, 256, "Output",ExpressionUUID->"1a1af652-2440-4292-b778-0f1ab53b3e7c",
 CellID->365174271]
}, Open  ]],
Cell[CellGroupData[{
Cell[338320, 6582, 344, 9, 48, "Input",ExpressionUUID->"a7601841-e01f-4971-ad0f-479fb3c28143",
 CellID->273232455],
Cell[338667, 6593, 278, 7, 52, "Output",ExpressionUUID->"8a98f24e-3ba8-4743-a378-a59d34f7aa42",
 CellID->1291688759]
}, Open  ]],
Cell[CellGroupData[{
Cell[338982, 6605, 405, 10, 48, "Input",ExpressionUUID->"583b1b2b-0a70-434f-9ba1-a307a163e258",
 CellID->1863939],
Cell[339390, 6617, 1686, 51, 88, "Output",ExpressionUUID->"9e33c85c-2ad7-4fca-8d38-cecf0e7e95c3",
 CellID->467686119]
}, Open  ]],
Cell[CellGroupData[{
Cell[341113, 6673, 486, 13, 48, "Input",ExpressionUUID->"949339fe-8ebc-4ce3-bcb1-9ef7904d158e",
 CellID->1694579755],
Cell[341602, 6688, 21309, 370, 256, "Output",ExpressionUUID->"f6869596-7d82-4dec-b624-649d695b5311",
 CellID->924484843]
}, Open  ]],
Cell[CellGroupData[{
Cell[362948, 7063, 350, 9, 48, "Input",ExpressionUUID->"007d291b-e4d8-4783-be43-43964c135694",
 CellID->1893295967],
Cell[363301, 7074, 276, 7, 52, "Output",ExpressionUUID->"e3a01344-5c75-4ad5-8d07-045e5fc7837c",
 CellID->1175653120]
}, Open  ]],
Cell[CellGroupData[{
Cell[363614, 7086, 408, 11, 48, "Input",ExpressionUUID->"6c482057-9fc7-4c3b-a4b7-e1fd61a38005",
 CellID->640799038],
Cell[364025, 7099, 464, 14, 52, "Output",ExpressionUUID->"965f8630-8b8c-4f91-9283-6838103e933f",
 CellID->1584138355]
}, Open  ]],
Cell[CellGroupData[{
Cell[364526, 7118, 428, 12, 48, "Input",ExpressionUUID->"dc8c802e-3db0-422c-9224-1810dd9abcbb",
 CellID->621652366],
Cell[364957, 7132, 435, 12, 52, "Output",ExpressionUUID->"a7be89f7-3253-4d4b-8b08-3aee4a11e667",
 CellID->210959689]
}, Open  ]],
Cell[365407, 7147, 271, 7, 48, "Input",ExpressionUUID->"a2a71711-7f2d-4cb5-bd18-6cc19daa6a29",
 CellID->559310572],
Cell[365681, 7156, 197, 6, 10, "Hidden",ExpressionUUID->"560ba95a-b8f4-4c84-879e-3752f4f72569",
 CellID->469991125]
}, Open  ]],
Cell[CellGroupData[{
Cell[365915, 7167, 244, 4, 65, "ProblemSubsubsection",ExpressionUUID->"d9d68edf-961e-46c9-8368-126f9fa3afc6",
 CellID->721521415],
Cell[CellGroupData[{
Cell[366184, 7175, 2017, 55, 201, "Input",ExpressionUUID->"0ef5a7df-820d-45a8-baf6-49e8271f3634",
 CellID->428263218],
Cell[368204, 7232, 550, 13, 68, "Output",ExpressionUUID->"085a48cf-53ab-422a-a00e-f9447e3c41b0",
 CellID->1666034246]
}, Open  ]],
Cell[CellGroupData[{
Cell[368791, 7250, 1427, 36, 129, "Input",ExpressionUUID->"98908681-ba62-4108-b87e-76264ca4c1e5",
 CellID->723385355],
Cell[370221, 7288, 552, 13, 100, "Output",ExpressionUUID->"b78b4c06-95a8-4ba1-a559-b0aea1c5da38",
 CellID->1006689848]
}, Open  ]],
Cell[CellGroupData[{
Cell[370810, 7306, 261, 4, 32, "Input",ExpressionUUID->"7ed42748-3054-4497-8c2a-facefa58143a",
 CellID->352312854],
Cell[371074, 7312, 817, 21, 68, "Output",ExpressionUUID->"4402bc0f-64d8-412a-8aeb-dc1204616de0",
 CellID->1293127926]
}, Open  ]],
Cell[CellGroupData[{
Cell[371928, 7338, 306, 6, 32, "Input",ExpressionUUID->"6800fe4e-ef6a-484b-9f99-1b38a4064ceb",
 CellID->686090473],
Cell[372237, 7346, 755, 19, 68, "Output",ExpressionUUID->"db01531f-a133-4324-b4e2-a2a35f7bd215",
 CellID->904967220]
}, Open  ]],
Cell[CellGroupData[{
Cell[373029, 7370, 365, 8, 32, "Input",ExpressionUUID->"b71e4e01-848c-4b87-9ba8-9e7f3ed03708",
 CellID->1933926964],
Cell[373397, 7380, 16229, 284, 248, "Output",ExpressionUUID->"435c84f3-cb5c-426c-bdd6-230918bcc9aa",
 CellID->1270148754]
}, Open  ]],
Cell[CellGroupData[{
Cell[389663, 7669, 285, 5, 32, "Input",ExpressionUUID->"772d75f2-e935-426e-9871-3270f86b3ce4",
 CellID->870633730],
Cell[389951, 7676, 1013, 29, 68, "Output",ExpressionUUID->"664bf728-13c0-4c00-ae20-7778805f594c",
 CellID->1617087103]
}, Open  ]],
Cell[CellGroupData[{
Cell[391001, 7710, 378, 8, 32, "Input",ExpressionUUID->"dd6e67cc-8b7d-458d-964f-731bd2a04e6f",
 CellID->800339807],
Cell[391382, 7720, 18862, 327, 240, "Output",ExpressionUUID->"56e3c0b5-4aae-4b10-9d41-ebfb799f4198",
 CellID->1492286096]
}, Open  ]],
Cell[CellGroupData[{
Cell[410281, 8052, 241, 4, 32, "Input",ExpressionUUID->"45540d40-9422-46f3-a396-cf9fff0f3e2e",
 CellID->1607962764],
Cell[410525, 8058, 174, 2, 36, "Output",ExpressionUUID->"5fc70e1c-f930-48f7-bfb5-375029377e91",
 CellID->1614479435]
}, Open  ]],
Cell[CellGroupData[{
Cell[410736, 8065, 304, 5, 32, "Input",ExpressionUUID->"efd8199b-2b10-4149-b77e-f3702e892494",
 CellID->1558561764],
Cell[411043, 8072, 1581, 46, 72, "Output",ExpressionUUID->"8d371ad5-b9f2-4944-847e-0c4951309d2c",
 CellID->60892785]
}, Open  ]],
Cell[CellGroupData[{
Cell[412661, 8123, 381, 8, 32, "Input",ExpressionUUID->"3706edf7-5fb3-4737-87c4-eae2e4ffd132",
 CellID->200160918],
Cell[413045, 8133, 21206, 365, 240, "Output",ExpressionUUID->"82da02c9-10f9-4aa6-a69b-140af67d79db",
 CellID->1145295615]
}, Open  ]],
Cell[CellGroupData[{
Cell[434288, 8503, 246, 4, 32, "Input",ExpressionUUID->"59f2bf25-a102-4bc4-9a98-a748e02cfb9e",
 CellID->1140218411],
Cell[434537, 8509, 171, 2, 36, "Output",ExpressionUUID->"85fbd760-d9fd-419c-be22-602991893560",
 CellID->565335189]
}, Open  ]],
Cell[CellGroupData[{
Cell[434745, 8516, 304, 6, 32, "Input",ExpressionUUID->"c67a0b86-f7e6-4141-b33b-e2116a0a9cc6",
 CellID->289500727],
Cell[435052, 8524, 360, 9, 36, "Output",ExpressionUUID->"c3607c15-cc6a-4cef-a796-2b38f423166a",
 CellID->1607904530]
}, Open  ]],
Cell[CellGroupData[{
Cell[435449, 8538, 325, 7, 32, "Input",ExpressionUUID->"24f77388-e989-47af-8a4a-6b4335e7142c",
 CellID->1489820033],
Cell[435777, 8547, 332, 7, 36, "Output",ExpressionUUID->"c102e451-e75a-42dd-b45b-0582b423d9d5",
 CellID->1465153847]
}, Open  ]],
Cell[436124, 8557, 168, 2, 32, "Input",ExpressionUUID->"5779dfd8-0f4b-43d3-8a3a-bbeaf5ce87fa",
 CellID->1044559238],
Cell[436295, 8561, 94, 1, 10, "Hidden",ExpressionUUID->"5e426aa3-38ee-428e-ac72-4417b9ddf3c1",
 CellID->1700779722]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[436438, 8568, 4038, 89, 122, "Solution",ExpressionUUID->"57e24816-1ed9-4603-961e-6b158f587ba3",
 CellTags->"CodeSealNavigation",
 CellID->932933760],
Cell[440479, 8659, 132, 2, 22, "SolutionDivider",ExpressionUUID->"0bde0787-f31a-4c7c-beb4-0c7358609e52",
 CellID->274817489],
Cell[440614, 8663, 527, 11, 181, "SolutionText",ExpressionUUID->"df53634e-bcc6-4b1f-a340-2d84ba26993c",
 CellID->1650647738],
Cell[441144, 8676, 132, 2, 22, "SolutionDivider",ExpressionUUID->"65606450-c2a2-4ae5-941c-70c2db9c0332",
 CellID->998202844],
Cell[441279, 8680, 2258, 61, 291, "AuthorInput",ExpressionUUID->"4a90faec-07c7-46ab-8b11-adc1bed8a723",
 CellID->443442243],
Cell[443540, 8743, 133, 2, 22, "SolutionDivider",ExpressionUUID->"c97d4d57-8ba9-4aba-bf56-007d38bf7794",
 CellID->1911976002],
Cell[443676, 8747, 546, 14, 98, "CodingComment",ExpressionUUID->"e435d5b4-83f6-462f-ba61-0968db636e48",
 CellID->143847122],
Cell[444225, 8763, 133, 2, 22, "SolutionDivider",ExpressionUUID->"70df0725-e17f-476d-87a9-fe04e7f8b7b5",
 CellID->1129532716],
Cell[444361, 8767, 1440, 39, 195, "AuthorInput",ExpressionUUID->"615f9690-c105-4c19-952f-5869676edecb",
 CellID->669459574],
Cell[445804, 8808, 133, 2, 22, "SolutionDivider",ExpressionUUID->"eb9950c4-e747-455c-91fd-feadf8def812",
 CellID->2077774086],
Cell[445940, 8812, 552, 15, 98, "CodingComment",ExpressionUUID->"20ab2ec8-39b8-47b8-9f71-dbbdf9cb478b",
 CellID->252197823],
Cell[446495, 8829, 133, 2, 22, "SolutionDivider",ExpressionUUID->"0a72a5bf-7996-49e9-9cc1-d537a13b0fcd",
 CellID->1540093304],
Cell[446631, 8833, 273, 8, 51, "SolutionText",ExpressionUUID->"10b8d3e1-17ae-4e9f-ad4a-2c15aab7ccfe",
 CellID->1547377541],
Cell[446907, 8843, 133, 2, 22, "SolutionDivider",ExpressionUUID->"54820e06-93aa-4bc0-a09c-d6ce9d645c46",
 CellID->1052537630],
Cell[447043, 8847, 959, 25, 162, "AuthorInput",ExpressionUUID->"c28f3ab7-fe99-4cc6-8a15-f3a712c52e2e",
 CellID->884895753],
Cell[448005, 8874, 133, 2, 22, "SolutionDivider",ExpressionUUID->"5f1c5e66-bdcf-4c77-9679-48987c9c8e30",
 CellID->1007856657],
Cell[448141, 8878, 10541, 190, 297, "AuthorOutput",ExpressionUUID->"3c0c4d7a-8fd8-4a20-aff6-c1a709ba4f62",
 CellID->519533418],
Cell[458685, 9070, 132, 2, 22, "SolutionDivider",ExpressionUUID->"63d4e292-ebc3-4c3f-8b8f-5e4c88f3361e",
 CellID->295973869],
Cell[458820, 9074, 310, 5, 48, "CodingComment",ExpressionUUID->"bc16bf26-cec8-4069-9aae-67c59b7f768f",
 CellID->1068749443],
Cell[459133, 9081, 133, 2, 22, "SolutionDivider",ExpressionUUID->"7769b577-e7b5-430e-af39-ad185a64586a",
 CellID->719694336],
Cell[459269, 9085, 879, 25, 164, "SolutionText",ExpressionUUID->"051bc903-4b20-417b-8186-1ac818677ed4",
 CellID->1441269485],
Cell[460151, 9112, 134, 2, 22, "SolutionDivider",ExpressionUUID->"9d9c6342-85a6-4afb-a8d8-9c40b89384a3",
 CellID->1669388737],
Cell[460288, 9116, 1568, 41, 294, "AuthorInput",ExpressionUUID->"5de2d73e-ca2a-42e4-9af3-8607858cea16",
 CellID->627365911],
Cell[461859, 9159, 133, 2, 22, "SolutionDivider",ExpressionUUID->"82525bc3-7981-4824-a828-fb1beb33552a",
 CellID->180661985],
Cell[461995, 9163, 16029, 280, 302, "AuthorOutput",ExpressionUUID->"a469cd17-24bd-40b6-a34f-7408b8ed48de",
 CellID->123341283],
Cell[478027, 9445, 134, 2, 22, "SolutionDivider",ExpressionUUID->"1c463483-65de-4895-8dc5-9b43fa941481",
 CellID->1320910727],
Cell[478164, 9449, 766, 12, 148, "CodingComment",ExpressionUUID->"58301785-5f68-4854-96af-b9a9bbbcc544",
 CellID->455479474],
Cell[478933, 9463, 134, 2, 22, "SolutionDivider",ExpressionUUID->"308f3c46-698f-444a-9a4b-5c0f06d64407",
 CellID->1773989021],
Cell[479070, 9467, 970, 29, 141, "SolutionText",ExpressionUUID->"eb582b1a-2274-4e77-a388-9e344f5f65fd",
 CellID->733090227],
Cell[480043, 9498, 134, 2, 22, "SolutionDivider",ExpressionUUID->"da00eb55-21dd-45b7-b558-4ab5c759b020",
 CellID->1453682319],
Cell[480180, 9502, 1434, 37, 288, "AuthorInput",ExpressionUUID->"52f20308-785f-4636-ad26-df9c1c6200d5",
 CellID->69947616],
Cell[481617, 9541, 133, 2, 22, "SolutionDivider",ExpressionUUID->"739601a7-b4fb-4b57-89df-797b8b277e95",
 CellID->497582581],
Cell[481753, 9545, 18910, 328, 289, "AuthorOutput",ExpressionUUID->"3f2719ca-9693-47de-9c93-8b992ceca5e6",
 CellID->1597529441],
Cell[500666, 9875, 134, 2, 22, "SolutionDivider",ExpressionUUID->"d9bf5d49-b6c7-48c2-807c-703d5c893a55",
 CellID->1199480333],
Cell[500803, 9879, 393, 7, 73, "CodingComment",ExpressionUUID->"84f2c8b5-536f-4363-b1e2-9fdaada51cf7",
 CellID->1167042155],
Cell[501199, 9888, 134, 2, 22, "SolutionDivider",ExpressionUUID->"42d7d606-cc2a-48b0-924c-f941ab5d8436",
 CellID->1527819880],
Cell[501336, 9892, 774, 16, 181, "SolutionText",ExpressionUUID->"dce5cc0e-167d-405a-a7d1-a164ed3836dd",
 CellID->1451678156],
Cell[502113, 9910, 133, 2, 22, "SolutionDivider",ExpressionUUID->"e877a47f-84dd-48dd-a6f9-0f093c765564",
 CellID->559651811],
Cell[502249, 9914, 650, 18, 117, "AuthorInput",ExpressionUUID->"4cd2532b-67ed-46aa-9019-eb05a17a8c52",
 CellID->927713773],
Cell[502902, 9934, 133, 2, 22, "SolutionDivider",ExpressionUUID->"e7ad840e-b041-4e85-8593-e6bc42734c3f",
 CellID->356732138],
Cell[503038, 9938, 145, 2, 85, "AuthorOutput",ExpressionUUID->"0830209b-a75e-43a2-b90c-b12bccf2bf73",
 CellID->1444547564],
Cell[503186, 9942, 134, 2, 22, "SolutionDivider",ExpressionUUID->"9b9f5e12-05e8-47f3-ad02-930f5aec07d9",
 CellID->1935570431],
Cell[503323, 9946, 127, 1, 85, "AuthorOutput",ExpressionUUID->"5646d368-8454-4b6d-b69b-38e4ddefbc44",
 CellID->876265556],
Cell[503453, 9949, 134, 2, 22, "SolutionDivider",ExpressionUUID->"4f6e9e6a-7ef7-472a-8048-1bb476cfe446",
 CellID->1740521434],
Cell[503590, 9953, 517, 10, 123, "CodingComment",ExpressionUUID->"0e629f69-f155-44ae-8b82-6b159e519fb4",
 CellID->856836226],
Cell[504110, 9965, 134, 2, 22, "SolutionDivider",ExpressionUUID->"39f50213-5f08-40e3-b917-181b3abd56b0",
 CellID->1595959893],
Cell[504247, 9969, 939, 24, 138, "AuthorInput",ExpressionUUID->"b5a26be2-09aa-4c9e-95cc-fcc4e5da0842",
 CellID->1034307271],
Cell[505189, 9995, 133, 2, 22, "SolutionDivider",ExpressionUUID->"f076510d-998f-4161-a556-043da2c64832",
 CellID->918320432],
Cell[505325, 9999, 56465, 1001, 275, "AuthorOutput",ExpressionUUID->"94143b6f-9e8a-47c4-b475-6e80e2844f3f",
 CellID->733505771],
Cell[561793, 11002, 103, 1, 9, "SolutionDivider",ExpressionUUID->"1c13d2a0-43ea-4d9a-8f44-a8a336791bd2",
 CellID->1360871682],
Cell[561899, 11005, 152, 1, 37, "ShowNextButton",ExpressionUUID->"faf76021-b360-441a-a77f-9e1379a0cf92",
 CellID->1039597573],
Cell[562054, 11008, 93, 1, 10, "Hidden",ExpressionUUID->"bc559023-9236-4db0-89c3-451d8f17d056",
 CellID->589457419]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

